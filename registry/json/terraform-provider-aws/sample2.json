{
    "data": {
        "cloudwatch_log_group": {
            "name": "(Required) Name of the Cloudwatch log group"
        },
        "sesv2_configuration_set": {
            "configuration_set_name": "(Required) The name of the configuration set."
        },
        "acmpca_certificate_authority": {
            "arn": "(Required) ARN of the certificate authority."
        },
        "ec2_managed_prefix_list": {
            "name": "(Required) Name of the filter field. Valid values can be found in the EC2 [DescribeManagedPrefixLists](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeManagedPrefixLists.html) API Reference.",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "rds_certificate": {},
        "api_gateway_export": {
            "export_type": "(Required) Type of export. Acceptable values are `oas30` for OpenAPI 3.0.x and `swagger` for Swagger/OpenAPI 2.0.",
            "rest_api_id": "(Required) Identifier of the associated REST API.",
            "stage_name": "(Required) Name of the Stage that will be exported."
        },
        "eks_clusters": {},
        "networkmanager_global_network": {
            "global_network_id": "(Required) ID of the specific global network to retrieve."
        },
        "cloudfront_function": {
            "name": "(Required) Name of the CloudFront function.",
            "stage": "(Required) Function’s stage, either `DEVELOPMENT` or `LIVE`."
        },
        "eips": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field. An Elastic IP will be selected if any one of the given values matches."
        },
        "organizations_policies_for_target": {
            "target_id": "(Required) The root (string that begins with \"r-\" followed by 4-32 lowercase letters or digits), account (12 digit string), or Organizational Unit (string starting with \"ou-\" followed by 4-32 lowercase letters or digits. This string is followed by a second \"-\" dash and from 8-32 additional lowercase letters or digits.)",
            "filter": "(Required) Must supply one of the 4 different policy filters for a target (SERVICE_CONTROL_POLICY | TAG_POLICY | BACKUP_POLICY | AISERVICES_OPT_OUT_POLICY)"
        },
        "mskconnect_custom_plugin": {
            "name": "(Required) Name of the custom plugin."
        },
        "cloudwatch_log_groups": {},
        "ssm_patch_baseline": {
            "owner": "(Required) Owner of the baseline. Valid values: `All`, `AWS`, `Self` (the current account)."
        },
        "kms_alias": {
            "name": "(Required) Display name of the alias. The name must start with the word \"alias\" followed by a forward slash (alias/)"
        },
        "wafregional_web_acl": {
            "name": "(Required) Name of the WAF Regional Web ACL."
        },
        "glue_data_catalog_encryption_settings": {
            "catalog_id": "(Required) ID of the Data Catalog. This is typically the AWS account ID."
        },
        "ec2_transit_gateway_route_table_propagations": {
            "transit_gateway_route_table_id": "(Required) Identifier of EC2 Transit Gateway Route Table.",
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "ssm_maintenance_windows": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [SSM DescribeMaintenanceWindows API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribeMaintenanceWindows.html#API_DescribeMaintenanceWindows_RequestSyntax).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "vpc_ipam_preview_next_cidr": {
            "ipam_pool_id": "(Required) ID of the pool to which you want to assign a CIDR."
        },
        "connect_hours_of_operation": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "appconfig_configuration_profile": {
            "application_id": "(Required) ID of the AppConfig application to which this configuration profile belongs.",
            "configuration_profile_id": "(Required) ID of the Configuration Profile."
        },
        "route53_traffic_policy_document": {
            "id": "(Required) ID of a rule you want to assign."
        },
        "ecr_image": {
            "repository_name": "(Required) Name of the ECR Repository."
        },
        "location_map": {
            "map_name": "(Required) Name of the map resource."
        },
        "s3_account_public_access_block": {},
        "connect_lambda_function_association": {
            "function_arn": "(Required) ARN of the Lambda Function, omitting any version or alias qualifier.",
            "instance_id": "(Required) Identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance."
        },
        "connect_security_profile": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "ec2_client_vpn_endpoint": {},
        "networkmanager_devices": {
            "global_network_id": "(Required) ID of the Global Network of the devices to retrieve."
        },
        "lakeformation_permissions": {},
        "cloudformation_stack": {
            "name": "(Required) Name of the stack"
        },
        "memorydb_subnet_group": {
            "name": "(Required) Name of the subnet group."
        },
        "ebs_volume": {},
        "location_geofence_collection": {
            "collection_name": "(Required) Name of the geofence collection."
        },
        "networkmanager_links": {
            "global_network_id": "(Required) ID of the Global Network of the links to retrieve."
        },
        "launch_configuration": {
            "name": "(Required) Name of the launch configuration."
        },
        "codecommit_repository": {
            "repository_name": "(Required) Name for the repository. This needs to be less than 100 characters."
        },
        "fsx_ontap_file_system": {
            "id": "(Required) Identifier of the file system (e.g. `fs-12345678`)."
        },
        "sesv2_dedicated_ip_pool": {
            "pool_name": "(Required) Name of the dedicated IP pool."
        },
        "iam_policy": {},
        "apigatewayv2_api": {
            "api_id": "(Required) API identifier."
        },
        "emr_release_labels": {},
        "appmesh_virtual_gateway": {
            "name": "(Required) Name of the virtual gateway.",
            "mesh_name": "(Required) Name of the service mesh in which the virtual gateway exists."
        },
        "caller_identity": {},
        "route_table": {},
        "autoscaling_group": {},
        "ecs_container_definition": {
            "task_definition": "(Required) ARN of the task definition which contains the container",
            "container_name": "(Required) Name of the container definition"
        },
        "neptune_orderable_db_instance": {},
        "api_gateway_authorizer": {
            "authorizer_id": "(Required) Authorizer identifier.",
            "rest_api_id": "(Required) ID of the associated REST API."
        },
        "outposts_asset": {
            "arn": "(Required) Outpost ARN.",
            "asset_id": "(Required) ID of the asset."
        },
        "ec2_local_gateway": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "s3_bucket_object": {
            "bucket": "(Required) Name of the bucket to read the object from. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified",
            "key": "(Required) Full path to the object inside the bucket"
        },
        "appmesh_route": {
            "name": "(Required) Name of the route.",
            "mesh_name": "(Required) Name of the service mesh in which the virtual router exists.",
            "virtual_router_name": "(Required) Name of the virtual router in which the route exists."
        },
        "network_acls": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "vpc_dhcp_options": {},
        "organizations_organizational_unit_descendant_accounts": {
            "parent_id": "(Required) The parent ID of the accounts."
        },
        "key_pair": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [EC2 DescribeKeyPairs API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeKeyPairs.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "networkmanager_global_networks": {},
        "acmpca_certificate": {
            "arn": "(Required) ARN of the certificate issued by the private certificate authority.",
            "certificate_authority_arn": "(Required) ARN of the certificate authority."
        },
        "redshiftserverless_credentials": {
            "workgroup_name": "(Required) The name of the workgroup associated with the database."
        },
        "vpc_peering_connections": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "connect_instance": {},
        "route_tables": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "api_gateway_domain_name": {
            "domain_name": "(Required) Fully-qualified domain name to look up. If no domain name is found, an error will be returned."
        },
        "waf_web_acl": {
            "name": "(Required) Name of the WAF Web ACL."
        },
        "customer_gateway": {},
        "batch_scheduling_policy": {
            "arn": "(Required) ARN of the scheduling policy."
        },
        "route53_resolver_rules": {},
        "ebs_snapshot": {},
        "memorydb_snapshot": {
            "name": "(Required) Name of the snapshot."
        },
        "organizations_policy": {
            "policy_id": "(Required) The unique identifier (ID) of the policy that you want more details on. Policy id starts with a \"p-\" followed by 8-28 lowercase or uppercase letters, digits, and underscores."
        },
        "api_gateway_sdk": {
            "rest_api_id": "(Required) Identifier of the associated REST API.",
            "stage_name": "(Required) Name of the Stage that will be exported.",
            "sdk_type": "(Required) Language for the generated SDK. Currently `java`, `javascript`, `android`, `objectivec` (for iOS), `swift` (for iOS), and `ruby` are supported."
        },
        "docdb_engine_version": {},
        "kms_ciphertext": {
            "plaintext": "(Required) Data to be encrypted. Note that this may show up in logs, and it will be stored in the state file.",
            "key_id": "(Required) Globally unique key ID for the customer master key."
        },
        "organizations_delegated_administrators": {},
        "appmesh_gateway_route": {
            "name": "(Required) Name of the gateway route.",
            "mesh_name": "(Required) Name of the service mesh in which the virtual gateway exists.",
            "virtual_gateway_name": "(Required) Name of the virtual gateway in which the route exists."
        },
        "location_tracker": {
            "tracker_name": "(Required) Name of the tracker resource."
        },
        "datapipeline_pipeline_definition": {
            "pipeline_id": "(Required) ID of the pipeline."
        },
        "efs_access_points": {
            "file_system_id": "(Required) EFS File System identifier."
        },
        "security_groups": {},
        "api_gateway_rest_api": {
            "name": "(Required) Name of the REST API to look up. If no REST API is found with this name, an error will be returned. If multiple REST APIs are found with this name, an error will be returned."
        },
        "ssm_parameters_by_path": {
            "path": "(Required) Prefix path of the parameter."
        },
        "elasticache_replication_group": {},
        "kms_custom_key_store": {},
        "rds_cluster": {
            "cluster_identifier": "(Required) Cluster identifier of the RDS cluster."
        },
        "memorydb_acl": {
            "name": "(Required) Name of the ACL."
        },
        "fsx_openzfs_snapshot": {},
        "iam_saml_provider": {
            "arn": "(Required) ARN assigned by AWS for the provider."
        },
        "ec2_public_ipv4_pools": {
            "name": "(Required) Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html).",
            "values": "(Required) Set of values that are accepted for the given field. Pool IDs will be selected if any one of the given values match."
        },
        "ssoadmin_instances": {},
        "networkmanager_site": {
            "global_network_id": "(Required) ID of the Global Network of the site to retrieve.",
            "site_id": "(Required) ID of the specific site to retrieve."
        },
        "quicksight_user": {
            "user_name": "(Required) The name of the user that you want to match."
        },
        "subnets": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "kms_secrets": {
            "secret": "(Required) One or more encrypted payload definitions from the KMS service. See the Secret Definitions below.",
            "name": "(Required) Name to export this secret under in the attributes.",
            "payload": "(Required) Base64 encoded payload, as returned from a KMS encrypt operation."
        },
        "ce_tags": {
            "time_period": "(Required) Configuration block for the start and end dates for retrieving the dimension values.",
            "start": "(Required) End of the time period.",
            "end": "(Required) Beginning of the time period.",
            "key": "(Required) key that's used to sort the data. Valid values are: `BlendedCost`,  `UnblendedCost`, `AmortizedCost`, `NetAmortizedCost`, `NetUnblendedCost`, `UsageQuantity`, `NormalizedUsageAmount`."
        },
        "appmesh_virtual_node": {
            "name": "(Required) Name of the virtual node.",
            "mesh_name": "(Required) Name of the service mesh in which the virtual node exists."
        },
        "networkfirewall_firewall": {},
        "ssmcontacts_contact_channel": {},
        "neptune_engine_version": {},
        "organizations_organizational_units": {
            "parent_id": "(Required) Parent ID of the organizational unit."
        },
        "glue_script": {
            "dag_edge": "(Required) List of the edges in the DAG. Defined below.",
            "dag_node": "(Required) List of the nodes in the DAG. Defined below.",
            "source": "(Required) ID of the node at which the edge starts.",
            "target": "(Required) ID of the node at which the edge ends.",
            "args": "(Required) Nested configuration an argument or property of a node. Defined below.",
            "id": "(Required) Node identifier that is unique within the node's graph.",
            "node_type": "(Required) Type of node this is.",
            "name": "(Required) Name of the argument or property.",
            "value": "(Required) Value of the argument or property."
        },
        "lambda_alias": {
            "function_name": "(Required) Name of the aliased Lambda function.",
            "name": "(Required) Name of the Lambda alias."
        },
        "imagebuilder_component": {
            "arn": "(Required) ARN of the component."
        },
        "wafv2_web_acl": {
            "name": "(Required) Name of the WAFv2 Web ACL.",
            "scope": "(Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider."
        },
        "ec2_managed_prefix_lists": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "rds_reserved_instance_offering": {
            "db_instance_class": "(Required) DB instance class for the reserved DB instance.",
            "duration": "(Required) Duration of the reservation in years or seconds. Valid values are `1`, `3`, `31536000`, `94608000`",
            "multi_az": "(Required) Whether the reservation applies to Multi-AZ deployments.",
            "offering_type": "(Required) Offering type of this reserved DB instance. Valid values are `No Upfront`, `Partial Upfront`, `All Upfront`.",
            "product_description": "(Required) Description of the reserved DB instance."
        },
        "cloudcontrolapi_resource": {
            "identifier": "(Required) Identifier of the CloudFormation resource type. For example, `vpc-12345678`.",
            "type_name": "(Required) CloudFormation resource type name. For example, `AWS::EC2::VPC`."
        },
        "vpc_ipam_pool_cidrs": {},
        "wafregional_rule": {
            "name": "(Required) Name of the WAF Regional rule."
        },
        "ec2_local_gateway_route_tables": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "ecrpublic_authorization_token": {},
        "quicksight_group": {
            "group_name": "(Required) The name of the group that you want to match."
        },
        "ec2_instance_types": {
            "name": "(Required) Name of the filter.",
            "values": "(Required) List of one or more values for the filter."
        },
        "batch_job_queue": {
            "name": "(Required) Name of the job queue."
        },
        "oam_sinks": {},
        "backup_vault": {
            "name": "(Required) Name of the backup vault."
        },
        "servicecatalog_portfolio_constraints": {
            "portfolio_id": "(Required) Portfolio identifier."
        },
        "kms_key": {
            "key_id": "(Required) Key identifier which can be one of the following format:"
        },
        "sfn_alias": {
            "name": "(Required) Name of the State Machine alias.",
            "statemachine_arn": "(Required) ARN of the State Machine."
        },
        "ec2_instance_type": {
            "instance_type": "(Required) Instance"
        },
        "route53_resolver_firewall_config": {
            "resource_id": "(Required) The ID of the VPC from Amazon VPC that the configuration is for."
        },
        "cloudfront_realtime_log_config": {
            "name": "(Required) Unique name to identify this real-time log configuration."
        },
        "dms_replication_subnet_group": {
            "replication_subnet_group_id": "(Required) Name for the replication subnet group. This value is stored as a lowercase string. It must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens and cannot be `default`."
        },
        "arn": {
            "arn": "(Required) ARN to parse."
        },
        "docdb_orderable_db_instance": {},
        "dms_replication_instance": {
            "replication_instance_id": "(Required) The replication instance identifier."
        },
        "ec2_local_gateway_virtual_interface": {
            "name": "(Required) Name of the filter.",
            "values": "(Required) List of one or more values for the filter."
        },
        "lakeformation_resource": {},
        "lambda_code_signing_config": {
            "arn": "(Required) ARN of the code signing configuration."
        },
        "vpc": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "ec2_public_ipv4_pool": {
            "pool_id": "(Required) AWS resource IDs of a public IPv4 pool (as a string) for which this data source will fetch detailed information."
        },
        "mq_broker": {},
        "iam_server_certificate": {},
        "lb_hosted_zone_id": {},
        "resourcegroupstaggingapi_resources": {
            "key": "(Required) One part of a key-value pair that makes up a tag."
        },
        "globalaccelerator_accelerator": {},
        "licensemanager_grants": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "subnet": {},
        "region": {},
        "vpn_gateway": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "workspaces_directory": {
            "directory_id": "(Required) Directory identifier for registration in WorkSpaces service."
        },
        "ebs_default_kms_key": {},
        "elasticache_subnet_group": {
            "name": "(Required) Name of the subnet group."
        },
        "service": {},
        "msk_cluster": {
            "cluster_name": "(Required) Name of the cluster."
        },
        "grafana_workspace": {
            "workspace_id": "(Required) Grafana workspace ID."
        },
        "cognito_user_pool_clients": {
            "user_pool_id": "(Required) Cognito user pool ID."
        },
        "outposts_outpost_instance_types": {
            "arn": "(Required) Outpost ARN."
        },
        "sqs_queues": {},
        "lambda_layer_version": {
            "layer_name": "(Required) Name of the lambda layer."
        },
        "efs_access_point": {
            "access_point_id": "(Required) ID that identifies the file system."
        },
        "imagebuilder_distribution_configurations": {},
        "nat_gateways": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "ec2_transit_gateway_attachment": {
            "name": "(Required) Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).",
            "values": "(Required) List of one or more values for the filter."
        },
        "ecs_task_execution": {
            "cluster": "(Required) Short name or full Amazon Resource Name (ARN) of the cluster to run the task on.",
            "task_definition": "(Required) The `family` and `revision` (`family:revision`) or full ARN of the task definition to run. If a revision isn't specified, the latest `ACTIVE` revision is used."
        },
        "organizations_organization": {},
        "api_gateway_authorizers": {
            "rest_api_id": "(Required) ID of the associated REST API."
        },
        "ram_resource_share": {
            "name": "(Required) Name of the tag key to filter on.",
            "values": "(Required) Value of the tag key."
        },
        "service_discovery_http_namespace": {
            "name": "(Required) Name of the http namespace."
        },
        "db_instances": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [RDS DescribeDBClusters API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBClusters.html) or [RDS DescribeDBInstances API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "opensearchserverless_security_config": {
            "id": "(Required) The unique identifier of the security configuration."
        },
        "connect_user_hierarchy_group": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "elasticache_cluster": {},
        "backup_framework": {
            "name": "(Required) Backup framework name."
        },
        "budgets_budget": {},
        "redshiftserverless_namespace": {
            "namespace_name": "(Required) The name of the namespace."
        },
        "redshift_service_account": {},
        "cloudformation_type": {},
        "s3_object": {
            "bucket": "(Required) Name of the bucket to read the object from. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified",
            "key": "(Required) Full path to the object inside the bucket"
        },
        "redshift_orderable_cluster": {},
        "sesv2_email_identity": {
            "email_identity": "(Required) The name of the email identity."
        },
        "connect_prompt": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance",
            "name": "(Required) Returns information on a specific Prompt by name"
        },
        "route53_resolver_firewall_rule_group_association": {
            "firewall_rule_group_association_id": "(Required) The identifier for the association."
        },
        "ec2_transit_gateway_vpc_attachment": {
            "name": "(Required) Name of the filter.",
            "values": "(Required) List of one or more values for the filter."
        },
        "eip": {},
        "ssmincidents_response_plan": {
            "arn": "(Required) The Amazon Resource Name (ARN) of the response plan."
        },
        "fsx_ontap_storage_virtual_machine": {},
        "organizations_organizational_unit_child_accounts": {
            "parent_id": "(Required) The parent ID of the accounts."
        },
        "lex_intent": {
            "name": "(Required) Name of the intent. The name is case sensitive."
        },
        "dms_endpoint": {
            "endpoint_id": "(Required) Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens."
        },
        "kendra_index": {
            "id": "(Required) Returns information on a specific Index by id."
        },
        "vpc_ipam_pool": {},
        "vpclattice_auth_policy": {
            "resource_identifier": "(Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created."
        },
        "cloudformation_export": {
            "name": "(Required) Name of the export as it appears in the console or from [list-exports](http://docs.aws.amazon.com/cli/latest/reference/cloudformation/list-exports.html)"
        },
        "lbs": {},
        "location_tracker_associations": {
            "tracker_name": "(Required) Name of the tracker resource associated with a geofence collection."
        },
        "imagebuilder_distribution_configuration": {
            "arn": "(Required) ARN of the distribution configuration."
        },
        "codestarconnections_connection": {},
        "security_group": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "cloudhsm_v2_cluster": {
            "cluster_id": "(Required) ID of Cloud HSM v2 cluster."
        },
        "emrcontainers_virtual_cluster": {
            "virtual_cluster_id": "(Required) ID of the cluster."
        },
        "wafv2_ip_set": {
            "name": "(Required) Name of the WAFv2 IP Set.",
            "scope": "(Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider."
        },
        "kinesis_stream_consumer": {
            "stream_arn": "(Required) ARN of the data stream the consumer is registered with."
        },
        "connect_bot_association": {
            "instance_id": "(Required) Identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.",
            "lex_bot": {
                "name": "(Required) Name of the Amazon Lex (V1) bot."
            }
        },
        "waf_rule": {
            "name": "(Required) Name of the WAF rule."
        },
        "ec2_transit_gateway_vpn_attachment": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "appconfig_environment": {
            "application_id": "(Required) ID of the AppConfig Application to which this Environment belongs.",
            "environment_id": "(Required) ID of the AppConfig Environment."
        },
        "ebs_volumes": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "codeartifact_repository_endpoint": {
            "domain": "(Required) Name of the domain that contains the repository.",
            "repository": "(Required) Name of the repository.",
            "format": "(Required) Which endpoint of a repository to return. A repository has one endpoint for each package format: `npm`, `pypi`, `maven`, and `nuget`."
        },
        "signer_signing_job": {
            "job_id": "(Required) ID of the signing job on output."
        },
        "autoscaling_groups": {
            "name": "(Required) Name of the DescribeAutoScalingGroup filter. The recommended values are: `tag-key`, `tag-value`, and `tag:<tag name>`",
            "values": "(Required) Value of the filter."
        },
        "outposts_assets": {
            "arn": "(Required) Outpost ARN."
        },
        "cloudtrail_service_account": {},
        "waf_rate_based_rule": {
            "name": "(Required) Name of the WAF rate based rule."
        },
        "lambda_functions": {},
        "secretsmanager_secret": {},
        "iam_account_alias": {},
        "connect_instance_storage_config": {
            "association_id": "(Required) The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.",
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance",
            "resource_type": "(Required) A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS` |  `SCREEN_RECORDINGS`."
        },
        "route53_resolver_endpoint": {},
        "sagemaker_prebuilt_ecr_image": {
            "repository_name": "(Required) Name of the repository, which is generally the algorithm or library. Values include `blazingtext`, `factorization-machines`, `forecasting-deepar`, `image-classification`, `ipinsights`, `kmeans`, `knn`, `lda`, `linear-learner`, `mxnet-inference-eia`, `mxnet-inference`, `mxnet-training`, `ntm`, `object-detection`, `object2vec`, `pca`, `pytorch-inference-eia`, `pytorch-inference`, `pytorch-training`, `randomcutforest`, `sagemaker-scikit-learn`, `sagemaker-sparkml-serving`, `sagemaker-xgboost`, `semantic-segmentation`, `seq2seq`, `tensorflow-inference-eia`, `tensorflow-inference`, `tensorflow-training`, `huggingface-tensorflow-training`, `huggingface-tensorflow-inference`, `huggingface-pytorch-training`, and `huggingface-pytorch-inference`."
        },
        "db_subnet_group": {
            "name": "(Required) Name of the RDS database subnet group."
        },
        "servicecatalog_portfolio": {
            "id": "(Required) Portfolio identifier."
        },
        "appmesh_virtual_router": {
            "name": "(Required) Name of the virtual router.",
            "mesh_name": "(Required) Name of the mesh in which the virtual router exists"
        },
        "directory_service_directory": {
            "directory_id": "(Required) ID of the directory."
        },
        "iam_user": {
            "user_name": "(Required) Friendly IAM user name to match."
        },
        "cloudfront_origin_access_identities": {},
        "eks_node_groups": {
            "cluster_name": "(Required) Name of the cluster."
        },
        "networkmanager_core_network_policy_document": {},
        "secretsmanager_secret_rotation": {
            "secret_id": "(Required) Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret."
        },
        "kms_secret": {},
        "signer_signing_profile": {
            "name": "(Required) Name of the target signing profile."
        },
        "vpclattice_listener": {
            "service_identifier": "(Required) ID or Amazon Resource Name (ARN) of the service network",
            "listener_identifier": "(Required) ID or Amazon Resource Name (ARN) of the listener"
        },
        "ec2_transit_gateway_multicast_domain": {
            "name": "(Required) Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayMulticastDomains.html).",
            "values": "(Required) Set of values that are accepted for the given field. A multicast domain will be selected if any one of the given values matches."
        },
        "opensearchserverless_access_policy": {
            "name": "(Required) Name of the policy.",
            "type": "(Required) Type of access policy. Must be `data`."
        },
        "servicecatalog_launch_paths": {
            "product_id": "(Required) Product identifier."
        },
        "dynamodb_table": {
            "name": "(Required) Name of the DynamoDB table."
        },
        "s3_bucket_objects": {
            "bucket": "(Required) Lists object keys in this S3 bucket. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified"
        },
        "storagegateway_local_disk": {
            "gateway_arn": "(Required) ARN of the gateway."
        },
        "connect_routing_profile": {},
        "rds_engine_version": {
            "engine": "(Required) DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`."
        },
        "cloudfront_cache_policy": {},
        "dx_connection": {
            "name": "(Required) Name of the connection to retrieve."
        },
        "ec2_transit_gateway_route_table_routes": {
            "filter": "(Required) Custom filter block as described below.",
            "transit_gateway_route_table_id": "(Required) Identifier of EC2 Transit Gateway Route Table.",
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "cloudwatch_event_source": {},
        "networkmanager_device": {
            "device_id": "(Required) ID of the device.",
            "global_network_id": "(Required) ID of the global network."
        },
        "appintegrations_event_integration": {
            "name": "(Required) The AppIntegrations Event Integration name."
        },
        "location_place_index": {
            "index_name": "(Required) Name of the place index resource."
        },
        "connect_contact_flow_module": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "availability_zone": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "dx_location": {
            "location_code": "(Required) Code for the location to retrieve."
        },
        "nat_gateway": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "servicequotas_service": {
            "service_name": "(Required) Service name to lookup within Service Quotas. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html)."
        },
        "location_route_calculator": {
            "calculator_name": "(Required) Name of the route calculator resource."
        },
        "globalaccelerator_custom_routing_accelerator": {},
        "ec2_coip_pool": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "ecs_service": {
            "service_name": "(Required) Name of the ECS Service",
            "cluster_arn": "(Required) ARN of the ECS Cluster"
        },
        "s3control_multi_region_access_point": {
            "name": "(Required) The name of the Multi-Region Access Point."
        },
        "imagebuilder_image_recipes": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [Image Builder ListImageRecipes API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListImageRecipes.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "eks_addon": {},
        "oam_links": {},
        "ec2_transit_gateway_peering_attachment": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "acm_certificate": {
            "domain": "(Required) Domain of the certificate to look up. If no certificate is found with this name, an error will be returned."
        },
        "opensearchserverless_vpc_endpoint": {
            "vpc_endpoint_id": "(Required) The unique identifier of the endpoint."
        },
        "servicequotas_service_quota": {
            "service_code": "(Required) Service code for the quota. Available values can be found with the [`aws_servicequotas_service` data source](/docs/providers/aws/d/servicequotas_service.html) or [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html)."
        },
        "ec2_coip_pools": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "eks_addon_version": {},
        "elb": {
            "name": "(Required) Unique name of the load balancer."
        },
        "eks_cluster_auth": {
            "name": "(Required) Name of the cluster"
        },
        "imagebuilder_container_recipes": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [Image Builder ListContainerRecipes API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListContainerRecipes.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "lb": {},
        "iam_session_context": {
            "arn": "(Required) ARN for an assumed role."
        },
        "partition": {},
        "ses_active_receipt_rule_set": {},
        "workspaces_bundle": {},
        "workspaces_image": {},
        "imagebuilder_image_pipeline": {
            "arn": "(Required) ARN of the image pipeline."
        },
        "imagebuilder_image_recipe": {
            "arn": "(Required) ARN of the image recipe."
        },
        "backup_selection": {
            "plan_id": "(Required) Backup plan ID associated with the selection of resources.",
            "selection_id": "(Required) Backup selection ID."
        },
        "imagebuilder_components": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [Image Builder ListComponents API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListComponents.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "mskconnect_worker_configuration": {
            "name": "(Required) Name of the worker configuration."
        },
        "ssm_parameter": {
            "name": "(Required) Name of the parameter."
        },
        "s3_bucket": {
            "bucket": "(Required) Name of the bucket"
        },
        "sqs_queue": {
            "name": "(Required) Name of the queue to match."
        },
        "fsx_windows_file_system": {
            "id": "(Required) Identifier of the file system (e.g. `fs-12345678`)."
        },
        "wafv2_regex_pattern_set": {
            "name": "(Required) Name of the WAFv2 Regex Pattern Set.",
            "scope": "(Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider."
        },
        "secretsmanager_random_password": {},
        "cloudwatch_event_bus": {
            "name": "(Required) Friendly EventBridge event bus name."
        },
        "api_gateway_resource": {
            "rest_api_id": "(Required) REST API id that owns the resource. If no REST API is found, an error will be returned.",
            "path": "(Required) Full path of the resource.  If no path is found, an error will be returned."
        },
        "instances": {},
        "connect_quick_connect": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "rds_orderable_db_instance": {
            "engine": "(Required) DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`."
        },
        "waf_ipset": {
            "name": "(Required) Name of the WAF IP set."
        },
        "memorydb_user": {
            "user_name": "(Required) Name of the user."
        },
        "vpclattice_service_network": {
            "service_network_identifier": "(Required) Identifier of the service network."
        },
        "api_gateway_api_key": {
            "id": "(Required) ID of the API Key to look up."
        },
        "db_cluster_snapshot": {},
        "dx_locations": {},
        "db_proxy": {
            "name": "(Required) Name of the DB proxy."
        },
        "network_interfaces": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "cloudfront_origin_access_identity": {},
        "licensemanager_received_licenses": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "kinesis_stream": {
            "name": "(Required) Name of the Kinesis Stream."
        },
        "ip_ranges": {
            "services": "(Required) Filter IP ranges by services. Valid items are `amazon`"
        },
        "imagebuilder_image_pipelines": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [Image Builder ListImagePipelines API Reference](https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_ListImagePipelines.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "default_tags": {},
        "elasticsearch_domain": {},
        "qldb_ledger": {
            "name": "(Required) Friendly name of the ledger to match."
        },
        "ivs_stream_key": {
            "channel_arn": "(Required) ARN of the Channel."
        },
        "msk_vpc_connection": {
            "arn": "(Required) ARN of the VPC Connection."
        },
        "waf_subscribed_rule_group": {},
        "elasticache_user": {},
        "lb_target_group": {},
        "networkfirewall_resource_policy": {
            "resource_arn": "(Required) The Amazon Resource Name (ARN) that identifies the resource policy."
        },
        "networkmanager_sites": {
            "global_network_id": "(Required) ID of the Global Network of the sites to retrieve."
        },
        "wafregional_ipset": {
            "name": "(Required) Name of the WAF Regional IP set."
        },
        "organizations_policies": {
            "filter": "(Required) The type of policies to be returned in the response. Valid values are `SERVICE_CONTROL_POLICY | TAG_POLICY | BACKUP_POLICY | AISERVICES_OPT_OUT_POLICY`"
        },
        "db_snapshot": {},
        "imagebuilder_container_recipe": {
            "arn": "(Required) ARN of the container recipe."
        },
        "connect_user": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "iam_user_ssh_key": {
            "encoding": "(Required) Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use `SSH`. To retrieve the public key in PEM format, use `PEM`.",
            "ssh_public_key_id": "(Required) Unique identifier for the SSH public key.",
            "username": "(Required) Name of the IAM user associated with the SSH public key."
        },
        "secretsmanager_secret_version": {
            "secret_id": "(Required) Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret."
        },
        "msk_kafka_version": {},
        "elastic_beanstalk_hosted_zone": {},
        "workspaces_workspace": {},
        "db_event_categories": {},
        "route53_resolver_firewall_rule_group": {
            "firewall_rule_group_id": "(Required) The ID of the rule group."
        },
        "ssoadmin_permission_set": {
            "instance_arn": "(Required) ARN of the SSO Instance associated with the permission set."
        },
        "apigatewayv2_export": {
            "api_id": "(Required) API identifier.",
            "specification": "(Required) Version of the API specification to use. `OAS30`, for OpenAPI 3.0, is the only supported value.",
            "output_type": "(Required) Output type of the exported definition file. Valid values are `JSON` and `YAML`."
        },
        "apigatewayv2_apis": {},
        "pricing_product": {
            "service_code": "(Required) Code of the service. Available service codes can be fetched using the DescribeServices pricing API call.",
            "filters": "\n\n* `field` (Required) Product attribute name that you want to filter on.\n* `value` (Required) Product attribute value that you want to filter on."
        },
        "cloudfront_log_delivery_canonical_user_id": {},
        "elastic_beanstalk_solution_stack": {},
        "guardduty_finding_ids": {
            "detector_id": "(Required) ID of the GuardDuty detector."
        },
        "iam_users": {},
        "quicksight_data_set": {
            "data_set_id": "(Required) Identifier for the data set."
        },
        "ses_domain_identity": {},
        "vpc_endpoint": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "sfn_state_machine_versions": {
            "statemachine_arn": "(Required) ARN of the State Machine."
        },
        "cloudfront_distribution": {},
        "outposts_outpost": {},
        "vpclattice_service": {},
        "ec2_transit_gateway": {
            "name": "(Required) Name of the field to filter by, as defined by the [underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html).",
            "values": "(Required) List of one or more values for the filter."
        },
        "service_discovery_dns_namespace": {
            "name": "(Required) Name of the namespace.",
            "type": "(Required) Type of the namespace. Allowed values are `DNS_PUBLIC` or `DNS_PRIVATE`."
        },
        "oam_sink": {
            "sink_identifier": "(Required) ARN of the sink."
        },
        "redshiftserverless_workgroup": {
            "workgroup_name": "(Required) The name of the workgroup associated with the database."
        },
        "codecatalyst_dev_environment": {
            "env_id": "- (Required) The system-generated unique ID of the Dev Environment for which you want to view information. To retrieve a list of Dev Environment IDs, use [ListDevEnvironments](https://docs.aws.amazon.com/codecatalyst/latest/APIReference/API_ListDevEnvironments.html).",
            "project_name": "(Required) The name of the project in the space.",
            "space_name": "(Required) The name of the space."
        },
        "ec2_transit_gateway_route_table_associations": {
            "transit_gateway_route_table_id": "(Required) Identifier of EC2 Transit Gateway Route Table.",
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "organizations_delegated_services": {
            "account_id": "(Required) Account ID number of a delegated administrator account in the organization."
        },
        "cloudwatch_log_data_protection_policy_document": {
            "name": "(Required) The name of the data protection policy document.",
            "statement": "(Required) Configures the data protection policy.",
            "data_identifiers": "(Required) Set of at least 1 sensitive data identifiers that you want to mask. Read more in [Types of data that you can protect](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/protect-sensitive-log-data-types.html).",
            "operation": "(Required) Configures the data protection operation applied by this statement.",
            "findings_destination": "(Required) Configures destinations to send audit findings to.",
            "log_group": "(Required) Name of the CloudWatch Log Group to send findings to.",
            "delivery_stream": "(Required) Name of the Kinesis Firehose Delivery Stream to send findings to.",
            "bucket": "(Required) Name of the S3 Bucket to send findings to.",
            "mask_config": "(Required) An empty object that configures masking."
        },
        "lambda_function_url": {
            "function_name": "(Required) The name (or ARN) of the Lambda function."
        },
        "quicksight_theme": {},
        "organizations_resource_tags": {
            "resource_id": "\n\nYou can specify any of the following taggable resources.\n\n* AWS account – specify the account ID number.\n* Organizational unit – specify the OU ID that begins with `ou-` and looks similar to: `ou-1a2b-34uvwxyz`\n* Root – specify the root ID that begins with `r-` and looks similar to: `r-1a2b`\n* Policy – specify the policy ID that begins with `p-` and looks similar to: `p-12abcdefg3`"
        },
        "transfer_server": {
            "server_id": "(Required) ID for an SFTP server."
        },
        "ecs_task_definition": {
            "task_definition": "(Required) Family for the latest ACTIVE revision, family and revision (family:revision) for a specific revision in the family, the ARN of the task definition to access to."
        },
        "mq_broker_instance_type_offerings": {},
        "vpcs": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "backup_report_plan": {
            "name": "(Required) Backup report plan name."
        },
        "ec2_transit_gateway_attachments": {
            "name": "(Required) Name of the filter check available value on [official documentation][1]",
            "values": "(Required) List of one or more values for the filter."
        },
        "glue_catalog_table": {
            "name": "(Required) Name of the table.",
            "database_name": "(Required) Name of the metadata database where the table metadata resides."
        },
        "cloudwatch_event_connection": {},
        "ec2_local_gateways": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "ec2_local_gateway_virtual_interface_groups": {
            "name": "(Required) Name of the filter.",
            "values": "(Required) List of one or more values for the filter."
        },
        "ebs_encryption_by_default": {},
        "ses_email_identity": {},
        "iot_endpoint": {},
        "route53_resolver_rule": {},
        "availability_zones": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [EC2 DescribeAvailabilityZones API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "ce_cost_category": {
            "cost_category_arn": "(Required) Unique name for the Cost Category."
        },
        "ec2_instance_type_offerings": {
            "name": "(Required) Name of the filter. The `location` filter depends on the top-level `location_type` argument and if not specified, defaults to the current region.",
            "values": "(Required) List of one or more values for the filter."
        },
        "wafregional_subscribed_rule_group": {},
        "lambda_function": {
            "function_name": "(Required) Name of the lambda function."
        },
        "opensearchserverless_collection": {
            "id": "(Required) ID of the collection. Either `id` or `name` must be provided.",
            "name": "(Required) Name of the collection. Either `name` or `id` must be provided."
        },
        "vpclattice_resource_policy": {
            "resource_arn": "(Required) Resource ARN of the resource for which a policy is retrieved."
        },
        "cognito_user_pool_client": {
            "client_id": "(Required) Client Id of the user pool.",
            "user_pool_id": "(Required) User pool the client belongs to."
        },
        "s3_objects": {
            "bucket": "(Required) Lists object keys in this S3 bucket. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified"
        },
        "dynamodb_table_item": {
            "table_name": "(Required) The name of the table containing the requested item.",
            "key": "(Required) A map of attribute names to AttributeValue objects, representing the primary key of the item to retrieve."
        },
        "efs_file_system": {},
        "datapipeline_pipeline": {
            "pipeline_id": "(Required) ID of the pipeline."
        },
        "cloudfront_origin_request_policy": {},
        "eks_cluster": {
            "name": "(Required) Name of the cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\\-_]+$`)."
        },
        "cloudfront_response_headers_policy": {},
        "elb_hosted_zone_id": {},
        "ec2_transit_gateway_route_tables": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "codecommit_approval_rule_template": {
            "name": "(Required) Name for the approval rule template. This needs to be less than 100 characters."
        },
        "ec2_transit_gateway_route_table": {
            "name": "(Required) Name of the filter.",
            "values": "(Required) List of one or more values for the filter."
        },
        "outposts_outposts": {},
        "oam_link": {
            "link_identifier": "(Required) ARN of the link."
        },
        "prometheus_workspace": {
            "workspace_id": "(Required) Prometheus workspace ID."
        },
        "servicecatalog_constraint": {},
        "eks_node_group": {
            "cluster_name": "(Required) Name of the cluster.",
            "node_group_name": "(Required) Name of the node group."
        },
        "ec2_transit_gateway_connect": {
            "name": "(Required) Name of the filter.",
            "values": "(Required) List of one or more values for the filter."
        },
        "instance": {},
        "vpc_security_group_rules": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "canonical_user_id": {},
        "lakeformation_data_lake_settings": {},
        "iam_policy_document": {},
        "rds_clusters": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [RDS DescribeDBClusters API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBClusters.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "serverlessapplicationrepository_application": {
            "application_id": "(Required) ARN of the application."
        },
        "ecs_cluster": {
            "cluster_name": "(Required) Name of the ECS Cluster"
        },
        "connect_vocabulary": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "dms_certificate": {
            "certificate_id": "(Required) A customer-assigned name for the certificate. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens."
        },
        "connect_contact_flow": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "ec2_transit_gateway_connect_peer": {
            "name": "(Required) Name of the filter.",
            "values": "(Required) List of one or more values for the filter."
        },
        "ec2_transit_gateway_vpc_attachments": {
            "name": "(Required) Name of the filter check available value on [official documentation][1]",
            "values": "(Required) List of one or more values for the filter."
        },
        "identitystore_user": {
            "identity_store_id": "(Required) Identity Store ID associated with the Single Sign-On Instance.",
            "id": "(Required) The identifier issued to this resource by an external identity provider.",
            "issuer": "(Required) The issuer for an external identifier.",
            "attribute_path": "(Required) Attribute path that is used to specify which attribute name to search. For example: `UserName`. Refer to the [User data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_User.html).",
            "attribute_value": "(Required) Value for an attribute."
        },
        "networkmanager_connections": {
            "global_network_id": "(Required) ID of the Global Network of the connections to retrieve."
        },
        "s3_bucket_policy": {
            "bucket": "(Required) Bucket name."
        },
        "dx_router_configuration": {
            "virtual_interface_id": "(Required) ID of the Direct Connect Virtual Interface",
            "router_type_identifier": "(Required) ID of the Router Type. For example: `CiscoSystemsInc-2900SeriesRouters-IOS124`"
        },
        "kendra_query_suggestions_block_list": {
            "index_id": "(Required) Identifier of the index that contains the block list.",
            "query_suggestions_block_list_id": "(Required) Identifier of the block list."
        },
        "appconfig_environments": {
            "application_id": "(Required) ID of the AppConfig Application."
        },
        "ec2_local_gateway_route_table": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "efs_mount_target": {},
        "lex_slot_type": {
            "name": "(Required) Name of the slot type. The name is case sensitive."
        },
        "service_discovery_service": {
            "name": "(Required) Name of the service.",
            "namespace_id": "(Required) ID of the namespace that the service belongs to."
        },
        "cognito_identity_pool": {
            "identity_pool_name": "(Required)  The Cognito Identity Pool name."
        },
        "api_gateway_vpc_link": {
            "name": "(Required) Name of the API Gateway VPC Link to look up. If no API Gateway VPC Link is found with this name, an error will be returned."
        },
        "ecr_repository": {
            "name": "(Required) Name of the ECR Repository."
        },
        "route53_delegation_set": {
            "id": "(Required) Delegation set ID."
        },
        "appmesh_mesh": {
            "name": "(Required) Name of the service mesh."
        },
        "ec2_network_insights_analysis": {
            "name": "(Required) Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsAnalyses`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsAnalyses.html) API Reference.",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "secretsmanager_secrets": {},
        "memorydb_parameter_group": {
            "name": "(Required) Name of the parameter group."
        },
        "opensearch_domain": {},
        "wafv2_rule_group": {
            "name": "(Required) Name of the WAFv2 Rule Group.",
            "scope": "(Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider."
        },
        "redshift_cluster_credentials": {
            "cluster_identifier": "(Required) Unique identifier of the cluster that contains the database for which your are requesting credentials.",
            "db_user": "(Required) Name of a database user. If a user name matching `db_user` exists in the database, the temporary user credentials have the same permissions as the  existing user. If `db_user` doesn't exist in the database and `auto_create` is `True`, a new user is created using the value for `db_user` with `PUBLIC` permissions.  If a database user matching the value for `db_user` doesn't exist and `not` is `False`, then the command succeeds but the connection attempt will fail because the user doesn't exist in the database."
        },
        "db_instance": {},
        "ec2_host": {},
        "networkmanager_link": {
            "global_network_id": "(Required) ID of the Global Network of the link to retrieve.",
            "link_id": "(Required) ID of the specific link to retrieve."
        },
        "ec2_spot_price": {
            "name": "(Required) Name of the filter.",
            "values": "(Required) List of one or more values for the filter."
        },
        "fsx_ontap_storage_virtual_machines": {},
        "outposts_outpost_instance_type": {
            "arn": "(Required) Outpost ARN."
        },
        "dx_gateway": {
            "name": "(Required) Name of the gateway to retrieve."
        },
        "codeartifact_authorization_token": {
            "domain": "(Required) Name of the domain that is in scope for the generated authorization token."
        },
        "prefix_list": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [EC2 DescribePrefixLists API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "ami_ids": {
            "owners": "(Required) List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`)."
        },
        "appmesh_virtual_service": {
            "name": "(Required) Name of the virtual service.",
            "mesh_name": "(Required) Name of the service mesh in which the virtual service exists."
        },
        "network_interface": {},
        "sns_topic": {
            "name": "(Required) Friendly name of the topic to match."
        },
        "wafregional_rate_based_rule": {
            "name": "(Required) Name of the WAF Regional rate based rule."
        },
        "ec2_instance_type_offering": {
            "name": "(Required) Name of the filter. The `location` filter depends on the top-level `location_type` argument and if not specified, defaults to the current region.",
            "values": "(Required) List of one or more values for the filter."
        },
        "mskconnect_connector": {
            "name": "(Required) Name of the connector."
        },
        "lex_bot_alias": {
            "bot_name": "(Required) Name of the bot.",
            "name": "(Required) Name of the bot alias. The name is case sensitive."
        },
        "servicecatalog_product": {
            "id": "(Required) ID of the product."
        },
        "connect_queue": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "ec2_serial_console_access": {},
        "iam_access_keys": {
            "user": "(Required) Name of the IAM user associated with the access keys."
        },
        "vpc_security_group_rule": {
            "name": "(Required) Name of the filter field. Valid values can be found in the EC2 [`DescribeSecurityGroupRules`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroupRules.html) API Reference.",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "inspector_rules_packages": {},
        "elastic_beanstalk_application": {
            "name": "(Required) Name of the application"
        },
        "kinesis_firehose_delivery_stream": {
            "name": "(Required) Name of the Kinesis Stream."
        },
        "kendra_experience": {
            "experience_id": "(Required) Identifier of the Experience.",
            "index_id": "(Required) Identifier of the index that contains the Experience."
        },
        "ssm_document": {
            "name": "(Required) Name of the Systems Manager document."
        },
        "kms_public_key": {
            "key_id": "(Required) Key identifier which can be one of the following format:"
        },
        "cognito_user_pool_signing_certificate": {
            "user_pool_id": "(Required) Cognito user pool ID."
        },
        "iam_roles": {},
        "ec2_transit_gateway_dx_gateway_attachment": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [EC2 DescribeTransitGatewayAttachments API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "regions": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [describe-regions AWS CLI Reference][1].",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "backup_plan": {
            "plan_id": "(Required) Backup plan ID."
        },
        "msk_configuration": {
            "name": "(Required) Name of the configuration."
        },
        "redshift_cluster": {
            "cluster_identifier": "(Required) Cluster identifier"
        },
        "ssmcontacts_contact": {
            "arn": "(Required) The Amazon Resource Name (ARN) of the contact or escalation plan."
        },
        "iam_instance_profile": {
            "name": "(Required) Friendly IAM instance profile name to match."
        },
        "memorydb_cluster": {
            "name": "(Required) Name of the cluster."
        },
        "billing_service_account": {},
        "ssmcontacts_plan": {
            "contact_id": "(Required) The Amazon Resource Name (ARN) of the contact or escalation plan."
        },
        "cur_report_definition": {
            "report_name": "(Required) Name of the report definition to match."
        },
        "outposts_sites": {},
        "kendra_thesaurus": {
            "index_id": "(Required) Identifier of the index that contains the Thesaurus.",
            "thesaurus_id": "(Required) Identifier of the Thesaurus."
        },
        "prometheus_workspaces": {},
        "iam_group": {
            "group_name": "(Required) Friendly IAM group name to match."
        },
        "msk_broker_nodes": {
            "cluster_arn": "(Required) ARN of the cluster the nodes belong to."
        },
        "sfn_state_machine": {
            "name": "(Required) Friendly name of the state machine to match."
        },
        "kendra_faq": {
            "faq_id": "(Required) Identifier of the FAQ.",
            "index_id": "(Required) Identifier of the index that contains the FAQ."
        },
        "auditmanager_framework": {
            "name": "(Required) Name of the framework.",
            "type": "(Required) Type of framework. Valid values are `Custom` and `Standard`."
        },
        "batch_compute_environment": {
            "compute_environment_name": "(Required) Name of the Batch Compute Environment"
        },
        "ami": {},
        "redshift_subnet_group": {
            "name": "(Required) Name of the cluster subnet group for which information is requested."
        },
        "ssmincidents_replication_set": {},
        "appconfig_configuration_profiles": {
            "application_id": "(Required) ID of the AppConfig Application."
        },
        "iam_principal_policy_simulation": {},
        "lambda_invocation": {
            "function_name": "(Required) Name of the lambda function.",
            "input": "(Required) String in JSON format that is passed as payload to the lambda function."
        },
        "lb_listener": {},
        "vpc_peering_connection": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "servicecatalog_provisioning_artifacts": {
            "product_id": "(Required) Product identifier."
        },
        "networkmanager_connection": {
            "global_network_id": "(Required) ID of the Global Network of the connection to retrieve.",
            "connection_id": "(Required) ID of the specific connection to retrieve."
        },
        "sesv2_email_identity_mail_from_attributes": {
            "email_identity": "(Required) The name of the email identity."
        },
        "dms_replication_task": {
            "replication_task_id": "(Required) The replication task identifier."
        },
        "ecr_authorization_token": {},
        "connect_user_hierarchy_structure": {
            "instance_id": "(Required) Reference to the hosting Amazon Connect Instance"
        },
        "ecr_pull_through_cache_rule": {},
        "iam_role": {
            "name": "(Required) Friendly IAM role name to match."
        },
        "internet_gateway": {
            "name": "(Required) Name of the field to filter by, as defined by",
            "values": "(Required) Set of values that are accepted for the given field."
        },
        "lex_bot": {
            "name": "(Required) Name of the bot. The name is case sensitive."
        },
        "location_tracker_association": {
            "consumer_arn": "(Required) ARN of the geofence collection associated to tracker resource.",
            "tracker_name": "(Required) Name of the tracker resource associated with a geofence collection."
        },
        "glue_connection": {
            "id": "(Required) Concatenation of the catalog ID and connection name. For example, if your account ID is"
        },
        "imagebuilder_infrastructure_configuration": {
            "arn": "(Required) ARN of the infrastructure configuration."
        },
        "iam_instance_profiles": {
            "role_name": "(Required) IAM role name."
        },
        "route53_resolver_query_log_config": {},
        "cognito_user_pools": {
            "name": "(Required) Name of the cognito user pools. Name is not a unique attribute for cognito user pool, so multiple pools might be returned with given name. If the pool name is expected to be unique, you can reference the pool id via ```tolist(data.aws_cognito_user_pools.selected.ids)[0]```"
        },
        "vpc_ipam_pools": {
            "filter": {
                "name": "(Required) The name of the filter. Filter names are case-sensitive.",
                "values": "(Required) The filter values. Filter values are case-sensitive."
            }
        },
        "imagebuilder_image": {
            "arn": "(Required) ARN of the image. The suffix can either be specified with wildcards (`x.x.x`) to fetch the latest build version or a full build version (e.g., `2020.11.26/1`) to fetch an exact version."
        },
        "ec2_local_gateway_virtual_interface_group": {
            "name": "(Required) Name of the filter.",
            "values": "(Required) List of one or more values for the filter."
        },
        "iam_openid_connect_provider": {},
        "identitystore_group": {
            "identity_store_id": "(Required) Identity Store ID associated with the Single Sign-On Instance.",
            "id": "(Required) The identifier issued to this resource by an external identity provider.",
            "issuer": "(Required) The issuer for an external identifier.",
            "attribute_path": "(Required) Attribute path that is used to specify which attribute name to search. For example: `DisplayName`. Refer to the [Group data type](https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_Group.html).",
            "attribute_value": "(Required) Value for an attribute."
        },
        "imagebuilder_infrastructure_configurations": {},
        "ssm_instances": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [SSM InstanceInformationStringFilter API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_InstanceInformationStringFilter.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "auditmanager_control": {
            "name": "(Required) Name of the control.",
            "type": "(Required) Type of control. Valid values are `Custom` and `Standard`."
        },
        "guardduty_detector": {},
        "licensemanager_received_license": {
            "license_arn": "(Required) The ARN of the received license you want data for."
        },
        "networkfirewall_firewall_policy": {},
        "route53_zone": {},
        "route53_resolver_firewall_rules": {
            "firewall_rule_group_id": "(Required) The unique identifier of the firewall rule group that you want to retrieve the rules for."
        },
        "organizations_organizational_unit": {
            "parent_id": "(Required) Parent ID of the organizational unit.",
            "name": "(Required) Name of the organizational unit"
        },
        "route": {
            "route_table_id": "(Required) ID of the specific Route Table containing the Route entry."
        },
        "route53_resolver_firewall_domain_list": {
            "firewall_domain_list_id": "(Required) The ID of the domain list."
        },
        "ebs_snapshot_ids": {},
        "launch_template": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "vpc_endpoint_service": {
            "name": "(Required) Name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "opensearchserverless_security_policy": {
            "name": "(Required) Name of the policy",
            "type": "(Required) Type of security policy. One of `encryption` or `network`."
        },
        "controltower_controls": {
            "target_identifier": "(Required) The ARN of the organizational unit."
        },
        "ec2_network_insights_path": {
            "name": "(Required) Name of the filter field. Valid values can be found in the EC2 [`DescribeNetworkInsightsPaths`](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInsightsPaths.html) API Reference.",
            "values": "(Required) Set of values that are accepted for the given filter field. Results will be selected if any given value matches."
        },
        "elb_service_account": {},
        "sfn_activity": {},
        "outposts_site": {}
    },
    "resource": {
        "s3_bucket_request_payment_configuration": {
            "payer": "(Required) Specifies who pays for the download and request fees. Valid values: `BucketOwner`, `Requester`."
        },
        "transfer_agreement": {
            "access_role": "(Required) The IAM Role which provides read and write access to the parent directory of the file location mentioned in the StartFileTransfer request.",
            "base_directory": "(Required) The landing directory for the files transferred by using the AS2 protocol.",
            "local_profile_id": "(Required) The unique identifier for the AS2 local profile.",
            "partner_profile_id": "(Required) The unique identifier for the AS2 partner profile.",
            "server_id": "(Required) The unique server identifier for the server instance. This is the specific server the agreement uses."
        },
        "vpc_ipam_organization_admin_account": {},
        "api_gateway_gateway_response": {
            "rest_api_id": "(Required) String identifier of the associated REST API.",
            "response_type": "(Required) Response type of the associated GatewayResponse."
        },
        "fsx_lustre_file_system": {
            "subnet_ids": "(Required) A list of IDs for the subnets that the file system will be accessible from. File systems currently support only one subnet. The file server is also launched in that subnet's Availability Zone."
        },
        "mq_broker": {
            "broker_name": "(Required) Name of the broker.",
            "engine_type": "(Required) Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.",
            "engine_version": "(Required) Version of the broker engine. See the [AmazonMQ Broker Engine docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html) for supported versions. For example, `5.15.0`.",
            "host_instance_type": "(Required) Broker's instance type. For example, `mq.t3.micro`, `mq.m5.large`.",
            "user": {
                "password": "(Required) Password of the user. It must be 12 to 250 characters long, at least 4 unique characters, and must not contain commas.",
                "username": "(Required) Username of the user."
            }
        },
        "s3control_object_lambda_access_point_policy": {
            "name": "(Required) The name of the Object Lambda Access Point.",
            "policy": "(Required) The Object Lambda Access Point resource policy document."
        },
        "controltower_control": {
            "control_identifier": "(Required) The ARN of the control. Only Strongly recommended and Elective controls are permitted, with the exception of the Region deny guardrail.",
            "target_identifier": "(Required) The ARN of the organizational unit."
        },
        "appautoscaling_target": {
            "max_capacity": "(Required) Max capacity of the scalable target.",
            "min_capacity": "(Required) Min capacity of the scalable target.",
            "resource_id": "(Required) Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)",
            "scalable_dimension": "(Required) Scalable dimension of the scalable target. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)",
            "service_namespace": "(Required) AWS service namespace of the scalable target. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html#API_RegisterScalableTarget_RequestParameters)"
        },
        "vpc_endpoint_policy": {
            "vpc_endpoint_id": "(Required) The VPC Endpoint ID."
        },
        "cloudhsm_v2_cluster": {
            "hsm_type": "(Required) The type of HSM module in the cluster. Currently, only `hsm1.medium` is supported.",
            "subnet_ids": "(Required) The IDs of subnets in which cluster will operate."
        },
        "ec2_client_vpn_network_association": {
            "client_vpn_endpoint_id": "(Required) The ID of the Client VPN endpoint.",
            "subnet_id": "(Required) The ID of the subnet to associate with the Client VPN endpoint."
        },
        "fsx_backup": {},
        "lightsail_certificate": {
            "name": "(Required) The name of the Lightsail load balancer.",
            "domain_name": "(Required) A domain name for which the certificate should be issued."
        },
        "api_gateway_client_certificate": {},
        "apigatewayv2_integration": {
            "api_id": "(Required) API identifier.",
            "integration_type": "(Required) Integration type of an integration.",
            "status_code": "(Required) HTTP status code in the range 200-599.",
            "mappings": "(Required) Key-value map. The key of this map identifies the location of the request parameter to change, and how to change it. The corresponding value specifies the new data for the parameter."
        },
        "appflow_connector_profile": {},
        "opensearch_domain_saml_options": {
            "domain_name": "(Required) Name of the domain."
        },
        "workspaces_workspace": {
            "directory_id": "(Required) The ID of the directory for the WorkSpace.",
            "bundle_id": "(Required) The ID of the bundle for the WorkSpace."
        },
        "iot_logging_options": {
            "role_arn": "(Required) The ARN of the role that allows IoT to write to Cloudwatch logs."
        },
        "opsworks_custom_layer": {
            "name": "(Required) A human-readable name for the layer.",
            "short_name": "(Required) A short, machine-readable name for the layer, which will be used to identify it in the Chef node JSON.",
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume.",
            "file": "(Required) Specifies log files that you want to push to CloudWatch Logs. File can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log*).",
            "log_group_name": "(Required) Specifies the destination log group. A log group is created automatically if it doesn't already exist."
        },
        "organizations_organization": {},
        "sagemaker_servicecatalog_portfolio_status": {
            "status": "(Required) Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`."
        },
        "api_gateway_integration_response": {
            "http_method": "(Required) HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).",
            "resource_id": "(Required) API resource ID.",
            "rest_api_id": "(Required) ID of the associated REST API.",
            "status_code": "(Required) HTTP status code."
        },
        "dataexchange_revision": {
            "data_set_id": "(Required) The dataset id.",
            "comment": "(Required) An optional comment about the revision."
        },
        "wafregional_rate_based_rule": {
            "metric_name": "(Required) The name or description for the Amazon CloudWatch metric of this rule.",
            "name": "(Required) The name or description of the rule.",
            "rate_key": "(Required) Valid value is IP.",
            "rate_limit": "(Required) The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 100."
        },
        "route53recoveryreadiness_resource_set": {
            "resource_set_name": "(Required) Unique name describing the resource set.",
            "resource_set_type": "(Required) Type of the resources in the resource set."
        },
        "sagemaker_app_image_config": {
            "app_image_config_name": "(Required) The name of the App Image Config.",
            "kernel_spec": "(Required) The default branch for the Git repository. See [Kernel Spec](#kernel-spec) details below.",
            "name": "(Required) The name of the kernel."
        },
        "appmesh_mesh": {
            "name": "(Required) Name to use for the service mesh. Must be between 1 and 255 characters in length."
        },
        "connect_instance_storage_config": {
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "resource_type": "(Required) A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `SCHEDULED_REPORTS` | `SCREEN_RECORDINGS`.",
            "storage_config": "(Required) Specifies the storage configuration options for the Connect Instance. [Documented below](#storage_config).",
            "storage_type": "(Required) A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.",
            "firehose_arn": "(Required) The Amazon Resource Name (ARN) of the delivery stream.",
            "stream_arn": "(Required) The Amazon Resource Name (ARN) of the data stream.",
            "encryption_config": "(Required) The encryption configuration. [Documented below](#encryption_config).",
            "prefix": "(Required) The prefix of the video stream. Minimum length of `1`. Maximum length of `128`. When read from the state, the value returned is `<prefix>-connect-<connect_instance_alias>-contact-` since the API appends additional details to the `prefix`.",
            "retention_period_hours": "(Required) The number of hours data is retained in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. Minimum value of `0`. Maximum value of `87600`. A value of `0`, indicates that the stream does not persist data.",
            "bucket_name": "(Required) The S3 bucket name.",
            "bucket_prefix": "(Required) The S3 bucket prefix.",
            "encryption_type": "(Required) The type of encryption. Valid Values: `KMS`.",
            "key_id": "(Required) The full ARN of the encryption key. Be sure to provide the full ARN of the encryption key, not just the ID."
        },
        "lightsail_lb": {
            "name": "(Required) The name of the Lightsail load balancer.",
            "instance_port": "(Required) The instance port the load balancer will connect."
        },
        "wafregional_web_acl": {
            "default_action": "(Required) The action that you want AWS WAF Regional to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL.",
            "metric_name": "(Required) The name or description for the Amazon CloudWatch metric of this web ACL.",
            "name": "(Required) The name or description of the web ACL.",
            "type": "(Required) Specifies how you want AWS WAF Regional to respond to requests that match the settings in a rule. Valid values for `action` are `ALLOW`, `BLOCK` or `COUNT`. Valid values for `override_action` are `COUNT` and `NONE`.",
            "log_destination": "(Required) Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream",
            "field_to_match": "(Required) Set of configuration blocks for fields to redact. Detailed below.",
            "priority": "(Required) Specifies the order in which the rules in a WebACL are evaluated.",
            "rule_id": "(Required) ID of the associated WAF (Regional) rule (e.g., [`aws_wafregional_rule`](/docs/providers/aws/r/wafregional_rule.html)). WAF (Global) rules cannot be used."
        },
        "route53_query_log": {
            "cloudwatch_log_group_arn": "(Required) CloudWatch log group ARN to send query logs.",
            "zone_id": "(Required) Route53 hosted zone ID to enable query logs."
        },
        "gamelift_game_server_group": {
            "game_server_group_name": "(Required) Name of the game server group.",
            "max_size": "(Required) The maximum number of instances allowed in the EC2 Auto Scaling group.",
            "min_size": "(Required) The minimum number of instances allowed in the EC2 Auto Scaling group.",
            "role_arn": "(Required) ARN for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.",
            "target_value": "(Required) Desired value to use with a game server group target-based scaling policy.",
            "instance_type": "(Required) An EC2 instance type."
        },
        "datasync_location_object_storage": {
            "agent_arns": "(Required) A list of DataSync Agent ARNs with which this location will be associated.",
            "bucket_name": "(Required) The bucket on the self-managed object storage server that is used to read data from.",
            "server_hostname": "(Required) The name of the self-managed object storage server. This value is the IP address or Domain Name Service (DNS) name of the object storage server. An agent uses this host name to mount the object storage server in a network."
        },
        "glue_schema": {
            "registry_arn": "(Required) The ARN of the Glue Registry to create the schema in.",
            "data_format": "(Required) The data format of the schema definition. Valid values are `AVRO`, `JSON` and `PROTOBUF`.",
            "compatibility": "(Required) The compatibility mode of the schema. Values values are: `NONE`, `DISABLED`, `BACKWARD`, `BACKWARD_ALL`, `FORWARD`, `FORWARD_ALL`, `FULL`, and `FULL_ALL`.",
            "schema_definition": "(Required) The schema definition using the `data_format` setting for `schema_name`."
        },
        "macie2_invitation_accepter": {
            "administrator_account_id": "(Required) The AWS account ID for the account that sent the invitation."
        },
        "network_acl_association": {
            "network_acl_id": "(Required) The ID of the network ACL.",
            "subnet_id": "(Required) The ID of the associated Subnet."
        },
        "lakeformation_data_lake_settings": {},
        "lightsail_key_pair": {
            "public_key": "(Required) The public key material. This public key will be imported into Lightsail"
        },
        "lambda_code_signing_config": {
            "signing_profile_version_arns": "(Required) The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package.",
            "untrusted_artifact_on_deployment": "(Required) Code signing configuration policy for deployment validation failure. If you set the policy to Enforce, Lambda blocks the deployment request if code-signing validation checks fail. If you set the policy to Warn, Lambda allows the deployment and creates a CloudWatch log. Valid values: `Warn`, `Enforce`. Default value: `Warn`."
        },
        "ses_receipt_filter": {
            "name": "(Required) The name of the filter",
            "cidr": "(Required) The IP address or address range to filter, in CIDR notation",
            "policy": "(Required) Block or Allow"
        },
        "imagebuilder_image_recipe": {},
        "dynamodb_kinesis_streaming_destination": {
            "stream_arn": "(Required) The ARN for a Kinesis data stream. This must exist in the same account and region as the DynamoDB table.",
            "table_name": "(Required) The name of the DynamoDB table. There"
        },
        "fsx_openzfs_volume": {
            "name": "(Required) The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.",
            "parent_volume_id": "(Required) The volume id of volume that will be the parent volume for the volume being created, this could be the root volume created from the `aws_fsx_openzfs_file_system` resource with the `root_volume_id` or the `id` property of another `aws_fsx_openzfs_volume`.",
            "client_configurations": "(Required) - A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See [Client Configurations](#client configurations) Below.",
            "clients": "(Required) - A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.",
            "options": "(Required) -  The options to use when mounting the file system. Maximum of 20 items. See the [Linix NFS exports man page](https://linux.die.net/man/5/exports) for more information. `crossmount` and `sync` are used by default.",
            "id": "(Required) - The ID of the user or group. Valid values between `0` and `2147483647`",
            "storage_capacity_quota_gib": "(Required) - The amount of storage that the user or group can use in gibibytes (GiB). Valid values between `0` and `2147483647`",
            "Type": "(Required) - A value that specifies whether the quota applies to a user or group. Valid values are `USER` or `GROUP`."
        },
        "identitystore_group_membership": {
            "member_id": "(Required) The identifier for a user in the Identity Store.",
            "group_id": "(Required)  The identifier for a group in the Identity Store.",
            "identity_store_id": "(Required) Identity Store ID associated with the Single Sign-On Instance."
        },
        "ec2_network_insights_analysis": {
            "network_insights_path_id": "(Required) ID of the Network Insights Path to run an analysis on."
        },
        "cleanrooms_collaboration": {
            "name": "(Required) - The name of the collaboration.  Collaboration names do not need to be unique.",
            "description": "(Required) - A description for a collaboration."
        },
        "cloudfront_response_headers_policy": {
            "name": "(Required) A unique name to identify the response headers policy.",
            "access_control_allow_credentials": "(Required) A Boolean value that CloudFront uses as the value for the `Access-Control-Allow-Credentials` HTTP response header.",
            "access_control_allow_headers": "(Required) Object that contains an attribute `items` that contains a list of HTTP header names that CloudFront includes as values for the `Access-Control-Allow-Headers` HTTP response header.",
            "access_control_allow_methods": "(Required) Object that contains an attribute `items` that contains a list of HTTP methods that CloudFront includes as values for the `Access-Control-Allow-Methods` HTTP response header. Valid values: `GET` | `POST` | `OPTIONS` | `PUT` | `DELETE` | `HEAD` | `ALL`",
            "access_control_allow_origins": "(Required) Object that contains an attribute `items` that contains a list of origins that CloudFront can use as the value for the `Access-Control-Allow-Origin` HTTP response header.",
            "origin_override": "(Required) A Boolean value that determines how CloudFront behaves for the HTTP response header.",
            "header": "(Required) The HTTP header name.",
            "override": "(Required) Whether CloudFront overrides the `X-XSS-Protection` HTTP response header received from the origin with the one specified in this response headers policy.",
            "value": "(Required) The value for the HTTP response header.",
            "content_security_policy": "(Required) The policy directives and their values that CloudFront includes as values for the `Content-Security-Policy` HTTP response header.",
            "frame_option": "(Required) The value of the `X-Frame-Options` HTTP response header. Valid values: `DENY` | `SAMEORIGIN`",
            "referrer_policy": "(Required) The value of the `Referrer-Policy` HTTP response header. Valid Values: `no-referrer` | `no-referrer-when-downgrade` | `origin` | `origin-when-cross-origin` | `same-origin` | `strict-origin` | `strict-origin-when-cross-origin` | `unsafe-url`",
            "access_control_max_age_sec": "(Required) A number that CloudFront uses as the value for the `max-age` directive in the `Strict-Transport-Security` HTTP response header.",
            "protection": "(Required) A Boolean value that determines the value of the `X-XSS-Protection` HTTP response header. When this setting is `true`, the value of the `X-XSS-Protection` header is `1`. When this setting is `false`, the value of the `X-XSS-Protection` header is `0`.",
            "enabled": "(Required) A Whether CloudFront adds the `Server-Timing` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.",
            "sampling_rate": "(Required) A number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the Server-Timing header to. Valid range: Minimum value of 0.0. Maximum value of 100.0."
        },
        "ec2_transit_gateway_connect_peer": {
            "inside_cidr_blocks": "(Required) The CIDR block that will be used for addressing within the tunnel. It must contain exactly one IPv4 CIDR block and up to one IPv6 CIDR block. The IPv4 CIDR block must be /29 size and must be within 169.254.0.0/16 range, with exception of: 169.254.0.0/29, 169.254.1.0/29, 169.254.2.0/29, 169.254.3.0/29, 169.254.4.0/29, 169.254.5.0/29, 169.254.169.248/29. The IPv6 CIDR block must be /125 size and must be within fd00::/8. The first IP from each CIDR block is assigned for customer gateway, the second and third is for Transit Gateway (An example: from range 169.254.100.0/29, .1 is assigned to customer gateway and .2 and .3 are assigned to Transit Gateway)",
            "peer_address": "(Required) The IP addressed assigned to customer device, which will be used as tunnel endpoint. It can be IPv4 or IPv6 address, but must be the same address family as `transit_gateway_address`",
            "transit_gateway_attachment_id": "(Required) The Transit Gateway Connect"
        },
        "db_event_subscription": {
            "sns_topic": "(Required) The SNS topic to send events to."
        },
        "ssmcontacts_contact_channel": {},
        "appmesh_route": {
            "name": "(Required) Name for the HTTP header in the client request that will be matched on.",
            "mesh_name": "(Required) Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.",
            "virtual_router_name": "(Required) Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.",
            "spec": "(Required) Route specification to apply.",
            "action": "(Required) Action to take if a match is determined.",
            "match": "(Required) Criteria for determining an HTTP request match.",
            "weighted_target": "(Required) Targets that traffic is routed to when a request matches the route.",
            "unit": "(Required) Retry unit. Valid values: `ms`, `s`.",
            "value": "(Required) Retry value.",
            "max_retries": "(Required) Maximum number of retries.",
            "per_retry_timeout": "(Required) Per-retry timeout.",
            "virtual_node": "(Required) Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.",
            "weight": "(Required) Relative weight of the weighted target. An integer between 0 and 100.",
            "end": "(Required) End of the range."
        },
        "dynamodb_contributor_insights": {
            "table_name": "(Required) The name of the table to enable contributor insights"
        },
        "vpc_endpoint_service": {
            "acceptance_required": "(Required) Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`."
        },
        "db_instance": {
            "instance_class": "(Required) The instance type of the RDS instance.",
            "bucket_name": "(Required) The bucket name where your backup is stored",
            "ingestion_role": "(Required) Role applied to load the data."
        },
        "msk_cluster": {
            "broker_node_group_info": "(Required) Configuration block for the broker nodes of the Kafka cluster.",
            "cluster_name": "(Required) Name of the MSK cluster.",
            "kafka_version": "(Required) Specify the desired Kafka software version.",
            "number_of_broker_nodes": "(Required) The desired total number of broker nodes in the kafka cluster.  It must be a multiple of the number of specified client subnets.",
            "client_subnets": "(Required) A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).",
            "instance_type": "(Required) Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))",
            "security_groups": "(Required) A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.",
            "arn": "(Required) Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.",
            "revision": "(Required) Revision of the MSK Configuration to use in the cluster.",
            "prometheus": "(Required) Configuration block for Prometheus settings for open monitoring. See below.",
            "enabled_in_broker": "(Required) Indicates whether you want to enable or disable the Node Exporter.",
            "broker_logs": "(Required) Configuration block for Broker Logs settings for logging info. See below."
        },
        "networkmanager_transit_gateway_registration": {
            "global_network_id": "(Required) The ID of the Global Network to register to.",
            "transit_gateway_arn": "(Required) The ARN of the Transit Gateway to register."
        },
        "ec2_transit_gateway_peering_attachment_accepter": {
            "transit_gateway_attachment_id": "(Required) The ID of the EC2 Transit Gateway Peering Attachment to manage."
        },
        "lightsail_lb_attachment": {
            "lb_name": "(Required) The name of the Lightsail load balancer.",
            "instance_name": "(Required) The name of the instance to attach to the load balancer."
        },
        "route53_resolver_query_log_config": {
            "destination_arn": "(Required) The ARN of the resource that you want Route 53 Resolver to send query logs.",
            "name": "(Required) The name of the Route 53 Resolver query logging configuration."
        },
        "cognito_user_pool_ui_customization": {},
        "mskconnect_worker_configuration": {
            "name": "(Required) The name of the worker configuration.",
            "properties_file_content": "(Required) Contents of connect-distributed.properties file. The value can be either base64 encoded or in raw format."
        },
        "worklink_website_certificate_authority_association": {},
        "quicksight_folder": {
            "name": "(Required) Display name for the folder."
        },
        "route53_traffic_policy_instance": {
            "name": "(Required) Domain name for which Amazon Route 53 responds to DNS queries by using the resource record sets that Route 53 creates for this traffic policy instance.",
            "traffic_policy_id": "(Required) ID of the traffic policy that you want to use to create resource record sets in the specified hosted zone.",
            "traffic_policy_version": "(Required) Version of the traffic policy",
            "hosted_zone_id": "(Required) ID of the hosted zone that you want Amazon Route 53 to create resource record sets in by using the configuration in a traffic policy.",
            "ttl": "(Required) TTL that you want Amazon Route 53 to assign to all the resource record sets that it creates in the specified hosted zone."
        },
        "ssoadmin_managed_policy_attachment": {},
        "vpc_endpoint": {
            "service_name": "(Required) The service name. For AWS services the service name is usually in the form `com.amazonaws.<region>.<service>` (the SageMaker Notebook service is an exception to this rule, the service name is in the form `aws.sagemaker.<region>.notebook`).",
            "vpc_id": "(Required) The ID of the VPC in which the endpoint will be used."
        },
        "cloudwatch_metric_stream": {
            "firehose_arn": "(Required) ARN of the Amazon Kinesis Firehose delivery stream to use for this metric stream.",
            "role_arn": "(Required) ARN of the IAM role that this metric stream will use to access Amazon Kinesis Firehose resources. For more information about role permissions, see [Trust between CloudWatch and Kinesis Data Firehose](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-trustpolicy.html).",
            "output_format": "(Required) Output format for the stream. Possible values are `json` and `opentelemetry0.7`. For more information about output formats, see [Metric streams output formats](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).",
            "namespace": "(Required) The namespace of the metric.",
            "additional_statistics": "(Required) The additional statistics to stream for the metrics listed in `include_metrics`.",
            "include_metric": "(Required) An array that defines the metrics that are to have additional statistics streamed. See details below.",
            "metric_name": "(Required) The name of the metric."
        },
        "macie2_custom_data_identifier": {},
        "securityhub_standards_control": {
            "standards_control_arn": "(Required) The standards control ARN. See the AWS documentation for how to list existing controls using [`get-enabled-standards`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/get-enabled-standards.html) and [`describe-standards-controls`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/securityhub/describe-standards-controls.html)."
        },
        "wafv2_rule_group": {
            "visibility_config": "(Required) Defines and enables Amazon CloudWatch metrics and web request sample collection. See [Visibility Configuration](#visibility-configuration) below for details.",
            "key": "(Required) The string to match against.",
            "content": "(Required) The payload of the custom response.",
            "content_type": "(Required) The type of content in the payload that you are defining in the `content` argument. Valid values are `TEXT_PLAIN`, `TEXT_HTML`, or `APPLICATION_JSON`.",
            "action": "(Required) The action that AWS WAF should take on a web request when it matches the rule's statement. Settings at the `aws_wafv2_web_acl` level can override the rule action setting. See [Action](#action) below for details.",
            "priority": "(Required) The relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.",
            "statement": "(Required) The statements to combine with `OR` logic. You can use any statements that can be nested. See [Statement](#statement) above for details.",
            "insert_header": "(Required) The `insert_header` blocks used to define HTTP headers added to the request. See [Custom HTTP Header](#custom-http-header) below for details.",
            "response_code": "(Required) The HTTP status code to return to the client.",
            "field_to_match": "(Required) The part of a web request that you want AWS WAF to inspect. See [Field to Match](#field-to-match) below for details.",
            "positional_constraint": "(Required) The area within the portion of a web request that you want AWS WAF to search for `search_string`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.",
            "search_string": "(Required) A string value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `field_to_match`. The maximum length of the value is 50 bytes.",
            "text_transformation": "(Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection.",
            "country_codes": "(Required) An array of two-character country codes, for example, [ \"US\", \"CN\" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.",
            "scope": "(Required) Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.",
            "arn": "(Required) The Amazon Resource Name (ARN) of the Regex Pattern Set that this statement references.",
            "limit": "(Required) The limit on requests per 5-minute period for a single originating IP address.",
            "regex_string": "(Required) The string representing the regular expression. Minimum of `1` and maximum of `512` characters.",
            "comparison_operator": "(Required) The operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.",
            "size": "(Required) The size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.",
            "fallback_behavior": "(Required) - The match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.",
            "header_name": "(Required) - The name of the HTTP header to use for the IP address.",
            "position": "(Required) - The position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.",
            "match_pattern": "(Required) The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `included_cookies` or `excluded_cookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)",
            "match_scope": "(Required) The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`",
            "oversize_handling": "(Required) What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`",
            "type": "(Required) The transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.",
            "cloudwatch_metrics_enabled": "(Required) A boolean indicating whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics).",
            "sampled_requests_enabled": "(Required) A boolean indicating whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console."
        },
        "evidently_project": {
            "name": "(Required) A name for the project."
        },
        "gamelift_build": {
            "name": "(Required) Name of the build",
            "operating_system": "(Required) Operating system that the game server binaries are built to run onE.g., `WINDOWS_2012`, `AMAZON_LINUX` or `AMAZON_LINUX_2`.",
            "storage_location": "(Required) Information indicating where your game build files are stored. See below.",
            "bucket": "(Required) Name of your S3 bucket.",
            "key": "(Required) Name of the zip file containing your build files.",
            "role_arn": "(Required) ARN of the access role that allows Amazon GameLift to access your S3 bucket."
        },
        "service_discovery_public_dns_namespace": {
            "name": "(Required) The name of the namespace."
        },
        "ssoadmin_permission_set_inline_policy": {
            "inline_policy": "(Required) The IAM inline policy to attach to a Permission Set."
        },
        "ecs_task_definition": {
            "container_definitions": "(Required) A list of valid [container definitions](http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html) provided as a single valid JSON document. Please note that you should only provide values that are part of the container definition document. For a detailed description of what parameters are available, see the [Task Definition Parameters](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html) section from the official [Developer Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide).",
            "family": "(Required) A unique name for your task definition."
        },
        "glue_data_quality_ruleset": {},
        "kendra_thesaurus": {
            "name": "(Required) The name for the thesaurus.",
            "role_arn": "(Required) The IAM (Identity and Access Management) role used to access the thesaurus file in S3.",
            "source_s3_path": "(Required) The S3 path where your thesaurus file sits in S3. Detailed below.",
            "bucket": "(Required) The name of the S3 bucket that contains the file.",
            "key": "(Required) The name of the file."
        },
        "cloudwatch_log_metric_filter": {
            "name": "(Required) The name of the CloudWatch metric to which the monitored log information should be published (e.g., `ErrorCount`)",
            "pattern": "(Required) A valid [CloudWatch Logs filter pattern](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html)",
            "log_group_name": "(Required) The name of the log group to associate the metric filter with.",
            "metric_transformation": "(Required) A block defining collection of information needed to define how metric data gets emitted. See below.",
            "namespace": "(Required) The destination namespace of the CloudWatch metric.",
            "value": "(Required) What to publish to the metric. For example, if you're counting the occurrences of a particular term like \"Error\", the value will be \"1\" for each occurrence. If you're counting the bytes transferred the published value will be the value in the log event."
        },
        "ec2_transit_gateway_route": {
            "destination_cidr_block": "(Required) IPv4 or IPv6 RFC1924 CIDR used for destination matches. Routing decisions are based on the most specific match.",
            "transit_gateway_route_table_id": "(Required) Identifier of EC2 Transit Gateway Route Table."
        },
        "lightsail_domain_entry": {
            "domain_name": "(Required) The name of the Lightsail domain in which to create the entry",
            "name": "(Required) Name of the entry record",
            "type": "(Required) Type of record",
            "target": "(Required) Target of the domain entry"
        },
        "opsworks_static_web_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "route53_delegation_set": {},
        "ssm_default_patch_baseline": {
            "baseline_id": "(Required) ID of the patch baseline.",
            "operating_system": "(Required) The operating system the patch baseline applies to."
        },
        "codestarconnections_connection": {
            "name": "(Required) The name of the connection to be created. The name must be unique in the calling AWS account. Changing `name` will create a new resource."
        },
        "ec2_local_gateway_route": {
            "destination_cidr_block": "(Required) IPv4 CIDR range used for destination matches. Routing decisions are based on the most specific match.",
            "local_gateway_route_table_id": "(Required) Identifier of EC2 Local Gateway Route Table.",
            "local_gateway_virtual_interface_group_id": "(Required) Identifier of EC2 Local Gateway Virtual Interface Group."
        },
        "location_route_calculator": {
            "calculator_name": "(Required) The name of the route calculator resource.",
            "data_source": "(Required) Specifies the data provider of traffic and road network data."
        },
        "opensearchserverless_security_config": {
            "saml_options": {
                "metadata": "(Required) The XML IdP metadata file generated from your identity provider."
            },
            "type": "(Required) Type of configuration. Must be `saml`."
        },
        "apigatewayv2_api_mapping": {
            "api_id": "(Required) API identifier.",
            "domain_name": "(Required) Domain name. Use the [`aws_apigatewayv2_domain_name`](/docs/providers/aws/r/apigatewayv2_domain_name.html) resource to configure a domain name.",
            "stage": "(Required) API stage. Use the [`aws_apigatewayv2_stage`](/docs/providers/aws/r/apigatewayv2_stage.html) resource to configure an API stage."
        },
        "gamelift_fleet": {
            "ec2_instance_type": "(Required) Name of an EC2 instance typeE.g., `t2.micro`",
            "name": "(Required) The name of the fleet.",
            "from_port": "(Required) Starting value for a range of allowed port numbers.",
            "ip_range": "(Required) Range of allowed IP addresses expressed in CIDR notationE.g., `000.000.000.000/[subnet mask]` or `0.0.0.0/[subnet mask]`.",
            "protocol": "(Required) Network communication protocol used by the fleetE.g., `TCP` or `UDP`",
            "to_port": "(Required) Ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than `from_port`.",
            "concurrent_executions": "(Required) Number of server processes using this configuration to run concurrently on an instance.",
            "launch_path": "(Required) Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances `C:\\game`, and for Linux instances `/local/game`."
        },
        "lightsail_static_ip_attachment": {
            "static_ip_name": "(Required) The name of the allocated static IP",
            "instance_name": "(Required) The name of the Lightsail instance to attach the IP to"
        },
        "mq_configuration": {
            "data": "(Required) Broker configuration in XML format for `ActiveMQ` or [Cuttlefish](https://github.com/Kyorai/cuttlefish) format for `RabbitMQ`. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.",
            "engine_type": "(Required) Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.",
            "engine_version": "(Required) Version of the broker engine.",
            "name": "(Required) Name of the configuration."
        },
        "keyspaces_keyspace": {},
        "directory_service_shared_directory_accepter": {
            "shared_directory_id": "(Required) Identifier of the directory that is stored in the directory consumer account that corresponds to the shared directory in the owner account."
        },
        "finspace_kx_cluster": {
            "az_mode": "(Required) The number of availability zones you want to assign per cluster. This can be one of the following:",
            "capacity_configuration": {
                "node_type": "(Required) Determines the hardware of the host computer used for your cluster instance. Each node type offers different memory and storage capabilities. Choose a node type based on the requirements of the application or software that you plan to run on your instance.",
                "node_count": "(Required) Number of instances running in a cluster. Must be at least 1 and at most 5."
            },
            "environment_id": "(Required) Unique identifier for the KX environment.",
            "name": "(Required) Unique name for the cluster that you want to create.",
            "release_label": "(Required) Version of FinSpace Managed kdb to run.",
            "vpc_configuration": {
                "vpc_id": "(Required) Identifier of the VPC endpoint",
                "security_group_ids": "(Required) Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.",
                "ip_address_type": "(Required) IP address type for cluster network configuration parameters. The following type is available: IP_V4 - IP address version 4."
            }
        },
        "iam_role_policy": {
            "policy": "(Required) The inline policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)",
            "role": "(Required) The name of the IAM role to attach to the policy."
        },
        "rum_metrics_destination": {
            "app_monitor_name": "(Required) The name of the CloudWatch RUM app monitor that will send the metrics.",
            "destination": "(Required)  Defines the destination to send the metrics to. Valid values are `CloudWatch` and `Evidently`. If you specify `Evidently`, you must also specify the ARN of the CloudWatchEvidently experiment that is to be the destination and an IAM role that has permission to write to the experiment."
        },
        "lightsail_container_service": {
            "name": "(Required) The name for the container service. Names must be of length 1 to 63, and be",
            "power": "(Required) The power specification for the container service. The power specifies the amount of memory,",
            "scale": "(Required) The scale specification for the container service. The scale specifies the allocated compute"
        },
        "ec2_availability_zone_group": {
            "group_name": "(Required) Name of the Availability Zone Group.",
            "opt_in_status": "(Required) Indicates whether to enable or disable Availability Zone Group. Valid values: `opted-in` or `not-opted-in`."
        },
        "iam_account_alias": {
            "account_alias": "(Required) The account alias"
        },
        "lightsail_lb_stickiness_policy": {
            "lb_name": "(Required) The name of the load balancer to which you want to enable session stickiness.",
            "cookie_duration": "(Required) The cookie duration in seconds. This determines the length of the session stickiness.",
            "enabled": "(Required) - The Session Stickiness state of the load balancer. `true` to activate session stickiness or `false` to deactivate session stickiness."
        },
        "appstream_fleet_stack_association": {
            "fleet_name": "(Required) Name of the fleet."
        },
        "dms_replication_task": {
            "migration_type": "(Required) The migration type. Can be one of `full-load | cdc | full-load-and-cdc`.",
            "replication_instance_arn": "(Required) The Amazon Resource Name (ARN) of the replication instance.",
            "replication_task_id": "(Required) The replication task identifier.",
            "source_endpoint_arn": "(Required) The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.",
            "table_mappings": "(Required) An escaped JSON string that contains the table mappings. For information on table mapping see [Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html)",
            "target_endpoint_arn": "(Required) The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint."
        },
        "resourcegroups_resource": {
            "group_arn": "(Required) The name or the ARN of the resource group to add resources to.",
            "resource_arn": "(Required) The ARN of the resource to be added to the group."
        },
        "mwaa_environment": {
            "dag_s3_path": "(Required) The relative path to the DAG folder on your Amazon S3 storage bucket. For example, dags. For more information, see [Importing DAGs on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import.html).",
            "execution_role_arn": "(Required) The Amazon Resource Name (ARN) of the task execution role that the Amazon MWAA and its environment can assume. Check the [official AWS documentation](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html) for the detailed role specification.",
            "name": "(Required) The name of the Apache Airflow Environment",
            "network_configuration": "(Required) Specifies the network configuration for your Apache Airflow Environment. This includes two private subnets as well as security groups for the Airflow environment. Each subnet requires internet connection, otherwise the deployment will fail. See [Network configuration](#network-configuration) below for details.",
            "source_bucket_arn": "(Required) The Amazon Resource Name (ARN) of your Amazon S3 storage bucket. For example, arn:aws:s3:::airflow-mybucketname.",
            "enabled": "(Required) Enabling or disabling the collection of logs",
            "security_group_ids": "(Required) Security groups IDs for the environment. At least one of the security group needs to allow MWAA resources to talk to each other, otherwise MWAA cannot be provisioned.",
            "subnet_ids": "(Required)  The private subnet IDs in which the environment should be created. MWAA requires two subnets."
        },
        "appsync_datasource": {
            "api_id": "(Required) API ID for the GraphQL API for the data source.",
            "name": "(Required) User-supplied name for the data source.",
            "type": "(Required) Type of the Data Source. Valid values: `AWS_LAMBDA`, `AMAZON_DYNAMODB`, `AMAZON_ELASTICSEARCH`, `HTTP`, `NONE`, `RELATIONAL_DATABASE`, `AMAZON_EVENTBRIDGE`, `AMAZON_OPENSEARCH_SERVICE`.",
            "table_name": "(Required) Name of the DynamoDB table.",
            "delta_sync_table_name": "(Required) The table name.",
            "endpoint": "(Required) HTTP endpoint of the OpenSearch domain.",
            "event_bus_arn": "(Required) ARN for the EventBridge bus.",
            "function_arn": "(Required) ARN for the Lambda function.",
            "http_endpoint_config": "(Required) Amazon RDS HTTP endpoint configuration. See [HTTP Endpoint Config](#http-endpoint-config).",
            "db_cluster_identifier": "(Required) Amazon RDS cluster identifier.",
            "aws_secret_store_arn": "(Required) AWS secret store ARN for database credentials."
        },
        "ec2_tag": {
            "resource_id": "(Required) The ID of the EC2 resource to manage the tag for.",
            "key": "(Required) The tag name.",
            "value": "(Required) The value of the tag."
        },
        "lakeformation_lf_tag": {
            "key": "(Required) Key-name for the tag.",
            "values": "(Required) List of possible values an attribute can take."
        },
        "route53_cidr_location": {
            "cidr_blocks": "(Required) CIDR blocks for the location.",
            "cidr_collection_id": "(Required) The ID of the CIDR collection to update.",
            "name": "(Required) Name for the CIDR location."
        },
        "s3_object_copy": {
            "bucket": "(Required) Name of the bucket to put the file in.",
            "key": "(Required) Name of the object once it is in the bucket.",
            "source": "(Required) Specifies the source object for the copy operation. You specify the value in one of two formats. For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (`/`). For example, `testbucket/test1.json`. For objects accessed through access points, specify the ARN of the object as accessed through the access point, in the format `arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key>`. For example, `arn:aws:s3:us-west-2:9999912999:accesspoint/my-access-point/object/testbucket/test1.json`."
        },
        "apigatewayv2_stage": {
            "api_id": "(Required) API identifier.",
            "name": "(Required) Name of the stage. Must be between 1 and 128 characters in length."
        },
        "oam_sink_policy": {
            "sink_identifier": "(Required) ARN of the sink to attach this policy to.",
            "policy": "(Required) JSON policy to use. If you are updating an existing policy, the entire existing policy is replaced by what you specify here."
        },
        "eks_identity_provider_config": {
            "oidc": "(Required) Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.",
            "issuer_url": "(Required) Issuer URL for the OpenID Connect identity provider."
        },
        "emr_cluster": {
            "release_label": "(Required) Release label for the Amazon EMR release.",
            "service_role": "(Required) IAM role that will be assumed by the Amazon EMR service to access AWS resources."
        },
        "codepipeline": {
            "name": "(Required) The action declaration's name.",
            "role_arn": "(Required) A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.",
            "location": "(Required) The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.",
            "type": "(Required) The type of key; currently only `KMS` is supported",
            "id": "(Required) The KMS key ARN or ID",
            "action": "(Required) The action(s) to include in the stage. Defined as an `action` block below",
            "category": "(Required) A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Possible values are `Approval`, `Build`, `Deploy`, `Invoke`, `Source` and `Test`.",
            "owner": "(Required) The creator of the action being called. Possible values are `AWS`, `Custom` and `ThirdParty`.",
            "provider": "(Required) The provider of the service being called by the action. Valid providers are determined by the action category. Provider names are listed in the [Action Structure Reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html) documentation.",
            "version": "(Required) A string that identifies the action type."
        },
        "pinpoint_gcm_channel": {
            "application_id": "(Required) The application ID.",
            "api_key": "(Required) Platform credential API key from Google."
        },
        "dx_hosted_transit_virtual_interface": {
            "address_family": "(Required) The address family for the BGP peer. `ipv4 ` or `ipv6`.",
            "bgp_asn": "(Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.",
            "connection_id": "(Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.",
            "name": "(Required) The name for the virtual interface.",
            "owner_account_id": "(Required) The AWS account that will own the new virtual interface.",
            "vlan": "(Required) The VLAN ID."
        },
        "storagegateway_working_storage": {
            "disk_id": "(Required) Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.",
            "gateway_arn": "(Required) The Amazon Resource Name (ARN) of the gateway."
        },
        "autoscaling_group": {},
        "internetmonitor_monitor": {
            "monitor_name": "(Required) The name of the monitor."
        },
        "codebuild_resource_policy": {
            "resource_arn": "(Required) The ARN of the Project or ReportGroup resource you want to associate with a resource policy.",
            "policy": "(Required) A JSON-formatted resource policy. For more information, see [Sharing a Projec](https://docs.aws.amazon.com/codebuild/latest/userguide/project-sharing.html#project-sharing-share) and [Sharing a Report Group](https://docs.aws.amazon.com/codebuild/latest/userguide/report-groups-sharing.html#report-groups-sharing-share)."
        },
        "dms_event_subscription": {
            "name": "(Required) Name of event subscription.",
            "source_ids": "(Required) Ids of sources to listen to.",
            "sns_topic_arn": "(Required) SNS topic arn to send events on."
        },
        "service_discovery_instance": {
            "attributes": "(Required) A map contains the attributes of the instance. Check the [doc](https://docs.aws.amazon.com/cloud-map/latest/api/API_RegisterInstance.html#API_RegisterInstance_RequestSyntax) for the supported attributes and syntax."
        },
        "route53_zone_association": {
            "zone_id": "(Required) The private hosted zone to associate.",
            "vpc_id": "(Required) The VPC to associate with the private hosted zone."
        },
        "ssm_resource_data_sync": {
            "name": "(Required) Name for the configuration.",
            "s3_destination": "(Required) Amazon S3 configuration details for the sync."
        },
        "api_gateway_method_response": {
            "rest_api_id": "(Required) ID of the associated REST API",
            "resource_id": "(Required) API resource ID",
            "http_method": "(Required) HTTP Method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`)",
            "status_code": "(Required) HTTP status code"
        },
        "db_parameter_group": {
            "name": "(Required) The name of the DB parameter.",
            "value": "(Required) The value of the DB parameter."
        },
        "kms_alias": {
            "target_key_id": "(Required) Identifier for the key for which the alias is for, can be either an ARN or key_id."
        },
        "rds_cluster": {
            "engine": "(Required) Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).",
            "bucket_name": "(Required) Bucket name where your backup is stored",
            "ingestion_role": "(Required) Role applied to load the data.",
            "source_engine": "(Required) Source engine for the backup",
            "source_engine_version": "(Required) Version of the source engine used to make the backup",
            "source_cluster_identifier": "(Required) Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.",
            "max_capacity": "(Required) Maximum capacity for an Aurora DB cluster in `provisioned` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid capacity values are in a range of `0.5` up to `128` in steps of `0.5`.",
            "min_capacity": "(Required) Minimum capacity for an Aurora DB cluster in `provisioned` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid capacity values are in a range of `0.5` up to `128` in steps of `0.5`."
        },
        "budgets_budget_action": {
            "budget_name": "(Required) The name of a budget.",
            "action_threshold": "(Required) The trigger threshold of the action. See [Action Threshold](#action-threshold).",
            "action_type": "(Required) The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. Valid values are `APPLY_IAM_POLICY`, `APPLY_SCP_POLICY`, and `RUN_SSM_DOCUMENTS`.",
            "approval_model": "(Required) This specifies if the action needs manual or automatic approval. Valid values are `AUTOMATIC` and `MANUAL`.",
            "definition": "(Required) Specifies all of the type-specific parameters. See [Definition](#definition).",
            "execution_role_arn": "(Required) The role passed for action execution and reversion. Roles and actions must be in the same account.",
            "notification_type": "(Required) The type of a notification. Valid values are `ACTUAL` or `FORECASTED`.",
            "subscriber": "(Required) A list of subscribers. See [Subscriber](#subscriber).",
            "action_threshold_type": "(Required) The type of threshold for a notification. Valid values are `PERCENTAGE` or `ABSOLUTE_VALUE`.",
            "action_threshold_value": "(Required) The threshold of a notification.",
            "address": "(Required) The address that AWS sends budget notifications to, either an SNS topic or an email.",
            "subscription_type": "(Required) The type of notification that AWS sends to a subscriber. Valid values are `SNS` or `EMAIL`.",
            "policy_arn": "(Required) The Amazon Resource Name (ARN) of the policy to be attached.",
            "policy_id": "(Required) The policy ID attached.",
            "action_sub_type": "(Required) The action subType. Valid values are `STOP_EC2_INSTANCES` or `STOP_RDS_INSTANCES`.",
            "instance_ids": "(Required) The EC2 and RDS instance IDs.",
            "region": "(Required) The Region to run the SSM document."
        },
        "connect_contact_flow_module": {
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "name": "(Required) Specifies the name of the Contact Flow Module."
        },
        "kinesis_analytics_application": {
            "name": "(Required) Name of the column.",
            "log_stream_arn": "(Required) The ARN of the CloudWatch Log Stream.",
            "role_arn": "(Required) The IAM Role ARN to read the data.",
            "name_prefix": "(Required) The Name Prefix to use when creating an in-application stream.",
            "schema": "(Required) The Schema format of the data in the streaming source. See [Source Schema](#source-schema) below for more details.",
            "table_name": "(Required) The in-application Table Name.",
            "resource_arn": "(Required) The ARN of the Lambda function.",
            "record_format_type": "(Required) The type of Record Format. Can be `CSV` or `JSON`.",
            "record_columns": "(Required) The Record Column mapping for the streaming source data element.",
            "record_format": "(Required) The Record Format and mapping information to schematize a record.",
            "count": "(Required) The Count of streams.",
            "lambda": "(Required) The Lambda function configuration. See [Lambda](#lambda) below for more details.",
            "starting_position": "(Required) The starting position on the stream. Valid values: `LAST_STOPPED_POINT`, `NOW`, `TRIM_HORIZON`.",
            "sql_type": "(Required) The SQL Type of the column.",
            "record_column_delimiter": "(Required) The Column Delimiter.",
            "record_row_delimiter": "(Required) The Row Delimiter.",
            "record_row_path": "(Required) Path to the top-level parent that contains the records.",
            "bucket_arn": "(Required) The S3 Bucket ARN.",
            "file_key": "(Required) The File Key name containing reference data."
        },
        "waf_size_constraint_set": {
            "name": "(Required) The name or description of the Size Constraint Set."
        },
        "api_gateway_documentation_part": {
            "location": "(Required) Location of the targeted API entity of the to-be-created documentation part. See below.",
            "properties": "(Required) Content map of API-specific key-value pairs describing the targeted API entity. The map must be encoded as a JSON string, e.g., \"{ \\\"description\\\": \\\"The API does ...\\\" }\". Only Swagger-compliant key-value pairs can be exported and, hence, published.",
            "rest_api_id": "(Required) ID of the associated Rest API",
            "type": "(Required) Type of API entity to which the documentation content appliesE.g., `API`, `METHOD` or `REQUEST_BODY`"
        },
        "elasticache_user_group": {
            "engine": "(Required) The current supported value is `REDIS`.",
            "user_group_id": "(Required) The ID of the user group."
        },
        "cloud9_environment_ec2": {
            "name": "(Required) The name of the environment.",
            "instance_type": "(Required) The type of instance to connect to the environment, e.g., `t2.micro`."
        },
        "ecr_registry_policy": {
            "policy": "(Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)"
        },
        "vpc_endpoint_security_group_association": {
            "security_group_id": "(Required) The ID of the security group to be associated with the VPC endpoint.",
            "vpc_endpoint_id": "(Required) The ID of the VPC endpoint with which the security group will be associated."
        },
        "ec2_subnet_cidr_reservation": {
            "cidr_block": "(Required) The CIDR block for the reservation.",
            "reservation_type": "(Required) The type of reservation to create. Valid values: `explicit`, `prefix`",
            "subnet_id": "(Required) The ID of the subnet to create the reservation for."
        },
        "ec2_transit_gateway_route_table_association": {
            "transit_gateway_attachment_id": "(Required) Identifier of EC2 Transit Gateway Attachment.",
            "transit_gateway_route_table_id": "(Required) Identifier of EC2 Transit Gateway Route Table."
        },
        "iot_thing_group_membership": {
            "thing_name": "(Required) The name of the thing to add to a group.",
            "thing_group_name": "(Required) The name of the group to which you are adding a thing."
        },
        "apprunner_connection": {
            "connection_name": "(Required) Name of the connection.",
            "provider_type": "(Required) Source repository provider. Valid values: `GITHUB`."
        },
        "backup_region_settings": {
            "resource_type_opt_in_preference": "(Required) A map of services along with the opt-in preferences for the Region."
        },
        "autoscaling_group_tag": {
            "autoscaling_group_name": "(Required) Name of the Autoscaling Group to apply the tag to.",
            "tag": "(Required) Tag to create. The `tag` block is documented below.",
            "key": "(Required) Tag name.",
            "value": "(Required) Tag value.",
            "propagate_at_launch": "(Required) Whether to propagate the tags to instances launched by the ASG."
        },
        "glue_crawler": {
            "path": "(Required) The path of the Amazon DocumentDB or MongoDB target (database/collection).",
            "connection_name": "(Required) The name of the connection to use to connect to the Amazon DocumentDB or MongoDB target.",
            "database_name": "(Required) The name of the Glue database to be synchronized.",
            "tables": "(Required) A list of catalog tables to be synchronized.",
            "paths": "(Required) One or more Amazon S3 paths that contains Iceberg metadata folders as s3://bucket/prefix.",
            "maximum_traversal_depth": "(Required) The maximum depth of Amazon S3 paths that the crawler can traverse to discover the Iceberg metadata folder in your Amazon S3 path. Used to limit the crawler run time. Valid values are between `1` and `20`.",
            "delta_tables": "(Required) A list of the Amazon S3 paths to the Delta tables.",
            "write_manifest": "(Required) Specifies whether to write the manifest files to the Delta table path."
        },
        "connect_user_hierarchy_group": {
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "name": "(Required) The name of the user hierarchy group. Must not be more than 100 characters."
        },
        "ses_receipt_rule_set": {
            "rule_set_name": "(Required) Name of the rule set."
        },
        "emrserverless_application": {
            "initial_capacity_type": "(Required) The worker type for an analytics framework. For Spark applications, the key can either be set to `Driver` or `Executor`. For Hive applications, it can be set to `HiveDriver` or `TezTask`.",
            "cpu": "(Required) The CPU requirements for every worker instance of the worker type.",
            "memory": "(Required) The memory requirements for every worker instance of the worker type.",
            "image_uri": "(Required) The image URI.",
            "worker_count": "(Required) The number of workers in the initial capacity configuration."
        },
        "codestarconnections_host": {
            "name": "(Required) The name of the host to be created. The name must be unique in the calling AWS account.",
            "provider_endpoint": "(Required) The endpoint of the infrastructure to be represented by the host after it is created.",
            "provider_type": "(Required) The name of the external provider where your third-party code repository is configured.",
            "security_group_ids": "(Required) ID of the security group or security groups associated with the Amazon VPC connected to the infrastructure where your provider type is installed.",
            "subnet_ids": "(Required) The ID of the subnet or subnets associated with the Amazon VPC connected to the infrastructure where your provider type is installed.",
            "vpc_id": "(Required) The ID of the Amazon VPC connected to the infrastructure where your provider type is installed."
        },
        "efs_mount_target": {
            "file_system_id": "(Required) The ID of the file system for which the mount target is intended.",
            "subnet_id": "(Required) The ID of the subnet to add the mount target in."
        },
        "db_proxy_target": {},
        "dx_gateway_association": {
            "dx_gateway_id": "(Required) The ID of the Direct Connect gateway."
        },
        "dx_hosted_private_virtual_interface": {
            "address_family": "(Required) The address family for the BGP peer. `ipv4 ` or `ipv6`.",
            "bgp_asn": "(Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.",
            "connection_id": "(Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.",
            "name": "(Required) The name for the virtual interface.",
            "owner_account_id": "(Required) The AWS account that will own the new virtual interface.",
            "vlan": "(Required) The VLAN ID."
        },
        "flow_log": {
            "traffic_type": "(Required) The type of traffic to capture. Valid values: `ACCEPT`,`REJECT`, `ALL`."
        },
        "appautoscaling_scheduled_action": {
            "name": "(Required) Name of the scheduled action.",
            "service_namespace": "(Required) Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs",
            "resource_id": "(Required) Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)",
            "scalable_dimension": "(Required) Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount",
            "scalable_target_action": "(Required) New minimum and maximum capacity. You can set both values or just one. See [below](#scalable-target-action-arguments)",
            "schedule": "(Required) Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)"
        },
        "appconfig_configuration_profile": {
            "name": "(Required) Name for the configuration profile. Must be between 1 and 64 characters in length."
        },
        "connect_security_profile": {
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "name": "(Required) Specifies the name of the Security Profile."
        },
        "redshift_cluster_iam_roles": {
            "cluster_identifier": "(Required) The name of the Redshift Cluster IAM Roles."
        },
        "pinpoint_apns_voip_sandbox_channel": {
            "application_id": "(Required) The application ID.",
            "certificate": "(Required) The pem encoded TLS Certificate from Apple.",
            "private_key": "(Required) The Certificate Private Key file (ie. `.key` file).",
            "bundle_id": "(Required) The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.",
            "team_id": "(Required) The ID assigned to your Apple developer account team. This value is provided on the Membership page.",
            "token_key": "(Required) The `.p8` file that you download from your Apple developer account when you create an authentication key.",
            "token_key_id": "(Required) The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section."
        },
        "config_configuration_recorder_status": {
            "name": "(Required) The name of the recorder",
            "is_enabled": "(Required) Whether the configuration recorder should be enabled or disabled."
        },
        "db_proxy_endpoint": {
            "db_proxy_endpoint_name": "(Required) The identifier for the proxy endpoint. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.",
            "db_proxy_name": "(Required) The name of the DB proxy associated with the DB proxy endpoint that you create.",
            "vpc_subnet_ids": "(Required) One or more VPC subnet IDs to associate with the new proxy."
        },
        "opsworks_rails_app_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "ram_sharing_with_organization": {},
        "ec2_transit_gateway_prefix_list_reference": {
            "prefix_list_id": "(Required) Identifier of EC2 Prefix List.",
            "transit_gateway_route_table_id": "(Required) Identifier of EC2 Transit Gateway Route Table."
        },
        "cloudwatch_event_bus_policy": {
            "policy": "(Required) The text of the policy. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "cloudwatch_log_destination_policy": {
            "destination_name": "(Required) A name for the subscription filter",
            "access_policy": "(Required) The policy document. This is a JSON formatted string."
        },
        "dx_gateway": {
            "name": "(Required) The name of the connection.",
            "amazon_side_asn": "(Required) The ASN to be configured on the Amazon side of the connection. The ASN must be in the private range of 64,512 to 65,534 or 4,200,000,000 to 4,294,967,294."
        },
        "docdb_event_subscription": {
            "sns_topic": "(Required) The SNS topic to send events to."
        },
        "iam_user_login_profile": {
            "user": "(Required) The IAM user's name."
        },
        "redshift_cluster_snapshot": {},
        "networkmanager_device": {
            "global_network_id": "(Required) The ID of the global network."
        },
        "cloudfront_origin_request_policy": {
            "name": "(Required) Unique name to identify the origin request policy.",
            "cookies_config": "(Required) Object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the origin request key and automatically included in requests that CloudFront sends to the origin. See [Cookies Config](#cookies-config) for more information.",
            "headers_config": "(Required) Object that determines whether any HTTP headers (and if so, which headers) are included in the origin request key and automatically included in requests that CloudFront sends to the origin. See [Headers Config](#headers-config) for more information.",
            "query_strings_config": "(Required) Object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the origin request key and automatically included in requests that CloudFront sends to the origin. See [Query String Config](#query-string-config) for more information."
        },
        "cloudwatch_dashboard": {
            "dashboard_name": "(Required) The name of the dashboard.",
            "dashboard_body": "(Required) The detailed information about the dashboard, including what widgets are included and their location on the dashboard. You can read more about the body structure in the [documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CloudWatch-Dashboard-Body-Structure.html)."
        },
        "vpc_dhcp_options_association": {
            "vpc_id": "(Required) The ID of the VPC to which we would like to associate a DHCP Options Set.",
            "dhcp_options_id": "(Required) The ID of the DHCP Options Set to associate to the VPC."
        },
        "iam_user": {
            "name": "(Required) The user's name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: `=,.@-_.`. User names are not distinguished by case. For example, you cannot create users named both \"TESTUSER\" and \"testuser\"."
        },
        "kms_custom_key_store": {
            "cloud_hsm_cluster_id": "(Required) Cluster ID of CloudHSM.",
            "custom_key_store_name": "(Required) Unique name for Custom Key Store.",
            "key_store_password": "(Required) Password for `kmsuser` on CloudHSM.",
            "trust_anchor_certificate": "(Required) Customer certificate used for signing on CloudHSM."
        },
        "networkmanager_connect_attachment": {},
        "nat_gateway": {
            "subnet_id": "(Required) The Subnet ID of the subnet in which to place the NAT Gateway."
        },
        "networkmanager_site_to_site_vpn_attachment": {},
        "route53_vpc_association_authorization": {
            "zone_id": "(Required) The ID of the private hosted zone that you want to authorize associating a VPC with.",
            "vpc_id": "(Required) The VPC to authorize for association with the private hosted zone."
        },
        "redshift_event_subscription": {
            "name": "(Required) The name of the Redshift event subscription.",
            "sns_topic_arn": "(Required) The ARN of the SNS topic to send events to."
        },
        "chime_voice_connector_origination": {
            "voice_connector_id": "(Required) The Amazon Chime Voice Connector ID.",
            "route": "(Required) Set of call distribution properties defined for your SIP hosts. See [route](#route) below for more details. Minimum of 1. Maximum of 20.",
            "host": "(Required) The FQDN or IP address to contact for origination traffic.",
            "port": "(Required) The designated origination route port. Defaults to `5060`.",
            "priority": "(Required) The priority associated with the host, with 1 being the highest priority. Higher priority hosts are attempted first.",
            "protocol": "(Required) The protocol to use for the origination route. Encryption-enabled Amazon Chime Voice Connectors use TCP protocol by default.",
            "weight": "(Required) The weight associated with the host. If hosts are equal in priority, calls are redistributed among them based on their relative weight."
        },
        "chime_voice_connector_termination_credentials": {
            "voice_connector_id": "(Required) Amazon Chime Voice Connector ID.",
            "credentials": "(Required) List of termination SIP credentials.",
            "username": "(Required) RFC2617 compliant username associated with the SIP credentials.",
            "password": "(Required) RFC2617 compliant password associated with the SIP credentials."
        },
        "globalaccelerator_accelerator": {
            "name": "(Required) The name of the accelerator."
        },
        "schemas_discoverer": {
            "source_arn": "(Required) The ARN of the event bus to discover event schemas on."
        },
        "wafregional_geo_match_set": {
            "name": "(Required) The name or description of the Geo Match Set."
        },
        "iam_group_membership": {
            "name": "(Required) The name to identify the Group Membership",
            "users": "(Required) A list of IAM User names to associate with the Group"
        },
        "msk_scram_secret_association": {
            "secret_arn_list": "(Required) List of AWS Secrets Manager secret ARNs."
        },
        "quicksight_group": {
            "group_name": "(Required) A name for the group."
        },
        "rds_cluster_endpoint": {
            "custom_endpoint_type": "(Required) The type of the endpoint. One of: READER , ANY ."
        },
        "elastictranscoder_preset": {},
        "spot_fleet_request": {
            "iam_fleet_role": "(Required) Grants the Spot fleet permission to terminate",
            "launch_template_specification": "(Required) Launch template specification. See [Launch Template Specification](#launch-template-specification) below for more details."
        },
        "backup_vault": {
            "name": "(Required) Name of the backup vault to create."
        },
        "macie2_classification_export_configuration": {
            "s3_destination": "(Required) Configuration block for a S3 Destination. Defined below",
            "bucket_name": "(Required) The Amazon S3 bucket name in which Amazon Macie exports the data classification results.",
            "kms_key_arn": "(Required) Amazon Resource Name (ARN) of the KMS key to be used to encrypt the data."
        },
        "iot_thing_type": {},
        "route53recoveryreadiness_recovery_group": {
            "recovery_group_name": "(Required) A unique name describing the recovery group."
        },
        "service_discovery_http_namespace": {
            "name": "(Required) The name of the http namespace."
        },
        "chimesdkmediapipelines_media_insights_pipeline_configuration": {
            "name": "(Required) Configuration name.",
            "resource_access_role_arn": "(Required) ARN of IAM Role used by service to invoke processors and sinks specified by configuration elements.",
            "elements": "(Required) Collection of processors and sinks to transform media and deliver data.",
            "type": "(Required) Rule type.",
            "language_code": "(Required) Language code for the transcription model.",
            "data_access_role_arn": "(Required) ARN of the role used by AWS Transcribe to upload your post call analysis.",
            "output_location": "(Required) The Amazon S3 location where you want your Call Analytics post-call transcription output stored.",
            "insights_target": "(Required) SQS queue to deliver results.",
            "destination": "(Required) S3 URI to deliver recordings.",
            "speaker_search_status": "(Required) Enable speaker search.",
            "voice_tone_analysis_status": "(Required) Enable voice tone analysis.",
            "rules": "(Required) Collection of real time alert rules",
            "rule_name": "(Required) Rule name.",
            "keywords": "(Required) Collection of keywords to match.",
            "sentiment_type": "(Required) Sentiment type to match."
        },
        "verifiedaccess_trust_provider": {
            "policy_reference_name": "(Required) The identifier to be used when working with policy rules.",
            "trust_provider_type": "(Required) The type of trust provider can be either user or device-based."
        },
        "db_option_group": {
            "engine_name": "(Required) Specifies the name of the engine that this option group should be associated with.",
            "major_engine_version": "(Required) Specifies the major version of the engine that this option group should be associated with.",
            "option_name": "(Required) Name of the option (e.g., MEMCACHED)."
        },
        "network_acl_rule": {
            "network_acl_id": "(Required) The ID of the network ACL.",
            "rule_number": "(Required) The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.",
            "protocol": "(Required) The protocol. A value of -1 means all protocols.",
            "rule_action": "(Required) Indicates whether to allow or deny the traffic that matches the rule. Accepted values: `allow` | `deny`"
        },
        "ami_copy": {
            "name": "(Required) Region-unique name for the AMI.",
            "source_ami_id": "(Required) Id of the AMI to copy. This id must be valid in the region",
            "source_ami_region": "(Required) Region from which the AMI will be copied. This may be the"
        },
        "appsync_api_cache": {
            "api_id": "(Required) GraphQL API ID.",
            "api_caching_behavior": "(Required) Caching behavior. Valid values are `FULL_REQUEST_CACHING` and `PER_RESOLVER_CACHING`.",
            "type": "(Required) Cache instance type. Valid values are `SMALL`, `MEDIUM`, `LARGE`, `XLARGE`, `LARGE_2X`, `LARGE_4X`, `LARGE_8X`, `LARGE_12X`, `T2_SMALL`, `T2_MEDIUM`, `R4_LARGE`, `R4_XLARGE`, `R4_2XLARGE`, `R4_4XLARGE`, `R4_8XLARGE`.",
            "ttl": "(Required) TTL in seconds for cache entries."
        },
        "acm_certificate": {
            "domain_name": "(Required) Domain name for which the certificate should be issued.",
            "private_key": "(Required) Certificate's PEM-formatted private key",
            "certificate_body": "(Required) Certificate's PEM-formatted public key",
            "certificate_authority_arn": "(Required) ARN of an ACM PCA"
        },
        "rds_cluster_parameter_group": {
            "family": "(Required) The family of the DB cluster parameter group.",
            "name": "(Required) The name of the DB parameter.",
            "value": "(Required) The value of the DB parameter."
        },
        "load_balancer_policy": {
            "load_balancer_name": "(Required) The load balancer on which the policy is defined.",
            "policy_name": "(Required) The name of the load balancer policy.",
            "policy_type_name": "(Required) The policy type."
        },
        "default_subnet": {},
        "ec2_traffic_mirror_filter_rule": {
            "destination_cidr_block": "(Required) Destination CIDR block to assign to the Traffic Mirror rule.",
            "rule_action": "(Required) Action to take (accept | reject) on the filtered traffic. Valid values are `accept` and `reject`",
            "rule_number": "(Required) Number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.",
            "source_cidr_block": "(Required) Source CIDR block to assign to the Traffic Mirror rule.",
            "traffic_direction": "(Required) Direction of traffic to be captured. Valid values are `ingress` and `egress`"
        },
        "iam_user_policy": {
            "policy": "(Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).",
            "user": "(Required) IAM user to which to attach this policy."
        },
        "lakeformation_resource": {},
        "cognito_resource_server": {
            "identifier": "(Required) An identifier for the resource server.",
            "name": "(Required) A name for the resource server.",
            "scope_name": "(Required) The scope name.",
            "scope_description": "(Required) The scope description."
        },
        "docdb_cluster": {},
        "iam_account_password_policy": {},
        "secretsmanager_secret_version": {
            "secret_id": "(Required) Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist."
        },
        "ecr_lifecycle_policy": {
            "repository": "(Required) Name of the repository to apply the policy.",
            "policy": "(Required) The policy document. This is a JSON formatted string. See more details about [Policy Parameters](http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html#lifecycle_policy_parameters) in the official AWS docs."
        },
        "storagegateway_cached_iscsi_volume": {
            "gateway_arn": "(Required) The Amazon Resource Name (ARN) of the gateway.",
            "network_interface_id": "(Required) The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted.",
            "target_name": "(Required) The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. The target name must be unique across all volumes of a gateway.",
            "volume_size_in_bytes": "(Required) The size of the volume in bytes."
        },
        "api_gateway_documentation_version": {
            "version": "(Required) Version identifier of the API documentation snapshot.",
            "rest_api_id": "(Required) ID of the associated Rest API"
        },
        "directory_service_region": {
            "directory_id": "(Required) The identifier of the directory to which you want to add Region replication.",
            "region_name": "(Required) The name of the Region where you want to add domain controllers for replication.",
            "vpc_settings": "(Required) VPC information in the replicated Region. Detailed below.",
            "subnet_ids": "(Required) The identifiers of the subnets for the directory servers."
        },
        "cognito_user_in_group": {
            "user_pool_id": "(Required) The user pool ID of the user and group.",
            "group_name": "(Required) The name of the group to which the user is to be added.",
            "username": "(Required) The username of the user to be added to the group."
        },
        "eip": {},
        "macie2_organization_admin_account": {
            "admin_account_id": "(Required) The AWS account ID for the account to designate as the delegated Amazon Macie administrator account for the organization."
        },
        "athena_workgroup": {
            "name": "(Required) Name of the workgroup.",
            "s3_acl_option": "(Required) Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is `BUCKET_OWNER_FULL_CONTROL`.",
            "encryption_option": "(Required) Whether Amazon S3 server-side encryption with Amazon S3-managed keys (`SSE_S3`), server-side encryption with KMS-managed keys (`SSE_KMS`), or client-side encryption with KMS-managed keys (`CSE_KMS`) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup."
        },
        "cloudformation_stack_set": {
            "name": "(Required) Name of the StackSet. The name must be unique in the region where you create your StackSet. The name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters."
        },
        "apigatewayv2_authorizer": {
            "api_id": "(Required) API identifier.",
            "authorizer_type": "(Required) Authorizer type. Valid values: `JWT`, `REQUEST`.",
            "name": "(Required) Name of the authorizer. Must be between 1 and 128 characters in length."
        },
        "placement_group": {
            "name": "(Required) The name of the placement group.",
            "strategy": "(Required) The placement strategy. Can be `cluster`, `partition` or `spread`."
        },
        "ce_anomaly_monitor": {
            "name": "(Required) The name of the monitor.",
            "monitor_type": "(Required) The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`."
        },
        "cloudsearch_domain_service_access_policy": {
            "access_policy": "(Required) The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.",
            "domain_name": "(Required) The CloudSearch domain name the policy applies to."
        },
        "connect_vocabulary": {
            "content": "(Required) The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.",
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "language_code": "(Required) The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.",
            "name": "(Required) A unique name of the custom vocabulary. Must not be more than 140 characters."
        },
        "sagemaker_model_package_group": {
            "model_package_group_name": "(Required) The name of the model group."
        },
        "iam_policy_attachment": {},
        "sagemaker_device": {
            "device_fleet_name": "(Required) The name of the Device Fleet.",
            "device": "(Required) The device to register with SageMaker Edge Manager. See [Device](#device) details below.",
            "description": "(Required) A description for the device."
        },
        "ebs_snapshot_copy": {},
        "glue_catalog_database": {
            "name": "(Required) Name of the database. The acceptable characters are lowercase letters, numbers, and the underscore character."
        },
        "cloudfront_realtime_log_config": {
            "endpoint": "(Required) The Amazon Kinesis data streams where real-time log data is sent.",
            "fields": "(Required) The fields that are included in each real-time log record. See the [AWS documentation](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) for supported values.",
            "name": "(Required) The unique name to identify this real-time log configuration.",
            "sampling_rate": "(Required) The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. An integer between `1` and `100`, inclusive.",
            "kinesis_stream_config": "(Required) The Amazon Kinesis data stream configuration.",
            "stream_type": "(Required) The type of data stream where real-time log data is sent. The only valid value is `Kinesis`.",
            "role_arn": "(Required) The ARN of an [IAM role](iam_role.html) that CloudFront can use to send real-time log data to the Kinesis data stream.",
            "stream_arn": "(Required) The ARN of the [Kinesis data stream](kinesis_stream.html)."
        },
        "ec2_transit_gateway_policy_table": {
            "transit_gateway_id": "(Required) EC2 Transit Gateway identifier."
        },
        "iot_policy": {
            "name": "(Required) The name of the policy.",
            "policy": "(Required) The policy document. This is a JSON formatted string. Use the [IoT Developer Guide](http://docs.aws.amazon.com/iot/latest/developerguide/iot-policies.html) for more information on IoT Policies. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "ce_cost_category": {
            "name": "(Required) Unique name for the Cost Category.",
            "rule": "(Required) Configuration block for the Cost Category rules used to categorize costs. See below.",
            "rule_version": "(Required) Rule schema version in this particular Cost Category.",
            "method": "(Required) Method that's used to define how to split your source costs across your targets. Valid values are `FIXED`, `PROPORTIONAL`, `EVEN`",
            "source": "(Required) Cost Category value that you want to split.",
            "targets": "(Required) Cost Category values that you want to split costs across. These values can't be used as a source in other split charge rules."
        },
        "ecs_cluster_capacity_providers": {
            "capacity_provider": "(Required) Name of the capacity provider."
        },
        "appconfig_environment": {
            "name": "(Required) Name for the environment. Must be between 1 and 64 characters in length.",
            "alarm_arn": "(Required) ARN of the Amazon CloudWatch alarm."
        },
        "dynamodb_table_replica": {
            "global_table_arn": "(Required) ARN of the _main_ or global table which this resource will replicate."
        },
        "networkfirewall_firewall_policy": {
            "firewall_policy": "(Required) A configuration block describing the rule groups and policy actions to use in the firewall policy. See [Firewall Policy](#firewall-policy) below for details.",
            "type": "(Required) The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.",
            "stateless_default_actions": "(Required) Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.",
            "stateless_fragment_default_actions": "(Required) Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.",
            "key": "(Required) An alphanumeric string to identify the `ip_set`. Valid values: `HOME_NET`",
            "ip_set": "(Required) A configuration block that defines a set of IP addresses. See [IP Set](#ip-set) below for details.",
            "definition": "(Required) Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata `HOME_NET` variable.",
            "resource_arn": "(Required) The Amazon Resource Name (ARN) of the stateless rule group.",
            "action_definition": "(Required) A configuration block describing the custom action associated with the `action_name`. See [Action Definition](#action-definition) below for details.",
            "priority": "(Required) An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.",
            "publish_metric_action": "(Required) A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See [Publish Metric Action](#publish-metric-action) below for details.",
            "dimension": "(Required) Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See [Dimension](#dimension) below for more details.",
            "value": "(Required) The string value to use in the custom metric dimension."
        },
        "scheduler_schedule_group": {},
        "pinpoint_apns_voip_channel": {
            "application_id": "(Required) The application ID.",
            "certificate": "(Required) The pem encoded TLS Certificate from Apple.",
            "private_key": "(Required) The Certificate Private Key file (ie. `.key` file).",
            "bundle_id": "(Required) The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.",
            "team_id": "(Required) The ID assigned to your Apple developer account team. This value is provided on the Membership page.",
            "token_key": "(Required) The `.p8` file that you download from your Apple developer account when you create an authentication key.",
            "token_key_id": "(Required) The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section."
        },
        "securityhub_invite_accepter": {
            "master_id": "(Required) The account ID of the master Security Hub account whose invitation you're accepting."
        },
        "appsync_function": {
            "api_id": "(Required) ID of the associated AppSync API.",
            "data_source": "(Required) Function data source name.",
            "name": "(Required) Function name. The function name does not have to be unique."
        },
        "db_instance_automated_backups_replication": {},
        "route53_resolver_firewall_rule_group_association": {
            "name": "(Required) A name that lets you identify the rule group association, to manage and use it.",
            "firewall_rule_group_id": "(Required) The unique identifier of the firewall rule group.",
            "priority": "(Required) The setting that determines the processing order of the rule group among the rule groups that you associate with the specified VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting.",
            "vpc_id": "(Required) The unique identifier of the VPC that you want to associate with the rule group."
        },
        "servicecatalog_constraint": {
            "parameters": "(Required) Constraint parameters in JSON format. The syntax depends on the constraint type. See details below.",
            "portfolio_id": "(Required) Portfolio identifier.",
            "product_id": "(Required) Product identifier.",
            "type": "(Required) Type of constraint. Valid values are `LAUNCH`, `NOTIFICATION`, `RESOURCE_UPDATE`, `STACKSET`, and `TEMPLATE`."
        },
        "cloudwatch_log_group": {},
        "route53recoverycontrolconfig_control_panel": {
            "cluster_arn": "(Required) ARN of the cluster in which this control panel will reside.",
            "name": "(Required) Name describing the control panel."
        },
        "vpc_dhcp_options": {},
        "fsx_ontap_volume": {
            "name": "(Required) Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are `SNAPSHOT_ONLY`, `AUTO`, `ALL`, `NONE`. Default value is `SNAPSHOT_ONLY`.",
            "size_in_megabytes": "(Required) Specifies the size of the volume, in megabytes (MB), that you are creating.",
            "storage_virtual_machine_id": "(Required) Specifies the storage virtual machine in which to create the volume.",
            "snaplock_type": "(Required) Specifies the retention mode of an FSx for ONTAP SnapLock volume. After it is set, it can't be changed. Valid values: `COMPLIANCE`, `ENTERPRISE`.",
            "type": "(Required) The type of time for the retention period of an FSx for ONTAP SnapLock volume. Set it to one of the valid types. If you set it to `INFINITE`, the files are retained forever. If you set it to `UNSPECIFIED`, the files are retained until you set an explicit retention period. Valid values: `SECONDS`, `MINUTES`, `HOURS`, `DAYS`, `MONTHS`, `YEARS`, `INFINITE`, `UNSPECIFIED`.",
            "default_retention": "(Required) The retention period assigned to a write once, read many (WORM) file by default if an explicit retention period is not set for an FSx for ONTAP SnapLock volume. The default retention period must be greater than or equal to the minimum retention period and less than or equal to the maximum retention period. See [Retention Period](#retention-period) below.",
            "maximum_retention": "(Required) The longest retention period that can be assigned to a WORM file on an FSx for ONTAP SnapLock volume. See [Retention Period](#retention-period) below.",
            "minimum_retention": "(Required) The shortest retention period that can be assigned to a WORM file on an FSx for ONTAP SnapLock volume. See [Retention Period](#retention-period) below."
        },
        "scheduler_schedule": {
            "flexible_time_window": "(Required) Configures a time window during which EventBridge Scheduler invokes the schedule. Detailed below.",
            "schedule_expression": "(Required) Defines when the schedule runs. Read more in [Schedule types on EventBridge Scheduler](https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html).",
            "target": "(Required) Configures the target of the schedule. Detailed below.",
            "mode": "(Required) Determines whether the schedule is invoked within a flexible time window. One of: `OFF`, `FLEXIBLE`.",
            "arn": "(Required) ARN of the SQS queue specified as the destination for the dead-letter queue.",
            "role_arn": "(Required) ARN of the IAM role that EventBridge Scheduler will use for this target when the schedule is invoked. Read more in [Set up the execution role](https://docs.aws.amazon.com/scheduler/latest/UserGuide/setting-up.html#setting-up-execution-role).",
            "task_definition_arn": "(Required) ARN of the task definition to use.",
            "capacity_provider": "(Required) Short name of the capacity provider.",
            "type": "(Required) The type of placement strategy. One of: `random`, `spread`, `binpack`.",
            "detail_type": "(Required) Free-form string used to decide what fields to expect in the event detail. Up to 128 characters.",
            "source": "(Required) Source of the event.",
            "partition_key": "(Required) Specifies the shard to which EventBridge Scheduler sends the event. Up to 256 characters.",
            "name": "(Required) Name of parameter to start execution of a SageMaker Model Building Pipeline.",
            "value": "(Required) Value of parameter to start execution of a SageMaker Model Building Pipeline."
        },
        "cloudwatch_log_resource_policy": {
            "policy_document": "(Required) Details of the resource policy, including the identity of the principal that is enabled to put logs to this account. This is formatted as a JSON string. Maximum length of 5120 characters.",
            "policy_name": "(Required) Name of the resource policy."
        },
        "ec2_transit_gateway_vpc_attachment_accepter": {
            "transit_gateway_attachment_id": "(Required) The ID of the EC2 Transit Gateway Attachment to manage."
        },
        "resourceexplorer2_index": {
            "type": "(Required) The type of the index. Valid values: `AGGREGATOR`, `LOCAL`. To understand the difference between `LOCAL` and `AGGREGATOR`, see the [_AWS Resource Explorer User Guide_](https://docs.aws.amazon.com/resource-explorer/latest/userguide/manage-aggregator-region.html)."
        },
        "dx_connection_confirmation": {
            "connection_id": "(Required) The ID of the hosted connection."
        },
        "ivschat_logging_configuration": {
            "destination_configuration": "(Required) Object containing destination configuration for where chat activity will be logged. This object must contain exactly one of the following children arguments:"
        },
        "licensemanager_association": {
            "license_configuration_arn": "(Required) ARN of the license configuration.",
            "resource_arn": "(Required) ARN of the resource associated with the license configuration."
        },
        "redshift_endpoint_authorization": {
            "account": "(Required) The Amazon Web Services account ID to grant access to.",
            "cluster_identifier": "(Required) The cluster identifier of the cluster to grant access to."
        },
        "wafregional_size_constraint_set": {
            "name": "(Required) The name or description of the Size Constraint Set."
        },
        "lexv2models_bot": {},
        "quicksight_iam_policy_assignment": {
            "assignment_name": "(Required) Name of the assignment.",
            "assignment_status": "(Required) Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`."
        },
        "transfer_user": {
            "server_id": "(Required) The Server ID of the Transfer Server (e.g., `s-12345678`)",
            "user_name": "(Required) The name used for log in to your SFTP server.",
            "role": "(Required) Amazon Resource Name (ARN) of an IAM role that allows the service to control your user’s access to your Amazon S3 bucket.",
            "entry": "(Required) Represents an entry and a target.",
            "target": "(Required) Represents the map target.",
            "gid": "(Required) The POSIX group ID used for all EFS operations by this user.",
            "uid": "(Required) The POSIX user ID used for all EFS operations by this user."
        },
        "redshift_parameter_group": {
            "name": "(Required) The name of the Redshift parameter.",
            "family": "(Required) The family of the Redshift parameter group.",
            "value": "(Required) The value of the Redshift parameter."
        },
        "synthetics_canary": {
            "artifact_s3_location": "(Required) Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.",
            "execution_role_arn": "(Required) ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.",
            "handler": "(Required) Entry point to use for the source code when running the canary. This value must end with the string `.handler` .",
            "name": "(Required) Name for this canary. Has a maximum length of 21 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.",
            "runtime_version": "(Required) Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.",
            "schedule": {
                "expression": "(Required) Rate expression or cron expression that defines how often the canary is to run. For rate expression, the syntax is `rate(number unit)`. _unit_ can be `minute`, `minutes`, or `hour`. For cron expression, the syntax is `cron(expression)`. For more information about the syntax for cron expressions, see [Scheduling canary runs using cron](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_cron.html)."
            }
        },
        "fsx_openzfs_file_system": {
            "deployment_type": "(Required) - The filesystem deployment type. Valid values: `SINGLE_AZ_1`, `SINGLE_AZ_2` and `MULTI_AZ_1`.",
            "storage_capacity": "(Required) The storage capacity (GiB) of the file system. Valid values between `64` and `524288`.",
            "subnet_ids": "(Required) A list of IDs for the subnets that the file system will be accessible from.",
            "throughput_capacity": "(Required) Throughput (MB/s) of the file system. Valid values depend on `deployment_type`. Must be one of `64`, `128`, `256`, `512`, `1024`, `2048`, `3072`, `4096` for `SINGLE_AZ_1`. Must be one of `160`, `320`, `640`, `1280`, `2560`, `3840`, `5120`, `7680`, `10240` for `SINGLE_AZ_2`.",
            "client_configurations": "(Required) - A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See [Client Configurations](#client configurations) Below.",
            "clients": "(Required) - A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.",
            "options": "(Required) -  The options to use when mounting the file system. Maximum of 20 items. See the [Linix NFS exports man page](https://linux.die.net/man/5/exports) for more information. `crossmount` and `sync` are used by default.",
            "id": "(Required) - The ID of the user or group. Valid values between `0` and `2147483647`",
            "storage_capacity_quota_gib": "(Required) - The amount of storage that the user or group can use in gibibytes (GiB). Valid values between `0` and `2147483647`",
            "type": "(Required) - A value that specifies whether the quota applies to a user or group. Valid values are `USER` or `GROUP`."
        },
        "kms_replica_key": {
            "primary_key_arn": "(Required) The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region."
        },
        "lb_listener": {
            "default_action": {
                "type": "(Required) Type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.",
                "user_pool_arn": "(Required) ARN of the Cognito user pool.",
                "user_pool_client_id": "(Required) ID of the Cognito user pool client.",
                "user_pool_domain": "(Required) Domain prefix or fully-qualified domain name of the Cognito user pool.",
                "key": "(Required) Key of query parameter.",
                "value": "(Required) Value of query parameter.",
                "authorization_endpoint": "(Required) Authorization endpoint of the IdP.",
                "client_id": "(Required) OAuth 2.0 client identifier.",
                "client_secret": "(Required) OAuth 2.0 client secret.",
                "issuer": "(Required) OIDC issuer identifier of the IdP.",
                "token_endpoint": "(Required) Token endpoint of the IdP.",
                "user_info_endpoint": "(Required) User info endpoint of the IdP.",
                "content_type": "(Required) Content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.",
                "target_group": "(Required) Set of 1-5 target group blocks. Detailed below.",
                "arn": "(Required) ARN of the target group.",
                "duration": "(Required) Time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).",
                "status_code": "(Required) HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`)."
            }
        },
        "rds_reserved_instance": {
            "offering_id": "(Required) ID of the Reserved DB instance offering to purchase. To determine an `offering_id`, see the `aws_rds_reserved_instance_offering` data source."
        },
        "comprehend_entity_recognizer": {
            "data_access_role_arn": "(Required) The ARN for an IAM Role which allows Comprehend to read the training and testing data.",
            "input_data_config": "(Required) Configuration for the training and testing data.",
            "language_code": "(Required) Two-letter language code for the language.",
            "name": "(Required) Name for the Entity Recognizer.",
            "entity_types": "(Required) Set of entity types to be recognized.",
            "s3_uri": "(Required) Location of entity list.",
            "attribute_names": "(Required) The JSON attribute that contains the annotations for the training documents.",
            "type": "(Required) An entity type to be matched by the Entity Recognizer.",
            "security_group_ids": "(Required) List of security group IDs.",
            "subnets": "(Required) List of VPC subnets."
        },
        "networkmanager_attachment_accepter": {},
        "shield_drt_access_log_bucket_association": {
            "log_bucket": "(Required) The Amazon S3 bucket that contains the logs that you want to share.",
            "role_arn_association_id": "(Required) The ID of the Role Arn association used for allowing Shield DRT Access."
        },
        "ec2_managed_prefix_list_entry": {
            "cidr": "(Required) CIDR block of this entry.",
            "prefix_list_id": "(Required) CIDR block of this entry."
        },
        "imagebuilder_image_pipeline": {
            "infrastructure_configuration_arn": "(Required) Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.",
            "name": "(Required) Name of the image pipeline."
        },
        "route53_resolver_rule_association": {
            "resolver_rule_id": "(Required) The ID of the resolver rule that you want to associate with the VPC.",
            "vpc_id": "(Required) The ID of the VPC that you want to associate the resolver rule with."
        },
        "memorydb_snapshot": {},
        "quicksight_data_set": {
            "import_mode": "(Required) Indicates whether you want to import the data into SPICE. Valid values are `SPICE` and `DIRECT_QUERY`.",
            "physical_table_map": {
                "physical_table_map_id": "(Required) Key of the physical table map."
            },
            "input_columns": {
                "name": "(Required) Name of this column in the underlying data source.",
                "type": "(Required) Data type of the column."
            },
            "columns": {
                "column_id": "(Required) A unique ID to identify a calculated column. During a dataset update, if the column ID of a calculated column matches that of an existing calculated column, Amazon QuickSight preserves the existing calculated column.",
                "column_name": "(Required) Column name.",
                "expression": "(Required) An expression that defines the calculated column."
            },
            "tag_rules": {
                "column_name": "(Required) Column name that a tag key is assigned to.",
                "tag_key": "(Required) Unique key for a tag."
            },
            "refresh_configuration": {
                "incremental_refresh": "(Required) The incremental refresh for the data set. See [incremental_refresh](#incremental_refresh)."
            },
            "incremental_refresh": {
                "lookback_window": "(Required) The lookback window setup for an incremental refresh configuration. See [lookback_window](#lookback_window)."
            },
            "lookback_window": {
                "column_name": "(Required) The name of the lookback window column.",
                "size": "(Required) The lookback window column size.",
                "size_unit": "(Required) The size unit that is used for the lookback window column. Valid values for this structure are `HOUR`, `DAY`, and `WEEK`."
            }
        },
        "redshift_scheduled_action": {
            "name": "(Required) The scheduled action name.",
            "schedule": "(Required) The schedule of action. The schedule is defined format of \"at expression\" or \"cron expression\", for example `at(2016-03-04T17:27:00)` or `cron(0 10 ? * MON *)`. See [Scheduled Action](https://docs.aws.amazon.com/redshift/latest/APIReference/API_ScheduledAction.html) for more information.",
            "iam_role": "(Required) The IAM role to assume to run the scheduled action.",
            "target_action": "(Required) Target action. Documented below.",
            "cluster_identifier": "(Required) The identifier of the cluster to be resumed."
        },
        "vpc_peering_connection_options": {
            "vpc_peering_connection_id": "(Required) The ID of the requester VPC peering connection."
        },
        "opsworks_ecs_cluster_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "ecs_cluster_arn": "(Required) The ECS Cluster ARN of the layer.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "route_table": {
            "vpc_id": "(Required) The VPC ID.",
            "cidr_block": "(Required) The CIDR block of the route."
        },
        "appstream_fleet": {
            "compute_capacity": "(Required) Configuration block for the desired capacity of the fleet. See below.",
            "instance_type": "(Required) Instance type to use when launching fleet instances.",
            "name": "(Required) Unique name for the fleet.",
            "desired_instances": "(Required) Desired number of streaming instances."
        },
        "cloudwatch_log_data_protection_policy": {
            "log_group_name": "(Required) The name of the log group under which the log stream is to be created.",
            "policy_document": "(Required) Specifies the data protection policy in JSON. Read more at [Data protection policy syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/mask-sensitive-log-data-start.html#mask-sensitive-log-data-policysyntax)."
        },
        "cur_report_definition": {
            "report_name": "(Required) Unique name for the report. Must start with a number/letter and is case sensitive. Limited to 256 characters.",
            "time_unit": "(Required) The frequency on which report data are measured and displayed.  Valid values are: `DAILY`, `HOURLY`, `MONTHLY`.",
            "format": "(Required) Format for report. Valid values are: `textORcsv`, `Parquet`. If `Parquet` is used, then Compression must also be `Parquet`.",
            "compression": "(Required) Compression format for report. Valid values are: `GZIP`, `ZIP`, `Parquet`. If `Parquet` is used, then format must also be `Parquet`.",
            "additional_schema_elements": "(Required) A list of schema elements. Valid values are: `RESOURCES`, `SPLIT_COST_ALLOCATION_DATA`.",
            "s3_bucket": "(Required) Name of the existing S3 bucket to hold generated reports.",
            "s3_region": "(Required) Region of the existing S3 bucket to hold generated reports.",
            "additional_artifacts": "(Required) A list of additional artifacts. Valid values are: `REDSHIFT`, `QUICKSIGHT`, `ATHENA`. When ATHENA exists within additional_artifacts, no other artifact type can be declared and report_versioning must be `OVERWRITE_REPORT`."
        },
        "opensearchserverless_security_policy": {
            "name": "(Required) Name of the policy.",
            "policy": "(Required) JSON policy document to use as the content for the new policy",
            "type": "(Required) Type of security policy. One of `encryption` or `network`."
        },
        "route": {
            "route_table_id": "(Required) The ID of the routing table."
        },
        "apigatewayv2_domain_name": {
            "domain_name": "(Required) Domain name. Must be between 1 and 512 characters in length.",
            "domain_name_configuration": "(Required) Domain name configuration. See below.",
            "certificate_arn": "(Required) ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source. Use the [`aws_acm_certificate`](/docs/providers/aws/r/acm_certificate.html) resource to configure an ACM certificate.",
            "endpoint_type": "(Required) Endpoint type. Valid values: `REGIONAL`.",
            "security_policy": "(Required) Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.",
            "truststore_uri": "(Required) Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, `s3://bucket-name/key-name`. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version."
        },
        "appsync_api_key": {
            "api_id": "(Required) ID of the associated AppSync API"
        },
        "auditmanager_assessment_report": {
            "name": "(Required) Name of the assessment report.",
            "assessment_id": "(Required) Unique identifier of the assessment to create the report from."
        },
        "ssm_maintenance_window_target": {
            "window_id": "(Required) The Id of the maintenance window to register the target with.",
            "resource_type": "(Required) The type of target being registered with the Maintenance Window. Possible values are `INSTANCE` and `RESOURCE_GROUP`.",
            "targets": "(Required) The targets to register with the maintenance window. In other words, the instances to run commands on when the maintenance window runs. You can specify targets using instance IDs, resource group names, or tags that have been applied to instances. For more information about these examples formats see"
        },
        "worklink_fleet": {
            "name": "(Required) A region-unique name for the AMI.",
            "vpc_id": "(Required) The VPC ID with connectivity to associated websites.",
            "subnet_ids": "(Required) A list of subnet IDs used for X-ENI connections from Amazon WorkLink rendering containers.",
            "security_group_ids": "(Required) A list of security group IDs associated with access to the provided subnets.",
            "type": "(Required) The type of identity provider.",
            "saml_metadata": "(Required) The SAML metadata document provided by the customer’s identity provider."
        },
        "amplify_app": {
            "name": "(Required) Name for an Amplify app.",
            "source": "(Required) Source pattern for a URL rewrite or redirect rule.",
            "target": "(Required) Target pattern for a URL rewrite or redirect rule."
        },
        "chime_voice_connector": {
            "name": "(Required) The name of the Amazon Chime Voice Connector.",
            "require_encryption": "(Required) When enabled, requires encryption for the Amazon Chime Voice Connector."
        },
        "iam_virtual_mfa_device": {
            "virtual_mfa_device_name": "(Required) The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device."
        },
        "servicecatalog_provisioning_artifact": {
            "product_id": "(Required) Identifier of the product."
        },
        "mskconnect_connector": {
            "capacity": "(Required) Information about the capacity allocated to the connector. See below.",
            "connector_configuration": "(Required) A map of keys to values that represent the configuration for the connector.",
            "kafka_cluster": "(Required) Specifies which Apache Kafka cluster to connect to. See below.",
            "kafka_cluster_client_authentication": "(Required) Details of the client authentication used by the Apache Kafka cluster. See below.",
            "kafka_cluster_encryption_in_transit": "(Required) Details of encryption in transit to the Apache Kafka cluster. See below.",
            "kafkaconnect_version": "(Required) The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.",
            "name": "(Required) The name of the connector.",
            "plugin": "(Required) Specifies which plugins to use for the connector. See below.",
            "service_execution_role_arn": "(Required) The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.",
            "max_worker_count": "(Required) The maximum number of workers allocated to the connector.",
            "min_worker_count": "(Required) The minimum number of workers allocated to the connector.",
            "cpu_utilization_percentage": "(Required) The CPU utilization percentage threshold at which you want connector scale out to be triggered.",
            "worker_count": "(Required) The number of workers that are allocated to the connector.",
            "apache_kafka_cluster": "(Required) The Apache Kafka cluster to which the connector is connected.",
            "bootstrap_servers": "(Required) The bootstrap servers of the cluster.",
            "vpc": "(Required) Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.",
            "security_groups": "(Required) The security groups for the connector.",
            "subnets": "(Required) The subnets for the connector.",
            "worker_log_delivery": "(Required) The workers can send worker logs to different destination types. This configuration specifies the details of these destinations. See below.",
            "log_group": "(Required) The name of the CloudWatch log group that is the destination for log delivery.",
            "enabled": "(Required) Specifies whether connector logs get sent to the specified Amazon S3 destination.",
            "custom_plugin": "(Required) Details about a custom plugin. See below.",
            "arn": "(Required) The Amazon Resource Name (ARN) of the worker configuration.",
            "revision": "(Required) The revision of the worker configuration."
        },
        "networkmanager_core_network": {
            "global_network_id": "(Required) The ID of the global network that a core network will be a part of."
        },
        "api_gateway_method_settings": {
            "rest_api_id": "(Required) ID of the REST API",
            "stage_name": "(Required) Name of the stage",
            "method_path": "(Required) Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, \"/\")`).",
            "settings": "(Required) Settings block, see below."
        },
        "networkmanager_transit_gateway_connect_peer_association": {
            "device_id": "(Required) The ID of the device.",
            "global_network_id": "(Required) The ID of the global network.",
            "transit_gateway_connect_peer_arn": "(Required) The Amazon Resource Name (ARN) of the Connect peer."
        },
        "securityhub_standards_subscription": {
            "standards_arn": "(Required) The ARN of a standard - see below."
        },
        "api_gateway_rest_api": {
            "name": "(Required) Name of the REST API. If importing an OpenAPI specification via the `body` argument, this corresponds to the `info.title` field. If the argument value is different than the OpenAPI value, the argument value will override the OpenAPI value."
        },
        "redshiftserverless_usage_limit": {
            "amount": "(Required) The limit amount. If time-based, this amount is in Redshift Processing Units (RPU) consumed per hour. If data-based, this amount is in terabytes (TB) of data transferred between Regions in cross-account sharing. The value must be a positive number.",
            "resource_arn": "(Required) The Amazon Resource Name (ARN) of the Amazon Redshift Serverless resource to create the usage limit for.",
            "usage_type": "(Required) The type of Amazon Redshift Serverless usage to create a usage limit for. Valid values are `serverless-compute` or `cross-region-datasharing`."
        },
        "sagemaker_notebook_instance": {
            "name": "(Required) The name of the notebook instance (must be unique).",
            "role_arn": "(Required) The ARN of the IAM role to be used by the notebook instance which allows SageMaker to call other services on your behalf.",
            "instance_type": "(Required) The name of ML compute instance type."
        },
        "ec2_transit_gateway_policy_table_association": {
            "transit_gateway_attachment_id": "(Required) Identifier of EC2 Transit Gateway Attachment.",
            "transit_gateway_policy_table_id": "(Required) Identifier of EC2 Transit Gateway Policy Table."
        },
        "budgets_budget": {
            "budget_type": "(Required) Whether this budget tracks monetary cost or usage.",
            "limit_amount": "(Required) The amount of cost or usage being measured for a budget.",
            "limit_unit": "(Required) The unit of measurement used for the budget forecast, actual spend, or budget threshold, such as dollars or GB. See [Spend](http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/data-type-spend.html) documentation.",
            "time_unit": "(Required) The length of time until a budget resets the actual and forecasted spend. Valid values: `MONTHLY`, `QUARTERLY`, `ANNUALLY`, and `DAILY`."
        },
        "ec2_transit_gateway_multicast_group_source": {
            "group_ip_address": "(Required) The IP address assigned to the transit gateway multicast group.",
            "network_interface_id": "(Required) The group members' network interface ID to register with the transit gateway multicast group.",
            "transit_gateway_multicast_domain_id": "(Required) The ID of the transit gateway multicast domain."
        },
        "iam_service_linked_role": {},
        "neptune_cluster_instance": {
            "cluster_identifier": "(Required) The identifier of the [`aws_neptune_cluster`](/docs/providers/aws/r/neptune_cluster.html) in which to launch this instance.",
            "instance_class": "(Required) The instance class to use."
        },
        "pinpoint_email_channel": {
            "application_id": "(Required) The application ID.",
            "from_address": "(Required) The email address used to send emails from. You can use email only (`user@example.com`) or friendly address (`User <user@example.com>`). This field comply with [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt).",
            "identity": "(Required) The ARN of an identity verified with SES."
        },
        "route_table_association": {
            "route_table_id": "(Required) The ID of the routing table to associate with."
        },
        "amplify_branch": {
            "app_id": "(Required) Unique ID for an Amplify app.",
            "branch_name": "(Required) Name for the branch."
        },
        "ivs_playback_key_pair": {
            "public_key": "(Required) Public portion of a customer-generated key pair. Must be an ECDSA public key in PEM format."
        },
        "route53recoveryreadiness_cell": {
            "cell_name": "(Required) Unique name describing the cell."
        },
        "athena_database": {
            "bucket": "(Required) Name of S3 bucket to save the results of the query execution.",
            "name": "(Required) Name of the database to create.",
            "s3_acl_option": "(Required) Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is `BUCKET_OWNER_FULL_CONTROL`.",
            "encryption_option": "(Required) Type of key; one of `SSE_S3`, `SSE_KMS`, `CSE_KMS`"
        },
        "cloudhsm_v2_hsm": {
            "cluster_id": "(Required) The ID of Cloud HSM v2 cluster to which HSM will be added."
        },
        "ses_configuration_set": {
            "name": "(Required) Name of the configuration set."
        },
        "vpc_security_group_egress_rule": {
            "security_group_id": "(Required) The ID of the security group."
        },
        "apigatewayv2_api": {
            "name": "(Required) Name of the API. Must be less than or equal to 128 characters in length.",
            "protocol_type": "(Required) API protocol. Valid values: `HTTP`, `WEBSOCKET`."
        },
        "appstream_user": {
            "authentication_type": "(Required) Authentication type for the user. You must specify USERPOOL. Valid values: `API`, `SAML`, `USERPOOL`",
            "user_name": "(Required) Email address of the user."
        },
        "codeartifact_domain": {
            "domain": "(Required) The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable."
        },
        "redshift_usage_limit": {
            "amount": "(Required) The limit amount. If time-based, this amount is in minutes. If data-based, this amount is in terabytes (TB). The value must be a positive number.",
            "cluster_identifier": "(Required) The identifier of the cluster that you want to limit usage.",
            "feature_type": "(Required) The Amazon Redshift feature that you want to limit. Valid values are `spectrum`, `concurrency-scaling`, and `cross-region-datasharing`.",
            "limit_type": "(Required) The type of limit. Depending on the feature type, this can be based on a time duration or data size. If FeatureType is `spectrum`, then LimitType must be `data-scanned`. If FeatureType is `concurrency-scaling`, then LimitType must be `time`. If FeatureType is `cross-region-datasharing`, then LimitType must be `data-scanned`. Valid values are `data-scanned`, and `time`."
        },
        "s3_bucket_analytics_configuration": {
            "bucket": "(Required) Name of the bucket this analytics configuration is associated with.",
            "name": "(Required) Unique identifier of the analytics configuration for the bucket.",
            "data_export": "(Required) Data export configuration (documented below).",
            "destination": "(Required) Specifies the destination for the exported analytics data (documented below).",
            "s3_bucket_destination": "(Required) Analytics data export currently only supports an S3 bucket destination (documented below).",
            "bucket_arn": "(Required) ARN of the destination bucket."
        },
        "athena_data_catalog": {},
        "kms_replica_external_key": {
            "primary_key_arn": "(Required) The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region."
        },
        "devicefarm_instance_profile": {
            "name": "(Required) The name for the instance profile."
        },
        "pinpoint_apns_sandbox_channel": {
            "application_id": "(Required) The application ID.",
            "certificate": "(Required) The pem encoded TLS Certificate from Apple.",
            "private_key": "(Required) The Certificate Private Key file (ie. `.key` file).",
            "bundle_id": "(Required) The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.",
            "team_id": "(Required) The ID assigned to your Apple developer account team. This value is provided on the Membership page.",
            "token_key": "(Required) The `.p8` file that you download from your Apple developer account when you create an authentication key.",
            "token_key_id": "(Required) The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section."
        },
        "vpclattice_listener": {
            "default_action": "(Required) Default action block for the default listener rule. Default action blocks are defined below.",
            "status_code": "(Required) Custom HTTP status code to return, e.g. a 404 response code. See [Listeners](https://docs.aws.amazon.com/vpc-lattice/latest/ug/listeners.html) in the AWS documentation for a list of supported codes.",
            "target_groups": "(Required) One or more target group blocks.",
            "target_group_identifier": "(Required) ID or Amazon Resource Name (ARN) of the target group."
        },
        "auditmanager_framework_share": {
            "destination_account": "(Required) Amazon Web Services account of the recipient.",
            "destination_region": "(Required) Amazon Web Services region of the recipient.",
            "framework_id": "(Required) Unique identifier for the shared custom framework."
        },
        "detective_member": {
            "account_id": "(Required) AWS account ID for the account.",
            "email_address": "(Required) Email address for the account.",
            "graph_arn": "(Required) ARN of the behavior graph to invite the member accounts to contribute their data to."
        },
        "apigatewayv2_deployment": {
            "api_id": "(Required) API identifier."
        },
        "sagemaker_endpoint_configuration": {
            "production_variants": {
                "model_name": "(Required) The name of the model to use.",
                "destination_s3_uri": "(Required) The Amazon S3 bucket to send the core dump to.",
                "kms_key_id": "(Required) The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                "max_concurrency": "(Required) The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between `1` and `200`.",
                "memory_size_in_mb": "(Required) The memory size of your serverless endpoint. Valid values are in 1 GB increments: `1024` MB, `2048` MB, `3072` MB, `4096` MB, `5120` MB, or `6144` MB."
            }
        },
        "medialive_input": {
            "name": "(Required) Name of the input.",
            "input_security_groups": "(Required) List of input security groups.",
            "type": "(Required) The different types of inputs that AWS Elemental MediaLive supports."
        },
        "networkmanager_global_network": {},
        "volume_attachment": {
            "device_name": "(Required) The device name to expose to the instance (for",
            "instance_id": "(Required) ID of the Instance to attach to",
            "volume_id": "(Required) ID of the Volume to be attached"
        },
        "cloudwatch_event_connection": {
            "name": "(Required) The name of the new connection. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.",
            "authorization_type": "(Required) Choose the type of authorization to use for the connection. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.",
            "auth_parameters": "(Required) Parameters used for authorization. A maximum of 1 are allowed. Documented below.",
            "key": "(Required) The key for the parameter.",
            "value": "(Required) The value associated with the key. Created and stored in AWS Secrets Manager if is secret.",
            "username": "(Required) A username for the authorization.",
            "password": "(Required) A password for the authorization. Created and stored in AWS Secrets Manager.",
            "authorization_endpoint": "(Required) The URL to the authorization endpoint.",
            "http_method": "(Required) A password for the authorization. Created and stored in AWS Secrets Manager.",
            "client_parameters": "(Required) Contains the client parameters for OAuth authorization. Contains the following two parameters.",
            "client_id": "(Required) The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.",
            "client_secret": "(Required) The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.",
            "oauth_http_parameters": "(Required) OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below."
        },
        "cloudwatch_log_stream": {
            "name": "(Required) The name of the log stream. Must not be longer than 512 characters and must not contain `:`",
            "log_group_name": "(Required) The name of the log group under which the log stream is to be created."
        },
        "evidently_segment": {},
        "imagebuilder_image": {
            "infrastructure_configuration_arn": "(Required) Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration."
        },
        "lambda_event_source_mapping": {
            "function_name": "(Required) The name or the ARN of the Lambda function that will be subscribing to events.",
            "destination_arn": "(Required) The Amazon Resource Name (ARN) of the destination resource.",
            "database_name": "(Required) The name of the database to consume within the DocumentDB cluster.",
            "endpoints": "(Required) A map of endpoints for the self managed source.  For Kafka self-managed sources, the key should be `KAFKA_BOOTSTRAP_SERVERS` and the value should be a string with a comma separated list of broker endpoints.",
            "type": "(Required) The type of this configuration.  For Self Managed Kafka you will need to supply blocks for type `VPC_SUBNET` and `VPC_SECURITY_GROUP`.",
            "uri": "(Required) The URI for this configuration.  For type `VPC_SUBNET` the value should be `subnet:subnet_id` where `subnet_id` is the value you would find in an aws_subnet resource's id attribute.  For type `VPC_SECURITY_GROUP` the value should be `security_group:security_group_id` where `security_group_id` is the value you would find in an aws_security_group resource's id attribute."
        },
        "pinpoint_baidu_channel": {
            "application_id": "(Required) The application ID.",
            "api_key": "(Required) Platform credential API key from Baidu.",
            "secret_key": "(Required) Platform credential Secret key from Baidu."
        },
        "docdb_global_cluster": {},
        "workspaces_connection_alias": {
            "connection_string": "(Required) The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com."
        },
        "ec2_instance_state": {
            "instance_id": "(Required) ID of the instance.",
            "state": "(Required) - State of the instance. Valid values are `stopped`, `running`."
        },
        "vpc_ipv6_cidr_block_association": {
            "ipv6_ipam_pool_id": "(Required) The ID of an IPv6 IPAM pool you want to use for allocating this VPC's CIDR. IPAM is a VPC feature that you can use to automate your IP address management workflows including assigning, tracking, troubleshooting, and auditing IP addresses across AWS Regions and accounts.",
            "vpc_id": "(Required) The ID of the VPC to make the association with."
        },
        "ami_from_instance": {
            "name": "(Required) Region-unique name for the AMI.",
            "source_instance_id": "(Required) ID of the instance to use as the basis of the AMI."
        },
        "quicksight_namespace": {
            "namespace": "(Required) Name of the namespace."
        },
        "ssmcontacts_plan": {
            "contact_id": "(Required) The Amazon Resource Name (ARN) of the contact or escalation plan.",
            "stage": "(Required) List of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts."
        },
        "inspector_assessment_template": {
            "name": "(Required) The name of the assessment template.",
            "target_arn": "(Required) The assessment target ARN to attach the template to.",
            "duration": "(Required) The duration of the inspector run.",
            "rules_package_arns": "(Required) The rules to be used during the run.",
            "event": "(Required) The event for which you want to receive SNS notifications. Valid values are `ASSESSMENT_RUN_STARTED`, `ASSESSMENT_RUN_COMPLETED`, `ASSESSMENT_RUN_STATE_CHANGED`, and `FINDING_REPORTED`.",
            "topic_arn": "(Required) The ARN of the SNS topic to which notifications are sent."
        },
        "lambda_alias": {
            "name": "(Required) Name for the alias you are creating. Pattern: `(?!^[0-9]+$)([a-zA-Z0-9-_]+)`",
            "function_name": "(Required) Lambda Function name or ARN.",
            "function_version": "(Required) Lambda function version for which you are creating the alias. Pattern: `(\\$LATEST|[0-9]+)`."
        },
        "pinpoint_app": {},
        "proxy_protocol_policy": {
            "load_balancer": "(Required) The load balancer to which the policy",
            "instance_ports": "(Required) List of instance ports to which the policy"
        },
        "redshift_hsm_configuration": {},
        "sesv2_contact_list": {
            "contact_list_name": "(Required) The name of the contact list."
        },
        "snapshot_create_volume_permission": {
            "snapshot_id": "(Required) A snapshot ID",
            "account_id": "(Required) An AWS Account ID to add create volume permissions. The AWS Account cannot be the snapshot's owner"
        },
        "emrcontainers_job_template": {
            "job_template_data": "(Required) The job template data which holds values of StartJobRun API request.",
            "execution_role_arn": "(Required) The execution role ARN of the job run.",
            "job_driver": "(Required) Specify the driver that the job runs on. Exactly one of the two available job drivers is required, either sparkSqlJobDriver or sparkSubmitJobDriver.",
            "release_label": "(Required) The release version of Amazon EMR.",
            "classification": "(Required) The classification within a configuration.",
            "log_group_name": "(Required) The name of the log group for log publishing.",
            "entry_point": "(Required) The entry point of job application."
        },
        "glue_ml_transform": {
            "input_record_tables": {
                "database_name": "(Required) A database name in the AWS Glue Data Catalog.",
                "table_name": "(Required) A table name in the AWS Glue Data Catalog."
            },
            "parameters": {
                "transform_type": "(Required) The type of machine learning transform. For information about the types of machine learning transforms, see [Creating Machine Learning Transforms](http://docs.aws.amazon.com/glue/latest/dg/add-job-machine-learning-transform.html).",
                "find_matches_parameters": "(Required) The parameters for the find matches algorithm. see [Find Matches Parameters](#find_matches_parameters)."
            }
        },
        "neptune_cluster_endpoint": {
            "endpoint_type": "(Required) The type of the endpoint. One of: `READER`, `WRITER`, `ANY`."
        },
        "glue_partition": {
            "database_name": "(Required) Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.",
            "partition_values": "(Required) The values that define the partition.",
            "name": "(Required) The name of the Column.",
            "column": "(Required) The name of the column.",
            "sort_order": "(Required) Indicates that the column is sorted in ascending order (== 1), or in descending order (==0)."
        },
        "imagebuilder_component": {
            "name": "(Required) Name of the component.",
            "platform": "(Required) Platform of the component.",
            "version": "(Required) Version of the component."
        },
        "db_proxy": {
            "name": "(Required) The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens.",
            "auth": "(Required) Configuration block(s) with authorization mechanisms to connect to the associated instances or clusters. Described below.",
            "role_arn": "(Required) The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.",
            "vpc_subnet_ids": "(Required) One or more VPC subnet IDs to associate with the new proxy."
        },
        "msk_cluster_policy": {
            "cluster_arn": "(Required) The Amazon Resource Name (ARN) that uniquely identifies the cluster.",
            "policy": "(Required) Resource policy for cluster."
        },
        "appsync_graphql_api": {
            "name": "(Required) User-supplied name for the GraphqlApi."
        },
        "datasync_location_fsx_openzfs_file_system": {
            "fsx_filesystem_arn": "(Required) The Amazon Resource Name (ARN) for the FSx for OpenZfs file system.",
            "protocol": {
                "nfs": "(Required) Represents the Network File System (NFS) protocol that DataSync uses to access your FSx for OpenZFS file system. See below."
            },
            "nfs": {
                "mount_options": "(Required) Represents the mount options that are available for DataSync to access an NFS location. See below."
            }
        },
        "identitystore_user": {
            "display_name": "(Required) The name that is typically displayed when the user is referenced.",
            "name": "(Required) Details about the user's full name. Detailed below.",
            "family_name": "(Required) The family name of the user.",
            "given_name": "(Required) The given name of the user."
        },
        "sagemaker_model_package_group_policy": {
            "model_package_group_name": "(Required) The name of the model package group."
        },
        "kms_key_policy": {
            "key_id": "(Required) The ID of the KMS Key to attach the policy.",
            "policy": "(Required) A valid policy JSON document. Although this is a key policy, not an IAM policy, an [`aws_iam_policy_document`](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document), in the form that designates a principal, can be used. For more information about building policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "transfer_workflow": {
            "steps": "(Required) Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.",
            "type": "(Required) The type of encryption used. Currently, this value must be `\"PGP\"`.",
            "key": "(Required) The name assigned to the tag that you create.",
            "value": "(Required) The value that corresponds to the key."
        },
        "cloudwatch_event_permission": {
            "principal": "(Required) The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify `*` to permit any account to put events to your default event bus, optionally limited by `condition`.",
            "statement_id": "(Required) An identifier string for the external account that you are granting permissions to."
        },
        "sagemaker_workteam": {
            "description": "(Required) A description of the work team.",
            "workforce_name": "(Required) The name of the Workteam (must be unique).",
            "workteam_name": "(Required) The name of the workforce.",
            "member_definition": "(Required) A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognito_member_definition`. For workforces created using your own OIDC identity provider (IdP) use `oidc_member_definition`. Do not provide input for both of these parameters in a single request. see [Member Definition](#member-definition) details below.",
            "client_id": "(Required) An identifier for an application client. You must create the app client ID using Amazon Cognito.",
            "user_pool": "(Required) An identifier for a user pool. The user pool must be in the same region as the service that you are calling.",
            "user_group": "(Required) An identifier for a user group.",
            "groups": "(Required) A list of comma separated strings that identifies user groups in your OIDC IdP. Each user group is made up of a group of private workers.",
            "notification_topic_arn": "(Required) The ARN for the SNS topic to which notifications should be published."
        },
        "iot_provisioning_template": {
            "name": "(Required) The name of the fleet provisioning template.",
            "provisioning_role_arn": "(Required) The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.",
            "template_body": "(Required) The JSON formatted contents of the fleet provisioning template."
        },
        "opsworks_stack": {
            "name": "(Required) The name of the stack.",
            "region": "(Required) The name of the region where the stack will exist.",
            "service_role_arn": "(Required) The ARN of an IAM role that the OpsWorks service will act as.",
            "default_instance_profile_arn": "(Required) The ARN of an IAM Instance Profile that created instances will have by default.",
            "type": "(Required) The type of source to use. For example, \"archive\".",
            "url": "(Required) The URL where the cookbooks resource can be found."
        },
        "sesv2_configuration_set_event_destination": {
            "configuration_set_name": "(Required) The name of the configuration set.",
            "event_destination": {
                "matching_event_types": "(Required) - An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`."
            },
            "event_destination_name": "(Required) An object that defines the event destination. See [event_destination](#event_destination) below.",
            "dimension_configuration": {
                "default_dimension_value": "(Required) The default value of the dimension that is published to Amazon CloudWatch if you don't provide the value of the dimension when you send an email.",
                "dimension_name": "(Required) The name of an Amazon CloudWatch dimension associated with an email sending metric.",
                "dimension_value_source": "(Required) The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. Valid values: `MESSAGE_TAG`, `EMAIL_HEADER`, `LINK_TAG`."
            }
        },
        "connect_queue": {
            "hours_of_operation_id": "(Required) Specifies the identifier of the Hours of Operation.",
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "name": "(Required) Specifies the name of the Queue.",
            "outbound_caller_config": "(Required) A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below."
        },
        "eks_cluster": {
            "role_arn": "(Required) ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf. Ensure the resource configuration includes explicit dependencies on the IAM Role permissions by adding [`depends_on`](https://www.terraform.io/docs/configuration/meta-arguments/depends_on.html) if using the [`aws_iam_role_policy` resource](/docs/providers/aws/r/iam_role_policy.html) or [`aws_iam_role_policy_attachment` resource](/docs/providers/aws/r/iam_role_policy_attachment.html), otherwise EKS cannot delete EKS managed EC2 infrastructure such as Security Groups on EKS Cluster deletion.",
            "vpc_config": "(Required) Configuration block for the VPC associated with your cluster. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html) and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html) in the Amazon EKS User Guide. Detailed below. Also contains attributes detailed in the Attributes section."
        },
        "iam_openid_connect_provider": {
            "url": "(Required) The URL of the identity provider. Corresponds to the _iss_ claim.",
            "client_id_list": "(Required) A list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the client_id parameter on OAuth requests.)",
            "thumbprint_list": "(Required) A list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s)."
        },
        "appmesh_virtual_gateway": {
            "name": "(Required) Name to use for the virtual gateway. Must be between 1 and 255 characters in length.",
            "mesh_name": "(Required) Name of the service mesh in which to create the virtual gateway. Must be between 1 and 255 characters in length.",
            "spec": "(Required) Virtual gateway specification to apply.",
            "listener": "(Required) Listeners that the mesh endpoint is expected to receive inbound traffic from. You can specify one listener.",
            "validation": "(Required) TLS validation context.",
            "certificate_chain": "(Required) Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.",
            "private_key": "(Required) Private key for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.",
            "secret_name": "(Required) Name of the secret for a virtual gateway's Transport Layer Security (TLS) Secret Discovery Service validation context trust.",
            "trust": "(Required) TLS validation context trust.",
            "match": "(Required) Criteria for determining a SAN's match.",
            "exact": "(Required) Values sent must match the specified values exactly.",
            "certificate_authority_arns": "(Required) One or more ACM ARNs.",
            "port_mapping": "(Required) Port mapping information for the listener.",
            "path": "(Required) File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.",
            "key": "(Required) The specified key for the JSON. Must be between 1 and 100 characters in length.",
            "value": "(Required) The specified value for the JSON. Must be between 1 and 100 characters in length.",
            "port": "(Required) Port used for the port mapping.",
            "protocol": "(Required) Protocol for the health check request. Valid values are `http`, `http2`, and `grpc`.",
            "max_requests": "(Required) Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.",
            "max_connections": "(Required) Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.",
            "healthy_threshold": "(Required) Number of consecutive successful health checks that must occur before declaring listener healthy.",
            "timeout_millis": "(Required) Amount of time to wait when receiving a response from the health check, in milliseconds.",
            "unhealthy_threshold": "(Required) Number of consecutive failed health checks that must occur before declaring a virtual gateway unhealthy.",
            "certificate": "(Required) Listener's TLS certificate.",
            "certificate_arn": "(Required) ARN for the certificate."
        },
        "shield_application_layer_automatic_response": {
            "resource_arn": "(Required) ARN of the resource to protect (Cloudfront Distributions and ALBs only at this time).",
            "action": "(Required) One of `COUNT` or `BLOCK`"
        },
        "guardduty_threatintelset": {
            "activate": "(Required) Specifies whether GuardDuty is to start using the uploaded ThreatIntelSet.",
            "detector_id": "(Required) The detector ID of the GuardDuty.",
            "format": "(Required) The format of the file that contains the ThreatIntelSet. Valid values: `TXT` | `STIX` | `OTX_CSV` | `ALIEN_VAULT` | `PROOF_POINT` | `FIRE_EYE`",
            "location": "(Required) The URI of the file that contains the ThreatIntelSet.",
            "name": "(Required) The friendly name to identify the ThreatIntelSet."
        },
        "cloudfront_continuous_deployment_policy": {
            "enabled": "(Required) Whether this continuous deployment policy is enabled.",
            "staging_distribution_dns_names": "(Required) CloudFront domain name of the staging distribution. See [`staging_distribution_dns_names`](#staging_distribution_dns_names).",
            "traffic_config": "(Required) Parameters for routing production traffic from primary to staging distributions. See [`traffic_config`](#traffic_config).",
            "items": "(Required) A list of CloudFront domain names for the staging distribution.",
            "quantity": "(Required) Number of CloudFront domain names in the staging distribution.",
            "type": "(Required) Type of traffic configuration. Valid values are `SingleWeight` and `SingleHeader`.",
            "header": "(Required) Request header name to send to the staging distribution. The header must contain the prefix `aws-cf-cd-`.",
            "value": "(Required) Request header value.",
            "weight": "(Required) The percentage of traffic to send to a staging distribution, expressed as a decimal number between `0` and `.15`.",
            "idle_ttl": "(Required) The amount of time in seconds after which sessions will cease if no requests are received. Valid values are `300` – `3600` (5–60 minutes). The value must be less than or equal to `maximum_ttl`.",
            "maximum_ttl": "(Required) The maximum amount of time in seconds to consider requests from the viewer as being part of the same session. Valid values are `300` – `3600` (5–60 minutes). The value must be greater than or equal to `idle_ttl`."
        },
        "cloudfront_field_level_encryption_profile": {
            "name": "(Required) The name of the Field Level Encryption Profile.",
            "encryption_entities": "(Required) The [encryption entities](#encryption-entities) config block for field-level encryption profiles that contains an attribute `items` which includes the encryption key and field pattern specifications.",
            "public_key_id": "(Required) The public key associated with a set of field-level encryption patterns, to be used when encrypting the fields that match the patterns.",
            "provider_id": "(Required) The provider associated with the public key being used for encryption.",
            "field_patterns": "(Required) Object that contains an attribute `items` that contains the list of field patterns in a field-level encryption content type profile specify the fields that you want to be encrypted."
        },
        "glue_connection": {},
        "guardduty_ipset": {
            "activate": "(Required) Specifies whether GuardDuty is to start using the uploaded IPSet.",
            "detector_id": "(Required) The detector ID of the GuardDuty.",
            "format": "(Required) The format of the file that contains the IPSet. Valid values: `TXT` | `STIX` | `OTX_CSV` | `ALIEN_VAULT` | `PROOF_POINT` | `FIRE_EYE`",
            "location": "(Required) The URI of the file that contains the IPSet.",
            "name": "(Required) The friendly name to identify the IPSet."
        },
        "dx_hosted_transit_virtual_interface_accepter": {
            "dx_gateway_id": "(Required) The ID of the [Direct Connect gateway](dx_gateway.html) to which to connect the virtual interface.",
            "virtual_interface_id": "(Required) The ID of the Direct Connect virtual interface to accept."
        },
        "iot_policy_attachment": {
            "policy": "(Required) The name of the policy to attach.",
            "target": "(Required) The identity to which the policy is attached."
        },
        "networkmanager_site": {
            "global_network_id": "(Required) The ID of the Global Network to create the site in."
        },
        "config_organization_managed_rule": {
            "name": "(Required) The name of the rule",
            "rule_identifier": "(Required) Identifier of an available AWS Config Managed Rule to call. For available values, see the [List of AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html) documentation"
        },
        "finspace_kx_environment": {
            "name": "(Required) Name of the KX environment that you want to create.",
            "kms_key_id": "(Required) KMS key ID to encrypt your data in the FinSpace environment."
        },
        "vpc_ipam_preview_next_cidr": {
            "ipam_pool_id": "(Required) The ID of the pool to which you want to assign a CIDR."
        },
        "iam_group_policy_attachment": {},
        "identitystore_group": {
            "identity_store_id": "(Required) The globally unique identifier for the identity store."
        },
        "networkmanager_transit_gateway_peering": {
            "core_network_id": "(Required) The ID of a core network.",
            "transit_gateway_arn": "(Required) The ARN of the transit gateway for the peering request."
        },
        "vpn_connection": {
            "customer_gateway_id": "(Required) The ID of the customer gateway.",
            "type": "(Required) The type of VPN connection. The only type AWS supports at this time is \"ipsec.1\"."
        },
        "media_store_container_policy": {
            "container_name": "(Required) The name of the container.",
            "policy": "(Required) The contents of the policy. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "quicksight_refresh_schedule": {
            "schedule": {
                "refresh_type": "(Required) The type of refresh that the dataset undergoes. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`."
            }
        },
        "rum_app_monitor": {
            "name": "(Required) The name of the log stream.",
            "domain": "(Required) The top-level internet domain name for which your application has administrative authority."
        },
        "ssm_patch_group": {
            "baseline_id": "(Required) The ID of the patch baseline to register the patch group with.",
            "patch_group": "(Required) The name of the patch group that should be registered with the patch baseline."
        },
        "api_gateway_model": {
            "rest_api_id": "(Required) ID of the associated REST API",
            "name": "(Required) Name of the model",
            "content_type": "(Required) Content type of the model",
            "schema": "(Required) Schema of the model in a JSON form"
        },
        "cloudcontrolapi_resource": {
            "desired_state": "(Required) JSON string matching the CloudFormation resource type schema with desired configuration. Terraform configuration expressions can be converted into JSON using the [`jsonencode()` function](https://www.terraform.io/docs/language/functions/jsonencode.html).",
            "type_name": "(Required) CloudFormation resource type name. For example, `AWS::EC2::VPC`."
        },
        "instance": {
            "device_name": "(Required) Name of the device to mount.",
            "device_index": "(Required) Integer index of the network interface attachment. Limited by instance type.",
            "network_interface_id": "(Required) ID of the network interface to attach."
        },
        "media_convert_queue": {
            "name": "(Required) A unique identifier describing the queue",
            "commitment": "(Required) The length of the term of your reserved queue pricing plan commitment. Valid value is `ONE_YEAR`.",
            "renewal_type": "(Required) Specifies whether the term of your reserved queue pricing plan. Valid values are `AUTO_RENEW` or `EXPIRE`.",
            "reserved_slots": "(Required) Specifies the number of reserved transcode slots (RTS) for queue."
        },
        "redshift_subnet_group": {
            "name": "(Required) The name of the Redshift Subnet group.",
            "subnet_ids": "(Required) An array of VPC subnet IDs."
        },
        "grafana_workspace_saml_configuration": {
            "editor_role_values": "(Required) The editor role values.",
            "workspace_id": "(Required) The workspace id."
        },
        "sagemaker_code_repository": {
            "code_repository_name": "(Required) The name of the Code Repository (must be unique).",
            "git_config": "(Required) Specifies details about the repository. see [Git Config](#git-config) details below.",
            "repository_url": "(Required) The URL where the Git repository is located."
        },
        "auditmanager_control": {
            "name": "(Required) Name of the control.",
            "control_mapping_sources": {
                "source_name": "(Required) Name of the source.",
                "source_set_up_option": "(Required) The setup option for the data source. This option reflects if the evidence collection is automated or manual. Valid values are `System_Controls_Mapping` (automated) and `Procedural_Controls_Mapping` (manual).",
                "source_type": "(Required) Type of data source for evidence collection. If `source_set_up_option` is manual, the only valid value is `MANUAL`. If `source_set_up_option` is automated, valid values are `AWS_Cloudtrail`, `AWS_Config`, `AWS_Security_Hub`, or `AWS_API_Call`."
            }
        },
        "macie2_findings_filter": {
            "finding_criteria": "(Required) The criteria to use to filter findings.",
            "action": "(Required) The action to perform on findings that meet the filter criteria (`finding_criteria`). Valid values are: `ARCHIVE`, suppress (automatically archive) the findings; and, `NOOP`, don't perform any action on the findings.",
            "field": "(Required) The name of the field to be evaluated."
        },
        "dms_replication_instance": {
            "replication_instance_class": "(Required) The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for available instance sizes and advice on which one to choose.",
            "replication_instance_id": "(Required) The replication instance identifier. This parameter is stored as a lowercase string."
        },
        "ec2_managed_prefix_list": {
            "max_entries": "(Required) Maximum number of entries that this prefix list can contain.",
            "name": "(Required) Name of this resource. The name must not start with `com.amazonaws`.",
            "cidr": "(Required) CIDR block of this entry."
        },
        "inspector_resource_group": {
            "tags": "(Required) Key-value map of tags that are used to select the EC2 instances to be included in an [Amazon Inspector assessment target](/docs/providers/aws/r/inspector_assessment_target.html)."
        },
        "quicksight_ingestion": {
            "data_set_id": "(Required) ID of the dataset used in the ingestion.",
            "ingestion_id": "(Required) ID for the ingestion.",
            "ingestion_type": "(Required) Type of ingestion to be created. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`."
        },
        "account_primary_contact": {
            "address_line_1": "(Required) The first line of the primary contact address.",
            "city": "(Required) The city of the primary contact address.",
            "country_code": "(Required) The ISO-3166 two-letter country code for the primary contact address.",
            "full_name": "(Required) The full name of the primary contact address.",
            "phone_number": "(Required) The phone number of the primary contact information. The number will be validated and, in some countries, checked for activation.",
            "postal_code": "(Required) The postal code of the primary contact address."
        },
        "ec2_traffic_mirror_target": {},
        "sns_topic_policy": {
            "arn": "(Required) The ARN of the SNS topic",
            "policy": "(Required) The fully-formed AWS policy as JSON. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "vpc_network_performance_metric_subscription": {
            "destination": "(Required) The target Region or Availability Zone that the metric subscription is enabled for. For example, `eu-west-1`.",
            "source": "(Required) The source Region or Availability Zone that the metric subscription is enabled for. For example, `us-east-1`."
        },
        "dx_hosted_connection": {
            "name": "(Required) The name of the connection.",
            "bandwidth": "(Required) The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps and 10Gbps. Case sensitive.",
            "connection_id": "(Required) The ID of the interconnect or LAG.",
            "owner_account_id": "(Required) The ID of the AWS account of the customer for the connection.",
            "vlan": "(Required) The dedicated VLAN provisioned to the hosted connection."
        },
        "waf_sql_injection_match_set": {
            "name": "(Required) The name or description of the SQL Injection Match Set."
        },
        "iam_role": {
            "assume_role_policy": "(Required) Policy that grants an entity permission to assume the role."
        },
        "cloudfront_function": {
            "name": "(Required) Unique name for your CloudFront Function.",
            "code": "(Required) Source code of the function",
            "runtime": "(Required) Identifier of the function's runtime. Currently only `cloudfront-js-1.0` is valid."
        },
        "eks_fargate_profile": {
            "selector": "(Required) Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.",
            "namespace": "(Required) Kubernetes namespace for selection."
        },
        "ami_launch_permission": {
            "image_id": "(Required) ID of the AMI."
        },
        "lightsail_bucket_access_key": {
            "bucket_name": "(Required) The name of the bucket that the new access key will belong to, and grant access to."
        },
        "opensearch_domain": {
            "domain_name": "(Required) Name of the domain."
        },
        "sns_topic_data_protection_policy": {
            "arn": "(Required) The ARN of the SNS topic",
            "policy": "(Required) The fully-formed AWS policy as JSON. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "s3_bucket": {
            "allowed_methods": "(Required) One or more HTTP methods that you allow the origin to execute. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.",
            "allowed_origins": "(Required) One or more origins you want customers to be able to access the bucket from.",
            "type": "(Required) Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`. `AmazonCustomerByEmail` is not supported.",
            "permissions": "(Required) List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `READ_ACP`, `WRITE_ACP`, `FULL_CONTROL`.",
            "enabled": "(Required) Boolean which indicates if this criteria is enabled.",
            "storage_class": "(Required) Specifies the Amazon S3 [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Transition.html#AmazonS3-Type-Transition-StorageClass) to which you want the object to transition.",
            "days": "(Required) Specifies the number of days noncurrent object versions transition.",
            "target_bucket": "(Required) Name of the bucket that will receive the log objects.",
            "default_retention": "(Required) Default retention period that you want to apply to new objects placed in this bucket ([documented below](#default-retention)).",
            "mode": "(Required) Default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.",
            "role": "(Required) ARN of the IAM role for Amazon S3 to assume when replicating the objects.",
            "rules": "(Required) Specifies the rules managing the replication ([documented below](#rules)).",
            "destination": "(Required) Specifies the destination for the rule ([documented below](#destination)).",
            "status": "(Required) Status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.",
            "bucket": "(Required) ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.",
            "rule": "(Required) Single object for server-side encryption by default configuration. (documented below)",
            "apply_server_side_encryption_by_default": "(Required) Single object for setting server-side encryption by default. (documented below)",
            "sse_algorithm": "(Required) Server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`"
        },
        "ses_active_receipt_rule_set": {
            "rule_set_name": "(Required) The name of the rule set"
        },
        "cloudwatch_log_destination": {
            "name": "(Required) A name for the log destination.",
            "role_arn": "(Required) The ARN of an IAM role that grants Amazon CloudWatch Logs permissions to put data into the target.",
            "target_arn": "(Required) The ARN of the target Amazon Kinesis stream resource for the destination."
        },
        "appmesh_gateway_route": {
            "name": "(Required) Name for the query parameter that will be matched on.",
            "mesh_name": "(Required) Name of the service mesh in which to create the gateway route. Must be between 1 and 255 characters in length.",
            "virtual_gateway_name": "(Required) Name of the [virtual gateway](/docs/providers/aws/r/appmesh_virtual_gateway.html) to associate the gateway route with. Must be between 1 and 255 characters in length.",
            "spec": "(Required) Gateway route specification to apply.",
            "action": "(Required) Action to take if a match is determined.",
            "match": "(Required) Criteria for determining a request match.",
            "target": "(Required) Target that traffic is routed to when a request matches the gateway route.",
            "virtual_service": "(Required) Virtual service gateway route target.",
            "virtual_service_name": "(Required) Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
            "default_target_hostname": "(Required) Default target host name to write to. Valid values: `ENABLED`, `DISABLED`.",
            "exact": "(Required) Value used to replace matched path.",
            "service_name": "(Required) Fully qualified domain name for the service to match from the request.",
            "end": "(Required) End of the range."
        },
        "config_aggregate_authorization": {
            "account_id": "(Required) Account ID",
            "region": "(Required) Region"
        },
        "lb_cookie_stickiness_policy": {
            "name": "(Required) The name of the stickiness policy.",
            "load_balancer": "(Required) The load balancer to which the policy",
            "lb_port": "(Required) The load balancer port to which the policy"
        },
        "kinesis_firehose_delivery_stream": {
            "name": "(Required) The name of the HTTP endpoint common attribute.",
            "cluster_jdbcurl": "(Required) The jdbcurl of the redshift cluster.",
            "username": "(Required) The username that the firehose delivery stream will assume. It is strongly recommended that the username and password provided is used exclusively for Amazon Kinesis Firehose purposes, and that the permissions for the account are restricted for Amazon Redshift INSERT permissions.",
            "password": "(Required) The password for the username above.",
            "s3_configuration": "(Required) The S3 Configuration. See [s3_configuration](#s3-configuration) for more details.",
            "data_table_name": "(Required) The name of the table in the redshift cluster that the s3 bucket will copy to.",
            "index_name": "(Required) The Opensearch index name.",
            "hec_endpoint": "(Required) The HTTP Event Collector (HEC) endpoint to which Kinesis Firehose sends your data.",
            "hec_token": "(Required) The GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.",
            "url": "(Required) The HTTP endpoint URL to which Kinesis Firehose sends your data.",
            "type": "(Required) The type of processor. Valid Values: `RecordDeAggregation`, `Lambda`, `MetadataExtraction`, `AppendDelimiterToRecord`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.",
            "parameter_name": "(Required) Parameter name. Valid Values: `LambdaArn`, `NumberOfRetries`, `MetadataExtractionQuery`, `JsonParsingEngine`, `RoleArn`, `BufferSizeInMBs`, `BufferIntervalInSeconds`, `SubRecordType`, `Delimiter`. Validation is done against [AWS SDK constants](https://docs.aws.amazon.com/sdk-for-go/api/service/firehose/#pkg-constants); so that values not explicitly listed may also work.",
            "parameter_value": "(Required) Parameter value. Must be between 1 and 512 length (inclusive). When providing a Lambda ARN, you should specify the resource version as well.",
            "value": "(Required) The value of the HTTP endpoint common attribute.",
            "subnet_ids": "(Required) A list of subnet IDs to associate with Kinesis Firehose.",
            "security_group_ids": "(Required) A list of security group IDs to associate with Kinesis Firehose."
        },
        "auditmanager_framework": {
            "control_sets": {
                "name": "(Required) Name of the control set.",
                "controls": "(Required) List of controls within the control set. See [`controls`](#controls) below."
            },
            "controls": {
                "id": "(Required) Unique identifier of the control."
            }
        },
        "datapipeline_pipeline_definition": {
            "pipeline_id": "(Required) ID of the pipeline.",
            "pipeline_object": "(Required) Configuration block for the objects that define the pipeline. See below",
            "field": "(Required) Configuration block for Key-value pairs that define the properties of the object. See below",
            "id": "(Required) ID of the parameter value.",
            "name": "(Required) ARN of the storage connector.",
            "key": "(Required) Field identifier.",
            "attribute": "(Required) Configuration block for attributes of the parameter object. See below",
            "string_value": "(Required) Field value, expressed as a String."
        },
        "organizations_resource_policy": {
            "content": "(Required) Content for the resource policy. The text must be correctly formatted JSON that complies with the syntax for the resource policy's type. See the [_AWS Organizations User Guide_](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_delegate_examples.html) for examples."
        },
        "appconfig_application": {
            "name": "(Required) Name for the application. Must be between 1 and 64 characters in length."
        },
        "connect_phone_number": {
            "target_arn": "(Required) The Amazon Resource Name (ARN) for Amazon Connect instances that phone numbers are claimed to."
        },
        "ec2_transit_gateway_multicast_domain": {
            "transit_gateway_id": "(Required) EC2 Transit Gateway identifier. The EC2 Transit Gateway must have `multicast_support` enabled."
        },
        "iam_group": {
            "name": "(Required) The group's name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: `=,.@-_.`. Group names are not distinguished by case. For example, you cannot create groups named both \"ADMINS\" and \"admins\"."
        },
        "quicksight_folder_membership": {},
        "wafregional_web_acl_association": {
            "web_acl_id": "(Required) The ID of the WAF Regional WebACL to create an association.",
            "resource_arn": "(Required) ARN of the resource to associate with. For example, an Application Load Balancer or API Gateway Stage."
        },
        "networkmanager_connection": {
            "connected_device_id": "(Required) The ID of the second device in the connection.",
            "device_id": "(Required) The ID of the first device in the connection.",
            "global_network_id": "(Required) The ID of the global network."
        },
        "sagemaker_human_task_ui": {
            "human_task_ui_name": "(Required) The name of the Human Task UI.",
            "ui_template": "(Required) The Liquid template for the worker user interface. See [UI Template](#ui-template) below.",
            "content": "(Required) The content of the Liquid template for the worker user interface."
        },
        "codecommit_approval_rule_template": {
            "content": "(Required) The content of the approval rule template. Maximum of 3000 characters.",
            "name": "(Required) The name for the approval rule template. Maximum of 100 characters."
        },
        "glue_job": {
            "script_location": "(Required) Specifies the S3 path to a script that executes a job."
        },
        "storagegateway_smb_file_share": {
            "gateway_arn": "(Required) Amazon Resource Name (ARN) of the file gateway.",
            "location_arn": "(Required) The ARN of the backed storage used for storing file data.",
            "role_arn": "(Required) The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage."
        },
        "redshift_cluster": {
            "cluster_identifier": "(Required) The Cluster Identifier. Must be a lower case string.",
            "node_type": "(Required) The node type to be provisioned for the cluster.",
            "enable": "(Required) Enables logging information such as queries and connection attempts, for the specified Amazon Redshift cluster.",
            "destination_region": "(Required) The destination region that you want to copy snapshots to."
        },
        "api_gateway_integration": {
            "rest_api_id": "(Required) ID of the associated REST API.",
            "resource_id": "(Required) API resource ID.",
            "http_method": "(Required) HTTP method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTION`, `ANY`)",
            "type": "(Required) Integration input's [type](https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/). Valid values are `HTTP` (for HTTP backends), `MOCK` (not calling any real backend), `AWS` (for AWS services), `AWS_PROXY` (for Lambda proxy integration) and `HTTP_PROXY` (for HTTP proxy integration). An `HTTP` or `HTTP_PROXY` integration with a `connection_type` of `VPC_LINK` is referred to as a private integration and uses a VpcLink to connect API Gateway to a network load balancer of a VPC."
        },
        "autoscaling_lifecycle_hook": {
            "name": "(Required) Name of the lifecycle hook.",
            "autoscaling_group_name": "(Required) Name of the Auto Scaling group to which you want to assign the lifecycle hook",
            "lifecycle_transition": "(Required) Instance state to which you want to attach the lifecycle hook. For a list of lifecycle hook types, see [describe-lifecycle-hook-types](https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-lifecycle-hook-types.html#examples)"
        },
        "msk_serverless_cluster": {
            "client_authentication": "(Required) Specifies client authentication information for the serverless cluster. See below.",
            "cluster_name": "(Required) The name of the serverless cluster.",
            "vpc_config": "(Required) VPC configuration information. See below.",
            "sasl": "(Required) Details for client authentication using SASL. See below.",
            "iam": "(Required) Details for client authentication using IAM. See below.",
            "enabled": "(Required) Whether SASL/IAM authentication is enabled or not.",
            "subnet_ids": "(Required) A list of subnets in at least two different Availability Zones that host your client applications."
        },
        "api_gateway_domain_name": {
            "domain_name": "(Required) Fully-qualified domain name to register."
        },
        "cloudtrail_event_data_store": {},
        "network_acl": {
            "vpc_id": "(Required) The ID of the associated VPC.",
            "from_port": "(Required) The from port to match.",
            "to_port": "(Required) The to port to match.",
            "rule_no": "(Required) The rule number. Used for ordering.",
            "action": "(Required) The action to take.",
            "protocol": "(Required) The protocol to match. If using the -1 'all'"
        },
        "appsync_resolver": {
            "api_id": "(Required) API ID for the GraphQL API.",
            "type": "(Required) Type name from the schema defined in the GraphQL API.",
            "field": "(Required) Field name from the schema defined in the GraphQL API."
        },
        "ecr_replication_configuration": {
            "replication_configuration": "(Required) Replication configuration for a registry. See [Replication Configuration](#replication-configuration).",
            "rule": "(Required) The replication rules for a replication configuration. A maximum of 10 are allowed per `replication_configuration`. See [Rule](#rule)",
            "destination": "(Required) the details of a replication destination. A maximum of 25 are allowed per `rule`. See [Destination](#destination).",
            "region": "(Required) A Region to replicate to.",
            "registry_id": "(Required) The account ID of the destination registry to replicate to.",
            "filter": "(Required) The repository filter details.",
            "filter_type": "(Required) The repository filter type. The only supported value is `PREFIX_MATCH`, which is a repository name prefix specified with the filter parameter."
        },
        "gamelift_alias": {
            "name": "(Required) Name of the alias.",
            "routing_strategy": "(Required) Specifies the fleet and/or routing type to use for the alias.",
            "type": "(Required) Type of routing strategyE.g., `SIMPLE` or `TERMINAL`"
        },
        "lex_bot_alias": {
            "bot_name": "(Required) The name of the bot.",
            "bot_version": "(Required) The name of the bot.",
            "name": "(Required) The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length."
        },
        "sagemaker_image": {
            "image_name": "(Required) The name of the image. Must be unique to your account.",
            "role_arn": "(Required) The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf."
        },
        "gamelift_game_session_queue": {
            "name": "(Required) Name of the session queue.",
            "timeout_in_seconds": "(Required) Maximum time a game session request can remain in the queue.",
            "maximum_individual_player_latency_milliseconds": "(Required) Maximum latency value that is allowed for any player."
        },
        "codedeploy_deployment_config": {
            "deployment_config_name": "(Required) The name of the deployment config.",
            "type": "(Required) The type can either be `FLEET_PERCENT` or `HOST_COUNT`.",
            "value": "(Required) The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as"
        },
        "ebs_default_kms_key": {},
        "iam_security_token_service_preferences": {
            "global_endpoint_token_version": "(Required) The version of the STS global endpoint token. Valid values: `v1Token`, `v2Token`."
        },
        "media_package_channel": {
            "channel_id": "(Required) A unique identifier describing the channel"
        },
        "sagemaker_space": {
            "space_name": "(Required) The name of the space.",
            "domain_id": "(Required) The ID of the associated Domain.",
            "space_settings": "(Required) A collection of space settings. See [Space Settings](#space-settings) below.",
            "app_image_config_name": "(Required) The name of the App Image Config.",
            "image_name": "(Required) The name of the Custom Image."
        },
        "shield_protection_health_check_association": {
            "health_check_arn": "(Required) The ARN (Amazon Resource Name) of the Route53 Health Check resource which will be associated to the protected resource.",
            "shield_protection_id": "(Required) The ID of the protected resource."
        },
        "batch_job_definition": {
            "name": "(Required) Specifies the name of the job definition.",
            "type": "(Required) The type of job definition. Must be `container`."
        },
        "rds_cluster_instance": {
            "instance_class": "(Required) Instance class to use. For details on CPU and memory, see [Scaling Aurora DB Instances][4]. Aurora uses `db.*` instance classes/types. Please see [AWS Documentation][7] for currently available instance classes and complete details."
        },
        "synthetics_group_association": {
            "group_name": "(Required) Name of the group that the canary will be associated with.",
            "canary_arn": "(Required) ARN of the canary."
        },
        "waf_rule": {
            "metric_name": "(Required) The name or description for the Amazon CloudWatch metric of this rule. The name can contain only alphanumeric characters (A-Z, a-z, 0-9); the name can't contain whitespace.",
            "name": "(Required) The name or description of the rule."
        },
        "appstream_image_builder": {
            "instance_type": "(Required) Instance type to use when launching the image builder.",
            "name": "(Required) Unique name for the image builder.",
            "endpoint_type": "(Required) Type of interface endpoint."
        },
        "connect_contact_flow": {
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "name": "(Required) Specifies the name of the Contact Flow."
        },
        "sagemaker_image_version": {
            "image_name": "(Required) The name of the image. Must be unique to your account.",
            "base_image": "(Required) The registry path of the container image on which this image version is based."
        },
        "launch_configuration": {
            "image_id": "(Required) The EC2 image ID to launch.",
            "instance_type": "(Required) The size of instance to launch."
        },
        "iam_server_certificate": {},
        "sagemaker_workforce": {
            "workforce_name": "(Required) The name of the Workforce (must be unique).",
            "client_id": "(Required) The OIDC IdP client ID used to configure your private workforce.",
            "user_pool": "(Required) ID for your Amazon Cognito user pool.",
            "authorization_endpoint": "(Required) The OIDC IdP authorization endpoint used to configure your private workforce.",
            "client_secret": "(Required) The OIDC IdP client secret used to configure your private workforce.",
            "issuer": "(Required) The OIDC IdP issuer used to configure your private workforce.",
            "jwks_uri": "(Required) The OIDC IdP JSON Web Key Set (Jwks) URI used to configure your private workforce.",
            "logout_endpoint": "(Required) The OIDC IdP logout endpoint used to configure your private workforce.",
            "token_endpoint": "(Required) The OIDC IdP token endpoint used to configure your private workforce.",
            "user_info_endpoint": "(Required) The OIDC IdP user information endpoint used to configure your private workforce.",
            "cidrs": "(Required) A list of up to 10 CIDR values."
        },
        "swf_domain": {},
        "vpc_peering_connection": {
            "peer_vpc_id": "(Required) The ID of the VPC with which you are creating the VPC Peering Connection.",
            "vpc_id": "(Required) The ID of the requester VPC."
        },
        "quicksight_theme": {
            "base_theme_id": "(Required) The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.",
            "name": "(Required) Display name of the theme."
        },
        "vpc_ipam_scope": {},
        "app_cookie_stickiness_policy": {
            "name": "(Required) Name of the stickiness policy.",
            "load_balancer": "(Required) Name of load balancer to which the policy",
            "lb_port": "(Required) Load balancer port to which the policy",
            "cookie_name": "(Required) Application cookie whose lifetime the ELB's cookie should follow."
        },
        "globalaccelerator_listener": {
            "accelerator_arn": "(Required) The Amazon Resource Name (ARN) of your accelerator."
        },
        "iot_indexing_configuration": {},
        "ec2_transit_gateway_vpc_attachment": {
            "subnet_ids": "(Required) Identifiers of EC2 Subnets.",
            "transit_gateway_id": "(Required) Identifier of EC2 Transit Gateway.",
            "vpc_id": "(Required) Identifier of EC2 VPC."
        },
        "ecr_repository": {
            "name": "(Required) Name of the repository.",
            "scan_on_push": "(Required) Indicates whether images are scanned after being pushed to the repository (true) or not scanned (false)."
        },
        "servicecatalog_principal_portfolio_association": {
            "portfolio_id": "(Required) Portfolio identifier.",
            "principal_arn": "(Required) Principal ARN."
        },
        "xray_sampling_rule": {
            "rule_name": "(Required) The name of the sampling rule.",
            "resource_arn": "(Required) Matches the ARN of the AWS resource on which the service runs.",
            "priority": "(Required) The priority of the sampling rule.",
            "fixed_rate": "(Required) The percentage of matching requests to instrument, after the reservoir is exhausted.",
            "reservoir_size": "(Required) A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.",
            "service_name": "(Required) Matches the `name` that the service uses to identify itself in segments.",
            "service_type": "(Required) Matches the `origin` that the service uses to identify its type in segments.",
            "host": "(Required) Matches the hostname from a request URL.",
            "http_method": "(Required) Matches the HTTP method of a request.",
            "url_path": "(Required) Matches the path from a request URL.",
            "version": "(Required) The version of the sampling rule format (`1` )"
        },
        "default_network_acl": {
            "default_network_acl_id": "(Required) Network ACL ID to manage. This attribute is exported from `aws_vpc`, or manually found via the AWS Console.",
            "action": "(Required) The action to take.",
            "from_port": "(Required) The from port to match.",
            "protocol": "(Required) The protocol to match. If using the -1 'all' protocol, you must specify a from and to port of 0.",
            "rule_no": "(Required) The rule number. Used for ordering.",
            "to_port": "(Required) The to port to match."
        },
        "gamelift_script": {
            "name": "(Required) Name of the script",
            "bucket": "(Required) Name of your S3 bucket.",
            "key": "(Required) Name of the zip file containing your script files.",
            "role_arn": "(Required) ARN of the access role that allows Amazon GameLift to access your S3 bucket."
        },
        "rds_cluster_activity_stream": {},
        "datasync_location_s3": {
            "s3_bucket_arn": "(Required) Amazon Resource Name (ARN) of the S3 Bucket.",
            "s3_config": "(Required) Configuration block containing information for connecting to S3.",
            "subdirectory": "(Required) Prefix to perform actions as source or destination.",
            "bucket_access_role_arn": "(Required) ARN of the IAM Role used to connect to the S3 Bucket."
        },
        "ec2_transit_gateway": {},
        "lightsail_instance_public_ports": {
            "instance_name": "(Required) Name of the Lightsail Instance.",
            "port_info": {
                "from_port": "(Required) First port in a range of open ports on an instance.",
                "protocol": "(Required) IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.",
                "to_port": "(Required) Last port in a range of open ports on an instance."
            }
        },
        "efs_backup_policy": {
            "file_system_id": "(Required) The ID of the EFS file system.",
            "backup_policy": "(Required) A backup_policy object (documented below).",
            "status": "(Required) A status of the backup policy. Valid values: `ENABLED`, `DISABLED`."
        },
        "globalaccelerator_custom_routing_accelerator": {
            "name": "(Required) The name of a custom routing accelerator."
        },
        "ssoadmin_instance_access_control_attributes": {
            "attribute": "(Required) See [AccessControlAttribute](#accesscontrolattribute) for more details.",
            "key": "(Required) The name of the attribute associated with your identities in your identity source. This is used to map a specified attribute in your identity source with an attribute in AWS SSO.",
            "value": "(Required) The value used for mapping a specified attribute to an identity source. See [AccessControlAttributeValue](#accesscontrolattributevalue)",
            "source": "(Required) The identity source to use when mapping a specified attribute to AWS SSO."
        },
        "vpc_endpoint_service_allowed_principal": {
            "vpc_endpoint_service_id": "(Required) The ID of the VPC endpoint service to allow permission.",
            "principal_arn": "(Required) The ARN of the principal to allow permissions."
        },
        "db_cluster_snapshot": {
            "db_cluster_identifier": "(Required) The DB Cluster Identifier from which to take the snapshot.",
            "db_cluster_snapshot_identifier": "(Required) The Identifier for the snapshot."
        },
        "appstream_directory_config": {
            "directory_name": "(Required) Fully qualified name of the directory.",
            "organizational_unit_distinguished_names": "(Required) Distinguished names of the organizational units for computer accounts.",
            "service_account_credentials": "(Required) Configuration block for the name of the directory and organizational unit (OU) to use to join the directory config to a Microsoft Active Directory domain. See [`service_account_credentials`](#service_account_credentials) below.",
            "account_name": "(Required) User name of the account. This account must have the following privileges: create computer objects, join computers to the domain, and change/reset the password on descendant computer objects for the organizational units specified.",
            "account_password": "(Required) Password for the account."
        },
        "config_conformance_pack": {
            "parameter_name": "(Required) The input key.",
            "parameter_value": "(Required) The input value."
        },
        "apigatewayv2_model": {
            "api_id": "(Required) API identifier.",
            "content_type": "(Required)  The content-type for the model, for example, `application/json`. Must be between 1 and 256 characters in length.",
            "name": "(Required) Name of the model. Must be alphanumeric. Must be between 1 and 128 characters in length.",
            "schema": "(Required) Schema for the model. This should be a [JSON schema draft 4](https://tools.ietf.org/html/draft-zyp-json-schema-04) model. Must be less than or equal to 32768 characters in length."
        },
        "lb_ssl_negotiation_policy": {
            "name": "(Required) The name of the SSL negotiation policy.",
            "load_balancer": "(Required) The load balancer to which the policy",
            "lb_port": "(Required) The load balancer port to which the policy"
        },
        "spot_datafeed_subscription": {
            "bucket": "(Required) The Amazon S3 bucket in which to store the Spot instance data feed."
        },
        "opensearch_inbound_connection_accepter": {},
        "cloudformation_stack": {
            "name": "(Required) Stack name."
        },
        "directory_service_conditional_forwarder": {
            "directory_id": "(Required) ID of directory.",
            "dns_ips": "(Required) A list of forwarder IP addresses.",
            "remote_domain_name": "(Required) The fully qualified domain name of the remote domain for which forwarders will be used."
        },
        "dlm_lifecycle_policy": {
            "description": "(Required) A description for the DLM lifecycle policy.",
            "execution_role_arn": "(Required) The ARN of an IAM role that is able to be assumed by the DLM service.",
            "policy_details": "(Required) See the [`policy_details` configuration](#policy-details-arguments) block. Max of 1.",
            "encryption_configuration": "(Required) The encryption settings for the copied snapshot. See the [`encryption_configuration`](#encryption-configuration-arguments) block. Max of 1 per action.",
            "retain_rule": "(Required) The retention rule that indicates how long snapshot copies are to be retained in the destination Region. See the [`retain_rule`](#cross-region-copy-rule-retain-rule-arguments) block. Max of 1 per schedule.",
            "target": "(Required) The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
            "encrypted": "(Required) To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or if encryption by default is not enabled.",
            "parameters": "(Required) Information about the event. See the [`parameters` configuration](#event-source-parameters-arguments) block.",
            "type": "(Required) The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are `MANAGED_CWE`.",
            "description_regex": "(Required) The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.",
            "event_type": "(Required) The type of event. Currently, only `shareSnapshot` events are supported.",
            "snapshot_owner": "(Required) The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.",
            "create_rule": "(Required) See the [`create_rule`](#create-rule-arguments) block. Max of 1 per schedule.",
            "name": "(Required) A name for the schedule.",
            "deprecate_rule": "(Required) See the [`deprecate_rule`](#deprecate-rule-arguments) block. Max of 1 per schedule.",
            "fast_restore_rule": "(Required) See the [`fast_restore_rule`](#fast-restore-rule-arguments) block. Max of 1 per schedule.",
            "share_rule": "(Required) See the [`share_rule`](#share-rule-arguments) block. Max of 1 per schedule.",
            "availability_zones": "(Required) The Availability Zones in which to enable fast snapshot restore.",
            "target_accounts": "(Required) The IDs of the AWS accounts with which to share the snapshots.",
            "interval": "(Required) The amount of time to retain each snapshot. The maximum is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.",
            "interval_unit": "(Required) The unit of time for time-based retention. Valid values: `DAYS`, `WEEKS`, `MONTHS`, or `YEARS`."
        },
        "security_group_rule": {
            "from_port": "(Required) Start port (or ICMP type number if protocol is \"icmp\" or \"icmpv6\").",
            "protocol": "(Required) Protocol. If not icmp, icmpv6, tcp, udp, or all use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)",
            "security_group_id": "(Required) Security group to apply this rule to.",
            "to_port": "(Required) End port (or ICMP code if protocol is \"icmp\").",
            "type": "(Required) Type of rule being created. Valid options are `ingress` (inbound)"
        },
        "acm_certificate_validation": {
            "certificate_arn": "(Required) ARN of the certificate that is being validated."
        },
        "apigatewayv2_route_response": {
            "api_id": "(Required) API identifier.",
            "route_id": "(Required) Identifier of the [`aws_apigatewayv2_route`](/docs/providers/aws/r/apigatewayv2_route.html).",
            "route_response_key": "(Required) Route response key."
        },
        "iam_instance_profile": {},
        "codecatalyst_source_repository": {
            "name": "(Required) The name of the source repository. For more information about name requirements, see [Quotas for source repositories](https://docs.aws.amazon.com/codecatalyst/latest/userguide/source-quotas.html).",
            "space_name": "(Required) The name of the CodeCatalyst space.",
            "project_name": "(Required) The name of the project in the CodeCatalyst space."
        },
        "glacier_vault": {
            "name": "(Required) The name of the Vault. Names can be between 1 and 255 characters long and the valid characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).",
            "events": "(Required) You can configure a vault to publish a notification for `ArchiveRetrievalCompleted` and `InventoryRetrievalCompleted` events.",
            "sns_topic": "(Required) The SNS Topic ARN."
        },
        "securityhub_action_target": {
            "name": "(Required) The description for the custom action target.",
            "identifier": "(Required) The ID for the custom action target.",
            "description": "(Required) The name of the custom action target."
        },
        "backup_vault_notifications": {
            "backup_vault_name": "(Required) Name of the backup vault to add notifications for.",
            "sns_topic_arn": "(Required) The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events",
            "backup_vault_events": "(Required) An array of events that indicate the status of jobs to back up resources to the backup vault."
        },
        "resourcegroups_group": {
            "name": "(Required) The name of the group configuration parameter.",
            "resource_query": "(Required) A `resource_query` block. Resource queries are documented below.",
            "query": "(Required) The resource query as a JSON string.",
            "type": "(Required) Specifies the type of group configuration item."
        },
        "datasync_location_nfs": {
            "on_prem_config": "(Required) Configuration block containing information for connecting to the NFS File System.",
            "server_hostname": "(Required) Specifies the IP address or DNS name of the NFS server. The DataSync Agent(s) use this to mount the NFS server.",
            "subdirectory": "(Required) Subdirectory to perform actions as source or destination. Should be exported by the NFS server.",
            "agent_arns": "(Required) List of Amazon Resource Names (ARNs) of the DataSync Agents used to connect to the NFS server."
        },
        "location_map": {
            "configuration": {
                "style": "(Required) Specifies the map style selected from an available data provider. Valid values can be found in the [Location Service CreateMap API Reference](https://docs.aws.amazon.com/location/latest/APIReference/API_CreateMap.html)."
            },
            "map_name": "(Required) The name for the map resource."
        },
        "spot_instance_request": {},
        "route53_cidr_collection": {
            "name": "(Required) Unique name for the CIDR collection."
        },
        "servicecatalog_portfolio_share": {
            "portfolio_id": "(Required) Portfolio identifier.",
            "principal_id": "(Required) Identifier of the principal with whom you will share the portfolio. Valid values AWS account IDs and ARNs of AWS Organizations and organizational units.",
            "type": "(Required) Type of portfolio share. Valid values are `ACCOUNT` (an external account), `ORGANIZATION` (a share to every account in an organization), `ORGANIZATIONAL_UNIT`, `ORGANIZATION_MEMBER_ACCOUNT` (a share to an account in an organization)."
        },
        "dax_cluster": {
            "iam_role_arn": "(Required) A valid Amazon Resource Name (ARN) that identifies"
        },
        "security_group": {},
        "chimesdkvoice_global_settings": {
            "voice_connector": "(Required) The Voice Connector settings. See [voice_connector](#voice_connector)."
        },
        "elastic_beanstalk_application_version": {
            "application": "(Required) Name of the Beanstalk Application the version is associated with.",
            "bucket": "(Required) S3 bucket that contains the Application Version source bundle.",
            "key": "(Required) S3 object that is the Application Version source bundle.",
            "name": "(Required) Unique name for the this Application Version."
        },
        "licensemanager_grant": {
            "name": "(Required) The Name of the grant.",
            "allowed_operations": "(Required) A list of the allowed operations for the grant. This is a subset of the allowed operations on the license.",
            "license_arn": "(Required) The ARN of the license to grant.",
            "principal": "(Required) The target account for the grant in the form of the ARN for an account principal of the root user.",
            "home_region": "(Required) The home region for the license."
        },
        "sagemaker_app": {
            "app_name": "(Required) The name of the app.",
            "app_type": "(Required) The type of app. Valid values are `JupyterServer`, `KernelGateway`, `RStudioServerPro`, `RSessionGateway` and `TensorBoard`.",
            "domain_id": "(Required) The domain ID."
        },
        "cognito_identity_pool_provider_principal_tag": {},
        "glue_workflow": {},
        "cloudwatch_metric_alarm": {
            "alarm_name": "(Required) The descriptive name for the alarm. This name must be unique within the user's AWS account",
            "comparison_operator": "(Required) The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: `GreaterThanOrEqualToThreshold`, `GreaterThanThreshold`, `LessThanThreshold`, `LessThanOrEqualToThreshold`. Additionally, the values  `LessThanLowerOrGreaterThanUpperThreshold`, `LessThanLowerThreshold`, and `GreaterThanUpperThreshold` are used only for alarms based on anomaly detection models.",
            "evaluation_periods": "(Required) The number of periods over which data is compared to the specified threshold.",
            "id": "(Required) A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.",
            "metric_name": "(Required) The name for this metric.",
            "namespace": "(Required) The namespace for this metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).",
            "period": "(Required) Granularity in seconds of returned data points.",
            "stat": "(Required) The statistic to apply to this metric."
        },
        "guardduty_publishing_destination": {
            "detector_id": "(Required) The detector ID of the GuardDuty.",
            "destination_arn": "(Required) The bucket arn and prefix under which the findings get exported. Bucket-ARN is required, the prefix is optional and will be `AWSLogs/[Account-ID]/GuardDuty/[Region]/` if not provided",
            "kms_key_arn": "(Required) The ARN of the KMS key used to encrypt GuardDuty findings. GuardDuty enforces this to be encrypted."
        },
        "sagemaker_feature_group": {
            "feature_group_name": "(Required) The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.",
            "record_identifier_feature_name": "(Required) The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.",
            "event_time_feature_name": "(Required) The name of the feature that stores the EventTime of a Record in a Feature Group.",
            "feature_name": "(Required) The name of a feature. `feature_name` cannot be any of the following: `is_deleted`, `write_time`, `api_invocation_time`.",
            "feature_type": "(Required) The value type of a feature. Valid values are `Integral`, `Fractional`, or `String`.",
            "s3_storage_config": "(Required) The Amazon Simple Storage (Amazon S3) location of OfflineStore. See [S3 Storage Config](#s3-storage-config) Below.",
            "security_config": "(Required) Security config for at-rest encryption of your OnlineStore. See [Security Config](#security-config) Below.",
            "s3_uri": "(Required) The S3 URI, or location in Amazon S3, of OfflineStore."
        },
        "vpc_ipam": {
            "operating_regions": {
                "region_name": "(Required) The name of the Region you want to add to the IPAM."
            }
        },
        "wafregional_rule_group": {
            "name": "(Required) A friendly name of the rule group",
            "metric_name": "(Required) A friendly name for the metrics from the rule group"
        },
        "lambda_function_event_invoke_config": {
            "function_name": "(Required) Name or Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.",
            "destination": "(Required) Amazon Resource Name (ARN) of the destination resource. See the [Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations) for acceptable resource types and associated IAM permissions."
        },
        "rolesanywhere_profile": {
            "name": "(Required) The name of the Profile.",
            "role_arns": "(Required) A list of IAM roles that this profile can assume"
        },
        "autoscaling_notification": {
            "group_names": "(Required) List of AutoScaling Group Names",
            "notifications": "(Required) List of Notification Types that trigger",
            "topic_arn": "(Required) Topic ARN for notifications to be sent through"
        },
        "devicefarm_upload": {
            "name": "(Required) The upload's file name. The name should not contain any forward slashes (/). If you are uploading an iOS app, the file name must end with the .ipa extension. If you are uploading an Android app, the file name must end with the .apk extension. For all others, the file name must end with the .zip file extension.",
            "project_arn": "(Required) The ARN of the project for the upload.",
            "type": "(Required) The upload's upload type. See [AWS Docs](https://docs.aws.amazon.com/devicefarm/latest/APIReference/API_CreateUpload.html#API_CreateUpload_RequestSyntax) for valid list of values."
        },
        "location_tracker": {
            "tracker_name": "(Required) The name of the tracker resource."
        },
        "transcribe_vocabulary": {
            "language_code": "(Required) The language code you selected for your vocabulary.",
            "vocabulary_file_uri": "(Required) The Amazon S3 location (URI) of the text file that contains your custom vocabulary.",
            "vocabulary_name": "(Required) The name of the Vocabulary."
        },
        "verifiedaccess_instance": {},
        "ec2_traffic_mirror_filter": {},
        "dx_connection": {
            "bandwidth": "(Required) The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.",
            "location": "(Required) The AWS Direct Connect location where the connection is located. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.",
            "name": "(Required) The name of the connection."
        },
        "dx_hosted_public_virtual_interface_accepter": {
            "virtual_interface_id": "(Required) The ID of the Direct Connect virtual interface to accept."
        },
        "apprunner_observability_configuration": {
            "vendor": "(Required) Implementation provider chosen for tracing App Runner services. Valid values: `AWSXRAY`."
        },
        "emr_managed_scaling_policy": {
            "cluster_id": "(Required) ID of the EMR cluster",
            "compute_limits": {
                "unit_type": "(Required) The unit type used for specifying a managed scaling policy. Valid Values: `InstanceFleetUnits` | `Instances` | `VCPU`",
                "minimum_capacity_units": "(Required) The lower boundary of EC2 units. It is measured through VCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.",
                "maximum_capacity_units": "(Required) The upper boundary of EC2 units. It is measured through VCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration."
            }
        },
        "network_interface_attachment": {
            "instance_id": "(Required) Instance ID to attach.",
            "network_interface_id": "(Required) ENI ID to attach.",
            "device_index": "(Required) Network interface index (int)."
        },
        "egress_only_internet_gateway": {
            "vpc_id": "(Required) The VPC ID to create in."
        },
        "memorydb_parameter_group": {
            "name": "(Required) The name of the parameter.",
            "value": "(Required) The value of the parameter."
        },
        "networkmanager_link_association": {
            "device_id": "(Required) The ID of the device.",
            "global_network_id": "(Required) The ID of the global network.",
            "link_id": "(Required) The ID of the link."
        },
        "glue_data_catalog_encryption_settings": {
            "connection_password_encryption": {
                "return_connection_password_encrypted": "(Required) When set to `true`, passwords remain encrypted in the responses of GetConnection and GetConnections. This encryption takes effect independently of the catalog encryption."
            },
            "encryption_at_rest": {
                "catalog_encryption_mode": "(Required) The encryption-at-rest mode for encrypting Data Catalog data. Valid values are `DISABLED` and `SSE-KMS`."
            }
        },
        "iot_authorizer": {
            "authorizer_function_arn": "(Required) The ARN of the authorizer's Lambda function.",
            "name": "(Required) The name of the authorizer."
        },
        "applicationinsights_application": {
            "resource_group_name": "(Required) Name of the resource group."
        },
        "cloudwatch_event_target": {
            "arn": "(Required) The Amazon Resource Name (ARN) of the target.",
            "rule": "(Required) The name of the rule you want to add targets to."
        },
        "ec2_transit_gateway_connect": {
            "transit_gateway_id": "(Required) Identifier of EC2 Transit Gateway.",
            "transport_attachment_id": "(Required) The underlaying VPC attachment"
        },
        "secretsmanager_secret_rotation": {
            "secret_id": "(Required) Specifies the secret to which you want to add a new version. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret. The secret must already exist.",
            "rotation_lambda_arn": "(Required) Specifies the ARN of the Lambda function that can rotate the secret."
        },
        "launch_template": {
            "device_name": "(Required) The name of the device to mount.",
            "type": "(Required) Accelerator type.",
            "memory_mib": "(Required) Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.",
            "min": "(Required) Minimum.",
            "vcpu_count": "(Required) Block describing the minimum and maximum number of vCPUs. Default is no maximum.",
            "license_configuration_arn": "(Required) ARN of the license configuration."
        },
        "networkmanager_connect_peer": {},
        "pipes_pipe": {
            "role_arn": "(Required) ARN of the role that allows the pipe to send data to the target.",
            "source": "(Required) Source resource of the pipe (typically an ARN).",
            "target": "(Required) Target resource of the pipe (typically an ARN).",
            "pattern": "(Required) The event pattern. At most 4096 characters.",
            "credentials": "(Required) The credentials needed to access the resource. Detailed below.",
            "queue_name": "(Required) The name of the destination queue to consume. Maximum length of 1000.",
            "basic_auth": "(Required) The ARN of the Secrets Manager secret containing the credentials.",
            "starting_position": "(Required) The position in a stream from which to start reading. Valid values: TRIM_HORIZON, LATEST, AT_TIMESTAMP.",
            "topic_name": "(Required) The name of the topic that the pipe will read from. Maximum length of 249.",
            "job_definition": "(Required) The job definition used by this job. This value can be one of name, name:revision, or the Amazon Resource Name (ARN) for the job definition. If name is specified without a revision then the latest active revision is used.",
            "job_name": "(Required) The name of the job. It can be up to 128 letters long.",
            "size_in_gib": "(Required) The total amount, in GiB, of ephemeral storage to set for the task. The minimum supported value is 21 GiB and the maximum supported value is 200 GiB.",
            "partition_key": "(Required) Determines which shard in the stream the data record is assigned to. Partition keys are Unicode strings with a maximum length limit of 256 characters for each key. Amazon Kinesis Data Streams uses the partition key as input to a hash function that maps the partition key and associated data to a specific shard. Specifically, an MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards. As a result of this hashing mechanism, all data records with the same partition key map to the same shard within the stream.",
            "database": "(Required) The name of the database. Required when authenticating using temporary credentials."
        },
        "lambda_layer_version_permission": {
            "action": "(Required) Action, which will be allowed. `lambda:GetLayerVersion` value is suggested by AWS documantation.",
            "principal": "(Required) AWS account ID which should be able to use your Lambda Layer. `*` can be used here, if you want to share your Lambda Layer widely.",
            "statement_id": "(Required) The name of Lambda Layer Permission, for example `dev-account` - human readable note about what is this permission for."
        },
        "amplify_backend_environment": {
            "app_id": "(Required) Unique ID for an Amplify app.",
            "environment_name": "(Required) Name for the backend environment."
        },
        "ecs_account_setting_default": {
            "name": "(Required) Name of the account setting to set. Valid values are `serviceLongArnFormat`, `taskLongArnFormat`, `containerInstanceLongArnFormat`, `awsvpcTrunking` and `containerInsights`.",
            "value": "(Required) State of the setting. Valid values are `enabled` and `disabled`."
        },
        "globalaccelerator_custom_routing_endpoint_group": {
            "listener_arn": "(Required) The Amazon Resource Name (ARN) of the custom routing listener.",
            "destination_configuration": "(Required) The port ranges and protocols for all endpoints in a custom routing endpoint group to accept client traffic on. Fields documented below.",
            "from_port": "(Required) The first port, inclusive, in the range of ports for the endpoint group that is associated with a custom routing accelerator.",
            "protocols": "(Required) The protocol for the endpoint group that is associated with a custom routing accelerator. The protocol can be either `\"TCP\"` or `\"UDP\"`.",
            "to_port": "(Required) The last port, inclusive, in the range of ports for the endpoint group that is associated with a custom routing accelerator."
        },
        "lakeformation_resource_lf_tags": {
            "value": "(Required) Value from the possible values for the LF-tag."
        },
        "backup_selection": {
            "name": "(Required) The display name of a resource selection document.",
            "plan_id": "(Required) The backup plan ID to be associated with the selection of resources.",
            "iam_role_arn": "(Required) The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.",
            "type": "(Required) An operation, such as `StringEquals`, that is applied to a key-value pair used to filter resources in a selection.",
            "key": "(Required) The key in a key-value pair.",
            "value": "(Required) The value in a key-value pair."
        },
        "directory_service_shared_directory": {
            "directory_id": "(Required) Identifier of the Managed Microsoft AD directory that you want to share with other accounts.",
            "target": "(Required) Identifier for the directory consumer account with whom the directory is to be shared. See below.",
            "id": "(Required) Identifier of the directory consumer account."
        },
        "appconfig_extension_association": {
            "extension_arn": "(Required) The ARN of the extension defined in the association."
        },
        "config_organization_custom_rule": {
            "lambda_function_arn": "(Required) Amazon Resource Name (ARN) of the rule Lambda Function",
            "name": "(Required) The name of the rule",
            "trigger_types": "(Required) List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`, and `ScheduledNotification`"
        },
        "ec2_transit_gateway_route_table_propagation": {
            "transit_gateway_attachment_id": "(Required) Identifier of EC2 Transit Gateway Attachment.",
            "transit_gateway_route_table_id": "(Required) Identifier of EC2 Transit Gateway Route Table."
        },
        "vpc_endpoint_subnet_association": {
            "vpc_endpoint_id": "(Required) The ID of the VPC endpoint with which the subnet will be associated.",
            "subnet_id": "(Required) The ID of the subnet to be associated with the VPC endpoint."
        },
        "vpn_connection_route": {
            "destination_cidr_block": "(Required) The CIDR block associated with the local subnet of the customer network.",
            "vpn_connection_id": "(Required) The ID of the VPN connection."
        },
        "route53_resolver_config": {
            "resource_id": "(Required) The ID of the VPC that the configuration is for.",
            "autodefined_reverse_flag": "(Required) Indicates whether or not the Resolver will create autodefined rules for reverse DNS lookups. Valid values: `ENABLE`, `DISABLE`."
        },
        "timestreamwrite_database": {},
        "emrcontainers_virtual_cluster": {
            "container_provider": "(Required) Configuration block for the container provider associated with your cluster."
        },
        "imagebuilder_infrastructure_configuration": {
            "instance_profile_name": "(Required) Name of IAM Instance Profile.",
            "name": "(Required) Name for the configuration.",
            "s3_logs": {
                "s3_bucket_name": "(Required) Name of the S3 Bucket."
            }
        },
        "opsworks_ganglia_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "password": "(Required) The password to use for Ganglia.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "dx_lag": {
            "name": "(Required) The name of the LAG.",
            "connections_bandwidth": "(Required) The bandwidth of the individual physical connections bundled by the LAG. Valid values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.",
            "location": "(Required) The AWS Direct Connect location in which the LAG should be allocated. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`."
        },
        "s3_bucket_policy": {
            "bucket": "(Required) Name of the bucket to which to apply the policy.",
            "policy": "(Required) Text of the policy. Although this is a bucket policy rather than an IAM policy, the [`aws_iam_policy_document`](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document) data source may be used, so long as it specifies a principal. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy). Note: Bucket policies are limited to 20 KB in size."
        },
        "schemas_registry_policy": {
            "registry_name": "(Required) Name of EventBridge Schema Registry",
            "policy": "(Required) Resource Policy for EventBridge Schema Registry"
        },
        "ses_domain_identity_verification": {
            "domain": "(Required) The domain name of the SES domain identity to verify."
        },
        "memorydb_acl": {},
        "vpn_gateway_attachment": {
            "vpc_id": "(Required) The ID of the VPC.",
            "vpn_gateway_id": "(Required) The ID of the Virtual Private Gateway."
        },
        "codegurureviewer_repository_association": {
            "repository": "(Required) An object describing the repository to associate. Valid values: `bitbucket`, `codecommit`, `github_enterprise_server`, or `s3_bucket`. Block is documented below. Note: for repositories that leverage CodeStar connections (ex. `bitbucket`, `github_enterprise_server`) the connection must be in `Available` status prior to creating this resource."
        },
        "inspector2_enabler": {
            "account_ids": "(Required) Set of account IDs.",
            "resource_types": "(Required) Type of resources to scan."
        },
        "ssm_parameter": {
            "name": "(Required) Name of the parameter. If the name contains a path (e.g., any forward slashes (`/`)), it must be fully qualified with a leading forward slash (`/`). For additional requirements and constraints, see the [AWS SSM User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html).",
            "type": "(Required) Type of the parameter. Valid types are `String`, `StringList` and `SecureString`."
        },
        "iot_thing_principal_attachment": {
            "principal": "(Required) The AWS IoT Certificate ARN or Amazon Cognito Identity ID.",
            "thing": "(Required) The name of the thing."
        },
        "route53_resolver_firewall_rule": {
            "name": "(Required) A name that lets you identify the rule, to manage and use it.",
            "action": "(Required) The action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule's domain list. Valid values: `ALLOW`, `BLOCK`, `ALERT`.",
            "firewall_domain_list_id": "(Required) The ID of the domain list that you want to use in the rule.",
            "firewall_rule_group_id": "(Required) The unique identifier of the firewall rule group where you want to create the rule.",
            "priority": "(Required) The setting that determines the processing order of the rule in the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting."
        },
        "ses_template": {
            "name": "(Required) The name of the template. Cannot exceed 64 characters. You will refer to this name when you send email."
        },
        "cognito_user_pool_domain": {
            "domain": "(Required) For custom domains, this is the fully-qualified domain name, such as auth.example.com. For Amazon Cognito prefix domains, this is the prefix alone, such as auth.",
            "user_pool_id": "(Required) The user pool ID."
        },
        "internet_gateway": {},
        "appsync_domain_name_api_association": {
            "api_id": "(Required) API ID.",
            "domain_name": "(Required) Appsync domain name."
        },
        "lb_target_group": {},
        "ec2_network_insights_path": {
            "source": "(Required) ID or ARN of the resource which is the source of the path. Can be an Instance, Internet Gateway, Network Interface, Transit Gateway, VPC Endpoint, VPC Peering Connection or VPN Gateway. If the resource is in another account, you must specify an ARN.",
            "destination": "(Required) ID or ARN of the resource which is the destination of the path. Can be an Instance, Internet Gateway, Network Interface, Transit Gateway, VPC Endpoint, VPC Peering Connection or VPN Gateway. If the resource is in another account, you must specify an ARN.",
            "protocol": "(Required) Protocol to use for analysis. Valid options are `tcp` or `udp`."
        },
        "fsx_ontap_file_system": {
            "subnet_ids": "(Required) A list of IDs for the subnets that the file system will be accessible from. Upto 2 subnets can be provided.",
            "preferred_subnet_id": "(Required) The ID for a subnet. A subnet is a range of IP addresses in your virtual private cloud (VPC).",
            "throughput_capacity": "(Required) Sets the throughput capacity (in MBps) for the file system that you're creating. Valid values are `128`, `256`, `512`, `1024`, `2048`, and `4096`."
        },
        "qldb_stream": {
            "inclusive_start_time": "(Required) The inclusive start date and time from which to start streaming journal data. This parameter must be in ISO 8601 date and time format and in Universal Coordinated Time (UTC). For example: `\"2019-06-13T21:36:34Z\"`.  This cannot be in the future and must be before `exclusive_end_time`.  If you provide a value that is before the ledger's `CreationDateTime`, QLDB effectively defaults it to the ledger's `CreationDateTime`.",
            "kinesis_configuration": {
                "stream_arn": "(Required) The Amazon Resource Name (ARN) of the Kinesis Data Streams resource."
            },
            "ledger_name": "(Required) The name of the QLDB ledger.",
            "role_arn": "(Required) The Amazon Resource Name (ARN) of the IAM role that grants QLDB permissions for a journal stream to write data records to a Kinesis Data Streams resource.",
            "stream_name": "(Required) The name that you want to assign to the QLDB journal stream. User-defined names can help identify and indicate the purpose of a stream.  Your stream name must be unique among other active streams for a given ledger. Stream names have the same naming constraints as ledger names, as defined in the [Amazon QLDB Developer Guide](https://docs.aws.amazon.com/qldb/latest/developerguide/limits.html#limits.naming)."
        },
        "s3control_bucket_lifecycle_configuration": {
            "bucket": "(Required) Amazon Resource Name (ARN) of the bucket.",
            "rule": "(Required) Configuration block(s) containing lifecycle rules for the bucket.",
            "days_after_initiation": "(Required) Number of days after which Amazon S3 aborts an incomplete multipart upload.",
            "id": "(Required) Unique identifier for the rule."
        },
        "sns_platform_application": {
            "name": "(Required) The friendly name for the SNS platform application",
            "platform": "(Required) The platform that the app is registered with. See [Platform][1] for supported platforms.",
            "platform_credential": "(Required) Application Platform credential. See [Credential][1] for type of credential required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.",
            "apple_platform_team_id": "(Required) The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.",
            "apple_platform_bundle_id": "(Required) The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.)."
        },
        "ssmincidents_replication_set": {
            "name": "(Required) The name of the Region, such as `ap-southeast-2`."
        },
        "s3_bucket_cors_configuration": {
            "cors_rule": {
                "allowed_methods": "(Required) Set of HTTP methods that you allow the origin to execute. Valid values are `GET`, `PUT`, `HEAD`, `POST`, and `DELETE`.",
                "allowed_origins": "(Required) Set of origins you want customers to be able to access the bucket from."
            }
        },
        "s3control_storage_lens_configuration": {
            "config_id": "(Required) The ID of the S3 Storage Lens configuration.",
            "storage_lens_configuration": "(Required) The S3 Storage Lens configuration. See [Storage Lens Configuration](#storage-lens-configuration) below for more details."
        },
        "appintegrations_event_integration": {
            "eventbridge_bus": "(Required) EventBridge bus.",
            "event_filter": "(Required) Block that defines the configuration information for the event filter. The Event Filter block is documented below.",
            "name": "(Required) Name of the Event Integration.",
            "source": "(Required) Source of the events."
        },
        "route53_resolver_firewall_config": {
            "resource_id": "(Required) The ID of the VPC that the configuration is for.",
            "firewall_fail_open": "(Required) Determines how Route 53 Resolver handles queries during failures, for example when all traffic that is sent to DNS Firewall fails to receive a reply. By default, fail open is disabled, which means the failure mode is closed. This approach favors security over availability. DNS Firewall blocks queries that it is unable to evaluate properly. If you enable this option, the failure mode is open. This approach favors availability over security. DNS Firewall allows queries to proceed if it is unable to properly evaluate them. Valid values: `ENABLED`, `DISABLED`."
        },
        "s3_bucket_versioning": {
            "versioning_configuration": {
                "status": "(Required) Versioning state of the bucket. Valid values: `Enabled`, `Suspended`, or `Disabled`. `Disabled` should only be used when creating or importing resources that correspond to unversioned S3 buckets."
            }
        },
        "wafregional_xss_match_set": {
            "name": "(Required) The name of the set",
            "field_to_match": "(Required) Specifies where in a web request to look for cross-site scripting attacks.",
            "text_transformation": "(Required) Which text transformation, if any, to perform on the web request before inspecting the request for cross-site scripting attacks.",
            "type": "(Required) The part of the web request that you want AWS WAF to search for a specified stringE.g., `HEADER` or `METHOD`"
        },
        "api_gateway_deployment": {
            "rest_api_id": "(Required) REST API identifier."
        },
        "db_snapshot": {
            "db_instance_identifier": "(Required) The DB Instance Identifier from which to take the snapshot.",
            "db_snapshot_identifier": "(Required) The Identifier for the snapshot."
        },
        "iam_user_policy_attachment": {},
        "load_balancer_backend_server_policy": {
            "load_balancer_name": "(Required) The load balancer to attach the policy to.",
            "policy_names": "(Required) List of Policy Names to apply to the backend server.",
            "instance_port": "(Required) The instance port to apply the policy to."
        },
        "ssoadmin_permission_set": {},
        "macie2_classification_job": {
            "job_type": " (Required) The schedule for running the job. Valid values are: `ONE_TIME` - Run the job only once. If you specify this value, don't specify a value for the `schedule_frequency` property. `SCHEDULED` - Run the job on a daily, weekly, or monthly basis. If you specify this value, use the `schedule_frequency` property to define the recurrence pattern for the job.",
            "comparator": " (Required) The operator to use in the condition. Valid combination and values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-jobcomparator)",
            "key": " (Required) The tag key to use in the condition. The only valid value is `TAG`.",
            "values": " (Required) An array that lists the values to use in the condition. Valid combination of values are available in the [AWS Documentation](https://docs.aws.amazon.com/macie/latest/APIReference/jobs.html#jobs-model-simplecriterionforjob)",
            "tag_values": " (Required) The  tag key and value pairs to use in the condition. One or more blocks are allowed. (documented below)",
            "value": "(Required) The tag value.",
            "account_id": " (Required) The unique identifier for the AWS account that owns the buckets.",
            "buckets": " (Required) An array that lists the names of the buckets.",
            "target": " (Required) The type of object to apply the condition to. The only valid value is `S3_OBJECT`."
        },
        "xray_group": {
            "group_name": "(Required) The name of the group.",
            "filter_expression": "(Required) The filter expression defining criteria by which to group traces. more info can be found in official [docs](https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html).",
            "insights_enabled": "(Required) Specifies whether insights are enabled."
        },
        "ses_identity_notification_topic": {
            "notification_type": "(Required) The type of notifications that will be published to the specified Amazon SNS topic. Valid Values: `Bounce`, `Complaint` or `Delivery`.",
            "identity": "(Required) The identity for which the Amazon SNS topic will be set. You can specify an identity by using its name or by using its Amazon Resource Name (ARN)."
        },
        "fsx_windows_file_system": {
            "subnet_ids": "(Required) A list of IDs for the subnets that the file system will be accessible from. To specify more than a single subnet set `deployment_type` to `MULTI_AZ_1`.",
            "throughput_capacity": "(Required) Throughput (megabytes per second) of the file system in power of 2 increments. Minimum of `8` and maximum of `2048`.",
            "dns_ips": "(Required) A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).",
            "domain_name": "(Required) The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.",
            "password": "(Required) The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.",
            "username": "(Required) The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain."
        },
        "keyspaces_table": {
            "keyspace_name": "(Required) The name of the keyspace that the table is going to be created in.",
            "table_name": "(Required) The name of the table.",
            "status": "(Required) Shows how to enable client-side timestamps settings for the specified table. Valid values: `ENABLED`.",
            "message": "(Required) A description of the table.",
            "column": "(Required) The regular columns of the table.",
            "partition_key": "(Required) The columns that are part of the partition key of the table .",
            "clustering_key": "(Required) The columns that are part of the clustering key of the table.",
            "static_column": "(Required) The columns that have been defined as `STATIC`. Static columns store values that are shared by all rows in the same partition.",
            "name": "(Required) The name of the static column.",
            "type": "(Required) The data type of the column. See the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/cql.elements.html#cql.data-types) for a list of available data types.",
            "order_by": "(Required) The order modifier. Valid values: `ASC`, `DESC`."
        },
        "licensemanager_grant_accepter": {
            "grant_arn": "(Required) The ARN of the grant to accept."
        },
        "cloudtrail": {
            "name": "(Required) Name of the trail.",
            "s3_bucket_name": "(Required) Name of the S3 bucket designated for publishing log files."
        },
        "route53domains_registered_domain": {
            "domain_name": "(Required) The name of the registered domain.",
            "name": "(Required) The fully qualified host name of the name server."
        },
        "securityhub_member": {
            "account_id": "(Required) The ID of the member AWS account."
        },
        "ses_event_destination": {
            "name": "(Required) The name of the event destination",
            "configuration_set_name": "(Required) The name of the configuration set",
            "matching_types": "(Required) A list of matching types. May be any of `\"send\"`, `\"reject\"`, `\"bounce\"`, `\"complaint\"`, `\"delivery\"`, `\"open\"`, `\"click\"`, or `\"renderingFailure\"`.",
            "default_value": "(Required) The default value for the event",
            "dimension_name": "(Required) The name for the dimension",
            "value_source": "(Required) The source for the value. May be any of `\"messageTag\"`, `\"emailHeader\"` or `\"linkTag\"`.",
            "stream_arn": "(Required) The ARN of the Kinesis Stream",
            "role_arn": "(Required) The ARN of the role that has permissions to access the Kinesis Stream",
            "topic_arn": "(Required) The ARN of the SNS topic"
        },
        "appconfig_extension": {
            "name": "(Required) The parameter name.",
            "action_point": "(Required) The action points defined in the extension. [Detailed below](#action_point).",
            "point": "(Required) The point at which to perform the defined actions. Valid points are `PRE_CREATE_HOSTED_CONFIGURATION_VERSION`, `PRE_START_DEPLOYMENT`, `ON_DEPLOYMENT_START`, `ON_DEPLOYMENT_STEP`, `ON_DEPLOYMENT_BAKING`, `ON_DEPLOYMENT_COMPLETE`, `ON_DEPLOYMENT_ROLLED_BACK`.",
            "action": "(Required) An action defines the tasks the extension performs during the AppConfig workflow. [Detailed below](#action).",
            "role_arn": "(Required) An Amazon Resource Name (ARN) for an Identity and Access Management assume role.",
            "uri": "(Required) The extension URI associated to the action point in the extension definition. The URI can be an Amazon Resource Name (ARN) for one of the following: an Lambda function, an Amazon Simple Queue Service queue, an Amazon Simple Notification Service topic, or the Amazon EventBridge default event bus.",
            "required": "(Required) Determines if a parameter value must be specified in the extension association."
        },
        "iam_service_specific_credential": {
            "service_name": "(Required) The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.",
            "user_name": "(Required) The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service."
        },
        "cloud9_environment_membership": {
            "environment_id": "(Required) The ID of the environment that contains the environment member you want to add.",
            "permissions": "(Required) The type of environment member permissions you want to associate with this environment member. Allowed values are `read-only` and `read-write` .",
            "user_arn": "(Required) The Amazon Resource Name (ARN) of the environment member you want to add."
        },
        "emr_instance_fleet": {
            "cluster_id": "(Required) ID of the EMR Cluster to attach to. Changing this forces a new resource to be created."
        },
        "chime_voice_connector_termination": {
            "voice_connector_id": "(Required) The Amazon Chime Voice Connector ID.",
            "cidr_allow_list": "(Required) The IP addresses allowed to make calls, in CIDR format.",
            "calling_regions": "(Required) The countries to which calls are allowed, in ISO 3166-1 alpha-2 format."
        },
        "schemas_registry": {
            "name": "(Required) The name of the custom event schema registry. Maximum of 64 characters consisting of lower case letters, upper case letters, 0-9, ., -, _."
        },
        "glue_dev_endpoint": {
            "name": "(Required) The name of this endpoint. It must be unique in your account.",
            "role_arn": "(Required) The IAM role for this endpoint."
        },
        "lightsail_bucket": {
            "name": "(Required) The name for the bucket.",
            "bundle_id": "(Required) - The ID of the bundle to use for the bucket. A bucket bundle specifies the monthly cost, storage space, and data transfer quota for a bucket. Use the [get-bucket-bundles](https://docs.aws.amazon.com/cli/latest/reference/lightsail/get-bucket-bundles.html) cli command to get a list of bundle IDs that you can specify."
        },
        "organizations_delegated_administrator": {
            "account_id": "(Required) The account ID number of the member account in the organization to register as a delegated administrator.",
            "service_principal": "(Required) The service principal of the AWS service for which you want to make the member account a delegated administrator."
        },
        "route53recoverycontrolconfig_cluster": {
            "name": "(Required) Unique name describing the cluster."
        },
        "fsx_ontap_storage_virtual_machine": {
            "file_system_id": "(Required) The ID of the Amazon FSx ONTAP File System that this SVM will be created on.",
            "name": "(Required) The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character."
        },
        "emr_instance_group": {},
        "lightsail_container_service_deployment_version": {
            "service_name": "(Required) The name for the container service.",
            "container": "(Required) A set of configuration blocks that describe the settings of the containers that will be launched on the container service. Maximum of 53. [Detailed below](#container).",
            "container_name": "(Required) The name of the container for the endpoint.",
            "image": "(Required) The name of the image used for the container. Container images sourced from your Lightsail container service, that are registered and stored on your service, start with a colon (`:`). For example, `:container-service-1.mystaticwebsite.1`. Container images sourced from a public registry like Docker Hub don't start with a colon. For example, `nginx:latest` or `nginx`.",
            "container_port": "(Required) The port of the container to which traffic is forwarded to.",
            "health_check": "(Required) A configuration block that describes the health check configuration of the container. [Detailed below](#health_check)."
        },
        "acmpca_certificate_authority_certificate": {
            "certificate": "(Required) PEM-encoded certificate for the Certificate Authority.",
            "certificate_authority_arn": "(Required) ARN of the Certificate Authority."
        },
        "ecs_task_set": {
            "service": "(Required) The short name or ARN of the ECS service.",
            "cluster": "(Required) The short name or ARN of the cluster that hosts the service to create the task set in.",
            "task_definition": "(Required) The family and revision (`family:revision`) or full ARN of the task definition that you want to run in your service."
        },
        "datasync_task": {
            "destination_location_arn": "(Required) Amazon Resource Name (ARN) of destination DataSync Location.",
            "source_location_arn": "(Required) Amazon Resource Name (ARN) of source DataSync Location.",
            "schedule_expression": "(Required) Specifies the schedule you want your task to use for repeated executions. For more information, see [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html)."
        },
        "devicefarm_network_profile": {
            "name": "(Required) The name for the network profile.",
            "project_arn": "(Required) The ARN of the project for the network profile."
        },
        "devicefarm_test_grid_project": {
            "name": "(Required) The name of the Selenium testing project.",
            "vpc_config": "(Required) The VPC security groups and subnets that are attached to a project. See [VPC Config](#vpc-config) below.",
            "security_group_ids": "(Required) A list of VPC security group IDs in your Amazon VPC.",
            "subnet_ids": "(Required) A list of VPC subnet IDs in your Amazon VPC.",
            "vpc_id": "(Required) The ID of the Amazon VPC."
        },
        "redshiftserverless_resource_policy": {
            "resource_arn": "(Required) The Amazon Resource Name (ARN) of the account to create or update a resource policy for.",
            "policy": "(Required) The policy to create or update. For example, the following policy grants a user authorization to restore a snapshot."
        },
        "route53_resolver_firewall_rule_group": {
            "name": "(Required) A name that lets you identify the rule group, to manage and use it."
        },
        "service_discovery_service": {},
        "vpc_ipam_pool_cidr_allocation": {
            "ipam_pool_id": "(Required) The ID of the pool to which you want to assign a CIDR."
        },
        "cognito_user_pool": {},
        "ec2_transit_gateway_multicast_domain_association": {
            "subnet_id": "(Required) The ID of the subnet to associate with the transit gateway multicast domain.",
            "transit_gateway_attachment_id": "(Required) The ID of the transit gateway attachment.",
            "transit_gateway_multicast_domain_id": "(Required) The ID of the transit gateway multicast domain."
        },
        "s3_bucket_object": {
            "bucket": "(Required) Name of the bucket to put the file in. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified.",
            "key": "(Required) Name of the object once it is in the bucket."
        },
        "organizations_organizational_unit": {},
        "pinpoint_apns_channel": {
            "application_id": "(Required) The application ID.",
            "certificate": "(Required) The pem encoded TLS Certificate from Apple.",
            "private_key": "(Required) The Certificate Private Key file (ie. `.key` file).",
            "bundle_id": "(Required) The ID assigned to your iOS app. To find this value, choose Certificates, IDs & Profiles, choose App IDs in the Identifiers section, and choose your app.",
            "team_id": "(Required) The ID assigned to your Apple developer account team. This value is provided on the Membership page.",
            "token_key": "(Required) The `.p8` file that you download from your Apple developer account when you create an authentication key.",
            "token_key_id": "(Required) The ID assigned to your signing key. To find this value, choose Certificates, IDs & Profiles, and choose your key in the Keys section."
        },
        "servicecatalog_organizations_access": {
            "enabled": "(Required) Whether to enable AWS Organizations access."
        },
        "servicecatalog_provisioned_product": {
            "name": "(Required) User-friendly name of the provisioned product."
        },
        "wafregional_regex_match_set": {
            "name": "(Required) The name or description of the Regex Match Set.",
            "regex_match_tuple": "(Required) The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.",
            "field_to_match": "(Required) The part of a web request that you want to search, such as a specified header or a query string.",
            "regex_pattern_set_id": "(Required) The ID of a [Regex Pattern Set](/docs/providers/aws/r/waf_regex_pattern_set.html).",
            "text_transformation": "(Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.",
            "type": "(Required) The part of the web request that you want AWS WAF to search for a specified string."
        },
        "cognito_risk_configuration": {
            "user_pool_id": "(Required) The user pool ID."
        },
        "lex_bot": {
            "abort_statement": "(Required) The message that Amazon Lex uses to abort a conversation. Attributes are documented under [statement](#statement).",
            "child_directed": "(Required) By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the [Amazon Lex FAQ](https://aws.amazon.com/lex/faqs#data-security) and the [Amazon Lex PutBot API Docs](https://docs.aws.amazon.com/lex/latest/dg/API_PutBot.html#lex-PutBot-request-childDirected).",
            "clarification_prompt": "(Required) The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under [prompt](#prompt).",
            "intent": {
                "intent_name": "(Required) The name of the intent. Must be less than or equal to 100 characters in length.",
                "intent_version": "(Required) The version of the intent. Must be less than or equal to 64 characters in length."
            },
            "name": "(Required) The name of the bot that you want to create, case sensitive. Must be between 2 and 50 characters in length.",
            "max_attempts": "(Required) The number of times to prompt the user for information.",
            "message": {
                "content": "(Required) The text of the message.",
                "content_type": "(Required) The content type of the message string."
            }
        },
        "quicksight_template": {
            "name": "(Required) Display name for the template.",
            "version_description": "(Required) A description of the current template version being created/updated.",
            "data_set_references": {
                "data_set_arn": "(Required) Dataset Amazon Resource Name (ARN).",
                "data_set_placeholder": "(Required) Dataset placeholder."
            }
        },
        "ivs_channel": {},
        "lightsail_domain": {
            "domain_name": "(Required) The name of the Lightsail domain to manage"
        },
        "dynamodb_tag": {
            "resource_arn": "(Required) Amazon Resource Name (ARN) of the DynamoDB resource to tag.",
            "key": "(Required) Tag name.",
            "value": "(Required) Tag value."
        },
        "ssm_maintenance_window": {
            "name": "(Required) The name of the maintenance window.",
            "schedule": "(Required) The schedule of the Maintenance Window in the form of a [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html).",
            "cutoff": "(Required) The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.",
            "duration": "(Required) The duration of the Maintenance Window in hours."
        },
        "api_gateway_authorizer": {
            "name": "(Required) Name of the authorizer",
            "rest_api_id": "(Required) ID of the associated REST API"
        },
        "transfer_ssh_key": {},
        "codedeploy_app": {
            "name": "(Required) The name of the application."
        },
        "docdb_cluster_instance": {
            "cluster_identifier": "(Required) The identifier of the [`aws_docdb_cluster`](/docs/providers/aws/r/docdb_cluster.html) in which to launch this instance.",
            "instance_class": "(Required) The instance class to use. For details on CPU and memory, see [Scaling for DocumentDB Instances][2]."
        },
        "neptune_global_cluster": {},
        "cloudformation_type": {
            "schema_handler_package": "(Required) URL to the S3 bucket containing the extension project package that contains the necessary files for the extension you want to register. Must begin with `s3://` or `https://`. For example, `s3://example-bucket/example-object`."
        },
        "kendra_index": {
            "name": "(Required) The name of the index field. Minimum length of 1. Maximum length of 30.",
            "role_arn": "(Required) An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.",
            "query_capacity_units": "(Required) The amount of extra query capacity for an index and GetQuerySuggestions capacity. For more information, refer to [QueryCapacityUnits](https://docs.aws.amazon.com/kendra/latest/dg/API_CapacityUnitsConfiguration.html#Kendra-Type-CapacityUnitsConfiguration-QueryCapacityUnits).",
            "storage_capacity_units": "(Required) The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. Minimum value of 0.",
            "relevance": "(Required) A block that provides manual tuning parameters to determine how the field affects the search results. [Detailed below](#relevance)",
            "search": "(Required) A block that provides information about how the field is used during a search. Documented below. [Detailed below](#search)",
            "type": "(Required) The data type of the index field. Valid values are `STRING_VALUE`, `STRING_LIST_VALUE`, `LONG_VALUE`, `DATE_VALUE`.",
            "displayable": "(Required) Determines whether the field is returned in the query response. The default is `true`.",
            "facetable": "(Required) Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is `false`.",
            "searchable": "(Required) Determines whether the field is used in the search. If the Searchable field is true, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is `true` for `string` fields and `false` for `number` and `date` fields.",
            "sortable": "(Required) Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have Sortable set to true, Amazon Kendra returns an exception. The default is `false`.",
            "user_group_resolution_mode": "(Required) The identity store provider (mode) you want to use to fetch access levels of groups and users. AWS Single Sign-On is currently the only available mode. Your users and groups must exist in an AWS SSO identity source in order to use this mode. Valid Values are `AWS_SSO` or `NONE`.",
            "group_attribute_field": "(Required) The group attribute field. Minimum length of 1. Maximum length of 2048.",
            "user_name_attribute_field": "(Required) The user name attribute field. Minimum length of 1. Maximum length of 2048.",
            "key_location": "(Required) The location of the key. Valid values are `URL` or `SECRET_MANAGER`"
        },
        "s3outposts_endpoint": {
            "outpost_id": "(Required) Identifier of the Outpost to contain this endpoint.",
            "security_group_id": "(Required) Identifier of the EC2 Security Group.",
            "subnet_id": "(Required) Identifier of the EC2 Subnet."
        },
        "networkmanager_transit_gateway_route_table_attachment": {
            "peering_id": "(Required) The ID of the peer for the attachment.",
            "transit_gateway_route_table_arn": "(Required) The ARN of the transit gateway route table for the attachment."
        },
        "wafregional_ipset": {
            "name": "(Required) The name or description of the IPSet."
        },
        "config_configuration_aggregator": {
            "name": "(Required) The name of the configuration aggregator.",
            "account_ids": "(Required) List of 12-digit account IDs of the account(s) being aggregated.",
            "role_arn": "(Required) ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account."
        },
        "dx_bgp_peer": {
            "address_family": "(Required) The address family for the BGP peer. `ipv4 ` or `ipv6`.",
            "bgp_asn": "(Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.",
            "virtual_interface_id": "(Required) The ID of the Direct Connect virtual interface on which to create the BGP peer."
        },
        "elastictranscoder_pipeline": {
            "input_bucket": "(Required) The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.",
            "role": "(Required) The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline."
        },
        "securityhub_organization_configuration": {
            "auto_enable": "(Required) Whether to automatically enable Security Hub for new accounts in the organization."
        },
        "chime_voice_connector_streaming": {
            "voice_connector_id": "(Required) The Amazon Chime Voice Connector ID."
        },
        "cloudfront_origin_access_control": {
            "name": "(Required) A name that identifies the Origin Access Control.",
            "origin_access_control_origin_type": "(Required) The type of origin that this Origin Access Control is for. Valid values are `s3`, and `mediastore`.",
            "signing_behavior": "(Required) Specifies which requests CloudFront signs. Specify `always` for the most common use case. Allowed values: `always`, `never`, and `no-override`.",
            "signing_protocol": "(Required) Determines how CloudFront signs (authenticates) requests. The only valid value is `sigv4`."
        },
        "efs_file_system_policy": {
            "file_system_id": "(Required) The ID of the EFS file system.",
            "policy": "(Required) The JSON formatted file system policy for the EFS file system. see [Docs](https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies) for more info."
        },
        "appconfig_deployment_strategy": {
            "deployment_duration_in_minutes": "(Required) Total amount of time for a deployment to last. Minimum value of 0, maximum value of 1440.",
            "growth_factor": "(Required) Percentage of targets to receive a deployed configuration during each interval. Minimum value of 1.0, maximum value of 100.0."
        },
        "appmesh_virtual_router": {
            "name": "(Required) Name to use for the virtual router. Must be between 1 and 255 characters in length.",
            "mesh_name": "(Required) Name of the service mesh in which to create the virtual router. Must be between 1 and 255 characters in length.",
            "spec": "(Required) Virtual router specification to apply.",
            "port_mapping": "(Required) Port mapping information for the listener.",
            "port": "(Required) Port used for the port mapping.",
            "protocol": "(Required) Protocol used for the port mapping. Valid values are `http`,`http2`, `tcp` and `grpc`."
        },
        "dx_public_virtual_interface": {
            "address_family": "(Required) The address family for the BGP peer. `ipv4 ` or `ipv6`.",
            "bgp_asn": "(Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.",
            "connection_id": "(Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.",
            "name": "(Required) The name for the virtual interface.",
            "vlan": "(Required) The VLAN ID.",
            "route_filter_prefixes": "(Required) A list of routes to be advertised to the AWS network in this region."
        },
        "cloudwatch_event_rule": {},
        "prometheus_rule_group_namespace": {
            "name": "(Required) The name of the rule group namespace",
            "workspace_id": "(Required) ID of the prometheus workspace the rule group namespace should be linked to",
            "data": "(Required) the rule group namespace data that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-Ruler.html)."
        },
        "apprunner_custom_domain_association": {
            "domain_name": "(Required) Custom domain endpoint to association. Specify a base domain e.g., `example.com` or a subdomain e.g., `subdomain.example.com`.",
            "service_arn": "(Required) ARN of the App Runner service."
        },
        "lambda_invocation": {
            "function_name": "(Required) Name of the lambda function.",
            "input": "(Required) JSON payload to the lambda function."
        },
        "networkmanager_link": {
            "bandwidth": "(Required) The upload speed and download speed in Mbps. Documented below.",
            "global_network_id": "(Required) The ID of the global network.",
            "site_id": "(Required) The ID of the site."
        },
        "shield_protection": {
            "name": "(Required) A friendly name for the Protection you are creating.",
            "resource_arn": "(Required) The ARN (Amazon Resource Name) of the resource to be protected."
        },
        "securityhub_finding_aggregator": {},
        "guardduty_organization_admin_account": {
            "admin_account_id": "(Required) AWS account identifier to designate as a delegated administrator for GuardDuty."
        },
        "transfer_connector": {
            "access_role": "(Required) The IAM Role which provides read and write access to the parent directory of the file location mentioned in the StartFileTransfer request.",
            "url": "(Required) The URL of the partners AS2 endpoint or SFTP endpoint.",
            "compression": "(Required) Specifies weather AS2 file is compressed. The valud values are ZLIB and  DISABLED.",
            "encryption_algorithm": "(Required) The algorithm that is used to encrypt the file. The valid values are AES128_CBC | AES192_CBC | AES256_CBC | NONE.",
            "local_profile_id": "(Required) The unique identifier for the AS2 local profile.",
            "mdn_response": "(Required) Used for outbound requests to determine if a partner response for transfers is synchronous or asynchronous. The valid values are SYNC and NONE.",
            "partner_profile_id": "(Required) The unique identifier for the AS2 partner profile.",
            "signing_algorithm": "(Required) The algorithm that is used to sign AS2 messages sent with the connector. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE .",
            "trusted_host_keys": "(Required) A list of public portion of the host key, or keys, that are used to authenticate the user to the external server to which you are connecting.(https://docs.aws.amazon.com/transfer/latest/userguide/API_SftpConnectorConfig.html)",
            "user_secret_id": "(Required) The identifier for the secret (in AWS Secrets Manager) that contains the SFTP user's private key, password, or both. The identifier can be either the Amazon Resource Name (ARN) or the name of the secret."
        },
        "finspace_kx_user": {
            "name": "(Required) A unique identifier for the user.",
            "environment_id": "(Required) Unique identifier for the KX environment.",
            "iam_role": "(Required) IAM role ARN to be associated with the user."
        },
        "waf_regex_match_set": {
            "name": "(Required) The name or description of the Regex Match Set.",
            "regex_match_tuple": "(Required) The regular expression pattern that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings. See below.",
            "field_to_match": "(Required) The part of a web request that you want to search, such as a specified header or a query string.",
            "regex_pattern_set_id": "(Required) The ID of a [Regex Pattern Set](/docs/providers/aws/r/waf_regex_pattern_set.html).",
            "text_transformation": "(Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.",
            "type": "(Required) The part of the web request that you want AWS WAF to search for a specified string."
        },
        "api_gateway_stage": {
            "rest_api_id": "(Required) ID of the associated REST API",
            "stage_name": "(Required) Name of the stage",
            "deployment_id": "(Required) ID of the deployment that the stage points to",
            "destination_arn": "(Required) ARN of the CloudWatch Logs log group or Kinesis Data Firehose delivery stream to receive access logs. If you specify a Kinesis Data Firehose delivery stream, the stream name must begin with `amazon-apigateway-`. Automatically removes trailing `:*` if present.",
            "format": "(Required) Formatting and values recorded in the logs."
        },
        "elasticache_replication_group": {},
        "securityhub_account": {},
        "kinesis_video_stream": {
            "name": "(Required) A name to identify the stream. This is unique to the"
        },
        "networkfirewall_firewall": {
            "firewall_policy_arn": "(Required) The Amazon Resource Name (ARN) of the VPC Firewall policy.",
            "subnet_mapping": "(Required) Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See [Subnet Mapping](#subnet-mapping) below for details.",
            "type": "(Required) The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.",
            "subnet_id": "(Required) The unique identifier for the subnet."
        },
        "s3_bucket_intelligent_tiering_configuration": {
            "bucket": "(Required) Name of the bucket this intelligent tiering configuration is associated with.",
            "name": "(Required) Unique name used to identify the S3 Intelligent-Tiering configuration for the bucket.",
            "tiering": "(Required) S3 Intelligent-Tiering storage class tiers of the configuration (documented below).",
            "access_tier": "(Required) S3 Intelligent-Tiering access tier. Valid values: `ARCHIVE_ACCESS`, `DEEP_ARCHIVE_ACCESS`.",
            "days": "(Required) Number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier."
        },
        "vpn_gateway_route_propagation": {},
        "api_gateway_rest_api_policy": {
            "rest_api_id": "(Required) ID of the REST API.",
            "policy": "(Required) JSON formatted policy document that controls access to the API Gateway. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)"
        },
        "appintegrations_data_integration": {
            "kms_key": "(Required) Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.",
            "name": "(Required) Specifies the name of the Data Integration.",
            "schedule_config": "(Required) A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.",
            "source_uri": "(Required) Specifies the URI of the data source. Create an [AppFlow Connector Profile](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/appflow_connector_profile) and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.",
            "first_execution_from": "(Required) The start date for objects to import in the first flow run as an Unix/epoch timestamp in milliseconds or in ISO-8601 format. This needs to be a time in the past, meaning that the data created or updated before this given date will not be downloaded.",
            "object": "(Required) The name of the object to pull from the data source. Examples of objects in Salesforce include `Case`, `Account`, or `Lead`.",
            "schedule_expression": "(Required) How often the data should be pulled from data source. Examples include `rate(1 hour)`, `rate(3 hours)`, `rate(1 day)`."
        },
        "apprunner_auto_scaling_configuration_version": {},
        "guardduty_organization_configuration": {
            "detector_id": "(Required) The detector ID of the GuardDuty account.",
            "audit_logs": "(Required) Enable Kubernetes Audit Logs Monitoring automatically for new member accounts. [Kubernetes protection](https://docs.aws.amazon.com/guardduty/latest/ug/kubernetes-protection.html).",
            "enable": "(Required) If true, enables Kubernetes audit logs as a data source for [Kubernetes protection](https://docs.aws.amazon.com/guardduty/latest/ug/kubernetes-protection.html).",
            "scan_ec2_instance_with_findings": "(Required) Configure whether [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) for EC2 instances with findings should be auto-enabled for new members joining the organization.",
            "ebs_volumes": "(Required) Configure whether scanning EBS volumes should be auto-enabled for new members joining the organization",
            "auto_enable": "(Required) If true, enables [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) for all new accounts joining the organization."
        },
        "quicksight_template_alias": {
            "template_version_number": "(Required) Version number of the template."
        },
        "ram_resource_share": {
            "name": "(Required) The name of the resource share."
        },
        "sqs_queue_policy": {
            "queue_url": "(Required) The URL of the SQS Queue to which to attach the policy",
            "policy": "(Required) The JSON policy for the SQS queue. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "lightsail_lb_certificate_attachment": {
            "lb_name": "(Required) The name of the load balancer to which you want to associate the SSL/TLS certificate.",
            "certificate_name": "(Required) The name of your SSL/TLS certificate."
        },
        "neptune_event_subscription": {
            "sns_topic_arn": "(Required) The ARN of the SNS topic to send events to."
        },
        "quicksight_account_subscription": {
            "account_name": "(Required) Name of your Amazon QuickSight account. This name is unique over all of AWS, and it appears only when users sign in.",
            "authentication_method": "(Required) Method that you want to use to authenticate your Amazon QuickSight account. Currently, the valid values for this parameter are `IAM_AND_QUICKSIGHT`, `IAM_ONLY`, and `ACTIVE_DIRECTORY`.",
            "edition": "(Required) Edition of Amazon QuickSight that you want your account to have. Currently, you can choose from `STANDARD`, `ENTERPRISE` or `ENTERPRISE_AND_Q`.",
            "notification_email": "(Required) Email address that you want Amazon QuickSight to send notifications to regarding your Amazon QuickSight account or Amazon QuickSight subscription."
        },
        "cognito_user_pool_client": {
            "name": "(Required) Name of the application client.",
            "user_pool_id": "(Required) User pool the client belongs to."
        },
        "ecrpublic_repository": {
            "repository_name": "(Required) Name of the repository."
        },
        "vpc_ipam_resource_discovery": {
            "operating_regions": {
                "region_name": "(Required) The name of the Region you want to add to the IPAM."
            }
        },
        "ec2_local_gateway_route_table_vpc_association": {
            "local_gateway_route_table_id": "(Required) Identifier of EC2 Local Gateway Route Table.",
            "vpc_id": "(Required) Identifier of EC2 VPC."
        },
        "macie2_member": {
            "account_id": "(Required) The AWS account ID for the account.",
            "email": "(Required) The email address for the account."
        },
        "elasticache_global_replication_group": {},
        "location_geofence_collection": {
            "collection_name": "(Required) The name of the geofence collection."
        },
        "memorydb_subnet_group": {
            "subnet_ids": "(Required) Set of VPC Subnet ID-s for the subnet group. At least one subnet must be provided."
        },
        "cloudfront_key_group": {
            "items": "(Required) A list of the identifiers of the public keys in the key group.",
            "name": "(Required) A name to identify the key group."
        },
        "cognito_user_group": {
            "name": "(Required) The name of the user group.",
            "user_pool_id": "(Required) The user pool ID."
        },
        "ssm_document": {
            "name": "(Required) The name of the document.",
            "content": "(Required) The JSON or YAML content of the document.",
            "document_type": "(Required) The type of the document. Valid document types include: `Automation`, `Command`, `Package`, `Policy`, and `Session`"
        },
        "vpc_peering_connection_accepter": {
            "vpc_peering_connection_id": "(Required) The VPC Peering Connection ID to manage."
        },
        "location_tracker_association": {
            "consumer_arn": "(Required) The Amazon Resource Name (ARN) for the geofence collection to be associated to tracker resource. Used when you need to specify a resource across all AWS.",
            "tracker_name": "(Required) The name of the tracker resource to be associated with a geofence collection."
        },
        "s3_bucket_inventory": {
            "bucket": "(Required) S3 bucket configuration where inventory results are published (documented below).",
            "name": "(Required) Unique identifier of the inventory configuration for the bucket.",
            "included_object_versions": "(Required) Object versions to include in the inventory list. Valid values: `All`, `Current`.",
            "schedule": "(Required) Specifies the schedule for generating inventory results (documented below).",
            "destination": "(Required) Contains information about where to publish the inventory results (documented below).",
            "frequency": "(Required) Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.",
            "bucket_arn": "(Required) Amazon S3 bucket ARN of the destination.",
            "format": "(Required) Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).",
            "key_id": "(Required) ARN of the KMS customer master key (CMK) used to encrypt the inventory file."
        },
        "dx_transit_virtual_interface": {
            "address_family": "(Required) The address family for the BGP peer. `ipv4 ` or `ipv6`.",
            "bgp_asn": "(Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.",
            "connection_id": "(Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.",
            "dx_gateway_id": "(Required) The ID of the Direct Connect gateway to which to connect the virtual interface.",
            "name": "(Required) The name for the virtual interface.",
            "vlan": "(Required) The VLAN ID."
        },
        "wafregional_sql_injection_match_set": {
            "name": "(Required) The name or description of the SizeConstraintSet.",
            "field_to_match": "(Required) Specifies where in a web request to look for snippets of malicious SQL code.",
            "text_transformation": "(Required) Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.",
            "type": "(Required) The part of the web request that you want AWS WAF to search for a specified string."
        },
        "s3_bucket_accelerate_configuration": {
            "status": "(Required) Transfer acceleration state of the bucket. Valid values: `Enabled`, `Suspended`."
        },
        "connect_bot_association": {
            "instance_id": "(Required) The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.",
            "lex_bot": {
                "name": "(Required) The name of the Amazon Lex (V1) bot."
            }
        },
        "lambda_permission": {
            "action": "(Required) The AWS Lambda action you want to allow in this statement. (e.g., `lambda:InvokeFunction`)",
            "function_name": "(Required) Name of the Lambda function whose resource policy you are updating",
            "principal": "(Required) The principal who is getting this permission e.g., `s3.amazonaws.com`, an AWS account ID, or AWS IAM principal, or AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`."
        },
        "redshift_snapshot_schedule": {},
        "secretsmanager_secret_policy": {
            "policy": "(Required) Valid JSON document representing a [resource policy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html). For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy). Unlike `aws_secretsmanager_secret`, where `policy` can be set to `\"{}\"` to delete the policy, `\"{}\"` is not a valid policy since `policy` is required.",
            "secret_arn": "(Required) Secret ARN."
        },
        "default_route_table": {
            "default_route_table_id": "(Required) ID of the default route table."
        },
        "ecs_tag": {
            "resource_arn": "(Required) Amazon Resource Name (ARN) of the ECS resource to tag.",
            "key": "(Required) Tag name.",
            "value": "(Required) Tag value."
        },
        "s3_access_point": {
            "bucket": "(Required) Name of an AWS Partition S3 Bucket or the ARN of S3 on Outposts Bucket that you want to associate this access point with.",
            "name": "(Required) Name you want to assign to this access point.",
            "vpc_id": "(Required)  This access point will only allow connections from the specified VPC ID."
        },
        "wafv2_web_acl_association": {
            "resource_arn": "(Required) The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, an Amazon Cognito User Pool, an Amazon AppSync GraphQL API, an Amazon App Runner service, or an Amazon Verified Access instance.",
            "web_acl_arn": "(Required) The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource."
        },
        "memorydb_user": {
            "access_string": "(Required) The access permissions string used for this user.",
            "authentication_mode": "(Required) Denotes the user's authentication properties. Detailed below.",
            "passwords": "(Required) The set of passwords used for authentication. You can create up to two passwords for each user.",
            "type": "(Required) Indicates whether the user requires a password to authenticate. Must be set to `password`."
        },
        "s3_bucket_ownership_controls": {
            "bucket": "(Required) Name of the bucket that you want to associate this access point with.",
            "rule": "(Required) Configuration block(s) with Ownership Controls rules. Detailed below.",
            "object_ownership": "(Required) Object ownership. Valid values: `BucketOwnerPreferred`, `ObjectWriter` or `BucketOwnerEnforced`"
        },
        "signer_signing_profile": {
            "platform_id": "(Required) The ID of the platform that is used by the target signing profile."
        },
        "detective_graph": {},
        "ec2_carrier_gateway": {
            "vpc_id": "(Required) The ID of the VPC to associate with the carrier gateway."
        },
        "elasticsearch_domain_saml_options": {
            "domain_name": "(Required) Name of the domain."
        },
        "inspector2_organization_configuration": {
            "auto_enable": "(Required) Configuration block for auto enabling. See below.",
            "ec2": "(Required) Whether Amazon EC2 scans are automatically enabled for new members of your Amazon Inspector organization.",
            "ecr": "(Required) Whether Amazon ECR scans are automatically enabled for new members of your Amazon Inspector organization."
        },
        "lb": {},
        "schemas_schema": {
            "name": "(Required) The name of the schema. Maximum of 385 characters consisting of lower case letters, upper case letters, ., -, _, @.",
            "content": "(Required) The schema specification. Must be a valid Open API 3.0 spec.",
            "registry_name": "(Required) The name of the registry in which this schema belongs.",
            "type": "(Required) The type of the schema. Valid values: `OpenApi3` or `JSONSchemaDraft4`."
        },
        "batch_compute_environment": {
            "service_role": "(Required) The full Amazon Resource Name (ARN) of the IAM role that allows AWS Batch to make calls to other AWS services on your behalf."
        },
        "docdb_cluster_parameter_group": {
            "name": "(Required) The name of the DocumentDB parameter.",
            "value": "(Required) The value of the DocumentDB parameter."
        },
        "ecs_service": {},
        "vpclattice_service_network": {
            "name": "(Required) Name of the service network"
        },
        "elb_attachment": {
            "elb": "(Required) The name of the ELB.",
            "instance": "(Required) Instance ID to place in the ELB pool."
        },
        "networkmanager_core_network_policy_attachment": {
            "core_network_id": "(Required) The ID of the core network that a policy will be attached to and made `LIVE`.",
            "policy_document": "(Required) Policy document for creating a core network. Note that updating this argument will result in the new policy document version being set as the `LATEST` and `LIVE` policy document. Refer to the [Core network policies documentation](https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-change-sets.html) for more information."
        },
        "s3control_multi_region_access_point": {
            "details": "(Required) A configuration block containing details about the Multi-Region Access Point. See [Details Configuration Block](#details-configuration) below for more details"
        },
        "transfer_profile": {
            "as2_id": "(Required) The As2Id is the AS2 name as defined in the RFC 4130. For inbound ttransfers this is the AS2 From Header for the AS2 messages sent from the partner. For Outbound messages this is the AS2 To Header for the AS2 messages sent to the partner. his ID cannot include spaces.",
            "profile_type": "(Required) The profile type should be LOCAL or PARTNER."
        },
        "internet_gateway_attachment": {
            "internet_gateway_id": "(Required) The ID of the internet gateway.",
            "vpc_id": "(Required) The ID of the VPC."
        },
        "vpclattice_service_network_service_association": {
            "service_identifier": "(Required) The ID or Amazon Resource Identifier (ARN) of the service.",
            "service_network_identifier": "(Required) The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts."
        },
        "vpc_ipv4_cidr_block_association": {
            "vpc_id": "(Required) The ID of the VPC to make the association with."
        },
        "lightsail_bucket_resource_access": {
            "bucket_name": "(Required) The name of the bucket to grant access to.",
            "resource_name": "(Required) The name of the resource to be granted bucket access."
        },
        "api_gateway_base_path_mapping": {
            "domain_name": "(Required) Already-registered domain name to connect the API to.",
            "api_id": "(Required) ID of the API to connect."
        },
        "api_gateway_usage_plan_key": {
            "key_id": "(Required) Identifier of the API key resource.",
            "key_type": "(Required) Type of the API key resource. Currently, the valid key type is API_KEY.",
            "usage_plan_id": "(Required) Id of the usage plan resource representing to associate the key to."
        },
        "apprunner_vpc_connector": {
            "vpc_connector_name": "(Required) Name for the VPC connector."
        },
        "globalaccelerator_custom_routing_listener": {
            "accelerator_arn": "(Required) The Amazon Resource Name (ARN) of a custom routing accelerator."
        },
        "redshift_endpoint_access": {
            "cluster_identifier": "(Required) The cluster identifier of the cluster to access.",
            "endpoint_name": "(Required) The Redshift-managed VPC endpoint name.",
            "subnet_group_name": "(Required) The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint."
        },
        "sfn_alias": {
            "name": "(Required) Name for the alias you are creating.",
            "routing_configuration": "(Required) The StateMachine alias' route configuration settings. Fields documented below",
            "state_machine_version_arn": "(Required) The Amazon Resource Name (ARN) of the state machine version.",
            "weight": "(Required) Percentage of traffic routed to the state machine version."
        },
        "default_security_group": {
            "from_port": "(Required) Start port (or ICMP type number if protocol is `icmp`)",
            "protocol": "(Required) Protocol. If you select a protocol of \"-1\" (semantically equivalent to `all`, which is not a valid value here), you must specify a `from_port` and `to_port` equal to `0`. If not `icmp`, `tcp`, `udp`, or `-1` use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).",
            "to_port": "(Required) End range port (or ICMP code if protocol is `icmp`)."
        },
        "signer_signing_profile_permission": {
            "profile_name": "(Required) Name of the signing profile to add the cross-account permissions.",
            "action": "(Required) An AWS Signer action permitted as part of cross-account permissions. Valid values: `signer:StartSigningJob`, `signer:GetSigningProfile`, or `signer:RevokeSignature`.",
            "principal": "(Required) The AWS principal to be granted a cross-account permission."
        },
        "apigatewayv2_integration_response": {
            "api_id": "(Required) API identifier.",
            "integration_id": "(Required) Identifier of the [`aws_apigatewayv2_integration`](/docs/providers/aws/r/apigatewayv2_integration.html).",
            "integration_response_key": "(Required) Integration response key."
        },
        "appautoscaling_policy": {
            "name": "(Required) Name of the dimension.",
            "resource_id": "(Required) Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html)",
            "scalable_dimension": "(Required) Scalable dimension of the scalable target. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html)",
            "service_namespace": "(Required) AWS service namespace of the scalable target. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_RegisterScalableTarget.html)",
            "value": "(Required) Value of the dimension.",
            "id": "(Required) Short name for the metric used in target tracking scaling policy.",
            "metric": "(Required) Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
            "stat": "(Required) Statistic of the metrics to return.",
            "metric_name": "(Required) Name of the metric.",
            "namespace": "(Required) Namespace of the metric.",
            "predefined_metric_type": "(Required) Metric type."
        },
        "cloudwatch_event_archive": {
            "name": "(Required) The name of the new event archive. The archive name cannot exceed 48 characters.",
            "event_source_arn": "(Required) Event bus source ARN from where these events should be archived."
        },
        "autoscaling_attachment": {
            "autoscaling_group_name": "(Required) Name of ASG to associate with the ELB."
        },
        "ebs_encryption_by_default": {},
        "msk_vpc_connection": {
            "authentication": "(Required) The authentication type for the client VPC connection. Specify one of these auth type strings: SASL_IAM, SASL_SCRAM, or TLS.",
            "client_subnets": "(Required) The list of subnets in the client VPC to connect to.",
            "security_groups": "(Required) The security groups to attach to the ENIs for the broker nodes.",
            "target_cluster_arn": "(Required) The Amazon Resource Name (ARN) of the cluster.",
            "vpc_id": "(Required) The VPC ID of the remote client."
        },
        "redshiftserverless_workgroup": {
            "namespace_name": "(Required) The name of the namespace.",
            "workgroup_name": "(Required) The name of the workgroup.",
            "parameter_key": "(Required) The key of the parameter. The options are `auto_mv`, `datestyle`, `enable_case_sensitive_identifier`, `enable_user_activity_logging`, `query_group`, `search_path` and [query monitoring metrics](https://docs.aws.amazon.com/redshift/latest/dg/cm-c-wlm-query-monitoring-rules.html#cm-c-wlm-query-monitoring-metrics-serverless) that let you define performance boundaries: `max_query_cpu_time`, `max_query_blocks_read`, `max_scan_row_count`, `max_query_execution_time`, `max_query_queue_time`, `max_query_cpu_usage_percent`, `max_query_temp_blocks_to_disk`, `max_join_row_count` and `max_nested_loop_join_row_count`.",
            "parameter_value": "(Required) The value of the parameter to set."
        },
        "db_proxy_default_target_group": {
            "db_proxy_name": "(Required) Name of the RDS DB Proxy."
        },
        "transcribe_vocabulary_filter": {
            "language_code": "(Required) The language code you selected for your vocabulary filter. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.",
            "vocabulary_filter_name": "(Required) The name of the VocabularyFilter."
        },
        "eks_addon": {},
        "kendra_experience": {
            "name": "(Required) A name for your Amazon Kendra experience.",
            "role_arn": "(Required) The Amazon Resource Name (ARN) of a role with permission to access `Query API`, `QuerySuggestions API`, `SubmitFeedback API`, and `AWS SSO` that stores your user and group information. For more information, see [IAM roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).",
            "identity_attribute_name": "(Required) The AWS SSO field name that contains the identifiers of your users, such as their emails."
        },
        "neptune_parameter_group": {
            "family": "(Required) The family of the Neptune parameter group.",
            "value": "(Required) The value of the Neptune parameter."
        },
        "s3control_multi_region_access_point_policy": {
            "details": "(Required) A configuration block containing details about the policy for the Multi-Region Access Point. See [Details Configuration Block](#details-configuration) below for more details",
            "name": "(Required) The name of the Multi-Region Access Point.",
            "policy": "(Required) A valid JSON document that specifies the policy that you want to associate with this Multi-Region Access Point. Once applied, the policy can be edited, but not deleted. For more information, see the documentation on [Multi-Region Access Point Permissions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointPermissions.html)."
        },
        "apprunner_vpc_ingress_connection": {
            "name": "(Required) A name for the VPC Ingress Connection resource. It must be unique across all the active VPC Ingress Connections in your AWS account in the AWS Region.",
            "service_arn": "(Required) The Amazon Resource Name (ARN) for this App Runner service that is used to create the VPC Ingress Connection resource.",
            "ingress_vpc_configuration": "(Required) Specifications for the customer’s Amazon VPC and the related AWS PrivateLink VPC endpoint that are used to create the VPC Ingress Connection resource. See [Ingress VPC Configuration](#ingress-vpc-configuration) below for more details.",
            "vpc_id": "(Required) The ID of the VPC that is used for the VPC endpoint.",
            "vpc_endpoint_id": "(Required) The ID of the VPC endpoint that your App Runner service connects to."
        },
        "iam_group_policy": {
            "policy": "(Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)",
            "group": "(Required) The IAM group to attach to the policy."
        },
        "storagegateway_cache": {
            "disk_id": "(Required) Local disk identifier. For example, `pci-0000:03:00.0-scsi-0:0:0:0`.",
            "gateway_arn": "(Required) The Amazon Resource Name (ARN) of the gateway."
        },
        "emr_studio": {
            "default_s3_location": "(Required) The Amazon S3 location to back up Amazon EMR Studio Workspaces and notebook files.",
            "name": "(Required) A descriptive name for the Amazon EMR Studio.",
            "engine_security_group_id": "(Required) The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by `vpc_id`.",
            "service_role": "(Required) The IAM role that the Amazon EMR Studio assumes. The service role provides a way for Amazon EMR Studio to interoperate with other Amazon Web Services services.",
            "subnet_ids": "(Required) A list of subnet IDs to associate with the Amazon EMR Studio. A Studio can have a maximum of 5 subnets. The subnets must belong to the VPC specified by `vpc_id`. Studio users can create a Workspace in any of the specified subnets.",
            "vpc_id": "(Required) The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.",
            "workspace_security_group_id": "(Required) The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by `vpc_id`."
        },
        "sesv2_dedicated_ip_pool": {
            "pool_name": "(Required) Name of the dedicated IP pool."
        },
        "codecatalyst_project": {
            "space_name": "(Required) The name of the space.",
            "display_name": "(Required) The friendly name of the project that will be displayed to users."
        },
        "grafana_license_association": {
            "license_type": "(Required) The type of license for the workspace license association. Valid values are `ENTERPRISE` and `ENTERPRISE_FREE_TRIAL`.",
            "workspace_id": "(Required) The workspace id."
        },
        "lambda_provisioned_concurrency_config": {
            "function_name": "(Required) Name or Amazon Resource Name (ARN) of the Lambda Function.",
            "provisioned_concurrent_executions": "(Required) Amount of capacity to allocate. Must be greater than or equal to `1`.",
            "qualifier": "(Required) Lambda Function version or Lambda Alias name."
        },
        "vpc_security_group_ingress_rule": {
            "ip_protocol": "(Required) The IP protocol name or number. Use `-1` to specify all protocols. Note that if `ip_protocol` is set to `-1`, it translates to all protocols, all port ranges, and `from_port` and `to_port` values should not be defined.",
            "security_group_id": "(Required) The ID of the security group."
        },
        "lambda_layer_version": {
            "layer_name": "(Required) Unique name for your Lambda Layer"
        },
        "redshift_partner": {
            "account_id": "(Required) The Amazon Web Services account ID that owns the cluster.",
            "cluster_identifier": "(Required) The cluster identifier of the cluster that receives data from the partner.",
            "database_name": "(Required) The name of the database that receives data from the partner.",
            "partner_name": "(Required) The name of the partner that is authorized to send data."
        },
        "s3_bucket_logging": {
            "target_bucket": "(Required) Name of the bucket where you want Amazon S3 to store server access logs.",
            "target_prefix": "(Required) Prefix for all log object keys.",
            "grantee": {
                "type": "(Required) Type of grantee. Valid values: `CanonicalUser`, `AmazonCustomerByEmail`, `Group`."
            }
        },
        "neptune_cluster_parameter_group": {
            "family": "(Required) The family of the neptune cluster parameter group.",
            "name": "(Required) The name of the neptune parameter.",
            "value": "(Required) The value of the neptune parameter."
        },
        "rds_cluster_role_association": {
            "db_cluster_identifier": "(Required) DB Cluster Identifier to associate with the IAM Role.",
            "feature_name": "(Required) Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).",
            "role_arn": "(Required) Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster."
        },
        "sagemaker_studio_lifecycle_config": {
            "studio_lifecycle_config_name": "(Required) The name of the Studio Lifecycle Configuration to create.",
            "studio_lifecycle_config_app_type": "(Required) The App type that the Lifecycle Configuration is attached to. Valid values are `JupyterServer` and `KernelGateway`.",
            "studio_lifecycle_config_content": "(Required) The content of your Studio Lifecycle Configuration script. This content must be base64 encoded."
        },
        "apprunner_service": {
            "kms_key": "(Required) ARN of the KMS key used for encryption.",
            "is_publicly_accessible": "(Required) Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to True. To make the service privately accessible, from only within an Amazon VPC set it to False.",
            "observability_enabled": "(Required) When `true`, an observability configuration resource is associated with the service.",
            "repository_url": "(Required) Location of the repository that contains the source code.",
            "source_code_version": "(Required) Version that should be used within the source code repository. See [Source Code Version](#source-code-version) below for more details.",
            "image_identifier": "(Required) Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the",
            "image_repository_type": "(Required) Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: `ECR` , `ECR_PUBLIC`.",
            "configuration_source": "(Required) Source of the App Runner configuration. Valid values: `REPOSITORY`, `API`. Values are interpreted as follows:",
            "runtime": "(Required) Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.",
            "type": "(Required) Type of version identifier. For a git-based repository, branches represent versions. Valid values: `BRANCH`."
        },
        "devicefarm_project": {
            "name": "(Required) The name of the project"
        },
        "fms_policy": {
            "remediation_enabled": "(Required) A boolean value, indicates if the policy should automatically applied to resources that already exist in the account.",
            "security_service_policy_data": "(Required) The objects to include in Security Service Policy Data. Documented below."
        },
        "vpclattice_access_log_subscription": {
            "destination_arn": "(Required) Amazon Resource Name (ARN) of the log destination.",
            "resource_identifier": "(Required) The ID or Amazon Resource Identifier (ARN) of the service network or service. You must use the ARN if the resources specified in the operation are in different accounts."
        },
        "cognito_identity_pool_roles_attachment": {},
        "cognito_identity_provider": {},
        "datapipeline_pipeline": {
            "name": "(Required) The name of Pipeline."
        },
        "kinesisanalyticsv2_application_snapshot": {
            "application_name": "(Required) The name of an existing  [Kinesis Analytics v2 Application](/docs/providers/aws/r/kinesisanalyticsv2_application.html). Note that the application must be running for a snapshot to be created.",
            "snapshot_name": "(Required) The name of the application snapshot."
        },
        "acmpca_policy": {
            "resource_arn": "(Required) ARN of the private CA to associate with the policy.",
            "policy": "(Required) JSON-formatted IAM policy to attach to the specified private CA resource."
        },
        "ce_anomaly_subscription": {
            "frequency": "(Required) The frequency that anomaly reports are sent. Valid Values: `DAILY` | `IMMEDIATE` | `WEEKLY`.",
            "monitor_arn_list": "(Required) A list of cost anomaly monitors.",
            "name": "(Required) The name for the subscription.",
            "subscriber": "(Required) A subscriber configuration. Multiple subscribers can be defined.",
            "type": "(Required) The type of subscription. Valid Values: `SNS` | `EMAIL`.",
            "address": "(Required) The address of the subscriber. If type is `SNS`, this will be the arn of the sns topic. If type is `EMAIL`, this will be the destination email address."
        },
        "connect_quick_connect": {
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "name": "(Required) Specifies the name of the Quick Connect.",
            "quick_connect_config": "(Required) A block that defines the configuration information for the Quick Connect: `quick_connect_type` and one of `phone_config`, `queue_config`, `user_config` . The Quick Connect Config block is documented below.",
            "quick_connect_type": "(Required) Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.",
            "phone_number": "(Required) Specifies the phone number in in E.164 format.",
            "contact_flow_id": "(Required) Specifies the identifier of the contact flow.",
            "queue_id": "(Required) Specifies the identifier for the queue.",
            "user_id": "(Required) Specifies the identifier for the user."
        },
        "quicksight_analysis": {
            "name": "(Required) Display name for the analysis.",
            "data_set_references": {
                "data_set_arn": "(Required) Dataset Amazon Resource Name (ARN).",
                "data_set_placeholder": "(Required) Dataset placeholder."
            }
        },
        "codepipeline_webhook": {
            "name": "(Required) The name of the webhook.",
            "authentication": "(Required) The type of authentication  to use. One of `IP`, `GITHUB_HMAC`, or `UNAUTHENTICATED`.",
            "target_action": "(Required) The name of the action in a pipeline you want to connect to the webhook. The action must be from the source (first) stage of the pipeline.",
            "target_pipeline": "(Required) The name of the pipeline.",
            "json_path": "(Required) The [JSON path](https://github.com/json-path/JsonPath) to filter on.",
            "match_equals": "(Required) The value to match on (e.g., `refs/heads/{Branch}`). See [AWS docs](https://docs.aws.amazon.com/codepipeline/latest/APIReference/API_WebhookFilterRule.html) for details."
        },
        "ec2_transit_gateway_route_table": {
            "transit_gateway_id": "(Required) Identifier of EC2 Transit Gateway."
        },
        "storagegateway_upload_buffer": {
            "gateway_arn": "(Required) The Amazon Resource Name (ARN) of the gateway."
        },
        "ebs_volume": {
            "availability_zone": "(Required) The AZ where the EBS volume will exist."
        },
        "pinpoint_event_stream": {
            "application_id": "(Required) The application ID.",
            "destination_stream_arn": "(Required) The Amazon Resource Name (ARN) of the Amazon Kinesis stream or Firehose delivery stream to which you want to publish events.",
            "role_arn": "(Required) The IAM role that authorizes Amazon Pinpoint to publish events to the stream in your account."
        },
        "storagegateway_file_system_association": {
            "gateway_arn": "(Required) The Amazon Resource Name (ARN) of the gateway.",
            "location_arn": "(Required) The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.",
            "username": "(Required) The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group."
        },
        "cloudfront_origin_access_identity": {},
        "inspector2_delegated_admin_account": {
            "account_id": "(Required) Account to enable as delegated admin account."
        },
        "service_discovery_private_dns_namespace": {
            "name": "(Required) The name of the namespace.",
            "vpc": "(Required) The ID of VPC that you want to associate the namespace with."
        },
        "glue_partition_index": {
            "table_name": "(Required) Name of the table. For Hive compatibility, this must be entirely lowercase.",
            "database_name": "(Required) Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.",
            "partition_index": {
                "index_name": "(Required) Name of the partition index.",
                "keys": "(Required) Keys for the partition index."
            }
        },
        "kms_external_key": {},
        "route53_resolver_rule": {
            "domain_name": "(Required) DNS queries for this domain name are forwarded to the IP addresses that are specified using `target_ip`.",
            "rule_type": "(Required) The rule type. Valid values are `FORWARD`, `SYSTEM` and `RECURSIVE`.",
            "ip": "(Required) One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses."
        },
        "lb_target_group_attachment": {
            "target_group_arn": "(Required) The ARN of the target group with which to register targets."
        },
        "evidently_launch": {
            "groups": "(Required) One or up to five blocks that contain the feature and variations that are to be used for the launch. [Detailed below](#groups).",
            "name": "(Required) Specifies the name for the metric.",
            "project": "(Required) The name or ARN of the project that is to contain the new launch.",
            "feature": "(Required) Specifies the name of the feature that the launch is using.",
            "variation": "(Required) Specifies the feature variation to use for this launch group.",
            "metric_definition": "(Required) A block that defines the metric. [Detailed below](#metric_definition).",
            "entity_id_key": "(Required) Specifies the entity, such as a user or session, that does an action that causes a metric value to be recorded. An example is `userDetails.userID`.",
            "event_pattern": "(Required) Specifies The EventBridge event pattern that defines how the metric is recorded.",
            "value_key": "(Required) Specifies the value that is tracked to produce the metric.",
            "steps": "(Required) One or up to six blocks that define the traffic allocation percentages among the feature variations during each step of the launch. This also defines the start time of each step. [Detailed below](#steps).",
            "group_weights": "(Required) The traffic allocation percentages among the feature variations during one step of a launch. This is a set of key-value pairs. The keys are variation names. The values represent the percentage of traffic to allocate to that variation during this step. For more information, refer to the [AWS documentation for ScheduledSplitConfig groupWeights](https://docs.aws.amazon.com/cloudwatchevidently/latest/APIReference/API_ScheduledSplitConfig.html).",
            "segment_overrides": "(Required) One or up to six blocks that specify different traffic splits for one or more audience segments. A segment is a portion of your audience that share one or more characteristics. Examples could be Chrome browser users, users in Europe, or Firefox browser users in Europe who also fit other criteria that your application collects, such as age. [Detailed below](#segment_overrides).",
            "start_time": "(Required) Specifies the date and time that this step of the launch starts.",
            "evaluation_order": "(Required) Specifies a number indicating the order to use to evaluate segment overrides, if there are more than one. Segment overrides with lower numbers are evaluated first.",
            "segment": "(Required) The name or ARN of the segment to use.",
            "weights": "(Required) The traffic allocation percentages among the feature variations to assign to this segment. This is a set of key-value pairs. The keys are variation names. The values represent the amount of traffic to allocate to that variation for this segment. This is expressed in thousandths of a percent, so a weight of 50000 represents 50% of traffic."
        },
        "efs_replication_configuration": {
            "source_file_system_id": "(Required) The ID of the file system that is to be replicated.",
            "destination": "(Required) A destination configuration block (documented below)."
        },
        "opsworks_permission": {
            "user_arn": "(Required) The user's IAM ARN to set permissions for",
            "stack_id": "(Required) The stack to set the permissions for"
        },
        "sagemaker_notebook_instance_lifecycle_configuration": {},
        "kendra_data_source": {
            "name": "(Required) A name for your data source connector.",
            "bucket_name": "(Required) The name of the bucket that contains the documents.",
            "urls": "(Required) A block that specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl. You can include website subdomains. You can list up to `100` seed URLs and up to `3` sitemap URLs. You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling. When selecting websites to index, you must adhere to the [Amazon Acceptable Use Policy](https://aws.amazon.com/aup/) and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own webpages, or webpages that you have authorization to index. [Detailed below](#urls-block).",
            "credentials": "(Required) Your secret ARN, which you can create in AWS Secrets Manager. You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.",
            "host": "(Required) The name of the website host you want to connect to via a web proxy server. For example, the host name of `https://a.example.com/page1.html` is `\"a.example.com\"`.",
            "port": "(Required) The port number of the website host you want to connect to via a web proxy server. For example, the port for `https://a.example.com/page1.html` is `443`, the standard port for HTTPS.",
            "seed_urls": "(Required) The list of seed or starting point URLs of the websites you want to crawl. The list can include a maximum of `100` seed URLs. Array Members: Minimum number of `0` items. Maximum number of `100` items. Length Constraints: Minimum length of `1`. Maximum length of `2048`.",
            "site_maps": "(Required) The list of sitemap URLs of the websites you want to crawl. The list can include a maximum of `3` sitemap URLs.",
            "condition_document_attribute_key": "(Required) The identifier of the document attribute used for the condition. For example, `_source_uri` could be an identifier for the attribute or metadata field that contains source URIs associated with the documents. Amazon Kendra currently does not support `_document_body` as an attribute key used for the condition.",
            "operator": "(Required) The condition operator. For example, you can use `Contains` to partially match a string. Valid Values: `GreaterThan` | `GreaterThanOrEquals` | `LessThan` | `LessThanOrEquals` | `Equals` | `NotEquals` | `Contains` | `NotContains` | `Exists` | `NotExists` | `BeginsWith`.",
            "lambda_arn": "(Required) The Amazon Resource Name (ARN) of a Lambda Function that can manipulate your document metadata fields or attributes and content.",
            "s3_bucket": "(Required) Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see [Data contracts for Lambda functions](https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda)."
        },
        "neptune_cluster_snapshot": {
            "db_cluster_identifier": "(Required) The DB Cluster Identifier from which to take the snapshot.",
            "db_cluster_snapshot_identifier": "(Required) The Identifier for the snapshot."
        },
        "sns_topic": {},
        "networkfirewall_logging_configuration": {
            "logging_configuration": "(Required) A configuration block describing how AWS Network Firewall performs logging for a firewall. See [Logging Configuration](#logging-configuration) below for details.",
            "log_destination_config": "(Required) Set of configuration blocks describing the logging details for a firewall. See [Log Destination Config](#log-destination-config) below for details. At most, only two blocks can be specified; one for `FLOW` logs and one for `ALERT` logs.",
            "log_destination": "(Required) A map describing the logging destination for the chosen `log_destination_type`.",
            "log_destination_type": "(Required) The location to send logs to. Valid values: `S3`, `CloudWatchLogs`, `KinesisDataFirehose`.",
            "log_type": "(Required) The type of log to send. Valid values: `ALERT` or `FLOW`. Alert logs report traffic that matches a `StatefulRule` with an action setting that sends a log message. Flow logs are standard network traffic flow logs."
        },
        "cloudfront_field_level_encryption_config": {
            "content_type_profile_config": "(Required) [Content Type Profile Config](#content-type-profile-config) specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.",
            "query_arg_profile_config": "(Required) [Query Arg Profile Config](#query-arg-profile-config) that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.",
            "forward_when_content_type_is_unknown": "(Required) specifies what to do when an unknown content type is provided for the profile. If true, content is forwarded without being encrypted when the content type is unknown. If false (the default), an error is returned when the content type is unknown.",
            "content_type_profiles": "(Required) Object that contains an attribute `items` that contains the list of configurations for a field-level encryption content type-profile. See [Content Type Profile](#content-type-profile).",
            "content_type": "(Required) he content type for a field-level encryption content type-profile mapping. Valid value is `application/x-www-form-urlencoded`.",
            "format": "(Required) The format for a field-level encryption content type-profile mapping. Valid value is `URLEncoded`.",
            "forward_when_query_arg_profile_is_unknown": "(Required) Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.",
            "profile_id": "(Required) ID of profile to use for field-level encryption query argument-profile mapping",
            "query_arg": "(Required) Query argument for field-level encryption query argument-profile mapping."
        },
        "s3_account_public_access_block": {},
        "ssm_association": {
            "name": "(Required) The name of the SSM document to apply.",
            "s3_bucket_name": "(Required) The S3 bucket name.",
            "key": "(Required) Either `InstanceIds` or `tag:Tag Name` to specify an EC2 tag.",
            "values": "(Required) A list of instance IDs or tag values. AWS currently limits this list size to one value."
        },
        "storagegateway_stored_iscsi_volume": {
            "gateway_arn": "(Required) The Amazon Resource Name (ARN) of the gateway.",
            "network_interface_id": "(Required) The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted.",
            "target_name": "(Required) The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. The target name must be unique across all volumes of a gateway.",
            "disk_id": "(Required) The unique identifier for the gateway local disk that is configured as a stored volume.",
            "preserve_existing_data": "(Required) Specify this field as `true` if you want to preserve the data on the local disk. Otherwise, specifying this field as false creates an empty volume."
        },
        "ecr_repository_policy": {
            "repository": "(Required) Name of the repository to apply the policy.",
            "policy": "(Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)"
        },
        "ses_domain_mail_from": {
            "domain": "(Required) Verified domain name or email identity to generate DKIM tokens for.",
            "mail_from_domain": "(Required) Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)"
        },
        "apigatewayv2_route": {
            "api_id": "(Required) API identifier.",
            "route_key": "(Required) Route key for the route. For HTTP APIs, the route key can be either `$default`, or a combination of an HTTP method and resource path, for example, `GET /pets`.",
            "request_parameter_key": "(Required) Request parameter key. This is a [request data mapping parameter](https://docs.aws.amazon.com/apigateway/latest/developerguide/websocket-api-data-mapping.html#websocket-mapping-request-parameters).",
            "required": "(Required) Boolean whether or not the parameter is required."
        },
        "storagegateway_gateway": {
            "gateway_name": "(Required) Name of the gateway.",
            "gateway_timezone": "(Required) Time zone for the gateway. The time zone is of the format \"GMT\", \"GMT-hr:mm\", or \"GMT+hr:mm\". For example, `GMT-4:00` indicates the time is 4 hours behind GMT. The time zone is used, for example, for scheduling snapshots and your gateway's maintenance schedule."
        },
        "storagegateway_tape_pool": {
            "pool_name": "(Required) The name of the new custom tape pool.",
            "storage_class": "(Required) The storage class that is associated with the new custom pool. When you use your backup application to eject the tape, the tape is archived directly into the storage class that corresponds to the pool. Possible values are `DEEP_ARCHIVE` or `GLACIER`.",
            "retention_lock_type": "(Required) Tape retention lock can be configured in two modes. When configured in governance mode, AWS accounts with specific IAM permissions are authorized to remove the tape retention lock from archived virtual tapes. When configured in compliance mode, the tape retention lock cannot be removed by any user, including the root AWS account. Possible values are `COMPLIANCE`, `GOVERNANCE`, and `NONE`. Default value is `NONE`."
        },
        "sesv2_configuration_set": {
            "configuration_set_name": "(Required) The name of the configuration set."
        },
        "ssmincidents_response_plan": {
            "name": "(Required) The name of the PagerDuty configuration.",
            "title": "(Required) The title of a generated incident.",
            "impact": "(Required) The impact value of a generated incident. The following values are supported:",
            "sns_topic_arn": "(Required) The ARN of the Amazon SNS topic.",
            "document_name": "(Required) The automation document's name.",
            "role_arn": "(Required) The Amazon Resource Name (ARN) of the role that the automation document assumes when it runs commands.",
            "service_id": "(Required) The ID of the PagerDuty service that the response plan associated with the incident at launch.",
            "secret_id": "(Required) The ID of the AWS Secrets Manager secret that stores your PagerDuty key &mdash; either a General Access REST API Key or User Token REST API Key &mdash; and other user credentials."
        },
        "autoscalingplans_scaling_plan": {
            "name": "(Required) Name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.",
            "application_source": "(Required) CloudFormation stack or set of tags. You can create one scaling plan per application source.",
            "scaling_instruction": "(Required) Scaling instructions. More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_ScalingInstruction.html).",
            "key": "(Required) Tag key.",
            "max_capacity": "(Required) Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for `predictive_scaling_max_capacity_behavior`.",
            "min_capacity": "(Required) Minimum capacity of the resource.",
            "resource_id": "(Required) ID of the resource. This string consists of the resource type and unique identifier.",
            "scalable_dimension": "(Required) Scalable dimension associated with the resource. Valid values: `autoscaling:autoScalingGroup:DesiredCapacity`, `dynamodb:index:ReadCapacityUnits`, `dynamodb:index:WriteCapacityUnits`, `dynamodb:table:ReadCapacityUnits`, `dynamodb:table:WriteCapacityUnits`, `ecs:service:DesiredCount`, `ec2:spot-fleet-request:TargetCapacity`, `rds:cluster:ReadReplicaCount`.",
            "service_namespace": "(Required) Namespace of the AWS service. Valid values: `autoscaling`, `dynamodb`, `ecs`, `ec2`, `rds`.",
            "target_tracking_configuration": "(Required) Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.",
            "metric_name": "(Required) Name of the metric.",
            "namespace": "(Required) Namespace of the metric.",
            "statistic": "(Required) Statistic of the metric. Valid values: `Average`, `Maximum`, `Minimum`, `SampleCount`, `Sum`.",
            "predefined_load_metric_type": "(Required) Metric type. Valid values: `ALBTargetGroupRequestCount`, `ASGTotalCPUUtilization`, `ASGTotalNetworkIn`, `ASGTotalNetworkOut`.",
            "target_value": "(Required) Target value for the metric.",
            "predefined_scaling_metric_type": "(Required) Metric type. Valid values: `ALBRequestCountPerTarget`, `ASGAverageCPUUtilization`, `ASGAverageNetworkIn`, `ASGAverageNetworkOut`, `DynamoDBReadCapacityUtilization`, `DynamoDBWriteCapacityUtilization`, `ECSServiceAverageCPUUtilization`, `ECSServiceAverageMemoryUtilization`, `EC2SpotFleetRequestAverageCPUUtilization`, `EC2SpotFleetRequestAverageNetworkIn`, `EC2SpotFleetRequestAverageNetworkOut`, `RDSReaderAverageCPUUtilization`, `RDSReaderAverageDatabaseConnections`."
        },
        "efs_file_system": {},
        "licensemanager_license_configuration": {
            "name": "(Required) Name of the license configuration.",
            "license_counting_type": "(Required) Dimension to use to track license inventory. Specify either `vCPU`, `Instance`, `Core` or `Socket`."
        },
        "sagemaker_flow_definition": {
            "flow_definition_name": "(Required) The name of your flow definition.",
            "human_loop_config": "(Required)  An object containing information about the tasks the human reviewers will perform. See [Human Loop Config](#human-loop-config) details below.",
            "role_arn": "(Required) The Amazon Resource Name (ARN) of the role needed to call other services on your behalf.",
            "output_config": "(Required) An object containing information about where the human review results will be uploaded. See [Output Config](#output-config) details below.",
            "human_task_ui_arn": "(Required) The Amazon Resource Name (ARN) of the human task user interface.",
            "task_availability_lifetime_in_seconds": "(Required) The length of time that a task remains available for review by human workers. Valid value range between `1` and `864000`.",
            "task_count": "(Required) The number of distinct workers who will perform the same task on each object. Valid value range between `1` and `3`.",
            "task_description": "(Required) A description for the human worker task.",
            "task_title": "(Required) A title for the human worker task.",
            "workteam_arn": "(Required) The Amazon Resource Name (ARN) of the human task user interface. Amazon Resource Name (ARN) of a team of workers. For Public workforces see [AWS Docs](https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-management-public.html).",
            "human_loop_activation_conditions_config": "(Required) defines under what conditions SageMaker creates a human loop. See [Human Loop Activation Conditions Config](#human-loop-activation-conditions-config) details below.",
            "human_loop_activation_conditions": "(Required) A JSON expressing use-case specific conditions declaratively. If any condition is matched, atomic tasks are created against the configured work team. For more information about how to structure the JSON, see [JSON Schema for Human Loop Activation Conditions in Amazon Augmented AI](https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-human-fallback-conditions-json-schema.html).",
            "aws_managed_human_loop_request_source": "(Required) Specifies whether Amazon Rekognition or Amazon Textract are used as the integration source. Valid values are: `AWS/Rekognition/DetectModerationLabels/Image/V3` and `AWS/Textract/AnalyzeDocument/Forms/V1`.",
            "s3_output_path": "(Required) The Amazon S3 path where the object containing human output will be made available."
        },
        "codecommit_trigger": {
            "repository_name": "(Required) The name for the repository. This needs to be less than 100 characters.",
            "name": "(Required) The name of the trigger.",
            "destination_arn": "(Required) The ARN of the resource that is the target for a trigger. For example, the ARN of a topic in Amazon Simple Notification Service (SNS).",
            "events": "(Required) The repository events that will cause the trigger to run actions in another service, such as sending a notification through Amazon Simple Notification Service (SNS). If no events are specified, the trigger will run for all repository events. Event types include: `all`, `updateReference`, `createReference`, `deleteReference`."
        },
        "iam_role_policy_attachment": {},
        "kinesis_stream_consumer": {},
        "waf_xss_match_set": {
            "name": "(Required) The name or description of the SizeConstraintSet."
        },
        "ebs_snapshot": {
            "volume_id": "(Required) The Volume ID of which to make a snapshot."
        },
        "redshiftserverless_snapshot": {
            "namespace_name": "(Required) The namespace to create a snapshot for.",
            "snapshot_name": "(Required) The name of the snapshot."
        },
        "iam_user_ssh_key": {
            "username": "(Required) The name of the IAM user to associate the SSH public key with.",
            "encoding": "(Required) Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use `SSH`. To retrieve the public key in PEM format, use `PEM`.",
            "public_key": "(Required) The SSH public key. The public key must be encoded in ssh-rsa format or PEM format."
        },
        "iot_role_alias": {
            "alias": "(Required) The name of the role alias.",
            "role_arn": "(Required) The identity of the role to which the alias refers."
        },
        "route53_traffic_policy": {
            "name": "(Required) Name of the traffic policy.",
            "document": "(Required) Policy document. This is a JSON formatted string. For more information about building Route53 traffic policy documents, see the [AWS Route53 Traffic Policy document format](https://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html)"
        },
        "dms_s3_endpoint": {
            "bucket_name": "(Required) S3 bucket name.",
            "endpoint_id": "(Required) Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.",
            "endpoint_type": "(Required) Type of endpoint. Valid values are `source`, `target`.",
            "service_access_role_arn": "(Required) ARN of the IAM role with permissions to the S3 Bucket."
        },
        "eip_association": {},
        "s3_bucket_server_side_encryption_configuration": {},
        "s3_object": {
            "bucket": "(Required) Name of the bucket to put the file in. Alternatively, an [S3 access point](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html) ARN can be specified.",
            "key": "(Required) Name of the object once it is in the bucket."
        },
        "signer_signing_job": {
            "profile_name": "(Required) The name of the profile to initiate the signing operation.",
            "source": "(Required) The S3 bucket that contains the object to sign. See [Source](#source) below for details.",
            "destination": "(Required) The S3 bucket in which to save your signed object. See [Destination](#destination) below for details.",
            "s3": "(Required) A configuration block describing the S3 Destination object: See [S3 Destination](#s3-destination) below for details.",
            "bucket": "(Required) Name of the S3 bucket.",
            "key": "(Required) Key name of the object that contains your unsigned code.",
            "version": "(Required) Version of your source image in your version enabled S3 bucket."
        },
        "waf_web_acl": {
            "default_action": "(Required) Configuration block with action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL. Detailed below.",
            "metric_name": "(Required) The name or description for the Amazon CloudWatch metric of this web ACL.",
            "name": "(Required) The name or description of the web ACL.",
            "type": "(Required) valid values are: `NONE` or `COUNT`",
            "log_destination": "(Required) Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream",
            "field_to_match": "(Required) Set of configuration blocks for fields to redact. Detailed below.",
            "priority": "(Required) Specifies the order in which the rules in a WebACL are evaluated.",
            "rule_id": "(Required) ID of the associated WAF (Global) rule (e.g., [`aws_waf_rule`](/docs/providers/aws/r/waf_rule.html)). WAF (Regional) rules cannot be used."
        },
        "resourceexplorer2_view": {
            "name": "(Required) The name of the property that is included in this view. Valid values: `tags`.",
            "filter_string": "(Required) The string that contains the search keywords, prefixes, and operators to control the results that can be returned by a search operation. For more details, see [Search query syntax](https://docs.aws.amazon.com/resource-explorer/latest/userguide/using-search-query-syntax.html)."
        },
        "servicecatalog_product_portfolio_association": {
            "portfolio_id": "(Required) Portfolio identifier.",
            "product_id": "(Required) Product identifier."
        },
        "ec2_client_vpn_authorization_rule": {
            "client_vpn_endpoint_id": "(Required) The ID of the Client VPN endpoint.",
            "target_network_cidr": "(Required) The IPv4 address range, in CIDR notation, of the network to which the authorization rule applies."
        },
        "servicecatalog_tag_option_resource_association": {
            "resource_id": "(Required) Resource identifier.",
            "tag_option_id": "(Required) Tag Option identifier."
        },
        "glue_resource_policy": {},
        "sagemaker_pipeline": {
            "pipeline_name": "(Required) The name of the pipeline.",
            "pipeline_display_name": "(Required) The display name of the pipeline.",
            "role_arn": "(Required) The name of the Pipeline (must be unique).",
            "max_parallel_execution_steps": "(Required) The max number of steps that can be executed in parallel.",
            "bucket": "(Required) Name of the S3 bucket.",
            "object_key": "(Required) The object key (or key name) uniquely identifies the object in an S3 bucket."
        },
        "iam_signing_certificate": {},
        "servicecatalog_product": {
            "name": "(Required) Name of the product.",
            "owner": "(Required) Owner of the product.",
            "type": "(Required) Type of product. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_CreateProduct.html#API_CreateProduct_RequestSyntax) for valid list of values."
        },
        "cleanrooms_configured_table": {
            "name": "(Required) - The name of the configured table.",
            "analysis_method": "(Required) - The analysis method for the configured table. The only valid value is currently `DIRECT_QUERY`."
        },
        "opensearch_domain_policy": {
            "domain_name": "(Required) Name of the domain."
        },
        "amplify_webhook": {
            "app_id": "(Required) Unique ID for an Amplify app.",
            "branch_name": "(Required) Name for a branch that is part of the Amplify app."
        },
        "grafana_workspace": {
            "account_access_type": "(Required) The type of account access for the workspace. Valid values are `CURRENT_ACCOUNT` and `ORGANIZATION`. If `ORGANIZATION` is specified, then `organizational_units` must also be present.",
            "authentication_providers": "(Required) The authentication providers for the workspace. Valid values are `AWS_SSO`, `SAML`, or both.",
            "permission_type": "(Required) The permission type of the workspace. If `SERVICE_MANAGED` is specified, the IAM roles and IAM policy attachments are generated automatically. If `CUSTOMER_MANAGED` is specified, the IAM roles and IAM policy attachments will not be created.",
            "prefix_list_ids": "(Required) - An array of prefix list IDs.",
            "vpce_ids": "(Required) - An array of Amazon VPC endpoint IDs for the workspace. The only VPC endpoints that can be specified here are interface VPC endpoints for Grafana workspaces (using the com.amazonaws.[region].grafana-workspace service endpoint). Other VPC endpoints will be ignored.",
            "security_group_ids": "(Required) - The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.",
            "subnet_ids": "(Required) - The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect."
        },
        "medialive_multiplex": {
            "availability_zones": "(Required) A list of availability zones. You must specify exactly two.",
            "name": "(Required) name of Multiplex.",
            "transport_stream_bitrate": "(Required) Transport stream bit rate.",
            "transport_stream_id": "(Required) Unique ID for each multiplex."
        },
        "ses_email_identity": {
            "email": "(Required) The email address to assign to SES."
        },
        "ec2_client_vpn_route": {
            "client_vpn_endpoint_id": "(Required) The ID of the Client VPN endpoint.",
            "destination_cidr_block": "(Required) The IPv4 address range, in CIDR notation, of the route destination.",
            "target_vpc_subnet_id": "(Required) The ID of the Subnet to route the traffic through. It must already be attached to the Client VPN."
        },
        "guardduty_member": {
            "account_id": "(Required) AWS account ID for member account.",
            "detector_id": "(Required) The detector ID of the GuardDuty account where you want to create member accounts.",
            "email": "(Required) Email address for member account."
        },
        "redshift_snapshot_schedule_association": {},
        "backup_report_plan": {
            "name": "(Required) The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.",
            "report_delivery_channel": "(Required) An object that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports. Detailed below.",
            "report_setting": "(Required) An object that identifies the report template for the report. Reports are built using a report template. Detailed below.",
            "s3_bucket_name": "(Required) The unique name of the S3 bucket that receives your reports.",
            "report_template": "(Required) Identifies the report template for the report. Reports are built using a report template. The report templates are: `RESOURCE_COMPLIANCE_REPORT` | `CONTROL_COMPLIANCE_REPORT` | `BACKUP_JOB_REPORT` | `COPY_JOB_REPORT` | `RESTORE_JOB_REPORT`."
        },
        "dms_replication_subnet_group": {
            "replication_subnet_group_description": "(Required) Description for the subnet group.",
            "replication_subnet_group_id": "(Required) Name for the replication subnet group. This value is stored as a lowercase string. It must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens and cannot be `default`.",
            "subnet_ids": "(Required) List of at least 2 EC2 subnet IDs for the subnet group. The subnets must cover at least 2 availability zones."
        },
        "datasync_agent": {
            "name": "(Required) Name of the DataSync Agent."
        },
        "elastic_beanstalk_configuration_template": {
            "name": "(Required) A unique name for this Template."
        },
        "inspector2_member_association": {
            "account_id": "(Required) ID of the account to associate"
        },
        "main_route_table_association": {
            "vpc_id": "(Required) The ID of the VPC whose main route table should be set",
            "route_table_id": "(Required) The ID of the Route Table to set as the new"
        },
        "quicksight_group_membership": {
            "group_name": "(Required) The name of the group in which the member will be added.",
            "member_name": "(Required) The name of the member to add to the group.",
            "namespace": "(Required) The namespace that you want the user to be a part of. Defaults to `default`."
        },
        "quicksight_user": {
            "email": "(Required) The email address of the user that you want to register.",
            "identity_type": "(Required) Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts either  `IAM` or `QUICKSIGHT`. If `IAM` is specified, the `iam_arn` must also be specified.",
            "user_role": "(Required) The Amazon QuickSight role of the user. The user role can be one of the following: `READER`, `AUTHOR`, or `ADMIN`"
        },
        "db_subnet_group": {
            "subnet_ids": "(Required) A list of VPC subnet IDs."
        },
        "fms_admin_account": {},
        "lightsail_disk": {
            "name": "(Required) The name of the Lightsail load balancer.",
            "size_in_gb": "(Required) The instance port the load balancer will connect.",
            "availability_zone": "(Required) The Availability Zone in which to create your disk."
        },
        "wafv2_web_acl_logging_configuration": {
            "log_destination_configs": "(Required) Configuration block that allows you to associate Amazon Kinesis Data Firehose, Cloudwatch Log log group, or S3 bucket Amazon Resource Names (ARNs) with the web ACL. **Note:** data firehose, log group, or bucket name **must** be prefixed with `aws-waf-logs-`, e.g. `aws-waf-logs-example-firehose`, `aws-waf-logs-example-log-group`, or `aws-waf-logs-example-bucket`.",
            "resource_arn": "(Required) Amazon Resource Name (ARN) of the web ACL that you want to associate with `log_destination_configs`.",
            "default_behavior": "(Required) Default handling for logs that don't match any of the specified filtering conditions. Valid values for `default_behavior` are `KEEP` or `DROP`.",
            "filter": "(Required) Filter(s) that you want to apply to the logs. See [Filter](#filter) below for more details.",
            "behavior": "(Required) Parameter that determines how to handle logs that meet the conditions and requirements of the filter. The valid values for `behavior` are `KEEP` or `DROP`.",
            "condition": "(Required) Match condition(s) for the filter. See [Condition](#condition) below for more details.",
            "requirement": "(Required) Logic to apply to the filtering conditions. You can specify that a log must match all conditions or at least one condition in order to satisfy the filter. Valid values for `requirement` are `MEETS_ALL` or `MEETS_ANY`.",
            "action": "(Required) Action setting that a log record must contain in order to meet the condition. Valid values for `action` are `ALLOW`, `BLOCK`, and `COUNT`.",
            "label_name": "(Required) Name of the label that a log record must contain in order to meet the condition. It must be a fully qualified label name, which includes a prefix, optional namespaces, and the label name itself. The prefix identifies the rule group or web ACL context of the rule that added the label."
        },
        "appstream_user_stack_association": {
            "authentication_type": "(Required) Authentication type for the user."
        },
        "emr_block_public_access_configuration": {
            "block_public_security_group_rules": "(Required) Enable or disable EMR Block Public Access.",
            "min_range": "(Required) The first port in the range of TCP ports.",
            "max_range": "(Required) The final port in the range of TCP ports."
        },
        "kinesisanalyticsv2_application": {
            "name": "(Required) The name of the in-application stream.",
            "runtime_environment": "(Required) The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.",
            "service_execution_role": "(Required) The ARN of the [IAM role](/docs/providers/aws/r/iam_role.html) used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.",
            "application_code_configuration": "(Required) The code location and type parameters for the application.",
            "code_content_type": "(Required) Specifies whether the code content is in text or zip format. Valid values: `PLAINTEXT`, `ZIPFILE`.",
            "bucket_arn": "(Required) The ARN of the S3 bucket.",
            "file_key": "(Required) The object key name containing the reference data.",
            "snapshots_enabled": "(Required) Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.",
            "property_group": "(Required) Describes the execution property groups.",
            "property_group_id": "(Required) The key of the application execution property key-value map.",
            "property_map": "(Required) Application execution property key-value map.",
            "configuration_type": "(Required) Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `auto_scaling_enabled`, `parallelism`, or `parallelism_per_kpu` attribute values to be effective.",
            "application_restore_type": "(Required) Specifies how the application should be restored. Valid values: `RESTORE_FROM_CUSTOM_SNAPSHOT`, `RESTORE_FROM_LATEST_SNAPSHOT`, `SKIP_RESTORE_FROM_SNAPSHOT`.",
            "input_schema": "(Required) Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.",
            "name_prefix": "(Required) The name prefix to use when creating an in-application stream.",
            "input_lambda_processor": "(Required) Describes the [Lambda function](/docs/providers/aws/r/lambda_function.html) that is used to preprocess the records in the stream before being processed by your application code.",
            "resource_arn": "(Required) The ARN of the destination Lambda function to write to.",
            "record_column": "(Required) Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.",
            "record_format": "(Required) Specifies the format of the records on the streaming source.",
            "sql_type": "(Required) The type of column created in the in-application input stream or reference table.",
            "mapping_parameters": "(Required) Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.",
            "record_format_type": "(Required) Specifies the format of the records on the output stream. Valid values: `CSV`, `JSON`.",
            "record_column_delimiter": "(Required) The column delimiter. For example, in a CSV format, a comma (`,`) is the typical column delimiter.",
            "record_row_delimiter": "(Required) The row delimiter. For example, in a CSV format, `\\n` is the typical row delimiter.",
            "record_row_path": "(Required) The path to the top-level parent that contains the records.",
            "input_starting_position": "(Required) The starting position on the stream. Valid values: `LAST_STOPPED_POINT`, `NOW`, `TRIM_HORIZON`.",
            "destination_schema": "(Required) Describes the data format when records are written to the destination.",
            "reference_schema": "(Required) Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.",
            "s3_reference_data_source": "(Required) Identifies the S3 bucket and object that contains the reference data.",
            "table_name": "(Required) The name of the in-application table to create.",
            "security_group_ids": "(Required) The [Security Group](/docs/providers/aws/r/security_group.html) IDs used by the VPC configuration.",
            "subnet_ids": "(Required) The [Subnet](/docs/providers/aws/r/subnet.html) IDs used by the VPC configuration.",
            "log_stream_arn": "(Required) The ARN of the CloudWatch log stream to receive application messages."
        },
        "cognito_identity_pool": {},
        "wafregional_rule": {
            "name": "(Required) The name or description of the rule.",
            "metric_name": "(Required) The name or description for the Amazon CloudWatch metric of this rule."
        },
        "api_gateway_usage_plan": {
            "name": "(Required) Name of the usage plan."
        },
        "codebuild_source_credential": {
            "auth_type": "(Required) The type of authentication used to connect to a GitHub, GitHub Enterprise, or Bitbucket repository. An OAUTH connection is not supported by the API.",
            "server_type": "(Required) The source provider used for this project.",
            "token": "(Required) For `GitHub` or `GitHub Enterprise`, this is the personal access token. For `Bitbucket`, this is the app password."
        },
        "waf_rule_group": {
            "metric_name": "(Required) A friendly name for the metrics from the rule group"
        },
        "codedeploy_deployment_group": {
            "app_name": "(Required) The name of the application.",
            "deployment_group_name": "(Required) The name of the deployment group.",
            "service_role_arn": "(Required) The service role ARN that allows deployments.",
            "cluster_name": "(Required) The name of the ECS cluster.",
            "service_name": "(Required) The name of the ECS service.",
            "prod_traffic_route": "(Required) Configuration block for the production traffic route (documented below).",
            "target_group": "(Required) Configuration blocks for a target group within a target group pair (documented below).",
            "listener_arns": "(Required) List of Amazon Resource Names (ARNs) of the load balancer listeners.",
            "name": "(Required) Name of the target group.",
            "trigger_events": "(Required) The event type or types for which notifications are triggered. Some values that are supported: `DeploymentStart`, `DeploymentSuccess`, `DeploymentFailure`, `DeploymentStop`, `DeploymentRollback`, `InstanceStart`, `InstanceSuccess`, `InstanceFailure`.  See [the CodeDeploy documentation][1] for all possible values.",
            "trigger_name": "(Required) The name of the notification trigger.",
            "trigger_target_arn": "(Required) The ARN of the SNS topic through which notifications are sent."
        },
        "comprehend_document_classifier": {
            "data_access_role_arn": "(Required) The ARN for an IAM Role which allows Comprehend to read the training and testing data.",
            "input_data_config": "(Required) Configuration for the training and testing data.",
            "language_code": "(Required) Two-letter language code for the language.",
            "name": "(Required) Name for the Document Classifier.",
            "attribute_names": "(Required) The JSON attribute that contains the annotations for the training documents.",
            "s3_uri": "(Required) Destination path for the output documents.",
            "security_group_ids": "(Required) List of security group IDs.",
            "subnets": "(Required) List of VPC subnets."
        },
        "glue_security_configuration": {
            "cloudwatch_encryption ": "(Required) A `cloudwatch_encryption ` block as described below, which contains encryption configuration for CloudWatch.",
            "job_bookmarks_encryption ": "(Required) A `job_bookmarks_encryption ` block as described below, which contains encryption configuration for job bookmarks.",
            "s3_encryption": "(Required) A `s3_encryption ` block as described below, which contains encryption configuration for S3 data."
        },
        "appsync_type": {
            "api_id": "(Required) GraphQL API ID.",
            "format": "(Required) The type format: `SDL` or `JSON`.",
            "definition": "(Required) The type definition."
        },
        "medialive_multiplex_program": {
            "multiplex_id": "(Required) Multiplex ID.",
            "program_name": "(Required) Unique program name.",
            "multiplex_program_settings": "(Required) MultiplexProgram settings. See [Multiplex Program Settings](#multiple-program-settings) for more details.",
            "program_number": "(Required) Unique program number.",
            "preferred_channel_pipeline": "(Required) Enum for preferred channel pipeline. Options are `CURRENTLY_ACTIVE`, `PIPELINE_0`, or `PIPELINE_1`.",
            "provider_name": "(Required) Unique provider name.",
            "service_name": "(Required) Unique service name."
        },
        "redshift_snapshot_copy_grant": {},
        "codepipeline_custom_action_type": {
            "category": "(Required) The category of the custom action. Valid values: `Source`, `Build`, `Deploy`, `Test`, `Invoke`, `Approval`",
            "key": "(Required) Whether the configuration property is a key.",
            "name": "(Required) The name of the action configuration property.",
            "required": "(Required) Whether the configuration property is a required value.",
            "input_artifact_details": "(Required) The details of the input artifact for the action.",
            "maximum_count": "(Required) The maximum number of artifacts allowed for the action type. Min: 0, Max: 5",
            "minimum_count": "(Required) The minimum number of artifacts allowed for the action type. Min: 0, Max: 5",
            "output_artifact_details": "(Required) The details of the output artifact of the action.",
            "provider_name": "(Required) The provider of the service used in the custom action",
            "version": "(Required) The version identifier of the custom action."
        },
        "efs_access_point": {
            "file_system_id": "(Required) ID of the file system for which the access point is intended."
        },
        "servicecatalog_service_action": {
            "definition": "(Required) Self-service action definition configuration block. Detailed below.",
            "name": "(Required) Name of the SSM document. For example, `AWS-RestartEC2Instance`. If you are using a shared SSM document, you must provide the ARN instead of the name.",
            "version": "(Required) SSM document version. For example, `1`."
        },
        "sesv2_dedicated_ip_assignment": {
            "ip": "(Required) Dedicated IP address.",
            "destination_pool_name": "(Required) Dedicated IP address."
        },
        "appconfig_deployment": {},
        "batch_job_queue": {
            "name": "(Required) Specifies the name of the job queue.",
            "compute_environments": "(Required) List of compute environment ARNs mapped to a job queue.",
            "priority": "(Required) The priority of the job queue. Job queues with a higher priority",
            "state": "(Required) The state of the job queue. Must be one of: `ENABLED` or `DISABLED`"
        },
        "cloudfront_monitoring_subscription": {
            "distribution_id": "(Required) The ID of the distribution that you are enabling metrics for.",
            "monitoring_subscription": {
                "realtime_metrics_subscription_config": "(Required) A subscription configuration for additional CloudWatch metrics. See below."
            },
            "realtime_metrics_subscription_config": {
                "realtime_metrics_subscription_status": "(Required) A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution. Valid values are `Enabled` and `Disabled`. See below."
            }
        },
        "elasticache_user_group_association": {
            "user_group_id": "(Required) ID of the user group.",
            "user_id": "(Required) ID of the user to associated with the user group."
        },
        "opsworks_instance": {
            "layer_ids": "(Required) List of the layers the instance will belong to.",
            "stack_id": "(Required) Identifier of the stack the instance will belong to."
        },
        "accessanalyzer_archive_rule": {
            "analyzer_name": "(Required) Analyzer name.",
            "filter": "(Required) Filter criteria for the archive rule. See [Filter](#filter) for more details.",
            "rule_name": "(Required) Rule name.",
            "criteria": "(Required) Filter criteria."
        },
        "imagebuilder_distribution_configuration": {
            "name": "(Required) Name of the distribution configuration.",
            "distribution": {
                "region": "(Required) AWS Region for the distribution."
            },
            "repository_name": "(Required) The name of the container repository where the output container image is stored. This name is prefixed by the repository location.",
            "service": "(Required) The service in which this image is registered. Valid values: `ECR`."
        },
        "iot_topic_rule_destination": {
            "vpc_configuration": "(Required) Configuration of the virtual private cloud (VPC) connection. For more info, see the [AWS documentation](https://docs.aws.amazon.com/iot/latest/developerguide/vpc-rule-action.html).",
            "role_arn": "(Required) The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).",
            "subnet_ids": "(Required) The subnet IDs of the VPC destination.",
            "vpc_id": "(Required) The ID of the VPC."
        },
        "mskconnect_custom_plugin": {
            "name": "(Required) The name of the custom plugin..",
            "content_type": "(Required) The type of the plugin file. Allowed values are `ZIP` and `JAR`.",
            "location": "(Required) Information about the location of a custom plugin. See below.",
            "s3": "(Required) Information of the plugin file stored in Amazon S3. See below.",
            "bucket_arn": "(Required) The Amazon Resource Name (ARN) of an S3 bucket.",
            "file_key": "(Required) The file key for an object in an S3 bucket."
        },
        "opensearchserverless_collection": {
            "name": "(Required) Name of the collection."
        },
        "dynamodb_table_item": {
            "hash_key": "(Required) Hash key to use for lookups and identification of the item",
            "item": "(Required) JSON representation of a map of attribute name/value pairs, one for each attribute. Only the primary key attributes are required; you can optionally provide other attribute name-value pairs for the item.",
            "table_name": "(Required) Name of the table to contain the item."
        },
        "backup_vault_policy": {
            "backup_vault_name": "(Required) Name of the backup vault to add policy for.",
            "policy": "(Required) The backup vault access policy document in JSON format."
        },
        "lb_listener_certificate": {},
        "networkfirewall_rule_group": {
            "type": "(Required) The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are `CUSTOMER_KMS` and `AWS_OWNED_KMS_KEY`.",
            "rules_source": "(Required) A configuration block that defines the stateful or stateless rules for the rule group. See [Rules Source](#rules-source) below for details.",
            "key": "(Required) An unique alphanumeric string to identify the `port_set`.",
            "ip_set": "(Required) A configuration block that defines a set of IP addresses. See [IP Set](#ip-set) below for details.",
            "definition": "(Required) Set of port ranges.",
            "reference_arn": "(Required) Set of Managed Prefix IP ARN(s)",
            "port_set": "(Required) A configuration block that defines a set of port ranges. See [Port Set](#port-set) below for details.",
            "rule_order": "(Required) Indicates how to manage the order of the rule evaluation for the rule group. Default value: `DEFAULT_ACTION_ORDER`. Valid values: `DEFAULT_ACTION_ORDER`, `STRICT_ORDER`.",
            "generated_rules_type": "(Required) String value to specify whether domains in the target list are allowed or denied access. Valid values: `ALLOWLIST`, `DENYLIST`.",
            "target_types": "(Required) Set of types of domain specifications that are provided in the `targets` argument. Valid values: `HTTP_HOST`, `TLS_SNI`.",
            "targets": "(Required) Set of domains that you want to inspect for in your traffic flows.",
            "action": "(Required) Action to take with packets in a traffic flow when the flow matches the stateful rule criteria. For all actions, AWS Network Firewall performs the specified action and discontinues stateful inspection of the traffic flow. Valid values: `ALERT`, `DROP`, `PASS`, or `REJECT`.",
            "header": "(Required) A configuration block containing the stateful 5-tuple inspection criteria for the rule, used to inspect traffic flows. See [Header](#header) below for details.",
            "rule_option": "(Required) Set of configuration blocks containing additional settings for a stateful rule. See [Rule Option](#rule-option) below for details.",
            "stateless_rule": "(Required) Set of configuration blocks containing the stateless rules for use in the stateless rule group. See [Stateless Rule](#stateless-rule) below for details.",
            "destination": "(Required) The destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify `ANY`.",
            "destination_port": "(Required) The destination port to inspect for. To match with any address, specify `ANY`.",
            "direction": "(Required) The direction of traffic flow to inspect. Valid values: `ANY` or `FORWARD`.",
            "protocol": "(Required) The protocol to inspect. Valid values: `IP`, `TCP`, `UDP`, `ICMP`, `HTTP`, `FTP`, `TLS`, `SMB`, `DNS`, `DCERPC`, `SSH`, `SMTP`, `IMAP`, `MSN`, `KRB5`, `IKEV2`, `TFTP`, `NTP`, `DHCP`.",
            "source": "(Required) The source IP address or address range for, in CIDR notation. To match with any address, specify `ANY`.",
            "source_port": "(Required) The source port to inspect for. To match with any address, specify `ANY`.",
            "keyword": "(Required) Keyword defined by open source detection systems like Snort or Suricata for stateful rule inspection.",
            "action_definition": "(Required) A configuration block describing the custom action associated with the `action_name`. See [Action Definition](#action-definition) below for details.",
            "priority": "(Required) A setting that indicates the order in which to run this rule relative to all of the rules that are defined for a stateless rule group. AWS Network Firewall evaluates the rules in a rule group starting with the lowest priority setting.",
            "rule_definition": "(Required) A configuration block defining the stateless 5-tuple packet inspection criteria and the action to take on a packet that matches the criteria. See [Rule Definition](#rule-definition) below for details.",
            "actions": "(Required) Set of actions to take on a packet that matches one of the stateless rule definition's `match_attributes`. For every rule you must specify 1 standard action, and you can add custom actions. Standard actions include: `aws:pass`, `aws:drop`, `aws:forward_to_sfe`.",
            "match_attributes": "(Required) A configuration block containing criteria for AWS Network Firewall to use to inspect an individual packet in stateless rule inspection. See [Match Attributes](#match-attributes) below for details.",
            "publish_metric_action": "(Required) A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See [Publish Metric Action](#publish-metric-action) below for details.",
            "dimension": "(Required) Set of configuration blocks containing the dimension settings to use for Amazon CloudWatch custom metrics. See [Dimension](#dimension) below for details.",
            "value": "(Required) The value to use in the custom metric dimension.",
            "address_definition": "(Required)  An IP address or a block of IP addresses in CIDR notation. AWS Network Firewall supports all address ranges for IPv4.",
            "from_port": "(Required) The lower limit of the port range. This must be less than or equal to the `to_port`.",
            "flags": "(Required) Set of flags to look for in a packet. This setting can only specify values that are also specified in `masks`."
        },
        "vpclattice_resource_policy": {
            "resource_arn": "(Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.",
            "policy": "(Required) An IAM policy. The policy string in JSON must not contain newlines or blank lines."
        },
        "cloudwatch_query_definition": {
            "name": "(Required) The name of the query.",
            "query_string": "(Required) The query to save. You can read more about CloudWatch Logs Query Syntax in the [documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html)."
        },
        "config_delivery_channel": {
            "s3_bucket_name": "(Required) The name of the S3 bucket used to store the configuration history."
        },
        "route53recoveryreadiness_readiness_check": {
            "readiness_check_name": "(Required) Unique name describing the readiness check.",
            "resource_set_name": "(Required) Name describing the resource set that will be monitored for readiness."
        },
        "wafv2_ip_set": {
            "name": "(Required) A friendly name of the IP set.",
            "scope": "(Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the Region US East (N. Virginia).",
            "ip_address_version": "(Required) Specify IPV4 or IPV6. Valid values are `IPV4` or `IPV6`.",
            "addresses": "(Required) Contains an array of strings that specifies zero or more IP addresses or blocks of IP addresses. All addresses must be specified using Classless Inter-Domain Routing (CIDR) notation. WAF supports all IPv4 and IPv6 CIDR ranges except for `/0`."
        },
        "ses_domain_dkim": {
            "domain": "(Required) Verified domain name to generate DKIM tokens for."
        },
        "kms_key": {},
        "opensearch_vpc_endpoint": {
            "vpc_options": {
                "subnet_ids": "(Required) A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one."
            }
        },
        "opsworks_java_app_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "amplify_domain_association": {
            "app_id": "(Required) Unique ID for an Amplify app.",
            "domain_name": "(Required) Domain name for the domain association.",
            "sub_domain": "(Required) Setting for the subdomain. Documented below.",
            "branch_name": "(Required) Branch name setting for the subdomain.",
            "prefix": "(Required) Prefix setting for the subdomain."
        },
        "glue_user_defined_function": {
            "name": "(Required) The name of the function.",
            "database_name": "(Required) The name of the Database to create the Function.",
            "class_name": "(Required) The Java class that contains the function code.",
            "owner_name": "(Required) The owner of the function.",
            "owner_type": "(Required) The owner type. can be one of `USER`, `ROLE`, and `GROUP`.",
            "resource_type": "(Required) The type of the resource. can be one of `JAR`, `FILE`, and `ARCHIVE`.",
            "uri": "(Required) The URI for accessing the resource."
        },
        "dx_gateway_association_proposal": {
            "associated_gateway_id": "(Required) The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.",
            "dx_gateway_id": "(Required) Direct Connect Gateway identifier.",
            "dx_gateway_owner_account_id": "(Required) AWS Account identifier of the Direct Connect Gateway's owner."
        },
        "grafana_role_association": {
            "role": "(Required) The grafana role. Valid values can be found [here](https://docs.aws.amazon.com/grafana/latest/APIReference/API_UpdateInstruction.html#ManagedGrafana-Type-UpdateInstruction-role).",
            "workspace_id": "(Required) The workspace id."
        },
        "iam_policy": {
            "policy": "(Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)"
        },
        "ssm_patch_baseline": {
            "name": "(Required) The name specified to identify the patch source.",
            "patch_filter": "(Required) The patch filter group that defines the criteria for the rule.",
            "configuration": "(Required) The value of the yum repo configuration.",
            "products": "(Required) The specific operating system versions a patch repository applies to, such as `\"Ubuntu16.04\"`, `\"AmazonLinux2016.09\"`, `\"RedhatEnterpriseLinux7.2\"` or `\"Suse12.7\"`."
        },
        "chimesdkvoice_sip_media_application": {
            "aws_region": "(Required) The AWS Region in which the AWS Chime SDK Voice Sip Media Application is created.",
            "endpoints": "(Required)  List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported. See [`endpoints`](#endpoints).",
            "name": "(Required) The name of the AWS Chime SDK Voice Sip Media Application.",
            "lambda_arn": "(Required) Valid Amazon Resource Name (ARN) of the Lambda function, version, or alias. The function must be created in the same AWS Region as the SIP media application."
        },
        "cloudsearch_domain": {},
        "appmesh_virtual_node": {
            "name": "(Required) Name to use for the virtual node. Must be between 1 and 255 characters in length.",
            "mesh_name": "(Required) Name of the service mesh in which to create the virtual node. Must be between 1 and 255 characters in length.",
            "spec": "(Required) Virtual node specification to apply.",
            "virtual_service": "(Required) Virtual service to use as a backend for a virtual node.",
            "virtual_service_name": "(Required) Name of the virtual service that is acting as a virtual node backend. Must be between 1 and 255 characters in length.",
            "validation": "(Required) TLS validation context.",
            "certificate_chain": "(Required) Certificate trust chain for a certificate stored on the file system of the mesh endpoint that the proxy is running on. Must be between 1 and 255 characters in length.",
            "private_key": "(Required) Private key for a certificate stored on the file system of the virtual node that the proxy is running on. Must be between 1 and 255 characters in length.",
            "secret_name": "(Required) Name of the secret for a virtual node's Transport Layer Security (TLS) Secret Discovery Service validation context trust.",
            "trust": "(Required) TLS validation context trust.",
            "match": "(Required) Criteria for determining a SAN's match.",
            "exact": "(Required) Values sent must match the specified values exactly.",
            "certificate_authority_arns": "(Required) One or more ACM ARNs.",
            "port_mapping": "(Required) Port mapping information for the listener.",
            "path": "(Required) File path to write access logs to. You can use `/dev/stdout` to send access logs to standard out. Must be between 1 and 255 characters in length.",
            "key": "(Required) The specified key for the JSON. Must be between 1 and 100 characters in length.",
            "value": "(Required) Number of time units. Minimum value of `0`.",
            "namespace_name": "(Required) Name of the AWS Cloud Map namespace to use.",
            "service_name": "(Required) Name of the AWS Cloud Map service to use. Use the [`aws_service_discovery_service`](/docs/providers/aws/r/service_discovery_service.html) resource to configure a Cloud Map service. Must be between 1 and 1024 characters in length.",
            "hostname": "(Required) DNS host name for your virtual node.",
            "port": "(Required) Port used for the port mapping.",
            "protocol": "(Required) Protocol for the health check request. Valid values are `http`, `http2`, `tcp` and `grpc`.",
            "max_requests": "(Required) Maximum number of inflight requests Envoy can concurrently support across hosts in upstream cluster. Minimum value of `1`.",
            "max_connections": "(Required) Maximum number of outbound TCP connections Envoy can establish concurrently with all hosts in upstream cluster. Minimum value of `1`.",
            "healthy_threshold": "(Required) Number of consecutive successful health checks that must occur before declaring listener healthy.",
            "timeout_millis": "(Required) Amount of time to wait when receiving a response from the health check, in milliseconds.",
            "unhealthy_threshold": "(Required) Number of consecutive failed health checks that must occur before declaring a virtual node unhealthy.",
            "base_ejection_duration": "(Required) Base amount of time for which a host is ejected.",
            "interval": "(Required) Time interval between ejection sweep analysis.",
            "max_ejection_percent": "(Required) Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.",
            "max_server_errors": "(Required) Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.",
            "unit": "(Required) Unit of time. Valid values: `ms`, `s`.",
            "certificate": "(Required) Listener's TLS certificate.",
            "certificate_arn": "(Required) ARN for the certificate."
        },
        "codecommit_repository": {
            "repository_name": "(Required) The name for the repository. This needs to be less than 100 characters."
        },
        "xray_encryption_config": {
            "type": "(Required) The type of encryption. Set to `KMS` to use your own key for encryption. Set to `NONE` for default encryption."
        },
        "connect_routing_profile": {
            "default_outbound_queue_id": "(Required) Specifies the default outbound queue for the Routing Profile.",
            "description": "(Required) Specifies the description of the Routing Profile.",
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "media_concurrencies": "(Required) One or more `media_concurrencies` blocks that specify the channels that agents can handle in the Contact Control Panel (CCP) for this Routing Profile. The `media_concurrencies` block is documented below.",
            "name": "(Required) Specifies the name of the Routing Profile.",
            "channel": "(Required) Specifies the channels agents can handle in the Contact Control Panel (CCP) for this routing profile. Valid values are `VOICE`, `CHAT`, `TASK`.",
            "concurrency": "(Required) Specifies the number of contacts an agent can have on a channel simultaneously. Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1. Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10. Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.",
            "delay": "(Required) Specifies the delay, in seconds, that a contact should be in the queue before they are routed to an available agent",
            "priority": "(Required) Specifies the order in which contacts are to be handled for the queue.",
            "queue_id": "(Required) Specifies the identifier for the queue."
        },
        "kendra_faq": {},
        "s3_bucket_lifecycle_configuration": {
            "bucket": "(Required) Name of the source S3 bucket you want Amazon S3 to monitor.",
            "rule": {
                "id": "(Required) Unique identifier for the rule. The value cannot be longer than 255 characters.",
                "status": "(Required) Whether the rule is currently being applied. Valid values: `Enabled` or `Disabled`."
            }
        },
        "fsx_openzfs_snapshot": {
            "name": "(Required) The name of the Snapshot. You can use a maximum of 203 alphanumeric characters plus either _ or -  or : or . for the name."
        },
        "sagemaker_user_profile": {
            "user_profile_name": "(Required) The name for the User Profile.",
            "domain_id": "(Required) The ID of the associated Domain.",
            "single_sign_on_user_value": "(Required) The username of the associated AWS Single Sign-On User for this User Profile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.",
            "user_settings": "(Required) The user settings. See [User Settings](#user-settings) below.",
            "execution_role": "(Required) The execution role ARN for the user.",
            "app_image_config_name": "(Required) The name of the App Image Config.",
            "image_name": "(Required) The name of the Custom Image."
        },
        "shield_protection_group": {
            "aggregation": "(Required) Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.",
            "pattern": "(Required) The criteria to use to choose the protected resources for inclusion in the group.",
            "protection_group_id": "(Required) The name of the protection group."
        },
        "apigatewayv2_vpc_link": {
            "name": "(Required) Name of the VPC Link. Must be between 1 and 128 characters in length.",
            "security_group_ids": "(Required) Security group IDs for the VPC Link.",
            "subnet_ids": "(Required) Subnet IDs for the VPC Link."
        },
        "backup_framework": {
            "control": "(Required) One or more control blocks that make up the framework. Each control in the list has a name, input parameters, and scope. Detailed below.",
            "name": "(Required) The name of a control. This name is between 1 and 256 characters."
        },
        "batch_scheduling_policy": {
            "name": "(Required) Specifies the name of the scheduling policy.",
            "share_identifier": "(Required) A fair share identifier or fair share identifier prefix. For more information, see [ShareAttributes](https://docs.aws.amazon.com/batch/latest/APIReference/API_ShareAttributes.html)."
        },
        "codeartifact_repository": {
            "domain": "(Required) The domain that contains the created repository.",
            "repository": "(Required) The name of the repository to create.",
            "repository_name": "(Required) The name of an upstream repository.",
            "external_connection_name": "(Required) The name of the external connection associated with a repository."
        },
        "redshiftdata_statement": {
            "database": "(Required) The name of the database.",
            "sql": "(Required) The SQL statement text to run."
        },
        "s3_bucket_notification": {
            "bucket": "(Required) Name of the bucket for notification configuration.",
            "events": "(Required) [Event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.",
            "lambda_function_arn": "(Required) Lambda function ARN.",
            "queue_arn": "(Required) SQS queue ARN.",
            "topic_arn": "(Required) SNS topic ARN."
        },
        "ec2_transit_gateway_multicast_group_member": {
            "group_ip_address": "(Required) The IP address assigned to the transit gateway multicast group.",
            "network_interface_id": "(Required) The group members' network interface ID to register with the transit gateway multicast group.",
            "transit_gateway_multicast_domain_id": "(Required) The ID of the transit gateway multicast domain."
        },
        "opsworks_nodejs_app_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "ce_cost_allocation_tag": {
            "tag_key": "(Required) The key for the cost allocation tag.",
            "status": "(Required) The status of a cost allocation tag. Valid values are `Active` and `Inactive`."
        },
        "transfer_tag": {
            "resource_arn": "(Required) Amazon Resource Name (ARN) of the Transfer Family resource to tag.",
            "key": "(Required) Tag name.",
            "value": "(Required) Tag value."
        },
        "redshift_hsm_client_certificate": {},
        "datasync_location_smb": {
            "agent_arns": "(Required) A list of DataSync Agent ARNs with which this location will be associated.",
            "password": "(Required) The password of the user who can mount the share and has file permissions in the SMB.",
            "server_hostname": "(Required) Specifies the IP address or DNS name of the SMB server. The DataSync Agent(s) use this to mount the SMB share.",
            "subdirectory": "(Required) Subdirectory to perform actions as source or destination. Should be exported by the NFS server.",
            "user": "(Required) The user who can mount the share and has file and folder permissions in the SMB share."
        },
        "directory_service_log_subscription": {
            "directory_id": "(Required) ID of directory.",
            "log_group_name": "(Required) Name of the cloudwatch log group to which the logs should be published. The log group should be already created and the directory service principal should be provided with required permission to create stream and publish logs. Changing this value would delete the current subscription and create a new one. A directory can only have one log subscription at a time."
        },
        "ram_principal_association": {
            "principal": "(Required) The principal to associate with the resource share. Possible values are an AWS account ID, an AWS Organizations Organization ARN, or an AWS Organizations Organization Unit ARN.",
            "resource_share_arn": "(Required) The Amazon Resource Name (ARN) of the resource share."
        },
        "sagemaker_domain": {
            "auth_mode": "(Required) The mode of authentication that members use to access the domain. Valid values are `IAM` and `SSO`.",
            "default_space_settings": {
                "execution_role": "(Required) The execution role for the space."
            },
            "default_user_settings": {
                "execution_role": "(Required) The execution role ARN for the user.",
                "app_image_config_name": "(Required) The name of the App Image Config.",
                "image_name": "(Required) The name of the Custom Image."
            },
            "subnet_ids": "(Required) The VPC subnets that Studio uses for communication.",
            "vpc_id": "(Required) The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication."
        },
        "organizations_policy_attachment": {
            "policy_id": "(Required) The unique identifier (ID) of the policy that you want to attach to the target.",
            "target_id": "(Required) The unique identifier (ID) of the root, organizational unit, or account number that you want to attach the policy to."
        },
        "networkmanager_vpc_attachment": {
            "core_network_id": "(Required) The ID of a core network for the VPC attachment.",
            "subnet_arns": "(Required) The subnet ARN of the VPC attachment.",
            "vpc_arn": "(Required) The ARN of the VPC."
        },
        "accessanalyzer_analyzer": {
            "analyzer_name": "(Required) Name of the Analyzer."
        },
        "elastic_beanstalk_environment": {
            "name": "(Required) A unique name for this Environment. This name is used"
        },
        "rds_export_task": {
            "export_task_identifier": "(Required) Unique identifier for the snapshot export task.",
            "iam_role_arn": "(Required) ARN of the IAM role to use for writing to the Amazon S3 bucket.",
            "kms_key_id": "(Required) ID of the Amazon Web Services KMS key to use to encrypt the snapshot.",
            "s3_bucket_name": "(Required) Name of the Amazon S3 bucket to export the snapshot to.",
            "source_arn": "(Required) Amazon Resource Name (ARN) of the snapshot to export."
        },
        "s3_bucket_acl": {
            "grant": {
                "grantee": "(Required) Configuration block for the person being granted permissions. [See below](#grantee).",
                "permission": "(Required) Logging permissions assigned to the grantee for the bucket."
            },
            "owner": {
                "id": "(Required) ID of the owner."
            },
            "grantee": {
                "type": "(Required) Type of grantee. Valid values: `CanonicalUser`, `AmazonCustomerByEmail`, `Group`."
            }
        },
        "vpclattice_target_group": {
            "name": "(Required) The name of the target group. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.",
            "type": "(Required) The type of target group. Valid Values are `IP` | `LAMBDA` | `INSTANCE` | `ALB`",
            "port": "(Required) The port on which the targets are listening.",
            "protocol": "(Required) The protocol to use for routing traffic to the targets. Valid Values are `HTTP` | `HTTPS`",
            "vpc_identifier": "(Required) The ID of the VPC."
        },
        "prometheus_alert_manager_definition": {
            "workspace_id": "(Required) ID of the prometheus workspace the alert manager definition should be linked to",
            "definition": "(Required) the alert manager definition that you want to be applied. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alert-manager.html)."
        },
        "redshift_authentication_profile": {
            "authentication_profile_content": "(Required) The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account."
        },
        "sesv2_email_identity_mail_from_attributes": {
            "email_identity": "(Required) The verified email identity."
        },
        "chimesdkvoice_sip_rule": {
            "name": "(Required) The name of the SIP rule.",
            "target_applications": "(Required) List of SIP media applications with priority and AWS Region. Only one SIP application per AWS Region can be used. See [`target_applications`](#target_applications).",
            "trigger_type": "(Required) The type of trigger assigned to the SIP rule in `trigger_value`. Valid values are `RequestUriHostname` or `ToPhoneNumber`.",
            "trigger_value": "(Required) If `trigger_type` is `RequestUriHostname`, the value can be the outbound host name of an Amazon Chime Voice Connector. If `trigger_type` is `ToPhoneNumber`, the value can be a customer-owned phone number in the E164 format. The Sip Media Application specified in the Sip Rule is triggered if the request URI in an incoming SIP request matches the `RequestUriHostname`, or if the \"To\" header in the incoming SIP request matches the `ToPhoneNumber` value.",
            "aws_region": "(Required) The AWS Region of the target application.",
            "priority": "(Required) Priority of the SIP media application in the target list.",
            "sip_media_application_id": "(Required) The SIP media application ID."
        },
        "lambda_function": {
            "function_name": "(Required) Unique name for your Lambda Function.",
            "role": "(Required) Amazon Resource Name (ARN) of the function's execution role. The role provides the function's identity and access to AWS services and resources."
        },
        "customer_gateway": {
            "bgp_asn": "(Required) The gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).",
            "type": "(Required) The type of customer gateway. The only type AWS"
        },
        "ec2_capacity_reservation": {
            "availability_zone": "(Required) The Availability Zone in which to create the Capacity Reservation.",
            "instance_count": "(Required) The number of instances for which to reserve capacity.",
            "instance_platform": "(Required) The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.",
            "instance_type": "(Required) The instance type for which to reserve capacity."
        },
        "lex_intent": {
            "fulfillment_activity": {
                "type": "(Required) How the intent should be fulfilled, either by running a Lambda function or by"
            },
            "prompt": {
                "max_attempts": "(Required) The number of times to prompt the user for information. Must be a number between 1 and 5 (inclusive).",
                "message": "(Required) A set of messages, each of which provides a message string and its type."
            },
            "message": {
                "content": "(Required) The text of the message. Must be less than or equal to 1000 characters in length.",
                "content_type": "(Required) The content type of the message string."
            }
        },
        "route53_hosted_zone_dnssec": {
            "hosted_zone_id": "(Required) Identifier of the Route 53 Hosted Zone."
        },
        "workspaces_directory": {
            "directory_id": "(Required) The directory identifier for registration in WorkSpaces service."
        },
        "chimesdkvoice_voice_profile_domain": {
            "name": "(Required) Name of Voice Profile Domain.",
            "server_side_encryption_configuration": "(Required) Configuration for server side encryption.",
            "kms_key_arn": "(Required) ARN for KMS Key."
        },
        "fsx_file_cache": {
            "file_cache_path": "(Required) A path on the cache that points to a high-level directory (such as /ns1/) or subdirectory (such as /ns1/subdir/) that will be mapped 1-1 with DataRepositoryPath. The leading forward slash in the name is required. Two data repository associations cannot have overlapping cache paths. For example, if a data repository is associated with cache path /ns1/, then you cannot link another data repository with cache path /ns1/ns2. This path specifies where in your cache files will be exported from. This cache directory can be linked to only one data repository, and no data repository other can be linked to the directory. Note: The cache path can only be set to root (/) on an NFS DRA when DataRepositorySubdirectories is specified. If you specify root (/) as the cache path, you can create only one DRA on the cache. The cache path cannot be set to root (/) for an S3 DRA.",
            "version": "(Required) - The version of the NFS (Network File System) protocol of the NFS data repository. The only supported value is NFS3, which indicates that the data repository must support the NFSv3 protocol. The only supported value is `NFS3`.",
            "deployment_type": "(Required) Specifies the cache deployment type. The only supported value is `CACHE_1`.",
            "metadata_configuration": "(Required) The configuration for a Lustre MDT (Metadata Target) storage volume. See the [`metadata_configuration`](#metadata-configuration-arguments) block.",
            "per_unit_storage_throughput": "(Required) Provisions the amount of read and write throughput for each 1 tebibyte (TiB) of cache storage capacity, in MB/s/TiB. The only supported value is `1000`.",
            "storage_capacity": "(Required) The storage capacity of the Lustre MDT (Metadata Target) storage volume in gibibytes (GiB). The only supported value is `2400` GiB."
        },
        "auditmanager_assessment": {
            "name": "(Required) Name of the assessment.",
            "assessment_reports_destination": {
                "destination": "(Required) Destination of the assessment report. This value be in the form `s3://{bucket_name}`.",
                "destination_type": "(Required) Destination type. Currently, `S3` is the only valid value."
            },
            "framework_id": "(Required) Unique identifier of the framework the assessment will be created from.",
            "roles": {
                "role_arn": "(Required) Amazon Resource Name (ARN) of the IAM role.",
                "role_type": "(Required) Type of customer persona. For assessment creation, type must always be `PROCESS_OWNER`."
            }
        },
        "cloudwatch_log_subscription_filter": {
            "name": "(Required) A name for the subscription filter",
            "destination_arn": "(Required) The ARN of the destination to deliver matching log events to. Kinesis stream or Lambda function ARN.",
            "filter_pattern": "(Required) A valid CloudWatch Logs filter pattern for subscribing to a filtered stream of log events. Use empty string `\"\"` to match everything. For more information, see the [Amazon CloudWatch Logs User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html).",
            "log_group_name": "(Required) The name of the log group to associate the subscription filter with"
        },
        "db_instance_role_association": {
            "db_instance_identifier": "(Required) DB Instance Identifier to associate with the IAM Role.",
            "feature_name": "(Required) Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).",
            "role_arn": "(Required) Amazon Resource Name (ARN) of the IAM Role to associate with the DB Instance."
        },
        "dx_macsec_key_association": {
            "connection_id": "(Required) The ID of the dedicated Direct Connect connection. The connection must be a dedicated connection in the `AVAILABLE` state."
        },
        "emr_security_configuration": {
            "configuration": "(Required) A JSON formatted Security Configuration"
        },
        "dx_hosted_public_virtual_interface": {
            "address_family": "(Required) The address family for the BGP peer. `ipv4 ` or `ipv6`.",
            "bgp_asn": "(Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.",
            "connection_id": "(Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.",
            "name": "(Required) The name for the virtual interface.",
            "owner_account_id": "(Required) The AWS account that will own the new virtual interface.",
            "route_filter_prefixes": "(Required) A list of routes to be advertised to the AWS network in this region.",
            "vlan": "(Required) The VLAN ID."
        },
        "elasticache_parameter_group": {
            "name": "(Required) The name of the ElastiCache parameter.",
            "family": "(Required) The family of the ElastiCache parameter group.",
            "value": "(Required) The value of the ElastiCache parameter."
        },
        "opsworks_user_profile": {
            "user_arn": "(Required) The user's IAM ARN",
            "ssh_username": "(Required) The ssh username, with witch this user wants to log in"
        },
        "ec2_client_vpn_endpoint": {
            "authentication_options": "(Required) Information about the authentication method to be used to authenticate clients.",
            "client_cidr_block": "(Required) The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.",
            "connection_log_options": "(Required) Information about the client connection logging options.",
            "server_certificate_arn": "(Required) The ARN of the ACM server certificate.",
            "type": "(Required) The type of client authentication to be used. Specify `certificate-authentication` to use certificate-based authentication, `directory-service-authentication` to use Active Directory authentication, or `federated-authentication` to use Federated Authentication via SAML 2.0.",
            "enabled": "(Required) Indicates whether connection logging is enabled."
        },
        "oam_link": {
            "label_template": "(Required) Human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.",
            "resource_types": "(Required) Types of data that the source account shares with the monitoring account.",
            "sink_identifier": "(Required) Identifier of the sink to use to create this link."
        },
        "sagemaker_endpoint": {
            "endpoint_config_name": "(Required) The name of the endpoint configuration to use.",
            "traffic_routing_configuration": "(Required) Defines the traffic routing strategy to shift traffic from the old fleet to the new fleet during an endpoint deployment. See [Traffic Routing Configuration](#traffic-routing-configuration).",
            "maximum_batch_size": "(Required) Batch size for each rolling step to provision capacity and turn on traffic on the new endpoint fleet, and terminate capacity on the old endpoint fleet. Value must be between 5% to 50% of the variant's total instance count. See [Maximum Batch Size](#maximum-batch-size).",
            "wait_interval_in_seconds": "(Required) The waiting time (in seconds) between incremental steps to turn on traffic on the new endpoint fleet. Valid values are between `0` and `3600`.",
            "type": "(Required) Specifies the endpoint capacity type. Valid values are: `INSTANCE_COUNT`, or `CAPACITY_PERCENT`.",
            "value": "(Required) Defines the capacity size, either as a number of instances or a capacity percentage.",
            "alarms": "(Required) List of CloudWatch alarms in your account that are configured to monitor metrics on an endpoint. If any alarms are tripped during a deployment, SageMaker rolls back the deployment. See [Alarms](#alarms).",
            "alarm_name": "(Required) The name of a CloudWatch alarm in your account."
        },
        "oam_sink": {
            "name": "(Required) Name for the sink."
        },
        "pinpoint_adm_channel": {
            "application_id": "(Required) The application ID.",
            "client_id": "(Required) Client ID (part of OAuth Credentials) obtained via Amazon Developer Account.",
            "client_secret": "(Required) Client Secret (part of OAuth Credentials) obtained via Amazon Developer Account."
        },
        "vpc_endpoint_connection_notification": {
            "connection_notification_arn": "(Required) The ARN of the SNS topic for the notifications.",
            "connection_events": "(Required) One or more endpoint [events](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html#API_CreateVpcEndpointConnectionNotification_RequestParameters) for which to receive notifications."
        },
        "dx_private_virtual_interface": {
            "address_family": "(Required) The address family for the BGP peer. `ipv4 ` or `ipv6`.",
            "bgp_asn": "(Required) The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.",
            "connection_id": "(Required) The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.",
            "name": "(Required) The name for the virtual interface.",
            "vlan": "(Required) The VLAN ID."
        },
        "key_pair": {
            "public_key": "(Required) The public key material."
        },
        "cloudwatch_event_endpoint": {
            "event_bus": "(Required) The event buses to use. The names of the event buses must be identical in each Region. Exactly two event buses are required. Documented below.",
            "name": "(Required) The name of the global endpoint.",
            "routing_config": "(Required) Parameters used for routing, including the health check and secondary Region. Documented below.",
            "event_bus_arn": "(Required) The ARN of the event bus the endpoint is associated with.",
            "failover_config": "(Required) Parameters used for failover. This includes what triggers failover and what happens when it's triggered. Documented below.",
            "primary": "(Required) Parameters used for the primary Region. Documented below.",
            "secondary": "(Required) Parameters used for the secondary Region, the Region that events are routed to when failover is triggered or event replication is enabled. Documented below.",
            "health_check": "(Required) The ARN of the health check used by the endpoint to determine whether failover is triggered.",
            "route": "(Required) The name of the secondary Region."
        },
        "connect_hours_of_operation": {
            "config": "(Required) One or more config blocks which define the configuration information for the hours of operation: day, start time, and end time . Config blocks are documented below.",
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "name": "(Required) Specifies the name of the Hours of Operation.",
            "time_zone": "(Required) Specifies the time zone of the Hours of Operation.",
            "day": "(Required) Specifies the day that the hours of operation applies to.",
            "end_time": "(Required) A end time block specifies the time that your contact center closes. The `end_time` is documented below.",
            "start_time": "(Required) A start time block specifies the time that your contact center opens. The `start_time` is documented below.",
            "hours": "(Required) Specifies the hour of opening.",
            "minutes": "(Required) Specifies the minute of opening."
        },
        "synthetics_group": {
            "name": "(Required) Name of the group."
        },
        "autoscaling_schedule": {
            "autoscaling_group_name": "(Required) The name of the Auto Scaling group.",
            "scheduled_action_name": "(Required) The name of this scaling action."
        },
        "memorydb_cluster": {
            "acl_name": "(Required) The name of the Access Control List to associate with the cluster.",
            "node_type": "(Required) The compute and memory capacity of the nodes in the cluster. See AWS documentation on [supported node types](https://docs.aws.amazon.com/memorydb/latest/devguide/nodes.supportedtypes.html) as well as [vertical scaling](https://docs.aws.amazon.com/memorydb/latest/devguide/cluster-vertical-scaling.html)."
        },
        "config_config_rule": {
            "name": "(Required) The name of the rule",
            "source": "(Required) Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources. See [Scope](#scope) Below.",
            "owner": "(Required) Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS`, `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the [`aws_lambda_permission` resource](/docs/providers/aws/r/lambda_permission.html).",
            "policy_runtime": "(Required) The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://github.com/aws-cloudformation/cloudformation-guard).",
            "policy_text": "(Required) The policy definition containing the logic for your Config Custom Policy rule."
        },
        "ecr_pull_through_cache_rule": {},
        "rolesanywhere_trust_anchor": {
            "name": "(Required) The name of the Trust Anchor.",
            "source": "(Required) The source of trust, documented below",
            "source_data": "(Required) The data denoting the source of trust, documented below",
            "source_type": "(Required) The type of the source of trust. Must be either `AWS_ACM_PCA` or `CERTIFICATE_BUNDLE`."
        },
        "cognito_user": {
            "user_pool_id": "(Required) The user pool ID for the user pool where the user will be created.",
            "username": "(Required) The username for the user. Must be unique within the user pool. Must be a UTF-8 string between 1 and 128 characters. After the user is created, the username cannot be changed."
        },
        "wafregional_byte_match_set": {
            "name": "(Required) The name or description of the ByteMatchSet.",
            "field_to_match": "(Required) Settings for the ByteMatchTuple. FieldToMatch documented below.",
            "positional_constraint": "(Required) Within the portion of a web request that you want to search.",
            "target_string": "(Required) The value that you want AWS WAF to search for. The maximum length of the value is 50 bytes.",
            "text_transformation": "(Required) The formatting way for web request.",
            "type": "(Required) The part of the web request that you want AWS WAF to search for a specified string."
        },
        "secretsmanager_secret": {},
        "subnet": {
            "vpc_id": "(Required) The VPC ID."
        },
        "codecatalyst_dev_environment": {
            "space_name": "(Required) The name of the space.",
            "project_name": "(Required) The name of the project in the space.",
            "persistent_storage": "(Required) Information about the amount of storage allocated to the Dev Environment.",
            "ides": "(Required) Information about the integrated development environment (IDE) configured for a Dev Environment.",
            "instance_type": "(Required) The Amazon EC2 instace type to use for the Dev Environment. Valid values include dev.standard1.small,dev.standard1.medium,dev.standard1.large,dev.standard1.xlarge",
            "name": "(Required) The name of the IDE. Valid values include Cloud9, IntelliJ, PyCharm, GoLand, and VSCode.",
            "runtime": "(Required) A link to the IDE runtime image. This parameter is not required if the name is VSCode. Values of the runtime can be for example public.ecr.aws/jetbrains/py,public.ecr.aws/jetbrains/go",
            "repository_name": "(Required) The name of the source repository.",
            "size": "(Required) The size of the persistent storage in gigabytes (specifically GiB). Valid values for storage are based on memory sizes in 16GB increments. Valid values are 16, 32, and 64."
        },
        "ecs_cluster": {
            "name": "(Required) Name of the setting to manage. Valid values: `containerInsights`.",
            "value": " (Required) The value to assign to the setting. Valid values are `enabled` and `disabled`.",
            "namespace": "(Required) The ARN of the [`aws_service_discovery_http_namespace`](/docs/providers/aws/r/service_discovery_http_namespace.html) that's used when you create a service and don't specify a Service Connect configuration."
        },
        "api_gateway_request_validator": {
            "name": "(Required) Name of the request validator",
            "rest_api_id": "(Required) ID of the associated Rest API"
        },
        "s3control_bucket_policy": {
            "bucket": "(Required) Amazon Resource Name (ARN) of the bucket.",
            "policy": "(Required) JSON string of the resource policy. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "sqs_queue_redrive_policy": {
            "queue_url": "(Required) The URL of the SQS Queue to which to attach the policy",
            "redrive_policy": "(Required) The JSON redrive policy for the SQS queue. Accepts two key/val pairs: `deadLetterTargetArn` and `maxReceiveCount`. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html)."
        },
        "cloudfront_public_key": {
            "encoded_key": "(Required) The encoded public key that you want to add to CloudFront to use with features like field-level encryption."
        },
        "ebs_snapshot_import": {
            "disk_container": "(Required) Information about the disk container. Detailed below.",
            "format": "(Required) The format of the disk image being imported. One of `VHD` or `VMDK`."
        },
        "backup_global_settings": {
            "global_settings": "(Required) A list of resources along with the opt-in preferences for the account."
        },
        "ecr_registry_scanning_configuration": {},
        "s3_bucket_public_access_block": {
            "bucket": "(Required) S3 Bucket to which this Public Access Block configuration should be applied."
        },
        "ssm_service_setting": {
            "setting_id": "(Required) ID of the service setting.",
            "setting_value": "(Required) Value of the service setting."
        },
        "lightsail_lb_certificate": {
            "domain_name": "(Required) The domain name (e.g., example.com) for your SSL/TLS certificate.",
            "lb_name": "(Required) The load balancer name where you want to create the SSL/TLS certificate.",
            "name": "(Required) The SSL/TLS certificate name."
        },
        "serverlessapplicationrepository_cloudformation_stack": {
            "name": "(Required) The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`",
            "application_id": "(Required) The ARN of the application from the Serverless Application Repository.",
            "capabilities": "(Required) A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`"
        },
        "redshiftserverless_namespace": {
            "namespace_name": "(Required) The name of the namespace."
        },
        "vpc_ipam_resource_discovery_association": {
            "ipam_id": "(Required) The ID of the IPAM to associate.",
            "ipam_resource_discovery_id": "(Required) The ID of the Resource Discovery to associate."
        },
        "vpclattice_service_network_vpc_association": {
            "vpc_identifier": "(Required) The ID of the VPC.",
            "service_network_identifier": "(Required) The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts."
        },
        "datasync_location_hdfs": {
            "agent_arns": "(Required) A list of DataSync Agent ARNs with which this location will be associated.",
            "authentication_type": "(Required) The type of authentication used to determine the identity of the user. Valid values are `SIMPLE` and `KERBEROS`.",
            "name_node": "(Required)  The NameNode that manages the HDFS namespace. The NameNode performs operations such as opening, closing, and renaming files and directories. The NameNode contains the information to map blocks of data to the DataNodes. You can use only one NameNode. See configuration below.",
            "hostname": "(Required) The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that's installed on-premises uses this hostname to communicate with the NameNode in the network.",
            "port": "(Required) The port that the NameNode uses to listen to client requests."
        },
        "elasticsearch_domain": {
            "domain_name": "(Required) Name of the domain."
        },
        "route53_key_signing_key": {
            "hosted_zone_id": "(Required) Identifier of the Route 53 Hosted Zone.",
            "key_management_service_arn": "(Required) Amazon Resource Name (ARN) of the Key Management Service (KMS) Key. This must be unique for each key-signing key (KSK) in a single hosted zone. This key must be in the `us-east-1` Region and meet certain requirements, which are described in the [Route 53 Developer Guide](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-configuring-dnssec-cmk-requirements.html) and [Route 53 API Reference](https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateKeySigningKey.html).",
            "name": "(Required) Name of the key-signing key (KSK). Must be unique for each key-singing key in the same hosted zone."
        },
        "ssoadmin_account_assignment": {},
        "config_organization_custom_policy_rule": {
            "name": "(Required) name of the rule",
            "policy_text": "(Required) policy definition containing the logic for your organization AWS Config Custom Policy rule",
            "policy_runtime": "(Required)  runtime system for your organization AWS Config Custom Policy rules",
            "trigger_types": "(Required) List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`"
        },
        "datasync_location_efs": {
            "ec2_config": "(Required) Configuration block containing EC2 configurations for connecting to the EFS File System.",
            "efs_file_system_arn": "(Required) Amazon Resource Name (ARN) of EFS File System.",
            "security_group_arns": "(Required) List of Amazon Resource Names (ARNs) of the EC2 Security Groups that are associated with the EFS Mount Target.",
            "subnet_arn": "(Required) Amazon Resource Name (ARN) of the EC2 Subnet that is associated with the EFS Mount Target."
        },
        "codecommit_approval_rule_template_association": {
            "approval_rule_template_name": "(Required) The name for the approval rule template.",
            "repository_name": "(Required) The name of the repository that you want to associate with the template."
        },
        "datasync_location_fsx_windows_file_system": {
            "fsx_filesystem_arn": "(Required) The Amazon Resource Name (ARN) for the FSx for Windows file system.",
            "password": "(Required) The password of the user who has the permissions to access files and folders in the FSx for Windows file system.",
            "user": "(Required) The user who has the permissions to access files and folders in the FSx for Windows file system."
        },
        "s3control_bucket": {
            "bucket": "(Required) Name of the bucket.",
            "outpost_id": "(Required) Identifier of the Outpost to contain this bucket."
        },
        "db_snapshot_copy": {
            "source_db_snapshot_identifier": "(Required) Snapshot identifier of the source snapshot.",
            "target_db_snapshot_identifier": "(Required) The Identifier for the snapshot."
        },
        "dax_subnet_group": {},
        "sqs_queue": {},
        "backup_plan": {
            "name": "(Required) The display name of a backup plan.",
            "rule": "(Required) A rule object that specifies a scheduled task that is used to back up a selection of resources.",
            "rule_name": "(Required) An display name for a backup rule.",
            "target_vault_name": "(Required) The name of a logical container where backups are stored.",
            "destination_vault_arn": "(Required) An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup.",
            "backup_options": "(Required) Specifies the backup option for a selected resource. This option is only available for Windows VSS backup jobs. Set to `{ WindowsVSS = \"enabled\" }` to enable Windows VSS backup option and create a VSS Windows backup.",
            "resource_type": "(Required) The type of AWS resource to be backed up. For VSS Windows backups, the only supported resource type is Amazon EC2. Valid values: `EC2`."
        },
        "account_alternate_contact": {
            "alternate_contact_type": "(Required) Type of the alternate contact. Allowed values are: `BILLING`, `OPERATIONS`, `SECURITY`.",
            "email_address": "(Required) An email address for the alternate contact.",
            "name": "(Required) Name of the alternate contact.",
            "phone_number": "(Required) Phone number for the alternate contact.",
            "title": "(Required) Title for the alternate contact."
        },
        "securityhub_insight": {
            "group_by_attribute": "(Required) The attribute used to group the findings for the insight e.g., if an insight is grouped by `ResourceId`, then the insight produces a list of resource identifiers.",
            "name": "(Required) The name of the custom insight.",
            "unit": "(Required) A date range unit for the date filter. Valid values: `DAYS`.",
            "value": "(Required) The string filter value. Valid values include: `NEW`, `NOTIFIED`, `SUPPRESSED`, and `RESOLVED`.",
            "cidr": "(Required) A finding's CIDR value.",
            "comparison": "(Required) The condition to apply to a string value when querying for findings. Valid values include: `EQUALS`, `PREFIX`, `NOT_EQUALS`, `PREFIX_NOT_EQUALS`.",
            "key": "(Required) The key of the map filter. For example, for `ResourceTags`, `Key` identifies the name of the tag. For `UserDefinedFields`, `Key` is the name of the field."
        },
        "route53_zone": {
            "name": "(Required) This is the name of the hosted zone.",
            "vpc_id": "(Required) ID of the VPC to associate."
        },
        "waf_ipset": {
            "name": "(Required) The name or description of the IPSet."
        },
        "guardduty_filter": {
            "detector_id": "(Required) ID of a GuardDuty detector, attached to your account.",
            "name": "(Required) The name of your filter.",
            "rank": "(Required) Specifies the position of the filter in the list of current filters. Also specifies the order in which this filter is applied to the findings.",
            "action": "(Required) Specifies the action that is to be applied to the findings that match the filter. Can be one of `ARCHIVE` or `NOOP`.",
            "field": "(Required) The name of the field to be evaluated. The full list of field names can be found in [AWS documentation](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_filter-findings.html#filter_criteria)."
        },
        "wafv2_regex_pattern_set": {
            "name": "(Required) A friendly name of the regular expression pattern set.",
            "scope": "(Required) Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.",
            "regex_string": "(Required) The string representing the regular expression, see the AWS WAF [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/waf-regex-pattern-set-creating.html) for more information."
        },
        "dataexchange_data_set": {
            "asset_type": "(Required) The type of asset that is added to a data set. Valid values are: `S3_SNAPSHOT`, `REDSHIFT_DATA_SHARE`, and `API_GATEWAY_API`.",
            "description": "(Required) A description for the data set.",
            "name": "(Required) The name of the data set."
        },
        "sesv2_email_identity": {
            "email_identity": "(Required) The email address or domain to verify."
        },
        "storagegateway_nfs_file_share": {
            "client_list": "(Required) The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `[\"0.0.0.0/0\"]` to not limit access. Minimum 1 item. Maximum 100 items.",
            "gateway_arn": "(Required) Amazon Resource Name (ARN) of the file gateway.",
            "location_arn": "(Required) The ARN of the backed storage used for storing file data.",
            "role_arn": "(Required) The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage."
        },
        "msk_configuration": {
            "server_properties": "(Required) Contents of the server.properties file. Supported properties are documented in the [MSK Developer Guide](https://docs.aws.amazon.com/msk/latest/developerguide/msk-configuration-properties.html).",
            "kafka_versions": "(Required) List of Apache Kafka versions which can use this configuration.",
            "name": "(Required) Name of the configuration."
        },
        "location_place_index": {
            "data_source": "(Required) Specifies the geospatial data provider for the new place index.",
            "index_name": "(Required) The name of the place index resource."
        },
        "vpc_ipam_pool_cidr": {
            "ipam_pool_id": "(Required) The ID of the pool to which you want to assign a CIDR."
        },
        "iot_certificate": {
            "active": "(Required)  Boolean flag to indicate if the certificate should be active"
        },
        "lightsail_disk_attachment": {
            "disk_name": "(Required) The name of the Lightsail Disk.",
            "instance_name": "(Required) The name of the Lightsail Instance to attach to.",
            "disk_path": "(Required) The disk path to expose to the instance."
        },
        "sagemaker_project": {
            "project_name": "(Required) The name of the Project.",
            "service_catalog_provisioning_details": "(Required) The product ID and provisioning artifact ID to provision a service catalog. See [Service Catalog Provisioning Details](#service-catalog-provisioning-details) below.",
            "product_id": "(Required) The ID of the product to provision.",
            "key": "(Required) The key that identifies a provisioning parameter."
        },
        "cognito_managed_user_pool_client": {
            "user_pool_id": "(Required) User pool that the client belongs to."
        },
        "appsync_domain_name": {
            "certificate_arn": "(Required) ARN of the certificate. This can be an Certificate Manager (ACM) certificate or an Identity and Access Management (IAM) server certificate. The certifiacte must reside in us-east-1.",
            "domain_name": "(Required) Domain name."
        },
        "cloudwatch_event_bus": {
            "name": "(Required) The name of the new event bus. The names of custom event buses can't contain the / character. To create a partner event bus, ensure the `name` matches the `event_source_name`."
        },
        "datasync_location_fsx_lustre_file_system": {
            "fsx_filesystem_arn": "(Required) The Amazon Resource Name (ARN) for the FSx for Lustre file system."
        },
        "lakeformation_permissions": {},
        "glacier_vault_lock": {
            "complete_lock": "(Required) Boolean whether to permanently apply this Glacier Lock Policy. Once completed, this cannot be undone. If set to `false`, the Glacier Lock Policy remains in a testing mode for 24 hours. After that time, the Glacier Lock Policy is automatically removed by Glacier and the Terraform resource will show as needing recreation. Changing this from `false` to `true` will show as resource recreation, which is expected. Changing this from `true` to `false` is not possible unless the Glacier Vault is recreated at the same time.",
            "policy": "(Required) JSON string containing the IAM policy to apply as the Glacier Vault Lock policy.",
            "vault_name": "(Required) The name of the Glacier Vault."
        },
        "iam_access_key": {
            "user": "(Required) IAM user to associate with this access key."
        },
        "acmpca_certificate_authority": {
            "certificate_authority_configuration": {
                "key_algorithm": "(Required) Type of the public key algorithm and size, in bits, of the key pair that your key pair creates when it issues a certificate. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CertificateAuthorityConfiguration.html).",
                "signing_algorithm": "(Required) Name of the algorithm your private CA uses to sign certificate requests. Valid values can be found in the [ACM PCA Documentation](https://docs.aws.amazon.com/privateca/latest/APIReference/API_CertificateAuthorityConfiguration.html).",
                "subject": "(Required) Nested argument that contains X.500 distinguished name information. At least one nested attribute must be specified."
            }
        },
        "codebuild_webhook": {
            "project_name": "(Required) The name of the build project.",
            "filter": "(Required) A webhook filter for the group. Filter blocks are documented below.",
            "type": "(Required) The webhook filter group's type. Valid values for this parameter are: `EVENT`, `BASE_REF`, `HEAD_REF`, `ACTOR_ACCOUNT_ID`, `FILE_PATH`, `COMMIT_MESSAGE`. At least one filter group must specify `EVENT` as its type.",
            "pattern": "(Required) For a filter that uses `EVENT` type, a comma-separated string that specifies one event: `PUSH`, `PULL_REQUEST_CREATED`, `PULL_REQUEST_UPDATED`, `PULL_REQUEST_REOPENED`. `PULL_REQUEST_MERGED` works with GitHub & GitHub Enterprise only. For a filter that uses any of the other filter types, a regular expression."
        },
        "dx_hosted_private_virtual_interface_accepter": {
            "virtual_interface_id": "(Required) The ID of the Direct Connect virtual interface to accept."
        },
        "waf_rate_based_rule": {
            "metric_name": "(Required) The name or description for the Amazon CloudWatch metric of this rule.",
            "name": "(Required) The name or description of the rule.",
            "rate_key": "(Required) Valid value is IP.",
            "rate_limit": "(Required) The maximum number of requests, which have an identical value in the field specified by the RateKey, allowed in a five-minute period. Minimum value is 100."
        },
        "qldb_ledger": {
            "permissions_mode": "(Required) The permissions mode for the QLDB ledger instance. Specify either `ALLOW_ALL` or `STANDARD`."
        },
        "wafregional_regex_pattern_set": {
            "name": "(Required) The name or description of the Regex Pattern Set."
        },
        "codebuild_report_group": {
            "name": "(Required) The name of a Report Group.",
            "type": "(Required) The export configuration type. Valid values are `S3` and `NO_EXPORT`.",
            "export_config": "(Required) Information about the destination where the raw data of this Report Group is exported. see [Export Config](#export-config) documented below.",
            "s3_destination": "(Required) contains information about the S3 bucket where the run of a report is exported. see [S3 Destination](#s3-destination) documented below.",
            "encryption_key": "(Required) The encryption key for the report's encrypted raw data. The KMS key ARN."
        },
        "iam_user_group_membership": {
            "user": "(Required) The name of the [IAM User][2] to add to groups",
            "groups": "(Required) A list of [IAM Groups][1] to add the user to"
        },
        "opensearch_outbound_connection": {},
        "iot_thing": {
            "name": "(Required) The name of the thing."
        },
        "lightsail_static_ip": {
            "name": "(Required) The name for the allocated static IP"
        },
        "athena_named_query": {
            "name": "(Required) Plain language name for the query. Maximum length of 128.",
            "database": "(Required) Database to which the query belongs.",
            "query": "(Required) Text of the query itself. In other words, all query statements. Maximum length of 262144."
        },
        "ec2_host": {
            "availability_zone": "(Required) The Availability Zone in which to allocate the Dedicated Host."
        },
        "guardduty_invite_accepter": {
            "detector_id": "(Required) The detector ID of the member GuardDuty account.",
            "master_account_id": "(Required) AWS account ID for primary account."
        },
        "route53_record": {
            "zone_id": "(Required) Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See [`resource_elb.zone_id`](/docs/providers/aws/r/elb.html#zone_id) for example.",
            "name": "(Required) DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.",
            "type": "(Required) `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets",
            "evaluate_target_health": "(Required) Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [related part of documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health).",
            "collection_id": "(Required) The CIDR collection ID. See the [`aws_route53_cidr_collection` resource](route53_cidr_collection.html) for more details.",
            "location_name": "(Required) The CIDR collection location name. See the [`aws_route53_cidr_location` resource](route53_cidr_location.html) for more details. A `location_name` with an asterisk `\"*\"` can be used to create a default CIDR record. `collection_id` is still required for default record.",
            "region": "(Required) An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency",
            "weight": "(Required) A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted."
        },
        "vpclattice_service": {
            "name": "(Required) Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length."
        },
        "opensearchserverless_access_policy": {
            "name": "(Required) Name of the policy.",
            "policy": "(Required) JSON policy document to use as the content for the new policy",
            "type": "(Required) Type of access policy. Must be `data`."
        },
        "route53_resolver_dnssec_config": {
            "resource_id": "(Required) The ID of the virtual private cloud (VPC) that you're updating the DNSSEC validation status for."
        },
        "dms_endpoint": {
            "endpoint_id": "(Required) Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.",
            "endpoint_type": "(Required) Type of endpoint. Valid values are `source`, `target`.",
            "engine_name": "(Required) Type of engine for the endpoint. Valid values are `aurora`, `aurora-postgresql`, `azuredb`, `azure-sql-managed-instance`, `babelfish`, `db2`, `db2-zos`, `docdb`, `dynamodb`, `elasticsearch`, `kafka`, `kinesis`, `mariadb`, `mongodb`, `mysql`, `opensearch`, `oracle`, `postgres`, `redshift`, `s3`, `sqlserver`, `sybase`. Please note that some of engine names are available only for `target` endpoint type (e.g. `redshift`).",
            "auth_type": "(Required) The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `auth_password` value to be provided. The `auth-role` option requires `auth_user_name` and `auth_password` values to be provided.",
            "server_name": "(Required) Fully qualified domain name of the endpoint.",
            "port": "(Required) Transmission Control Protocol (TCP) port for the endpoint."
        },
        "lightsail_database": {
            "relational_database_name": "(Required) The name to use for your new Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.",
            "master_database_name": "(Required) The name of the master database created when the Lightsail database resource is created.",
            "blueprint_id": "(Required) The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`",
            "bundle_id": "(Required)  The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`."
        },
        "vpc_ipam_pool": {},
        "ecs_capacity_provider": {
            "auto_scaling_group_provider": "(Required) Configuration block for the provider for the ECS auto scaling group. Detailed below.",
            "name": "(Required) Name of the capacity provider.",
            "auto_scaling_group_arn": "(Required) - ARN of the associated auto scaling group."
        },
        "glue_catalog_table": {
            "iceberg_input": {
                "metadata_operation": "(Required) A required metadata operation. Can only be set to CREATE."
            }
        },
        "ivs_recording_configuration": {},
        "dx_connection_association": {
            "connection_id": "(Required) The ID of the connection.",
            "lag_id": "(Required) The ID of the LAG with which to associate the connection."
        },
        "servicecatalog_tag_option": {
            "key": "(Required) Tag option key.",
            "value": "(Required) Tag option value."
        },
        "transfer_certificate": {
            "certificate": "(Required) The valid certificate file required for the transfer.",
            "usage": "(Required) Specifies if a certificate is being used for signing or encryption. The valid values are SIGNING and ENCRYPTION."
        },
        "s3_bucket_object_lock_configuration": {
            "default_retention": {
                "mode": "(Required) Default Object Lock retention mode you want to apply to new objects placed in the specified bucket. Valid values: `COMPLIANCE`, `GOVERNANCE`."
            }
        },
        "auditmanager_organization_admin_account_registration": {
            "admin_account_id": "(Required) Identifier for the organization administrator account."
        },
        "autoscaling_traffic_source_attachment": {},
        "eks_node_group": {
            "scaling_config": "(Required) Configuration block with scaling settings. See [`scaling_config`](#scaling_config-configuration-block) below for details.",
            "version": "(Required) EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g., `1`) on read and Terraform will show a difference on next plan. Using the `default_version` or `latest_version` attribute of the `aws_launch_template` resource or data source is recommended for this argument.",
            "desired_size": "(Required) Desired number of worker nodes.",
            "max_size": "(Required) Maximum number of worker nodes.",
            "min_size": "(Required) Minimum number of worker nodes.",
            "key": "(Required) The key of the taint. Maximum length of 63.",
            "effect": "(Required) The effect of the taint. Valid values: `NO_SCHEDULE`, `NO_EXECUTE`, `PREFER_NO_SCHEDULE`."
        },
        "networkmanager_customer_gateway_association": {
            "customer_gateway_arn": "(Required) The Amazon Resource Name (ARN) of the customer gateway.",
            "device_id": "(Required) The ID of the device.",
            "global_network_id": "(Required) The ID of the global network."
        },
        "codebuild_project": {
            "artifacts": {
                "type": "(Required) Build output artifact's type. Valid values: `CODEPIPELINE`, `NO_ARTIFACTS`, `S3`."
            },
            "environment": {
                "compute_type": "(Required) Information about the compute resources the build project will use. Valid values: `BUILD_GENERAL1_SMALL`, `BUILD_GENERAL1_MEDIUM`, `BUILD_GENERAL1_LARGE`, `BUILD_GENERAL1_2XLARGE`. `BUILD_GENERAL1_SMALL` is only valid if `type` is set to `LINUX_CONTAINER`. When `type` is set to `LINUX_GPU_CONTAINER`, `compute_type` must be `BUILD_GENERAL1_LARGE`.",
                "image": "(Required) Docker image to use for this build project. Valid values include [Docker images provided by CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html) (e.g `aws/codebuild/amazonlinux2-x86_64-standard:4.0`), [Docker Hub images](https://hub.docker.com/) (e.g., `hashicorp/terraform:latest`), and full Docker repository URIs such as those for ECR (e.g., `137112412989.dkr.ecr.us-west-2.amazonaws.com/amazonlinux:latest`).",
                "type": "(Required) Type of build environment to use for related builds. Valid values: `LINUX_CONTAINER`, `LINUX_GPU_CONTAINER`, `WINDOWS_CONTAINER` (deprecated), `WINDOWS_SERVER_2019_CONTAINER`, `ARM_CONTAINER`. For additional information, see the [CodeBuild User Guide](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html).",
                "name": "(Required) Environment variable's name or key.",
                "value": "(Required) Environment variable's value.",
                "credential": "(Required) ARN or name of credentials created using AWS Secrets Manager.",
                "credential_provider": "(Required) Service that created the credentials to access a private Docker registry. Valid value: `SECRETS_MANAGER` (AWS Secrets Manager)."
            },
            "source": {
                "type": "(Required) Type of repository that contains the source code to be built. Valid values: `CODECOMMIT`, `CODEPIPELINE`, `GITHUB`, `GITHUB_ENTERPRISE`, `BITBUCKET`, `S3`, `NO_SOURCE`.",
                "fetch_submodules": "(Required) Whether to fetch Git submodules for the AWS CodeBuild build project."
            }
        },
        "connect_user": {
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "name": "(Required) The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from `[a-zA-Z0-9_-.\\@]+`.",
            "phone_config": "(Required) A block that contains information about the phone settings for the user. Documented below.",
            "routing_profile_id": "(Required) The identifier of the routing profile for the user.",
            "security_profile_ids": "(Required) A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.",
            "phone_type": "(Required) The phone type. Valid values are `DESK_PHONE` and `SOFT_PHONE`."
        },
        "elb": {
            "listener": "(Required) A list of listener blocks. Listeners documented below.",
            "bucket": "(Required) The S3 bucket name to store the logs in.",
            "instance_port": "(Required) The port on the instance to route to",
            "instance_protocol": "(Required) The protocol to use to the instance. Valid",
            "lb_port": "(Required) The port to listen on for the load balancer",
            "lb_protocol": "(Required) The protocol to listen on. Valid values are `HTTP`,",
            "healthy_threshold": "(Required) The number of checks before the instance is declared healthy.",
            "unhealthy_threshold": "(Required) The number of checks before the instance is declared unhealthy.",
            "target": "(Required) The target of the check. Valid pattern is \"${PROTOCOL}:${PORT}${PATH}\", where PROTOCOL",
            "interval": "(Required) The interval between checks.",
            "timeout": "(Required) The length of time before the check times out."
        },
        "ami": {
            "name": "(Required) Region-unique name for the AMI.",
            "image_location": "(Required) Path to an S3 object containing an image manifest, e.g., created",
            "kernel_id": "(Required) ID of the kernel image (AKI) that will be used as the paravirtual",
            "device_name": "(Required) Path at which the device is exposed to created instances.",
            "virtual_name": "(Required) Name for the ephemeral device, of the form \"ephemeralN\" where"
        },
        "ivschat_room": {},
        "kms_grant": {},
        "api_gateway_account": {},
        "cloudwatch_event_api_destination": {
            "name": "(Required) The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.",
            "invocation_endpoint": "(Required) URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include \"*\" as path parameters wildcards to be set from the Target HttpParameters.",
            "http_method": "(Required) Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc.",
            "connection_arn": "(Required) ARN of the EventBridge Connection to use for the API Destination."
        },
        "dms_certificate": {
            "certificate_id": "(Required) The certificate identifier."
        },
        "dynamodb_table": {
            "attribute": "(Required) Set of nested attribute definitions. Only required for `hash_key` and `range_key` attributes. See below.",
            "name": "(Required) Name of the index",
            "type": "(Required) Attribute type. Valid values are `S` (string), `N` (number), `B` (binary).",
            "hash_key": "(Required) Name of the hash key in the index; must be defined as an attribute in the resource.",
            "projection_type": "(Required) One of `ALL`, `INCLUDE` or `KEYS_ONLY` where `ALL` projects every attribute into the index, `KEYS_ONLY` projects  into the index only the table and index hash_key and sort_key attributes ,  `INCLUDE` projects into the index all of the attributes that are defined in `non_key_attributes` in addition to the attributes that that`KEYS_ONLY` project.",
            "range_key": "(Required) Name of the range key.",
            "enabled": "(Required) Whether TTL is enabled.",
            "region_name": "(Required) Region name of the replica.",
            "attribute_name": "(Required) Name of the table attribute to store the TTL timestamp in."
        },
        "elastic_beanstalk_application": {
            "name": "(Required) The name of the application, must be unique within your account",
            "service_role": "(Required) The ARN of an IAM service role under which the application version is deleted.  Elastic Beanstalk must have permission to assume this role."
        },
        "inspector_assessment_target": {
            "name": "(Required) The name of the assessment target."
        },
        "codeartifact_domain_permissions_policy": {
            "domain": "(Required) The name of the domain on which to set the resource policy.",
            "policy_document": "(Required) A JSON policy string to be set as the access control resource policy on the provided domain."
        },
        "ssmcontacts_contact": {},
        "auditmanager_assessment_delegation": {
            "assessment_id": "(Required) Identifier for the assessment.",
            "control_set_id": "(Required) Assessment control set name. This value is the control set name used during assessment creation (not the AWS-generated ID). The `_id` suffix on this attribute has been preserved to be consistent with the underlying AWS API.",
            "role_arn": "(Required) Amazon Resource Name (ARN) of the IAM role.",
            "role_type": "(Required) Type of customer persona. For assessment delegation, type must always be `RESOURCE_OWNER`."
        },
        "s3control_access_point_policy": {
            "access_point_arn": "(Required) The ARN of the access point that you want to associate with the specified policy.",
            "policy": "(Required) The policy that you want to apply to the specified access point."
        },
        "ssoadmin_permissions_boundary_attachment": {},
        "vpc_endpoint_connection_accepter": {
            "vpc_endpoint_id": "(Required) AWS VPC Endpoint ID.",
            "vpc_endpoint_service_id": "(Required) AWS VPC Endpoint Service ID."
        },
        "sagemaker_device_fleet": {
            "device_fleet_name": "(Required) The name of the Device Fleet (must be unique).",
            "role_arn": "(Required) The Amazon Resource Name (ARN) that has access to AWS Internet of Things (IoT).",
            "output_config": "(Required) Specifies details about the repository. see [Output Config](#output-config) details below.",
            "s3_output_location": "(Required) The Amazon Simple Storage (S3) bucker URI."
        },
        "timestreamwrite_table": {
            "table_name": "(Required) The name of the Timestream table.",
            "enable_magnetic_store_writes": "(Required) A flag to enable magnetic store writes.",
            "magnetic_store_retention_period_in_days": "(Required) The duration for which data must be stored in the magnetic store. Minimum value of 1. Maximum value of 73000.",
            "memory_store_retention_period_in_hours": "(Required) The duration for which data must be stored in the memory store. Minimum value of 1. Maximum value of 8766.",
            "composite_partition_key": "(Required) A non-empty list of partition keys defining the attributes used to partition the table data. The order of the list determines the partition hierarchy. The name and type of each partition key as well as the partition key order cannot be changed after the table is created. However, the enforcement level of each partition key can be changed. See [Composite Partition Key](#composite-partition-key) below for more details.",
            "type": "(Required) The type of the partition key. Valid values: `DIMENSION`, `MEASURE`."
        },
        "appflow_flow": {
            "name": "(Required) Name of the flow.",
            "destination_flow_config": "(Required) A [Destination Flow Config](#destination-flow-config) that controls how Amazon AppFlow places data in the destination connector.",
            "source_flow_config": "(Required) The [Source Flow Config](#source-flow-config) that controls how Amazon AppFlow retrieves data from the source connector.",
            "task": "(Required) A [Task](#task) that Amazon AppFlow performs while transferring the data in the flow run.",
            "trigger_config": "(Required) A [Trigger](#trigger-config) that determine how and when the flow runs.",
            "connector_type": "(Required) Type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.",
            "destination_connector_properties": "(Required) This stores the information that is required to query a particular connector. See [Destination Connector Properties](#destination-connector-properties) for more information.",
            "object": "(Required) Object specified in the Veeva flow source.",
            "entity_name": "(Required) Entity specified in the custom connector as a source in the flow.",
            "domain_name": "(Required) Unique name of the Amazon Connect Customer Profiles domain.",
            "intermediate_bucket_name": "(Required) Intermediate bucket that Amazon AppFlow uses when moving data into Amazon Snowflake.",
            "bucket_name": "(Required) Amazon S3 bucket name where the source files are stored.",
            "object_path": "(Required) Object path specified in the SAPOData flow source.",
            "source_connector_properties": "(Required) Information that is required to query a particular source connector. See [Source Connector Properties](#source-connector-properties) for details.",
            "source_fields": "(Required) Source fields to which a particular task is applied.",
            "task_type": "(Required) Particular task implementation that Amazon AppFlow performs. Valid values are `Arithmetic`, `Filter`, `Map`, `Map_all`, `Mask`, `Merge`, `Passthrough`, `Truncate`, and `Validate`.",
            "trigger_type": "(Required) Type of flow trigger. Valid values are `Scheduled`, `Event`, and `OnDemand`.",
            "schedule_expression": "(Required) Scheduling expression that determines the rate at which the schedule will run, for example `rate(5minutes)`."
        },
        "route53recoverycontrolconfig_safety_rule": {
            "control_panel_arn": "(Required) ARN of the control panel in which this safety rule will reside.",
            "name": "(Required) Name describing the safety rule.",
            "rule_config": {
                "inverted": "(Required) Logical negation of the rule.",
                "threshold": "(Required) Number of controls that must be set when you specify an `ATLEAST` type rule.",
                "type": "(Required) Rule type. Valid values are `ATLEAST`, `AND`, and `OR`."
            },
            "wait_period_ms": "(Required) Evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail."
        },
        "transcribe_medical_vocabulary": {
            "language_code": "(Required) The language code you selected for your medical vocabulary. US English (en-US) is the only language supported with Amazon Transcribe Medical.",
            "vocabulary_file_uri": "(Required) The Amazon S3 location (URI) of the text file that contains your custom medical vocabulary.",
            "vocabulary_name": "(Required) The name of the Medical Vocabulary."
        },
        "rbin_rule": {
            "resource_type": "(Required) The resource type to be retained by the retention rule. Valid values are `EBS_SNAPSHOT` and `EC2_IMAGE`.",
            "retention_period": {
                "retention_period_unit": "(Required) The unit of time in which the retention period is measured. Currently, only DAYS is supported.",
                "retention_period_value": "(Required) The period value for which the retention rule is to retain resources. The period is measured using the unit specified for RetentionPeriodUnit."
            },
            "unlock_delay": {
                "unlock_delay_unit": "(Required) The unit of time in which to measure the unlock delay. Currently, the unlock delay can be measure only in days.",
                "unlock_delay_value": "(Required) The unlock delay period, measured in the unit specified for UnlockDelayUnit."
            }
        },
        "lex_slot_type": {
            "enumeration_value": {
                "value": "(Required) The value of the slot type. Must be less than or equal to 140 characters in length."
            },
            "name": "(Required) The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length."
        },
        "opensearch_package": {},
        "codestarnotifications_notification_rule": {
            "detail_type": "(Required) The level of detail to include in the notifications for this resource. Possible values are `BASIC` and `FULL`.",
            "event_type_ids": "(Required) A list of event types associated with this notification rule.",
            "name": "(Required) The name of notification rule.",
            "resource": "(Required) The ARN of the resource to associate with the notification rule.",
            "address": "(Required) The ARN of notification rule target. For example, a SNS Topic ARN."
        },
        "vpclattice_listener_rule": {
            "service_identifier": "(Required) The ID or Amazon Resource Identifier (ARN) of the service.",
            "listener_identifier": "(Required) The ID or Amazon Resource Name (ARN) of the listener.",
            "action": "(Required) The action for the listener rule.",
            "match": "(Required) The rule match.",
            "name": "(Required) The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.",
            "priority": "(Required) The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority."
        },
        "ssm_maintenance_window_task": {
            "window_id": "(Required) The Id of the maintenance window to register the task with.",
            "task_type": "(Required) The type of task being registered. Valid values: `AUTOMATION`, `LAMBDA`, `RUN_COMMAND` or `STEP_FUNCTIONS`.",
            "task_arn": "(Required) The ARN of the task to execute.",
            "name": "(Required) The parameter name.",
            "values": "(Required) The array of strings."
        },
        "waf_regex_pattern_set": {
            "name": "(Required) The name or description of the Regex Pattern Set."
        },
        "route53_resolver_firewall_domain_list": {
            "name": "(Required) A name that lets you identify the domain list, to manage and use it."
        },
        "vpclattice_target_group_attachment": {},
        "globalaccelerator_endpoint_group": {
            "listener_arn": "(Required) The Amazon Resource Name (ARN) of the listener.",
            "endpoint_port": "(Required) The endpoint port that you want a listener port to be mapped to. This is the port on the endpoint, such as the Application Load Balancer or Amazon EC2 instance.",
            "listener_port": "(Required) The listener port that you want to map to a specific endpoint port. This is the port that user traffic arrives to the Global Accelerator on."
        },
        "lambda_function_url": {
            "authorization_type": "(Required) The type of authentication that the function URL uses. Set to `\"AWS_IAM\"` to restrict access to authenticated IAM users only. Set to `\"NONE\"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.",
            "function_name": "(Required) The name (or ARN) of the Lambda function."
        },
        "organizations_policy": {
            "content": "(Required) The policy content to add to the new policy. For example, if you create a [service control policy (SCP)](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html), this string must be JSON text that specifies the permissions that admins in attached accounts can delegate to their users, groups, and roles. For more information about the SCP syntax, see the [Service Control Policy Syntax documentation](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_scp-syntax.html) and for more information on the Tag Policy syntax, see the [Tag Policy Syntax documentation](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_example-tag-policies.html).",
            "name": "(Required) The friendly name to assign to the policy."
        },
        "pinpoint_sms_channel": {
            "application_id": "(Required) ID of the application."
        },
        "lightsail_distribution": {
            "bundle_id": "(Required) Bundle ID to use for the distribution.",
            "default_cache_behavior": {
                "behavior": "(Required) The cache behavior of the distribution. Valid values: `cache` and `dont-cache`."
            },
            "origin": {
                "name": "(Required) The name of the origin resource. Your origin can be an instance with an attached static IP, a bucket, or a load balancer that has at least one instance attached to it.",
                "region_name": "(Required) The AWS Region name of the origin resource."
            },
            "cache_behavior_settings": {
                "forwarded_cookies": "(Required) An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded. [Detailed below](#forwarded_cookies)",
                "forwarded_headers": "(Required) An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded. [Detailed below](#forwarded_headers)",
                "forwarded_query_strings": "(Required) An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded. [Detailed below](#forwarded_query_strings)",
                "cookies_allow_list": "(Required) The specific cookies to forward to your distribution's origin.",
                "headers_allow_list": "(Required) The specific headers to forward to your distribution's origin.",
                "query_strings_allowed_list": "(Required) The specific query strings that the distribution forwards to the origin."
            }
        },
        "datasync_location_azure_blob": {
            "agent_arns": "(Required) A list of DataSync Agent ARNs with which this location will be associated.",
            "authentication_type": "(Required) The authentication method DataSync uses to access your Azure Blob Storage. Valid values: `SAS`.",
            "container_url": "(Required) The URL of the Azure Blob Storage container involved in your transfer.",
            "token": "(Required) A SAS token that provides permissions to access your Azure Blob Storage."
        },
        "redshiftserverless_endpoint_access": {
            "endpoint_name": "(Required) The name of the endpoint.",
            "subnet_ids": "(Required) An array of VPC subnet IDs to associate with the endpoint.",
            "workgroup_name": "(Required) The name of the workgroup."
        },
        "opensearch_package_association": {},
        "rds_global_cluster": {},
        "servicecatalog_budget_resource_association": {
            "budget_name": "(Required) Budget name.",
            "resource_id": "(Required) Resource identifier."
        },
        "dynamodb_global_table": {
            "name": "(Required) The name of the global table. Must match underlying DynamoDB Table names in all regions.",
            "replica": "(Required) Underlying DynamoDB Table. At least 1 replica must be defined. See below.",
            "region_name": "(Required) AWS region name of replica DynamoDB TableE.g., `us-east-1`"
        },
        "ec2_serial_console_access": {},
        "ecrpublic_repository_policy": {
            "repository_name": "(Required) Name of the repository to apply the policy.",
            "policy": "(Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)"
        },
        "transfer_server": {
            "execution_role": "(Required) Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources.",
            "workflow_id": "(Required)  A unique identifier for the workflow."
        },
        "lb_listener_rule": {
            "action": "(Required) An Action block. Action blocks are documented below.",
            "condition": "(Required) A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.",
            "type": "(Required) The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.",
            "target_group": "(Required) One or more target groups block.",
            "arn": "(Required) The Amazon Resource Name (ARN) of the target group.",
            "enabled": "(Required) Indicates whether target group stickiness is enabled.",
            "status_code": "(Required) The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).",
            "content_type": "(Required) The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.",
            "user_pool_arn": "(Required) The ARN of the Cognito user pool.",
            "user_pool_client_id": "(Required) The ID of the Cognito user pool client.",
            "user_pool_domain": "(Required) The domain prefix or fully-qualified domain name of the Cognito user pool.",
            "authorization_endpoint": "(Required) The authorization endpoint of the IdP.",
            "client_id": "(Required) The OAuth 2.0 client identifier.",
            "client_secret": "(Required) The OAuth 2.0 client secret.",
            "issuer": "(Required) The OIDC issuer identifier of the IdP.",
            "token_endpoint": "(Required) The token endpoint of the IdP.",
            "user_info_endpoint": "(Required) The user info endpoint of the IdP.",
            "key": "(Required) The key of query parameter",
            "value": "(Required) Query string value pattern to match.",
            "http_header_name": "(Required) Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a `host-header` condition instead.",
            "values": "(Required) Query string pairs or values to match. Query String Value blocks documented below. Multiple `values` blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '\\*' or '?' character in a query string, escape the character with a backslash (\\\\). Only one pair needs to match for the condition to be satisfied."
        },
        "transfer_access": {
            "external_id": "(Required) The SID of a group in the directory connected to the Transfer Server (e.g., `S-1-1-12-1234567890-123456789-1234567890-1234`)",
            "server_id": "(Required) The Server ID of the Transfer Server (e.g., `s-12345678`)",
            "role": "(Required) Amazon Resource Name (ARN) of an IAM role that allows the service to controls your user’s access to your Amazon S3 bucket.",
            "entry": "(Required) Represents an entry and a target.",
            "target": "(Required) Represents the map target.",
            "gid": "(Required) The POSIX group ID used for all EFS operations by this user.",
            "uid": "(Required) The POSIX user ID used for all EFS operations by this user."
        },
        "directory_service_directory": {
            "name": "(Required) The fully qualified name for the directory, such as `corp.example.com`",
            "password": "(Required) The password for the directory administrator or connector user.",
            "subnet_ids": "(Required) The identifiers of the subnets for the directory servers (2 subnets in 2 different AZs).",
            "vpc_id": "(Required) The identifier of the VPC that the directory is in.",
            "customer_username": "(Required) The username corresponding to the password provided.",
            "customer_dns_ips": "(Required) The DNS IP addresses of the domain to connect to."
        },
        "medialive_channel": {
            "channel_class": "(Required) Concise argument description.",
            "destinations": "(Required) Destinations for channel. See [Destinations](#destinations) for more details.",
            "encoder_settings": "(Required) Encoder settings. See [Encoder Settings](#encoder-settings) for more details.",
            "input_specification": "(Required) Specification of network and file inputs for the channel.",
            "name": "(Required) Name of the caption description. Used to associate a caption description with an output. Names must be unique within an event.",
            "resolution": "(Required) - Maximum CDI input resolution.",
            "id": "(Required) User-specified id. Ths is used in an output group or an output.",
            "audio_descriptions": "(Required) Audio descriptions for the channel. See [Audio Descriptions](#audio-descriptions) for more details.",
            "output_groups": "(Required) Output groups for the channel. See [Output Groups](#output-groups) for more details.",
            "timecode_config": "(Required) Contains settings used to acquire and adjust timecode information from inputs. See [Timecode Config](#timecode-config) for more details.",
            "video_descriptions": "(Required) Video Descriptions. See [Video Descriptions](#video-descriptions) for more details.",
            "input_id": "(Required) The ID of the input.",
            "group_id": "(Required) Specifies the GROUP-ID in the #EXT-X-MEDIA tag of the target HLS audio rendition.",
            "language_code": "(Required) Selects a specific three-letter language code from within an audio source.",
            "pid": "(Required) Selects a specific PID from within a source.",
            "tracks": "(Required) Selects one or more unique audio tracks from within a source. See [Audio Tracks](#audio-tracks) for more details.",
            "track": "(Required) 1-based integer value that maps to a specific audio track.",
            "program_selection": "(Required) Applies only to Dolby E. Enter the program ID (according to the metadata in the audio) of the Dolby E program to extract from the specified track. One program extracted per audio selector. To select multiple programs, create multiple selectors with the same Track and different Program numbers. “All channels” means to ignore the program IDs and include all the channels in this selector; useful if metadata is known to be incorrect.",
            "height": "(Required) See the description in left\\_offset. For height, specify the entire height of the rectangle as a percentage of the underlying frame height. For example, \"80\" means the rectangle height is 80% of the underlying frame height. The top\\_offset and rectangle\\_height must add up to 100% or less. This field corresponds to tts:extent - Y in the TTML standard.",
            "left_offset": "(Required) Applies only if you plan to convert these source captions to EBU-TT-D or TTML in an output. (Make sure to leave the default if you don’t have either of these formats in the output.) You can define a display rectangle for the captions that is smaller than the underlying video frame. You define the rectangle by specifying the position of the left edge, top edge, bottom edge, and right edge of the rectangle, all within the underlying video frame. The units for the measurements are percentages. If you specify a value for one of these fields, you must specify a value for all of them. For leftOffset, specify the position of the left edge of the rectangle, as a percentage of the underlying frame width, and relative to the left edge of the frame. For example, \"10\" means the measurement is 10% of the underlying frame width. The rectangle left edge starts at that position from the left edge of the frame. This field corresponds to tts:origin - X in the TTML standard.",
            "top_offset": "(Required) See the description in left\\_offset. For top\\_offset, specify the position of the top edge of the rectangle, as a percentage of the underlying frame height, and relative to the top edge of the frame. For example, \"10\" means the measurement is 10% of the underlying frame height. The rectangle top edge starts at that position from the top edge of the frame. This field corresponds to tts:origin - Y in the TTML standard.",
            "width": "(Required) See the description in left\\_offset. For width, specify the entire width of the rectangle as a percentage of the underlying frame width. For example, \"80\" means the rectangle width is 80% of the underlying frame width. The left\\_offset and rectangle\\_width must add up to 100% or less. This field corresponds to tts:extent - X in the TTML standard.",
            "secondary_input_id": "(Required) The input ID of the secondary input in the automatic input failover pair.",
            "audio_selector_name": "(Required) The name of the audio selector used as the source for this AudioDescription.",
            "channel_id": "(Required) ID of the channel in MediaPackage that is the destination for this output group.",
            "multiplex_id": "(Required) The ID of the Multiplex that the encoder is providing output to.",
            "cbet_check_digit": "(Required) CBET check digits to use for the watermark.",
            "cbet_stepaside": "(Required) Determines the method of CBET insertion mode when prior encoding is detected on the same layer.",
            "csid": "(Required) CBET source ID to use in the watermark.",
            "check_digit": "(Required) Check digit string for the watermark.",
            "sid": "(Required) The Nielsen Source ID to include in the watermark.",
            "output_group_settings": "(Required) Settings associated with the output group. See [Output Group Settings](#output-group-settings) for more details.",
            "outputs": "(Required) List of outputs. See [Outputs](#outputs) for more details.",
            "output_settings": "(Required) Settings for output. See [Output Settings](#output-settings) for more details.",
            "output_name": "(Required) The name used to identify an output.",
            "bitrate": "(Required) Average bitrate in bits/second.",
            "framerate_denominator": "(Required) Framerate denominator.",
            "framerate_numerator": "(Required) Framerate numerator.",
            "caption_selector_name": "(Required) Specifies which input caption selector to use as a caption source when generating output captions. This field should match a captionSelector name.",
            "uri": "(Required) Path to a file accessible to the live stream.",
            "destination": "(Required) Destination address and port number for RTP or UDP packets. See [Destination](#destination) for more details.",
            "destination_ref_id": "(Required) Reference ID for the destination.",
            "container_settings": "(Required) UDP container settings. See [Container Settings](#container-settings) for more details."
        },
        "shield_drt_access_role_arn_association": {
            "role_arn": "(Required) The Amazon Resource Name (ARN) of the role the SRT will use to access your AWS account. Prior to making the AssociateDRTRole request, you must attach the `AWSShieldDRTAccessPolicy` managed policy to this role."
        },
        "ssoadmin_customer_managed_policy_attachment": {},
        "cloudformation_stack_set_instance": {
            "stack_set_name": "(Required) Name of the StackSet."
        },
        "dax_parameter_group": {},
        "securityhub_organization_admin_account": {
            "admin_account_id": "(Required) The AWS account identifier of the account to designate as the Security Hub administrator account."
        },
        "vpc_endpoint_route_table_association": {
            "route_table_id": "(Required) Identifier of the EC2 Route Table to be associated with the VPC Endpoint.",
            "vpc_endpoint_id": "(Required) Identifier of the VPC Endpoint with which the EC2 Route Table will be associated."
        },
        "cloudfront_cache_policy": {
            "name": "(Required) Unique name used to identify the cache policy.",
            "min_ttl": "(Required) Minimum amount of time, in seconds, that objects should remain in the CloudFront cache before a new request is sent to the origin to check for updates.",
            "parameters_in_cache_key_and_forwarded_to_origin": "(Required) Configuration for including HTTP headers, cookies, and URL query strings in the cache key. For more information, refer to the [Parameters In Cache Key And Forwarded To Origin](#parameters-in-cache-key-and-forwarded-to-origin) section.",
            "cookies_config": "(Required) Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. See [Cookies Config](#cookies-config) for more information.",
            "headers_config": "(Required) Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. See [Headers Config](#headers-config) for more information.",
            "query_strings_config": "(Required) Whether any URL query strings in viewer requests are included in the cache key. It also automatically includes these query strings in requests that CloudFront sends to the origin. Please refer to the [Query String Config](#query-string-config) for more information.",
            "cookie_behavior": "(Required) Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `cookie_behavior` are `none`, `whitelist`, `allExcept`, and `all`.",
            "header_behavior": "(Required) Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `header_behavior` are `none` and `whitelist`.",
            "query_string_behavior": "(Required) Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `query_string_behavior` are `none`, `whitelist`, `allExcept`, and `all`.",
            "items": "(Required) List of item names, such as cookies, headers, or query strings."
        },
        "route53recoverycontrolconfig_routing_control": {
            "cluster_arn": "(Required) ARN of the cluster in which this routing control will reside.",
            "name": "(Required) The name describing the routing control."
        },
        "acmpca_permission": {
            "certificate_authority_arn": "(Required) ARN of the CA that grants the permissions.",
            "actions": "(Required) Actions that the specified AWS service principal can use. These include `IssueCertificate`, `GetCertificate`, and `ListPermissions`. Note that in order for ACM to automatically rotate certificates issued by a PCA, it must be granted permission on all 3 actions, as per the example above.",
            "principal": "(Required) AWS service or identity that receives the permission. At this time, the only valid principal is `acm.amazonaws.com`."
        },
        "api_gateway_vpc_link": {
            "name": "(Required) Name used to label and identify the VPC link."
        },
        "securityhub_product_subscription": {
            "product_arn": "(Required) The ARN of the product that generates findings that you want to import into Security Hub - see below."
        },
        "connect_user_hierarchy_structure": {
            "hierarchy_structure": "(Required) A block that defines the hierarchy structure's levels. The `hierarchy_structure` block is documented below.",
            "instance_id": "(Required) Specifies the identifier of the hosting Amazon Connect Instance.",
            "name": "(Required) The name of the user hierarchy level. Must not be more than 50 characters."
        },
        "detective_invitation_accepter": {
            "graph_arn": "(Required) ARN of the behavior graph that the member account is accepting the invitation for."
        },
        "ec2_fleet": {
            "launch_template_config": {
                "version": "(Required) The launch template version number, `$Latest`, or `$Default.`",
                "memory_mib": "(Required) The minimum and maximum amount of memory per vCPU, in GiB. Default is no minimum or maximum limits.",
                "min": "(Required) The minimum number of vCPUs. To specify no minimum limit, specify `0`.",
                "vcpu_count": "(Required) Block describing the minimum and maximum number of vCPUs. Default is no maximum."
            },
            "target_capacity_specification": {
                "default_target_capacity_type": "(Required) Default target capacity type. Valid values: `on-demand`, `spot`.",
                "total_target_capacity": "(Required) The number of units to request, filled using `default_target_capacity_type`."
            }
        },
        "ec2_traffic_mirror_session": {
            "traffic_mirror_target_id": "(Required) ID of the traffic mirror target to be used",
            "session_number": "(Required) - The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets."
        },
        "ses_identity_policy": {
            "identity": "(Required) Name or Amazon Resource Name (ARN) of the SES Identity.",
            "name": "(Required) Name of the policy.",
            "policy": "(Required) JSON string of the policy. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy)."
        },
        "ses_receipt_rule": {
            "name": "(Required) The name of the rule",
            "rule_set_name": "(Required) The name of the rule set",
            "header_name": "(Required) The name of the header to add",
            "header_value": "(Required) The value of the header to add",
            "position": "(Required) The position of the action in the receipt rule",
            "message": "(Required) The message to send",
            "sender": "(Required) The email address of the sender",
            "smtp_reply_code": "(Required) The RFC 5321 SMTP reply code",
            "function_arn": "(Required) The ARN of the Lambda function to invoke",
            "bucket_name": "(Required) The name of the S3 bucket",
            "topic_arn": "(Required) The ARN of an SNS topic to notify",
            "scope": "(Required) The scope to apply. The only acceptable value is `RuleSet`.",
            "organization_arn": "(Required) The ARN of the WorkMail organization"
        },
        "media_store_container": {
            "name": "(Required) The name of the container. Must contain alphanumeric characters or underscores."
        },
        "quicksight_vpc_connection": {
            "vpc_connection_id": "(Required) The ID of the VPC connection.",
            "name": "(Required) The display name for the VPC connection.",
            "role_arn": "(Required) The IAM role to associate with the VPC connection.",
            "security_group_ids": "(Required) A list of security group IDs for the VPC connection.",
            "subnet_ids": "(Required) A list of subnet IDs for the VPC connection."
        },
        "sfn_state_machine": {
            "definition": "(Required) The [Amazon States Language](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-amazon-states-language.html) definition of the state machine.",
            "role_arn": "(Required) The Amazon Resource Name (ARN) of the IAM role to use for this state machine."
        },
        "vpc": {},
        "appmesh_virtual_service": {
            "name": "(Required) Name to use for the virtual service. Must be between 1 and 255 characters in length.",
            "mesh_name": "(Required) Name of the service mesh in which to create the virtual service. Must be between 1 and 255 characters in length.",
            "spec": "(Required) Virtual service specification to apply.",
            "virtual_node_name": "(Required) Name of the virtual node that is acting as a service provider. Must be between 1 and 255 characters in length.",
            "virtual_router_name": "(Required) Name of the virtual router that is acting as a service provider. Must be between 1 and 255 characters in length."
        },
        "kinesis_stream": {
            "name": "(Required) A name to identify the stream. This is unique to the AWS account and region the Stream is created in.",
            "stream_mode": "(Required) Specifies the capacity mode of the stream. Must be either `PROVISIONED` or `ON_DEMAND`."
        },
        "transcribe_language_model": {
            "base_model_name": "(Required) Name of reference base model.",
            "input_data_config": "(Required) The input data config for the LanguageModel. See [Input Data Config](#input-data-config) for more details.",
            "language_code": "(Required) The language code you selected for your language model. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.",
            "model_name": "(Required) The model name.",
            "data_access_role_arn": "(Required) IAM role with access to S3 bucket.",
            "s3_uri": "(Required) S3 URI where training data is located."
        },
        "opsworks_application": {
            "name": "(Required) A human-readable name for the application.",
            "short_name": "(Required) A short, machine-readable name for the application. This can only be defined on resource creation and ignored on resource update.",
            "stack_id": "(Required) ID of the stack the application will belong to.",
            "type": "(Required) The type of source to use. For example, \"archive\".",
            "url": "(Required) The URL where the app resource can be found.",
            "key": "(Required) Variable name.",
            "value": "(Required) Variable value.",
            "private_key": "(Required) The private key; the contents of the certificate's domain.key file.",
            "certificate": "(Required) The contents of the certificate's domain.crt file."
        },
        "opsworks_mysql_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "cloudfront_distribution": {},
        "directory_service_radius_settings": {
            "directory_id": "(Required) The identifier of the directory for which you want to manager RADIUS settings.",
            "display_label": "(Required) Display label.",
            "radius_port": "(Required) The port that your RADIUS server is using for communications. Your self-managed network must allow inbound traffic over this port from the AWS Directory Service servers.",
            "radius_retries": "(Required) The maximum number of times that communication with the RADIUS server is attempted. Minimum value of `0`. Maximum value of `10`.",
            "radius_servers": "(Required) An array of strings that contains the fully qualified domain name (FQDN) or IP addresses of the RADIUS server endpoints, or the FQDN or IP addresses of your RADIUS server load balancer.",
            "radius_timeout": "(Required) The amount of time, in seconds, to wait for the RADIUS server to respond. Minimum value of `1`. Maximum value of `50`.",
            "shared_secret": "(Required) Required for enabling RADIUS on the directory."
        },
        "iot_topic_rule": {
            "name": "(Required) The metadata dimension name. This is the name of the column in the Amazon Timestream database table record.",
            "enabled": "(Required) Specifies whether the rule is enabled.",
            "sql": "(Required) The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.",
            "sql_version": "(Required) The version of the SQL rules engine to use when evaluating the rule.",
            "alarm_name": "(Required) The CloudWatch alarm name.",
            "role_arn": "(Required) The ARN of the role that grants permission to write to the Amazon Timestream database table.",
            "state_reason": "(Required) The reason for the alarm change.",
            "state_value": "(Required) The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.",
            "log_group_name": "(Required) The CloudWatch log group name.",
            "metric_name": "(Required) The CloudWatch metric name.",
            "metric_namespace": "(Required) The CloudWatch metric namespace name.",
            "metric_unit": "(Required) The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)",
            "metric_value": "(Required) The CloudWatch metric value.",
            "hash_key_field": "(Required) The hash key name.",
            "hash_key_value": "(Required) The hash key value.",
            "table_name": "(Required) The name of the database table into which to write the measure records.",
            "put_item": "(Required) Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.",
            "endpoint": "(Required) The endpoint of your Elasticsearch domain.",
            "id": "(Required) The unique identifier for the document you are storing.",
            "index": "(Required) The Elasticsearch index where you want to store your data.",
            "type": "(Required) The type of document you are storing.",
            "delivery_stream_name": "(Required) The delivery stream name.",
            "url": "(Required) The HTTPS URL.",
            "key": "(Required) The object key.",
            "value": "(Required) An expression that returns a long epoch time value.",
            "channel_name": "(Required) Name of AWS IOT Analytics channel.",
            "input_name": "(Required) The name of the AWS IoT Events input.",
            "client_properties": "(Required) Properties of the Apache Kafka producer client. For more info, see the [AWS documentation](https://docs.aws.amazon.com/iot/latest/developerguide/apache-kafka-rule-action.html).",
            "destination_arn": "(Required) The ARN of Kafka action's VPC [`aws_iot_topic_rule_destination`](iot_topic_rule_destination.html) .",
            "stream_name": "(Required) The name of the Amazon Kinesis stream.",
            "function_arn": "(Required) The ARN of the Lambda function.",
            "topic": "(Required) The name of the MQTT topic the message should be republished to.",
            "bucket_name": "(Required) The Amazon S3 bucket name.",
            "message_format": "(Required) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\".",
            "target_arn": "(Required) The ARN of the SNS topic.",
            "queue_url": "(Required) The URL of the Amazon SQS queue.",
            "use_base64": "(Required) Specifies whether to use Base64 encoding.",
            "state_machine_name": "(Required) The name of the Step Functions state machine whose execution will be started.",
            "database_name": "(Required) The name of an Amazon Timestream database.",
            "dimension": "(Required) Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.",
            "unit": "(Required) The precision of the timestamp value that results from the expression described in value. Valid values: `SECONDS`, `MILLISECONDS`, `MICROSECONDS`, `NANOSECONDS`."
        },
        "quicksight_data_source": {
            "name": "(Required) A name for the data source, maximum of 128 characters.",
            "parameters": "(Required) The [parameters](#parameters-argument-reference) used to connect to this data source (exactly one).",
            "type": "(Required) The type of the data source. See the [AWS Documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateDataSource.html#QS-CreateDataSource-request-Type) for the complete list of valid values.",
            "password": "(Required) Password, maximum length of 1024 characters.",
            "username": "(Required) User name, maximum length of 64 characters.",
            "actions": "(Required) Set of IAM actions to grant or revoke permissions on. Max of 16 items.",
            "principal": "(Required) The Amazon Resource Name (ARN) of the principal.",
            "disable_ssl": "(Required) A Boolean option to control whether SSL should be disabled.",
            "vpc_connection_arn": "(Required) The Amazon Resource Name (ARN) for the VPC connection.",
            "domain": "(Required) The OpenSearch domain.",
            "database": "(Required) The database to which to connect.",
            "host": "(Required) The host to which to connect.",
            "port": "(Required) The warehouse to which to connect.",
            "data_set_name": "(Required) The name of the data set to which to connect.",
            "site_base_url": "(Required) The base URL of the Jira instance's site to which to connect.",
            "catalog": "(Required) The catalog to which to connect.",
            "manifest_file_location": "(Required) An [object containing the S3 location](#manifest_file_location-argument-reference) of the S3 manifest file.",
            "bucket": "(Required) The name of the bucket that contains the manifest file.",
            "key": "(Required) The key of the manifest file within the bucket.",
            "warehouse": "(Required) The warehouse to which to connect.",
            "max_rows": "(Required) The maximum number of rows to query.",
            "query": "(Required) The Twitter query to retrieve the data."
        },
        "fis_experiment_template": {
            "action": "(Required) Action to be performed during an experiment. See below.",
            "description": "(Required) Description for the experiment template.",
            "role_arn": "(Required) ARN of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.",
            "stop_condition": "(Required) When an ongoing experiment should be stopped. See below.",
            "action_id": "(Required) ID of the action. To find out what actions are supported see [AWS FIS actions reference](https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html).",
            "name": "(Required) Friendly name given to the target.",
            "key": "(Required) Tag key.",
            "value": "(Required) Tag value.",
            "source": "(Required) Source of the condition. One of `none`, `aws:cloudwatch:alarm`.",
            "resource_type": "(Required) AWS resource type. The resource type must be supported for the specified action. To find out what resource types are supported, see [Targets for AWS FIS](https://docs.aws.amazon.com/fis/latest/userguide/targets.html#resource-types).",
            "selection_mode": "(Required) Scopes the identified resources. Valid values are `ALL` (all identified resources), `COUNT(n)` (randomly select `n` of the identified resources), `PERCENT(n)` (randomly select `n` percent of the identified resources).",
            "path": "(Required) Attribute path for the filter.",
            "values": "(Required) Set of attribute values for the filter.",
            "log_schema_version": "(Required) The schema version. See [documentation](https://docs.aws.amazon.com/fis/latest/userguide/monitoring-logging.html#experiment-log-schema) for the list of schema versions.",
            "log_group_arn": "(Required) The Amazon Resource Name (ARN) of the destination Amazon CloudWatch Logs log group.",
            "bucket_name": "(Required) The name of the destination bucket."
        },
        "lightsail_lb_https_redirection_policy": {
            "lb_name": "(Required) The name of the load balancer to which you want to enable http to https redirection.",
            "enabled": "(Required) - The Https Redirection state of the load balancer. `true` to activate http to https redirection or `false` to deactivate http to https redirection."
        },
        "guardduty_detector": {
            "enable": "(Required) If true, enables [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) as data source for the detector.",
            "audit_logs": "(Required) Configures Kubernetes audit logs as a data source for [Kubernetes protection](https://docs.aws.amazon.com/guardduty/latest/ug/kubernetes-protection.html).",
            "scan_ec2_instance_with_findings": "(Required) Configure whether [Malware Protection](https://docs.aws.amazon.com/guardduty/latest/ug/malware-protection.html) is enabled as data source for EC2 instances with findings for the detector.",
            "ebs_volumes": "(Required) Configure whether scanning EBS volumes is enabled as data source for the detector for instances with findings."
        },
        "docdb_subnet_group": {
            "subnet_ids": "(Required) A list of VPC subnet IDs."
        },
        "ram_resource_share_accepter": {
            "share_arn": "(Required) The ARN of the resource share."
        },
        "api_gateway_resource": {
            "rest_api_id": "(Required) ID of the associated REST API",
            "parent_id": "(Required) ID of the parent API resource",
            "path_part": "(Required) Last path segment of this API resource."
        },
        "vpclattice_auth_policy": {
            "resource_identifier": "(Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.",
            "policy": "(Required) The auth policy. The policy string in JSON must not contain newlines or blank lines."
        },
        "workspaces_ip_group": {
            "name": "(Required) The name of the IP group."
        },
        "network_interface": {
            "subnet_id": "(Required) Subnet ID to create the ENI in.",
            "instance": "(Required) ID of the instance to attach to.",
            "device_index": "(Required) Integer to define the devices index."
        },
        "ram_resource_association": {
            "resource_arn": "(Required) Amazon Resource Name (ARN) of the resource to associate with the RAM Resource Share.",
            "resource_share_arn": "(Required) Amazon Resource Name (ARN) of the RAM Resource Share."
        },
        "sns_topic_subscription": {
            "endpoint": "(Required) Endpoint to send data to. The contents vary with the protocol. See details below.",
            "protocol": "(Required) Protocol to use. Valid values are: `sqs`, `sms`, `lambda`, `firehose`, and `application`. Protocols `email`, `email-json`, `http` and `https` are also valid but partially supported. See details below.",
            "topic_arn": "(Required) ARN of the SNS topic to subscribe to."
        },
        "s3_bucket_website_configuration": {},
        "route53_resolver_endpoint": {
            "direction": "(Required) The direction of DNS queries to or from the Route 53 Resolver endpoint.",
            "ip_address": "(Required) The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs",
            "security_group_ids": "(Required) The ID of one or more security groups that you want to use to control access to this VPC.",
            "subnet_id": "(Required) The ID of the subnet that contains the IP address."
        },
        "route53_resolver_query_log_config_association": {
            "resolver_query_log_config_id": "(Required) The ID of the [Route 53 Resolver query logging configuration](route53_resolver_query_log_config.html) that you want to associate a VPC with.",
            "resource_id": "(Required) The ID of a VPC that you want this query logging configuration to log queries for."
        },
        "auditmanager_account_registration": {},
        "docdb_cluster_snapshot": {
            "db_cluster_identifier": "(Required) The DocumentDB Cluster Identifier from which to take the snapshot.",
            "db_cluster_snapshot_identifier": "(Required) The Identifier for the snapshot."
        },
        "sesv2_email_identity_feedback_attributes": {
            "email_identity": "(Required) The email identity."
        },
        "glue_registry": {},
        "devicefarm_device_pool": {
            "name": "(Required) The name of the Device Pool",
            "project_arn": "(Required) The ARN of the project for the device pool.",
            "rule": "(Required) The device pool's rules. See [Rule](#rule)."
        },
        "config_configuration_recorder": {
            "role_arn": "(Required) Amazon Resource Name (ARN) of the IAM role. Used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account. See [AWS Docs](http://docs.aws.amazon.com/config/latest/developerguide/iamrole-permissions.html) for more details."
        },
        "opsworks_memcached_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "rds_custom_db_engine_version": {
            "database_installation_files_s3_bucket_name": "(Required) The name of the Amazon S3 bucket that contains the database installation files.",
            "database_installation_files_s3_prefix": "(Required) The prefix for the Amazon S3 bucket that contains the database installation files.",
            "engine": "(Required) The name of the database engine. Valid values are `custom-oracle*`, `custom-sqlserver*`.",
            "engine_version": "(Required) The version of the database engine."
        },
        "ses_domain_identity": {
            "domain": "(Required) The domain name to assign to SES"
        },
        "finspace_kx_database": {
            "environment_id": "(Required) Unique identifier for the KX environment.",
            "name": "(Required) Name of the KX database."
        },
        "lightsail_instance": {
            "name": "(Required) The name of the Lightsail Instance. Names be unique within each AWS Region in your Lightsail account.",
            "availability_zone": "(Required) The Availability Zone in which to create your",
            "blueprint_id": "(Required) The ID for a virtual private server image. A list of available blueprint IDs can be obtained using the AWS CLI command: `aws lightsail get-blueprints`",
            "bundle_id": "(Required) The bundle of specification information (see list below)",
            "type": "(Required) The add-on type. There is currently only one valid type `AutoSnapshot`.",
            "snapshot_time": "(Required) The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.",
            "status": "(Required) The status of the add on. Valid Values: `Enabled`, `Disabled`."
        },
        "medialive_input_security_group": {
            "whitelist_rules": "(Required) Whitelist rules. See [Whitelist Rules](#whitelist-rules) for more details."
        },
        "network_interface_sg_attachment": {
            "security_group_id": "(Required) The ID of the security group.",
            "network_interface_id": "(Required) The ID of the network interface to attach to."
        },
        "codeartifact_repository_permissions_policy": {
            "repository": "(Required) The name of the repository to set the resource policy on.",
            "domain": "(Required) The name of the domain on which to set the resource policy.",
            "policy_document": "(Required) A JSON policy string to be set as the access control resource policy on the provided domain."
        },
        "servicecatalog_portfolio": {
            "name": "(Required) The name of the portfolio.",
            "description": "(Required) Description of the portfolio",
            "provider_name": "(Required) Name of the person or organization who owns the portfolio."
        },
        "config_organization_conformance_pack": {
            "parameter_name": "(Required) The input key.",
            "parameter_value": "(Required) The input value."
        },
        "waf_geo_match_set": {
            "name": "(Required) The name or description of the GeoMatchSet."
        },
        "kms_ciphertext": {
            "plaintext": "(Required) Data to be encrypted. Note that this may show up in logs, and it will be stored in the state file.",
            "key_id": "(Required) Globally unique key ID for the customer master key."
        },
        "s3control_object_lambda_access_point": {
            "configuration": "(Required) A configuration block containing details about the Object Lambda Access Point. See [Configuration](#configuration) below for more details.",
            "name": "(Required) The name for this Object Lambda Access Point.",
            "supporting_access_point": "(Required) Standard access point associated with the Object Lambda Access Point.",
            "transformation_configuration": "(Required) List of transformation configurations for the Object Lambda Access Point. See [Transformation Configuration](#transformation-configuration) below for more details.",
            "actions": "(Required) The actions of an Object Lambda Access Point configuration. Valid values: `GetObject`.",
            "content_transformation": "(Required) The content transformation of an Object Lambda Access Point configuration. See [Content Transformation](#content-transformation) below for more details.",
            "aws_lambda": "(Required) Configuration for an AWS Lambda function. See [AWS Lambda](#aws-lambda) below for more details.",
            "function_arn": "(Required) The Amazon Resource Name (ARN) of the AWS Lambda function."
        },
        "waf_byte_match_set": {
            "name": "(Required) The name or description of the Byte Match Set."
        },
        "autoscaling_policy": {
            "autoscaling_group_name": "(Required) Name of the autoscaling group.",
            "scaling_adjustment": "(Required) Number of members by which to",
            "target_value": "(Required) Target value for the metric."
        },
        "dms_replication_config": {
            "compute_config": "(Required) Configuration block for provisioning an DMS Serverless replication.",
            "replication_config_identifier": "(Required) Unique identifier that you want to use to create the config.",
            "replication_type": "(Required) The migration type. Can be one of `full-load | cdc | full-load-and-cdc`.",
            "source_endpoint_arn": "(Required) The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.",
            "table_mappings": "(Required) An escaped JSON string that contains the table mappings. For information on table mapping see [Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html)",
            "target_endpoint_arn": "(Required) The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint.",
            "max_capacity_units": "(Required) Specifies the maximum value of the DMS capacity units (DCUs) for which a given DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 2 DCUs as the minimum value allowed. The list of valid DCU values includes 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384."
        },
        "iam_saml_provider": {
            "name": "(Required) The name of the provider to create.",
            "saml_metadata_document": "(Required) An XML document generated by an identity provider that supports SAML 2.0."
        },
        "route53_health_check": {
            "type": "(Required) The protocol to use when performing health checks. Valid values are `HTTP`, `HTTPS`, `HTTP_STR_MATCH`, `HTTPS_STR_MATCH`, `TCP`, `CALCULATED`, `CLOUDWATCH_METRIC` and `RECOVERY_CONTROL`.",
            "request_interval": "(Required) The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request."
        },
        "neptune_subnet_group": {
            "subnet_ids": "(Required) A list of VPC subnet IDs."
        },
        "sagemaker_monitoring_schedule": {
            "monitoring_schedule_config": {
                "monitoring_job_definition_name": "(Required) The name of the monitoring job definition to schedule.",
                "monitoring_type": "(Required) The type of the monitoring job definition to schedule. Valid values are `DataQuality`, `ModelQuality`, `ModelBias` or `ModelExplainability`",
                "schedule_expression": "(Required) A cron expression that describes details about the monitoring schedule. For example, and hourly schedule would be `cron(0 * ? * * *)`."
            }
        },
        "chime_voice_connector_logging": {
            "voice_connector_id": "(Required) The Amazon Chime Voice Connector ID."
        },
        "connect_instance": {
            "identity_management_type": "(Required) Specifies the identity management type attached to the instance. Allowed Values are: `SAML`, `CONNECT_MANAGED`, `EXISTING_DIRECTORY`.",
            "inbound_calls_enabled": "(Required) Specifies whether inbound calls are enabled.",
            "outbound_calls_enabled": "(Required) Specifies whether outbound calls are enabled."
        },
        "opsworks_haproxy_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "stats_password": "(Required) The password to use for HAProxy stats.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "quicksight_dashboard": {
            "name": "(Required) Display name for the dashboard.",
            "version_description": "(Required) A description of the current dashboard version being created/updated.",
            "data_set_references": {
                "data_set_arn": "(Required) Dataset Amazon Resource Name (ARN).",
                "data_set_placeholder": "(Required) Dataset placeholder."
            }
        },
        "s3_bucket_replication_configuration": {
            "role": "(Required) ARN of the IAM role for Amazon S3 to assume when replicating the objects.",
            "rule": {
                "destination": "(Required) Specifies the destination for the rule. [See below](#destination).",
                "status": "(Required) Status of the rule. Either `\"Enabled\"` or `\"Disabled\"`. The rule is ignored if status is not \"Enabled\"."
            },
            "destination": {
                "bucket": "(Required) ARN of the bucket where you want Amazon S3 to store the results."
            },
            "time": {
                "minutes": "(Required) Time in minutes. Valid values: `15`."
            }
        },
        "elasticache_cluster": {},
        "emr_studio_session_mapping": {
            "identity_type": "(Required) Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.",
            "session_policy_arn": "(Required) The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.",
            "studio_id": "(Required) The ID of the Amazon EMR Studio to which the user or group will be mapped."
        },
        "networkfirewall_resource_policy": {
            "policy": "(Required) JSON formatted policy document that controls access to the Network Firewall resource. The policy must be provided **without whitespaces**.  We recommend using [jsonencode](https://www.terraform.io/docs/configuration/functions/jsonencode.html) for formatting as seen in the examples above. For more details, including available policy statement Actions, see the [Policy](https://docs.aws.amazon.com/network-firewall/latest/APIReference/API_PutResourcePolicy.html#API_PutResourcePolicy_RequestSyntax) parameter in the AWS API documentation."
        },
        "organizations_account": {
            "email": "(Required) Email address of the owner to assign to the new member account. This email address must not already be associated with another AWS account.",
            "name": "(Required) Friendly name for the member account."
        },
        "ssm_activation": {
            "iam_role": "(Required) The IAM Role to attach to the managed instance."
        },
        "ec2_transit_gateway_peering_attachment": {
            "peer_region": "(Required) Region of EC2 Transit Gateway to peer with.",
            "peer_transit_gateway_id": "(Required) Identifier of EC2 Transit Gateway to peer with.",
            "transit_gateway_id": "(Required) Identifier of EC2 Transit Gateway."
        },
        "glue_trigger": {
            "conditions": "(Required) A list of the conditions that determine when the trigger will fire. See [Conditions](#conditions)."
        },
        "neptune_cluster": {},
        "prometheus_workspace": {
            "log_group_arn": "(Required) The ARN of the CloudWatch log group to which the vended log data will be published. This log group must exist."
        },
        "appstream_stack": {
            "name": "(Required) Unique name for the AppStream stack.",
            "endpoint_type": "(Required) Type of the interface endpoint.",
            "enabled": "(Required) Whether application settings should be persisted.",
            "connector_type": "(Required) Type of storage connector.",
            "action": "(Required) Action that is enabled or disabled.",
            "permission": "(Required) Whether the action is enabled or disabled."
        },
        "chime_voice_connector_group": {
            "name": "(Required) The name of the Amazon Chime Voice Connector group.",
            "voice_connector_id": "(Required) The Amazon Chime Voice Connector ID.",
            "priority": "(Required) The priority associated with the Amazon Chime Voice Connector, with 1 being the highest priority. Higher priority Amazon Chime Voice Connectors are attempted first."
        },
        "cloudwatch_composite_alarm": {
            "alarm": "(Required) Can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.",
            "extension_period": "(Required) The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the `ALARM` state. After this time, the composite alarm performs its actions.",
            "wait_period": "(Required) The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the `ALARM` state. After this time, the composite alarm performs its actions.",
            "alarm_name": "(Required) The name for the composite alarm. This name must be unique within the region.",
            "alarm_rule": "(Required) An expression that specifies which other alarms are to be evaluated to determine this composite alarm's state. For syntax, see [Creating a Composite Alarm](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Create_Composite_Alarm.html). The maximum length is 10240 characters."
        },
        "grafana_workspace_api_key": {},
        "api_gateway_method": {
            "rest_api_id": "(Required) ID of the associated REST API",
            "resource_id": "(Required) API resource ID",
            "http_method": "(Required) HTTP Method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`)",
            "authorization": "(Required) Type of authorization used for the method (`NONE`, `CUSTOM`, `AWS_IAM`, `COGNITO_USER_POOLS`)"
        },
        "iot_thing_group": {
            "name": "(Required) The name of the Thing Group."
        },
        "sagemaker_data_quality_job_definition": {
            "data_quality_app_specification": {
                "image_uri": "(Required) The container image that the data quality monitoring job runs."
            },
            "data_quality_job_input": {
                "data_captured_destination_s3_uri": "(Required) The Amazon S3 location being used to capture the data.",
                "dataset_format": "(Required) The dataset format for your batch transform job. Fields are documented below.",
                "endpoint_name": "(Required) An endpoint in customer's account which has `data_capture_config` enabled."
            },
            "data_quality_job_output_config": {
                "monitoring_outputs": "(Required) Monitoring outputs for monitoring jobs. This is where the output of the periodic monitoring jobs is uploaded. Fields are documented below.",
                "s3_output": "(Required) The Amazon S3 storage location where the results of a monitoring job are saved. Fields are documented below.",
                "s3_uri": "(Required) A URI that identifies the Amazon S3 storage location where Amazon SageMaker saves the results of a monitoring job."
            },
            "job_resources": {
                "cluster_config": "(Required) The configuration for the cluster resources used to run the processing job. Fields are documented below.",
                "instance_count": "(Required) The number of ML compute instances to use in the model monitoring job. For distributed processing jobs, specify a value greater than 1.",
                "instance_type": "(Required) The ML compute instance type for the processing job.",
                "volume_size_in_gb": "(Required) The size of the ML storage volume, in gigabytes, that you want to provision. You must specify sufficient ML storage for your scenario."
            },
            "role_arn": "(Required) The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf."
        },
        "api_gateway_api_key": {
            "name": "(Required) Name of the API key.",
            "customer_id": "(Required) An Amazon Web Services Marketplace customer identifier, when integrating with the Amazon Web Services SaaS Marketplace."
        },
        "config_remediation_configuration": {
            "config_rule_name": "(Required) Name of the AWS Config rule.",
            "target_id": "(Required) Target ID is the name of the public document.",
            "target_type": "(Required) Type of the target. Target executes remediation. For example, SSM document.",
            "ssm_controls": "(Required) Configuration block for SSM controls. See below.",
            "name": "(Required) Name of the attribute."
        },
        "sfn_activity": {
            "name": "(Required) The name of the activity to create."
        },
        "acmpca_certificate": {
            "certificate_authority_arn": "(Required) ARN of the certificate authority.",
            "certificate_signing_request": "(Required) Certificate Signing Request in PEM format.",
            "signing_algorithm": "(Required) Algorithm to use to sign certificate requests. Valid values: `SHA256WITHRSA`, `SHA256WITHECDSA`, `SHA384WITHRSA`, `SHA384WITHECDSA`, `SHA512WITHRSA`, `SHA512WITHECDSA`.",
            "validity": "(Required) Configures end of the validity period for the certificate. See [validity block](#validity-block) below.",
            "type": "(Required) Determines how `value` is interpreted. Valid values: `DAYS`, `MONTHS`, `YEARS`, `ABSOLUTE`, `END_DATE`.",
            "value": "(Required) If `type` is `DAYS`, `MONTHS`, or `YEARS`, the relative time until the certificate expires. If `type` is `ABSOLUTE`, the date in seconds since the Unix epoch. If `type` is `END_DATE`, the  date in RFC 3339 format."
        },
        "appconfig_hosted_configuration_version": {},
        "connect_lambda_function_association": {
            "function_arn": "(Required) Amazon Resource Name (ARN) of the Lambda Function, omitting any version or alias qualifier.",
            "instance_id": "(Required) The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance."
        },
        "imagebuilder_container_recipe": {
            "component": {
                "component_arn": "(Required) Amazon Resource Name (ARN) of the Image Builder Component to associate."
            },
            "container_type": "(Required) The type of the container to create. Valid values: `DOCKER`.",
            "repository_name": "(Required) The name of the container repository where the output container image is stored. This name is prefixed by the repository location.",
            "service": "(Required) The service in which this image is registered. Valid values: `ECR`."
        },
        "default_vpc": {},
        "opensearchserverless_vpc_endpoint": {
            "name": "(Required) Name of the interface endpoint.",
            "subnet_ids": "(Required) One or more subnet IDs from which you'll access OpenSearch Serverless. Up to 6 subnets can be provided.",
            "vpc_id": "(Required) ID of the VPC from which you'll access OpenSearch Serverless."
        },
        "evidently_feature": {
            "name": "(Required) The name of the variation. Minimum length of `1`. Maximum length of `127`.",
            "project": "(Required) The name or ARN of the project that is to contain the new feature.",
            "variations": "(Required) One or more blocks that contain the configuration of the feature's different variations. [Detailed below](#variations)",
            "value": "(Required) A block that specifies the value assigned to this variation. [Detailed below](#value)"
        },
        "macie2_account": {},
        "opsworks_php_app_layer": {
            "stack_id": "(Required) ID of the stack the layer will belong to.",
            "mount_point": "(Required) The path to mount the EBS volume on the layer's instances.",
            "size": "(Required) The size of the volume in gigabytes.",
            "number_of_disks": "(Required) The number of disks to use for the EBS volume.",
            "raid_level": "(Required) The RAID level to use for the volume."
        },
        "s3_bucket_metric": {
            "bucket": "(Required) Name of the bucket to put metric configuration.",
            "name": "(Required) Unique identifier of the metrics configuration for the bucket. Must be less than or equal to 64 characters in length."
        },
        "elasticache_user": {
            "access_string": "(Required) Access permissions string used for this user. See [Specifying Permissions Using an Access String](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html#Access-string) for more details.",
            "engine": "(Required) The current supported value is `REDIS`.",
            "user_id": "(Required) The ID of the user.",
            "user_name": "(Required) The username of the user.",
            "type": "(Required) Specifies the authentication type. Possible options are: `password`, `no-password-required` or `iam`."
        },
        "sagemaker_model": {
            "execution_role_arn": "(Required) A role that SageMaker can assume to access model artifacts and docker images for deployment.",
            "repository_access_mode": "(Required) Specifies whether the model container is in Amazon ECR or a private Docker registry accessible from your Amazon Virtual Private Cloud (VPC). Allowed values are: `Platform` and `Vpc`.",
            "repository_credentials_provider_arn": "(Required) The Amazon Resource Name (ARN) of an AWS Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an AWS Lambda function, see [Create a Lambda function with the console](https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html) in the _AWS Lambda Developer Guide_."
        },
        "load_balancer_listener_policy": {
            "load_balancer_name": "(Required) The load balancer to attach the policy to.",
            "load_balancer_port": "(Required) The load balancer listener port to apply the policy to.",
            "policy_names": "(Required) List of Policy Names to apply to the backend server."
        },
        "directory_service_trust": {
            "directory_id": "(Required) ID of the Directory.",
            "remote_domain_name": "(Required) Fully qualified domain name of the remote Directory.",
            "trust_direction": "(Required) The direction of the Trust relationship.",
            "trust_password": "(Required) Password for the Trust."
        },
        "fsx_data_repository_association": {
            "data_repository_path": "(Required) The path to the Amazon S3 data repository that will be linked to the file system. The path must be an S3 bucket s3://myBucket/myPrefix/. This path specifies where in the S3 data repository files will be imported from or exported to. The same S3 bucket cannot be linked more than once to the same file system.",
            "file_system_id": "(Required) The ID of the Amazon FSx file system to on which to create a data repository association.",
            "file_system_path": "(Required) A path on the file system that points to a high-level directory (such as `/ns1/`) or subdirectory (such as `/ns1/subdir/`) that will be mapped 1-1 with `data_repository_path`. The leading forward slash in the name is required. Two data repository associations cannot have overlapping file system paths. For example, if a data repository is associated with file system path `/ns1/`, then you cannot link another data repository with file system path `/ns1/ns2`. This path specifies where in your file system files will be exported from or imported to. This file system directory can be linked to only one Amazon S3 bucket, and no other S3 bucket can be linked to the directory."
        },
        "sqs_queue_redrive_allow_policy": {
            "queue_url": "(Required) The URL of the SQS Queue to which to attach the policy",
            "redrive_allow_policy": "(Required) The JSON redrive allow policy for the SQS queue. Learn more in the [Amazon SQS dead-letter queues documentation](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html)."
        },
        "vpn_gateway": {},
        "wafv2_web_acl": {
            "default_action": "(Required) Action to perform if none of the `rules` contained in the WebACL match. See [`default_action`](#default_action-block) below for details.",
            "name": "(Required) Name of the rule to override. See the [documentation](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html) for a list of names in the appropriate rule group in use.",
            "scope": "(Required) Specify whether you want to match using the label name or just the namespace. Valid values are `LABEL` or `NAMESPACE`.",
            "visibility_config": "(Required) Defines and enables Amazon CloudWatch metrics and web request sample collection. See [`visibility_config`](#visibility_config-block) below for details.",
            "key": "(Required) String to match against.",
            "content": "(Required) Payload of the custom response.",
            "content_type": "(Required) Type of content in the payload that you are defining in the `content` argument. Valid values are `TEXT_PLAIN`, `TEXT_HTML`, or `APPLICATION_JSON`.",
            "priority": "(Required) Relative processing order for multiple transformations that are defined for a rule statement. AWS WAF processes all transformations, from lowest priority to highest, before inspecting the transformed content.",
            "statement": "(Required) Statements to combine with `OR` logic. You can use any statements that can be nested. See [`statement`](#statement-block) above for details.",
            "insert_header": "(Required) The `insert_header` blocks used to define HTTP headers added to the request. See [`insert_header`](#insert_header-block) below for details.",
            "response_code": "(Required) The HTTP status code to return to the client.",
            "positional_constraint": "(Required) Area within the portion of a web request that you want AWS WAF to search for `search_string`. Valid values include the following: `EXACTLY`, `STARTS_WITH`, `ENDS_WITH`, `CONTAINS`, `CONTAINS_WORD`. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_ByteMatchStatement.html) for more information.",
            "search_string": "(Required) String value that you want AWS WAF to search for. AWS WAF searches only in the part of web requests that you designate for inspection in `field_to_match`. The maximum length of the value is 50 bytes.",
            "text_transformation": "(Required) Text transformations eliminate some of the unusual formatting that attackers use in web requests in an effort to bypass detection. At least one transformation is required. See [`text_transformation`](#text_transformation-block) below for details.",
            "country_codes": "(Required) Array of two-character country codes, for example, [ \"US\", \"CN\" ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.",
            "arn": "(Required) The Amazon Resource Name (ARN) of the `aws_wafv2_rule_group` resource.",
            "vendor_name": "(Required) Name of the managed rule group vendor.",
            "limit": "(Required) Limit on requests per 5-minute period for a single originating IP address.",
            "regex_string": "(Required) String representing the regular expression. Minimum of `1` and maximum of `512` characters.",
            "field_to_match": "(Required) The part of a web request that you want AWS WAF to inspect. See [`field_to_match`](#field_to_match-block) below for details.",
            "comparison_operator": "(Required) Operator to use to compare the request part to the size setting. Valid values include: `EQ`, `NE`, `LE`, `LT`, `GE`, or `GT`.",
            "size": "(Required) Size, in bytes, to compare to the request part, after any transformations. Valid values are integers between 0 and 21474836480, inclusive.",
            "action_to_use": "(Required) Override action to use, in place of the configured action of the rule in the rule group. See [`action`](#action-block) for details.",
            "login_path": "(Required) The path of the login endpoint for your application.",
            "fallback_behavior": "(Required) - Match status to assign to the web request if the request doesn't have a valid IP address in the specified position. Valid values include: `MATCH` or `NO_MATCH`.",
            "header_name": "(Required) - Name of the HTTP header to use for the IP address.",
            "position": "(Required) - Position in the header to search for the IP address. Valid values include: `FIRST`, `LAST`, or `ANY`. If `ANY` is specified and the header contains more than 10 IP addresses, AWS WAFv2 inspects the last 10.",
            "match_pattern": "(Required) The filter to use to identify the subset of cookies to inspect in a web request. You must specify exactly one setting: either `all`, `included_cookies` or `excluded_cookies`. More details: [CookieMatchPattern](https://docs.aws.amazon.com/waf/latest/APIReference/API_CookieMatchPattern.html)",
            "match_scope": "(Required) The parts of the cookies to inspect with the rule inspection criteria. If you specify All, AWS WAF inspects both keys and values. Valid values: `ALL`, `KEY`, `VALUE`",
            "oversize_handling": "(Required) What AWS WAF should do if the cookies of the request are larger than AWS WAF can inspect. AWS WAF does not support inspecting the entire contents of request cookies when they exceed 8 KB (8192 bytes) or 200 total cookies. The underlying host service forwards a maximum of 200 cookies and at most 8 KB of cookie contents to AWS WAF. Valid values: `CONTINUE`, `MATCH`, `NO_MATCH`.",
            "type": "(Required) Transformation to apply, please refer to the Text Transformation [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_TextTransformation.html) for more details.",
            "cloudwatch_metrics_enabled": "(Required) Whether the associated resource sends metrics to CloudWatch. For the list of available metrics, see [AWS WAF Metrics](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics).",
            "metric_name": "(Required) A friendly name of the CloudWatch metric. The name can contain only alphanumeric characters (A-Z, a-z, 0-9) hyphen(-) and underscore (\\_), with length from one to 128 characters. It can't contain whitespace or metric names reserved for AWS WAF, for example `All` and `Default_Action`.",
            "sampled_requests_enabled": "(Required) Whether AWS WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the AWS WAF console.",
            "default_size_inspection_limit": "(Required) Specifies the maximum size of the web request body component that an associated CloudFront distribution should send to AWS WAF for inspection. This applies to statements in the web ACL that inspect the body or JSON body. Valid values are `KB_16`, `KB_32`, `KB_48` and `KB_64`."
        },
        "servicequotas_service_quota": {
            "quota_code": "(Required) Code of the service quota to track. For example: `L-F678F1CE`. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html).",
            "service_code": "(Required) Code of the service to track. For example: `vpc`. Available values can be found with the [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).",
            "value": "(Required) Float specifying the desired value for the service quota. If the desired value is higher than the current value, a quota increase request is submitted. When a known request is submitted and pending, the value reflects the desired value of the pending request."
        },
        "simpledb_domain": {
            "name": "(Required) The name of the SimpleDB domain"
        },
        "ec2_instance_connect_endpoint": {
            "subnet_id": "(Required) The ID of the subnet in which to create the EC2 Instance Connect Endpoint."
        },
        "elasticache_subnet_group": {},
        "kendra_query_suggestions_block_list": {
            "name": "(Required) Name for the block list.",
            "role_arn": "(Required) IAM (Identity and Access Management) role used to access the block list text file in S3.",
            "source_s3_path": "(Required) S3 path where your block list text file is located. See details below.",
            "bucket": "(Required) Name of the S3 bucket that contains the file.",
            "key": "(Required) Name of the file."
        },
        "glue_classifier": {
            "classification": "(Required) An identifier of the data format that the classifier matches.",
            "grok_pattern": "(Required) The grok pattern used by this classifier.",
            "json_path": "(Required) A `JsonPath` string defining the JSON data for the classifier to classify. AWS Glue supports a subset of `JsonPath`, as described in [Writing JsonPath Custom Classifiers](https://docs.aws.amazon.com/glue/latest/dg/custom-classifier.html#custom-classifier-json).",
            "row_tag": "(Required) The XML tag designating the element that contains each record in an XML document being parsed. Note that this cannot identify a self-closing element (closed by `/>`). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, `<row item_a=\"A\" item_b=\"B\"></row>` is okay, but `<row item_a=\"A\" item_b=\"B\" />` is not)."
        },
        "opsworks_rds_db_instance": {
            "stack_id": "(Required) The stack to register a db instance for. Changing this will force a new resource.",
            "rds_db_instance_arn": "(Required) The db instance to register for this stack. Changing this will force a new resource.",
            "db_user": "(Required) A db username",
            "db_password": "(Required) A db password"
        },
        "backup_vault_lock_configuration": {
            "backup_vault_name": "(Required) Name of the backup vault to add a lock configuration for."
        },
        "datasync_location_fsx_ontap_file_system": {
            "protocol": "(Required) The data transfer protocol that DataSync uses to access your Amazon FSx file system. See [Protocol](#protocol) below.",
            "security_group_arns": "(Required) The security groups that provide access to your file system's preferred subnet. The security groups must allow outbbound traffic on the following ports (depending on the protocol you use):",
            "storage_virtual_machine_arn": "(Required) The ARN of the SVM in your file system where you want to copy data to of from.",
            "mount_options": "(Required) Mount options that are available for DataSync to access an NFS location. See [NFS Mount Options](#nfs-mount-options) below."
        },
        "default_vpc_dhcp_options": {},
        "sns_sms_preferences": {},
        "elasticsearch_domain_policy": {
            "domain_name": "(Required) Name of the domain."
        }
    }
}