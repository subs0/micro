{
  "data": {
    "type": "provider-docs",
    "id": "3198564",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Lambda\"\nlayout: \"aws\"\npage_title: \"AWS: aws_lambda_function_url\"\ndescription: |-\n  Provides a Lambda function URL resource.\n---\n\n# Resource: aws_lambda_function_url\n\nProvides a Lambda function URL resource. A function URL is a dedicated HTTP(S) endpoint for a Lambda function.\n\nSee the [AWS Lambda documentation](https://docs.aws.amazon.com/lambda/latest/dg/lambda-urls.html) for more information.\n\n## Example Usage\n\n```terraform\nresource \"aws_lambda_function_url\" \"test_latest\" {\n  function_name      = aws_lambda_function.test.function_name\n  authorization_type = \"NONE\"\n}\n\nresource \"aws_lambda_function_url\" \"test_live\" {\n  function_name      = aws_lambda_function.test.function_name\n  qualifier          = \"my_alias\"\n  authorization_type = \"AWS_IAM\"\n\n  cors {\n    allow_credentials = true\n    allow_origins     = [\"*\"]\n    allow_methods     = [\"*\"]\n    allow_headers     = [\"date\", \"keep-alive\"]\n    expose_headers    = [\"keep-alive\", \"date\"]\n    max_age           = 86400\n  }\n}\n```\n\n## Argument Reference\n\n* `authorization_type` - (Required) The type of authentication that the function URL uses. Set to `\"AWS_IAM\"` to restrict access to authenticated IAM users only. Set to `\"NONE\"` to bypass IAM authentication and create a public endpoint. See the [AWS documentation](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html) for more details.\n* `cors` - (Optional) The [cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) settings for the function URL. Documented below.\n* `function_name` - (Required) The name (or ARN) of the Lambda function.\n* `invoke_mode` - (Optional) Determines how the Lambda function responds to an invocation. Valid values are `BUFFERED` (default) and `RESPONSE_STREAM`. See more in [Configuring a Lambda function to stream responses](https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html).\n* `qualifier` - (Optional) The alias name or `\"$LATEST\"`.\n\n### cors\n\nThis configuration block supports the following attributes:\n\n* `allow_credentials` - (Optional) Whether to allow cookies or other credentials in requests to the function URL. The default is `false`.\n* `allow_headers` - (Optional) The HTTP headers that origins can include in requests to the function URL. For example: `[\"date\", \"keep-alive\", \"x-custom-header\"]`.\n* `allow_methods` - (Optional) The HTTP methods that are allowed when calling the function URL. For example: `[\"GET\", \"POST\", \"DELETE\"]`, or the wildcard character (`[\"*\"]`).\n* `allow_origins` - (Optional) The origins that can access the function URL. You can list any number of specific origins (or the wildcard character (`\"*\"`)), separated by a comma. For example: `[\"https://www.example.com\", \"http://localhost:60905\"]`.\n* `expose_headers` - (Optional) The HTTP headers in your function response that you want to expose to origins that call the function URL.\n* `max_age` - (Optional) The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to `0`, which means that the browser doesn't cache results. The maximum value is `86400`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `function_arn` - The Amazon Resource Name (ARN) of the function.\n* `function_url` - The HTTP URL endpoint for the function in the format `https://<url_id>.lambda-url.<region>.on.aws`.\n* `url_id` - A generated ID for the endpoint.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lambda function URLs using the `function_name` or `function_name/qualifier`. For example:\n\n```terraform\nimport {\n  to = aws_lambda_function_url.test_lambda_url\n  id = \"my_test_lambda_function\"\n}\n```\n\nUsing `terraform import`, import Lambda function URLs using the `function_name` or `function_name/qualifier`. For example:\n\n```console\n% terraform import aws_lambda_function_url.test_lambda_url my_test_lambda_function\n```\n",
      "language": "hcl",
      "path": "website/docs/r/lambda_function_url.html.markdown",
      "slug": "lambda_function_url",
      "subcategory": "Lambda",
      "title": "lambda_function_url",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198564"
    }
  }
}