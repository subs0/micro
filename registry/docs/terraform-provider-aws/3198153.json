{
  "data": {
    "type": "provider-docs",
    "id": "3198153",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Config\"\nlayout: \"aws\"\npage_title: \"AWS: aws_config_config_rule\"\ndescription: |-\n  Provides an AWS Config Rule.\n---\n\n# Resource: aws_config_config_rule\n\nProvides an AWS Config Rule.\n\n~> **Note:** Config Rule requires an existing [Configuration Recorder](/docs/providers/aws/r/config_configuration_recorder.html) to be present. Use of `depends_on` is recommended (as shown below) to avoid race conditions.\n\n## Example Usage\n\n### AWS Managed Rules\n\nAWS managed rules can be used by setting the source owner to `AWS` and the source identifier to the name of the managed rule. More information about AWS managed rules can be found in the [AWS Config Developer Guide](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html).\n\n```terraform\nresource \"aws_config_config_rule\" \"r\" {\n  name = \"example\"\n\n  source {\n    owner             = \"AWS\"\n    source_identifier = \"S3_BUCKET_VERSIONING_ENABLED\"\n  }\n\n  depends_on = [aws_config_configuration_recorder.foo]\n}\n\nresource \"aws_config_configuration_recorder\" \"foo\" {\n  name     = \"example\"\n  role_arn = aws_iam_role.r.arn\n}\n\ndata \"aws_iam_policy_document\" \"assume_role\" {\n  statement {\n    effect = \"Allow\"\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"config.amazonaws.com\"]\n    }\n\n    actions = [\"sts:AssumeRole\"]\n  }\n}\n\nresource \"aws_iam_role\" \"r\" {\n  name               = \"my-awsconfig-role\"\n  assume_role_policy = data.aws_iam_policy_document.assume_role.json\n}\n\ndata \"aws_iam_policy_document\" \"p\" {\n  statement {\n    effect    = \"Allow\"\n    actions   = [\"config:Put*\"]\n    resources = [\"*\"]\n  }\n}\n\nresource \"aws_iam_role_policy\" \"p\" {\n  name   = \"my-awsconfig-policy\"\n  role   = aws_iam_role.r.id\n  policy = data.aws_iam_policy_document.p.json\n}\n```\n\n### Custom Rules\n\nCustom rules can be used by setting the source owner to `CUSTOM_LAMBDA` and the source identifier to the Amazon Resource Name (ARN) of the Lambda Function. The AWS Config service must have permissions to invoke the Lambda Function, e.g., via the [`aws_lambda_permission` resource](/docs/providers/aws/r/lambda_permission.html). More information about custom rules can be found in the [AWS Config Developer Guide](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html).\n\n```terraform\nresource \"aws_config_configuration_recorder\" \"example\" {\n  # ... other configuration ...\n}\n\nresource \"aws_lambda_function\" \"example\" {\n  # ... other configuration ...\n}\n\nresource \"aws_lambda_permission\" \"example\" {\n  action        = \"lambda:InvokeFunction\"\n  function_name = aws_lambda_function.example.arn\n  principal     = \"config.amazonaws.com\"\n  statement_id  = \"AllowExecutionFromConfig\"\n}\n\nresource \"aws_config_config_rule\" \"example\" {\n  # ... other configuration ...\n\n  source {\n    owner             = \"CUSTOM_LAMBDA\"\n    source_identifier = aws_lambda_function.example.arn\n  }\n\n  depends_on = [\n    aws_config_configuration_recorder.example,\n    aws_lambda_permission.example,\n  ]\n}\n```\n\n### Custom Policies\n\n```terraform\nresource \"aws_config_config_rule\" \"example\" {\n  name = \"example\"\n\n  source {\n    owner = \"CUSTOM_POLICY\"\n\n    source_detail {\n      message_type = \"ConfigurationItemChangeNotification\"\n    }\n\n    custom_policy_details {\n      policy_runtime = \"guard-2.x.x\"\n      policy_text    = <<EOF\n\t  rule tableisactive when\n\t\t  resourceType == \"AWS::DynamoDB::Table\" {\n\t\t  configuration.tableStatus == ['ACTIVE']\n\t  }\n\t  \n\t  rule checkcompliance when\n\t\t  resourceType == \"AWS::DynamoDB::Table\"\n\t\t  tableisactive {\n\t\t\t  supplementaryConfiguration.ContinuousBackupsDescription.pointInTimeRecoveryDescription.pointInTimeRecoveryStatus == \"ENABLED\"\n\t  }\nEOF\t\t\t\t\t\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Required) The name of the rule\n* `description` - (Optional) Description of the rule\n* `input_parameters` - (Optional) A string in JSON format that is passed to the AWS Config rule Lambda function.\n* `maximum_execution_frequency` - (Optional) The maximum frequency with which AWS Config runs evaluations for a rule.\n* `scope` - (Optional) Scope defines which resources can trigger an evaluation for the rule. See [Source](#source) Below.\n* `source` - (Required) Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources. See [Scope](#scope) Below.\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### Scope\n\nDefines which resources can trigger an evaluation for the rule.\nIf you do not specify a scope, evaluations are triggered when any resource in the recording group changes.\n\n* `compliance_resource_id` - (Optional) The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for `compliance_resource_types`.\n* `compliance_resource_types` - (Optional) A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., `AWS::EC2::Instance`. You can only specify one type if you also specify a resource ID for `compliance_resource_id`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.\n* `tag_key` - (Optional, Required if `tag_value` is specified) The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.\n* `tag_value` - (Optional) The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.\n\n### Source\n\nProvides the rule owner (AWS or customer), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.\n\n* `owner` - (Required) Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS`, `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the [`aws_lambda_permission` resource](/docs/providers/aws/r/lambda_permission.html).\n* `source_identifier` - (Optional) For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the [`arn` attribute of the `aws_lambda_function` resource](/docs/providers/aws/r/lambda_function.html#arn).\n* `source_detail` - (Optional) Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. See [Source Detail](#source-detail) Below.\n* `custom_policy_details` - (Optional) Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to `CUSTOM_POLICY`. See [Custom Policy Details](#custom-policy-details) Below.\n\n#### Source Detail\n\n* `event_source` - (Optional) The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWSresources. This defaults to `aws.config` and is the only valid value.\n* `maximum_execution_frequency` - (Optional) The frequency that you want AWS Config to run evaluations for a rule that istriggered periodically. If specified, requires `message_type` to be `ScheduledNotification`.\n* `message_type` - (Optional) The type of notification that triggers AWS Config to run an evaluation for a rule. You canspecify the following notification types:\n    * `ConfigurationItemChangeNotification` - Triggers an evaluation when AWS Config delivers a configuration item as a result of a resource change.\n    * `OversizedConfigurationItemChangeNotification` - Triggers an evaluation when AWS Config delivers an oversized configuration item. AWS Config may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.\n    * `ScheduledNotification` - Triggers a periodic evaluation at the frequency specified for `maximum_execution_frequency`.\n    * `ConfigurationSnapshotDeliveryCompleted` - Triggers a periodic evaluation when AWS Config delivers a configuration snapshot.\n\n#### Custom Policy Details\n\n* `enable_debug_log_delivery` - (Optional) The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is `false`.\n* `policy_runtime` - (Required) The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://github.com/aws-cloudformation/cloudformation-guard).\n* `policy_text` - (Required) The policy definition containing the logic for your Config Custom Policy rule.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - The ARN of the config rule\n* `rule_id` - The ID of the config rule\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Config Rule using the name. For example:\n\n```terraform\nimport {\n  to = aws_config_config_rule.foo\n  id = \"example\"\n}\n```\n\nUsing `terraform import`, import Config Rule using the name. For example:\n\n```console\n% terraform import aws_config_config_rule.foo example\n```\n",
      "language": "hcl",
      "path": "website/docs/r/config_config_rule.html.markdown",
      "slug": "config_config_rule",
      "subcategory": "Config",
      "title": "config_config_rule",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198153"
    }
  }
}