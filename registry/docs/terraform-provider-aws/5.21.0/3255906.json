{
  "data": {
    "type": "provider-docs",
    "id": "3255906",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Transfer Family\"\nlayout: \"aws\"\npage_title: \"AWS: aws_transfer_workflow\"\ndescription: |-\n  Provides a AWS Transfer Workflow resource.\n---\n\n# Resource: aws_transfer_workflow\n\nProvides a AWS Transfer Workflow resource.\n\n## Example Usage\n\n### Basic single step example\n\n```terraform\nresource \"aws_transfer_workflow\" \"example\" {\n  steps {\n    delete_step_details {\n      name                 = \"example\"\n      source_file_location = \"$${original.file}\"\n    }\n    type = \"DELETE\"\n  }\n}\n```\n\n### Multistep example\n\n```terraform\nresource \"aws_transfer_workflow\" \"example\" {\n  steps {\n    custom_step_details {\n      name                 = \"example\"\n      source_file_location = \"$${original.file}\"\n      target               = aws_lambda_function.example.arn\n      timeout_seconds      = 60\n    }\n    type = \"CUSTOM\"\n  }\n\n  steps {\n    tag_step_details {\n      name                 = \"example\"\n      source_file_location = \"$${original.file}\"\n      tags {\n        key   = \"Name\"\n        value = \"Hello World\"\n      }\n    }\n    type = \"TAG\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `description` - (Optional) A textual description for the workflow.\n* `on_exception_steps` - (Optional) Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.\n* `steps` - (Required) Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### Workflow Steps\n\n* `copy_step_details` - (Optional) Details for a step that performs a file copy. See Copy Step Details below.\n* `custom_step_details` - (Optional) Details for a step that invokes a lambda function.\n* `decrypt_step_details` - (Optional) Details for a step that decrypts the file.\n* `delete_step_details` - (Optional) Details for a step that deletes the file.\n* `tag_step_details` - (Optional) Details for a step that creates one or more tags.\n* `type` - (Required) One of the following step types are supported. `COPY`, `CUSTOM`, `DECRYPT`, `DELETE`, and `TAG`.\n\n#### Copy Step Details\n\n* `destination_file_location` - (Optional) Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.\n* `name` - (Optional) The name of the step, used as an identifier.\n* `overwrite_existing` - (Optional) A flag that indicates whether or not to overwrite an existing file of the same name. The default is `FALSE`. Valid values are `TRUE` and `FALSE`.\n* `source_file_location` - (Optional) Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.\n\n#### Custom Step Details\n\n* `name` - (Optional) The name of the step, used as an identifier.\n* `source_file_location` - (Optional) Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.\n* `target` - (Optional) The ARN for the lambda function that is being called.\n* `timeout_seconds` - (Optional) Timeout, in seconds, for the step.\n\n#### Decrypt Step Details\n\n* `destination_file_location` - (Optional) Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.\n* `name` - (Optional) The name of the step, used as an identifier.\n* `overwrite_existing` - (Optional) A flag that indicates whether or not to overwrite an existing file of the same name. The default is `FALSE`. Valid values are `TRUE` and `FALSE`.\n* `source_file_location` - (Optional) Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.\n* `type` - (Required) The type of encryption used. Currently, this value must be `\"PGP\"`.\n\n#### Delete Step Details\n\n* `name` - (Optional) The name of the step, used as an identifier.\n* `source_file_location` - (Optional) Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.\n\n#### Tag Step Details\n\n* `name` - (Optional) The name of the step, used as an identifier.\n* `source_file_location` - (Optional) Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.\n* `tags` - (Optional) Array that contains from 1 to 10 key/value pairs. See S3 Tags below.\n\n##### Destination File Location\n\n* `efs_file_location` - (Optional) Specifies the details for the EFS file being copied.\n* `s3_file_location` - (Optional) Specifies the details for the S3 file being copied.\n\n###### EFS File Location\n\n* `file_system_id` - (Optional) The ID of the file system, assigned by Amazon EFS.\n* `path` - (Optional) The pathname for the folder being used by a workflow.\n\n###### S3 File Location\n\n* `bucket` - (Optional) Specifies the S3 bucket for the customer input file.\n* `key` - (Optional) The name assigned to the file when it was created in S3. You use the object key to retrieve the object.\n\n##### S3 Tag\n\n* `key` - (Required) The name assigned to the tag that you create.\n* `value` - (Required) The value that corresponds to the key.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - The Workflow ARN.\n* `id` - The Workflow id.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Transfer Workflows using the `worflow_id`. For example:\n\n```terraform\nimport {\n  to = aws_transfer_workflow.example\n  id = \"example\"\n}\n```\n\nUsing `terraform import`, import Transfer Workflows using the `worflow_id`. For example:\n\n```console\n% terraform import aws_transfer_workflow.example example\n```\n",
      "language": "hcl",
      "path": "website/docs/r/transfer_workflow.html.markdown",
      "slug": "transfer_workflow",
      "subcategory": "Transfer Family",
      "title": "transfer_workflow",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255906"
    }
  }
}