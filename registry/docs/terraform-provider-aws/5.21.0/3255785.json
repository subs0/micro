{
  "data": {
    "type": "provider-docs",
    "id": "3255785",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Cloud Map\"\nlayout: \"aws\"\npage_title: \"AWS: aws_service_discovery_service\"\ndescription: |-\n  Provides a Service Discovery Service resource.\n---\n\n# Resource: aws_service_discovery_service\n\nProvides a Service Discovery Service resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_vpc\" \"example\" {\n  cidr_block           = \"10.0.0.0/16\"\n  enable_dns_support   = true\n  enable_dns_hostnames = true\n}\n\nresource \"aws_service_discovery_private_dns_namespace\" \"example\" {\n  name        = \"example.terraform.local\"\n  description = \"example\"\n  vpc         = aws_vpc.example.id\n}\n\nresource \"aws_service_discovery_service\" \"example\" {\n  name = \"example\"\n\n  dns_config {\n    namespace_id = aws_service_discovery_private_dns_namespace.example.id\n\n    dns_records {\n      ttl  = 10\n      type = \"A\"\n    }\n\n    routing_policy = \"MULTIVALUE\"\n  }\n\n  health_check_custom_config {\n    failure_threshold = 1\n  }\n}\n```\n\n```terraform\nresource \"aws_service_discovery_public_dns_namespace\" \"example\" {\n  name        = \"example.terraform.com\"\n  description = \"example\"\n}\n\nresource \"aws_service_discovery_service\" \"example\" {\n  name = \"example\"\n\n  dns_config {\n    namespace_id = aws_service_discovery_public_dns_namespace.example.id\n\n    dns_records {\n      ttl  = 10\n      type = \"A\"\n    }\n  }\n\n  health_check_config {\n    failure_threshold = 10\n    resource_path     = \"path\"\n    type              = \"HTTP\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Required, ForceNew) The name of the service.\n* `description` - (Optional) The description of the service.\n* `dns_config` - (Optional) A complex type that contains information about the resource record sets that you want Amazon Route 53 to create when you register an instance.\n* `health_check_config` - (Optional) A complex type that contains settings for an optional health check. Only for Public DNS namespaces.\n* `force_destroy` - (Optional, Default:false ) A boolean that indicates all instances should be deleted from the service so that the service can be destroyed without error. These instances are not recoverable.\n* `health_check_custom_config` - (Optional, ForceNew) A complex type that contains settings for ECS managed health checks.\n* `namespace_id` - (Optional) The ID of the namespace that you want to use to create the service.\n* `type` - (Optional) If present, specifies that the service instances are only discoverable using the `DiscoverInstances` API operation. No DNS records is registered for the service instances. The only valid value is `HTTP`.\n* `tags` - (Optional) A map of tags to assign to the service. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### dns_config\n\nThis argument supports the following arguments:\n\n* `namespace_id` - (Required, ForceNew) The ID of the namespace to use for DNS configuration.\n* `dns_records` - (Required) An array that contains one DnsRecord object for each resource record set.\n* `routing_policy` - (Optional) The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED\n\n#### dns_records\n\nThis argument supports the following arguments:\n\n* `ttl` - (Required) The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.\n* `type` - (Required, ForceNew) The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME\n\n### health_check_config\n\nThis argument supports the following arguments:\n\n* `failure_threshold` - (Optional) The number of consecutive health checks. Maximum value of 10.\n* `resource_path` - (Optional) The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.\n* `type` - (Optional, ForceNew) The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP\n\n### health_check_custom_config\n\nThis argument supports the following arguments:\n\n* `failure_threshold` - (Optional, ForceNew) The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The ID of the service.\n* `arn` - The ARN of the service.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Service Discovery Service using the service ID. For example:\n\n```terraform\nimport {\n  to = aws_service_discovery_service.example\n  id = \"0123456789\"\n}\n```\n\nUsing `terraform import`, import Service Discovery Service using the service ID. For example:\n\n```console\n% terraform import aws_service_discovery_service.example 0123456789\n```\n",
      "language": "hcl",
      "path": "website/docs/r/service_discovery_service.html.markdown",
      "slug": "service_discovery_service",
      "subcategory": "Cloud Map",
      "title": "service_discovery_service",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255785"
    }
  }
}