{
  "data": {
    "type": "provider-docs",
    "id": "3255103",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Direct Connect\"\nlayout: \"aws\"\npage_title: \"AWS: aws_dx_lag\"\ndescription: |-\n  Provides a Direct Connect LAG.\n---\n\n# Resource: aws_dx_lag\n\nProvides a Direct Connect LAG. Connections can be added to the LAG via the [`aws_dx_connection`](/docs/providers/aws/r/dx_connection.html) and [`aws_dx_connection_association`](/docs/providers/aws/r/dx_connection_association.html) resources.\n\n~> *NOTE:* When creating a LAG, if no existing connection is specified, Direct Connect will create a connection and Terraform will remove this unmanaged connection during resource creation.\n\n## Example Usage\n\n```terraform\nresource \"aws_dx_lag\" \"hoge\" {\n  name                  = \"tf-dx-lag\"\n  connections_bandwidth = \"1Gbps\"\n  location              = \"EqDC2\"\n  force_destroy         = true\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Required) The name of the LAG.\n* `connections_bandwidth` - (Required) The bandwidth of the individual physical connections bundled by the LAG. Valid values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps and 100Gbps. Case sensitive.\n* `location` - (Required) The AWS Direct Connect location in which the LAG should be allocated. See [DescribeLocations](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLocations.html) for the list of AWS Direct Connect locations. Use `locationCode`.\n* `connection_id` - (Optional) The ID of an existing dedicated connection to migrate to the LAG.\n* `force_destroy` - (Optional, Default:false) A boolean that indicates all connections associated with the LAG should be deleted so that the LAG can be destroyed without error. These objects are *not* recoverable.\n* `provider_name` - (Optional) The name of the service provider associated with the LAG.\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - The ARN of the LAG.\n* `has_logical_redundancy` - Indicates whether the LAG supports a secondary BGP peer in the same address family (IPv4/IPv6).\n* `id` - The ID of the LAG.\n* `jumbo_frame_capable` -Indicates whether jumbo frames (9001 MTU) are supported.\n* `owner_account_id` - The ID of the AWS account that owns the LAG.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Direct Connect LAGs using the LAG `id`. For example:\n\n```terraform\nimport {\n  to = aws_dx_lag.test_lag\n  id = \"dxlag-fgnsp5rq\"\n}\n```\n\nUsing `terraform import`, import Direct Connect LAGs using the LAG `id`. For example:\n\n```console\n% terraform import aws_dx_lag.test_lag dxlag-fgnsp5rq\n```\n",
      "language": "hcl",
      "path": "website/docs/r/dx_lag.html.markdown",
      "slug": "dx_lag",
      "subcategory": "Direct Connect",
      "title": "dx_lag",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255103"
    }
  }
}