{
  "data": {
    "type": "provider-docs",
    "id": "3255700",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"S3 (Simple Storage)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_s3_bucket_cors_configuration\"\ndescription: |-\n  Provides an S3 bucket CORS configuration resource.\n---\n\n# Resource: aws_s3_bucket_cors_configuration\n\nProvides an S3 bucket CORS configuration resource. For more information about CORS, go to [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/userguide/cors.html) in the Amazon S3 User Guide.\n\n~> **NOTE:** S3 Buckets only support a single CORS configuration. Declaring multiple `aws_s3_bucket_cors_configuration` resources to the same S3 Bucket will cause a perpetual difference in configuration.\n\n## Example Usage\n\n```terraform\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"mybucket\"\n}\n\nresource \"aws_s3_bucket_cors_configuration\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n\n  cors_rule {\n    allowed_headers = [\"*\"]\n    allowed_methods = [\"PUT\", \"POST\"]\n    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n    expose_headers  = [\"ETag\"]\n    max_age_seconds = 3000\n  }\n\n  cors_rule {\n    allowed_methods = [\"GET\"]\n    allowed_origins = [\"*\"]\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `bucket` - (Required, Forces new resource) Name of the bucket.\n* `expected_bucket_owner` - (Optional, Forces new resource) Account ID of the expected bucket owner.\n* `cors_rule` - (Required) Set of origins and methods (cross-origin access that you want to allow). [See below](#cors_rule). You can configure up to 100 rules.\n\n### cors_rule\n\nThe `cors_rule` configuration block supports the following arguments:\n\n* `allowed_headers` - (Optional) Set of Headers that are specified in the `Access-Control-Request-Headers` header.\n* `allowed_methods` - (Required) Set of HTTP methods that you allow the origin to execute. Valid values are `GET`, `PUT`, `HEAD`, `POST`, and `DELETE`.\n* `allowed_origins` - (Required) Set of origins you want customers to be able to access the bucket from.\n* `expose_headers` - (Optional) Set of headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript `XMLHttpRequest` object).\n* `id` - (Optional) Unique identifier for the rule. The value cannot be longer than 255 characters.\n* `max_age_seconds` - (Optional) Time in seconds that your browser is to cache the preflight response for the specified resource.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The `bucket` or `bucket` and `expected_bucket_owner` separated by a comma (`,`) if the latter is provided.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 bucket CORS configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:\n\nIf the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the `bucket`:\n\n```terraform\nimport {\n  to = aws_s3_bucket_cors_configuration.example\n  id = \"bucket-name\"\n}\n```\n\nIf the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):\n\n```terraform\nimport {\n  to = aws_s3_bucket_cors_configuration.example\n  id = \"bucket-name,123456789012\"\n}\n```\n\n**Using `terraform import` to import** S3 bucket CORS configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:\n\nIf the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the `bucket`:\n\n```console\n% terraform import aws_s3_bucket_cors_configuration.example bucket-name\n```\n\nIf the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):\n\n```console\n% terraform import aws_s3_bucket_cors_configuration.example bucket-name,123456789012\n```\n",
      "language": "hcl",
      "path": "website/docs/r/s3_bucket_cors_configuration.html.markdown",
      "slug": "s3_bucket_cors_configuration",
      "subcategory": "S3 (Simple Storage)",
      "title": "s3_bucket_cors_configuration",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255700"
    }
  }
}