{
  "data": {
    "type": "provider-docs",
    "id": "3254437",
    "attributes": {
      "category": "data-sources",
      "content": "---\nsubcategory: \"Glue\"\nlayout: \"aws\"\npage_title: \"AWS: aws_glue_script\"\ndescription: |-\n  Generate Glue script from Directed Acyclic Graph\n---\n\n# Data Source: aws_glue_script\n\nUse this data source to generate a Glue script from a Directed Acyclic Graph (DAG).\n\n## Example Usage\n\n### Generate Python Script\n\n```terraform\ndata \"aws_glue_script\" \"example\" {\n  language = \"PYTHON\"\n\n  dag_edge {\n    source = \"datasource0\"\n    target = \"applymapping1\"\n  }\n\n  dag_edge {\n    source = \"applymapping1\"\n    target = \"selectfields2\"\n  }\n\n  dag_edge {\n    source = \"selectfields2\"\n    target = \"resolvechoice3\"\n  }\n\n  dag_edge {\n    source = \"resolvechoice3\"\n    target = \"datasink4\"\n  }\n\n  dag_node {\n    id        = \"datasource0\"\n    node_type = \"DataSource\"\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.source.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.source.name}\\\"\"\n    }\n  }\n\n  dag_node {\n    id        = \"applymapping1\"\n    node_type = \"ApplyMapping\"\n\n    args {\n      name  = \"mapping\"\n      value = \"[(\\\"column1\\\", \\\"string\\\", \\\"column1\\\", \\\"string\\\")]\"\n    }\n  }\n\n  dag_node {\n    id        = \"selectfields2\"\n    node_type = \"SelectFields\"\n\n    args {\n      name  = \"paths\"\n      value = \"[\\\"column1\\\"]\"\n    }\n  }\n\n  dag_node {\n    id        = \"resolvechoice3\"\n    node_type = \"ResolveChoice\"\n\n    args {\n      name  = \"choice\"\n      value = \"\\\"MATCH_CATALOG\\\"\"\n    }\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"\n    }\n  }\n\n  dag_node {\n    id        = \"datasink4\"\n    node_type = \"DataSink\"\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"\n    }\n  }\n}\n\noutput \"python_script\" {\n  value = data.aws_glue_script.example.python_script\n}\n```\n\n### Generate Scala Code\n\n```terraform\ndata \"aws_glue_script\" \"example\" {\n  language = \"SCALA\"\n\n  dag_edge {\n    source = \"datasource0\"\n    target = \"applymapping1\"\n  }\n\n  dag_edge {\n    source = \"applymapping1\"\n    target = \"selectfields2\"\n  }\n\n  dag_edge {\n    source = \"selectfields2\"\n    target = \"resolvechoice3\"\n  }\n\n  dag_edge {\n    source = \"resolvechoice3\"\n    target = \"datasink4\"\n  }\n\n  dag_node {\n    id        = \"datasource0\"\n    node_type = \"DataSource\"\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.source.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.source.name}\\\"\"\n    }\n  }\n\n  dag_node {\n    id        = \"applymapping1\"\n    node_type = \"ApplyMapping\"\n\n    args {\n      name  = \"mappings\"\n      value = \"[(\\\"column1\\\", \\\"string\\\", \\\"column1\\\", \\\"string\\\")]\"\n    }\n  }\n\n  dag_node {\n    id        = \"selectfields2\"\n    node_type = \"SelectFields\"\n\n    args {\n      name  = \"paths\"\n      value = \"[\\\"column1\\\"]\"\n    }\n  }\n\n  dag_node {\n    id        = \"resolvechoice3\"\n    node_type = \"ResolveChoice\"\n\n    args {\n      name  = \"choice\"\n      value = \"\\\"MATCH_CATALOG\\\"\"\n    }\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"\n    }\n  }\n\n  dag_node {\n    id        = \"datasink4\"\n    node_type = \"DataSink\"\n\n    args {\n      name  = \"database\"\n      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"\n    }\n\n    args {\n      name  = \"table_name\"\n      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"\n    }\n  }\n}\n\noutput \"scala_code\" {\n  value = data.aws_glue_script.example.scala_code\n}\n```\n\n## Argument Reference\n\n* `dag_edge` - (Required) List of the edges in the DAG. Defined below.\n* `dag_node` - (Required) List of the nodes in the DAG. Defined below.\n* `language` - (Optional) Programming language of the resulting code from the DAG. Defaults to `PYTHON`. Valid values are `PYTHON` and `SCALA`.\n\n### dag_edge Argument Reference\n\n* `source` - (Required) ID of the node at which the edge starts.\n* `target` - (Required) ID of the node at which the edge ends.\n* `target_parameter` - (Optional) Target of the edge.\n\n### dag_node Argument Reference\n\n* `args` - (Required) Nested configuration an argument or property of a node. Defined below.\n* `id` - (Required) Node identifier that is unique within the node's graph.\n* `node_type` - (Required) Type of node this is.\n* `line_number` - (Optional) Line number of the node.\n\n#### args Argument Reference\n\n* `name` - (Required) Name of the argument or property.\n* `value` - (Required) Value of the argument or property.\n* `param` - (Optional) Boolean if the value is used as a parameter. Defaults to `false`.\n\n## Attribute Reference\n\nThis data source exports the following attributes in addition to the arguments above:\n\n* `id` - AWS Region.\n* `python_script` - Python script generated from the DAG when the `language` argument is set to `PYTHON`.\n* `scala_code` - Scala code generated from the DAG when the `language` argument is set to `SCALA`.\n",
      "language": "hcl",
      "path": "website/docs/d/glue_script.html.markdown",
      "slug": "glue_script",
      "subcategory": "Glue",
      "title": "glue_script",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3254437"
    }
  }
}