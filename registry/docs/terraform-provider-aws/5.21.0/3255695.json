{
  "data": {
    "type": "provider-docs",
    "id": "3255695",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"S3 Control\"\nlayout: \"aws\"\npage_title: \"AWS: aws_s3_account_public_access_block\"\ndescription: |-\n  Manages S3 account-level Public Access Block Configuration\n---\n\n# Resource: aws_s3_account_public_access_block\n\nManages S3 account-level Public Access Block configuration. For more information about these settings, see the [AWS S3 Block Public Access documentation](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html).\n\n~> **NOTE:** Each AWS account may only have one S3 Public Access Block configuration. Multiple configurations of the resource against the same AWS account will cause a perpetual difference.\n\n-> Advanced usage: To use a custom API endpoint for this Terraform resource, use the [`s3control` endpoint provider configuration](/docs/providers/aws/index.html#s3control), not the `s3` endpoint provider configuration.\n\n## Example Usage\n\n```terraform\nresource \"aws_s3_account_public_access_block\" \"example\" {\n  block_public_acls   = true\n  block_public_policy = true\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `account_id` - (Optional) AWS account ID to configure. Defaults to automatically determined account ID of the Terraform AWS provider.\n* `block_public_acls` - (Optional) Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to `false`. Enabling this setting does not affect existing policies or ACLs. When set to `true` causes the following behavior:\n    * PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.\n    * PUT Object calls fail if the request includes a public ACL.\n* `block_public_policy` - (Optional) Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to `false`. Enabling this setting does not affect existing bucket policies. When set to `true` causes Amazon S3 to:\n    * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.\n* `ignore_public_acls` - (Optional) Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to `false`. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to `true` causes Amazon S3 to:\n    * Ignore all public ACLs on buckets in this account and any objects that they contain.\n* `restrict_public_buckets` - (Optional) Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to `false`. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to `true`:\n    * Only the bucket owner and AWS Services can access buckets with public policies.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - AWS account ID\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_s3_account_public_access_block` using the AWS account ID. For example:\n\n```terraform\nimport {\n  to = aws_s3_account_public_access_block.example\n  id = \"123456789012\"\n}\n```\n\nUsing `terraform import`, import `aws_s3_account_public_access_block` using the AWS account ID. For example:\n\n```console\n% terraform import aws_s3_account_public_access_block.example 123456789012\n```\n",
      "language": "hcl",
      "path": "website/docs/r/s3_account_public_access_block.html.markdown",
      "slug": "s3_account_public_access_block",
      "subcategory": "S3 Control",
      "title": "s3_account_public_access_block",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255695"
    }
  }
}