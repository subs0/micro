{
  "data": {
    "type": "provider-docs",
    "id": "3255897",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Transfer Family\"\nlayout: \"aws\"\npage_title: \"AWS: aws_transfer_access\"\ndescription: |-\n  Provides a AWS Transfer Access resource.\n---\n\n# Resource: aws_transfer_access\n\nProvides a AWS Transfer Access resource.\n\n## Example Usage\n\n### Basic S3\n\n```terraform\nresource \"aws_transfer_access\" \"example\" {\n  external_id    = \"S-1-1-12-1234567890-123456789-1234567890-1234\"\n  server_id      = aws_transfer_server.example.id\n  role           = aws_iam_role.example.arn\n  home_directory = \"/${aws_s3_bucket.example.id}/\"\n}\n```\n\n### Basic EFS\n\n```terraform\nresource \"aws_transfer_access\" \"test\" {\n  external_id    = \"S-1-1-12-1234567890-123456789-1234567890-1234\"\n  server_id      = aws_transfer_server.test.id\n  role           = aws_iam_role.test.arn\n  home_directory = \"/${aws_efs_file_system.test.id}/\"\n  posix_profile {\n    gid = 1000\n    uid = 1000\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `external_id` - (Required) The SID of a group in the directory connected to the Transfer Server (e.g., `S-1-1-12-1234567890-123456789-1234567890-1234`)\n* `server_id` - (Required) The Server ID of the Transfer Server (e.g., `s-12345678`)\n* `home_directory` - (Optional) The landing directory (folder) for a user when they log in to the server using their SFTP client.  It should begin with a `/`.  The first item in the path is the name of the home bucket (accessible as `${Transfer:HomeBucket}` in the policy) and the rest is the home directory (accessible as `${Transfer:HomeDirectory}` in the policy). For example, `/example-bucket-1234/username` would set the home bucket to `example-bucket-1234` and the home directory to `username`.\n* `home_directory_mappings` - (Optional) Logical directory mappings that specify what S3 paths and keys should be visible to your user and how you want to make them visible. See [Home Directory Mappings](#home-directory-mappings) below.\n* `home_directory_type` - (Optional) The type of landing directory (folder) you mapped for your users' home directory. Valid values are `PATH` and `LOGICAL`.\n* `policy` - (Optional) An IAM JSON policy document that scopes down user access to portions of their Amazon S3 bucket. IAM variables you can use inside this policy include `${Transfer:UserName}`, `${Transfer:HomeDirectory}`, and `${Transfer:HomeBucket}`. Since the IAM variable syntax matches Terraform's interpolation syntax, they must be escaped inside Terraform configuration strings (`$${Transfer:UserName}`).  These are evaluated on-the-fly when navigating the bucket.\n* `posix_profile` - (Optional) Specifies the full POSIX identity, including user ID (Uid), group ID (Gid), and any secondary groups IDs (SecondaryGids), that controls your users' access to your Amazon EFS file systems. See [Posix Profile](#posix-profile) below.\n* `role` - (Required) Amazon Resource Name (ARN) of an IAM role that allows the service to controls your userâ€™s access to your Amazon S3 bucket.\n\n### Home Directory Mappings\n\n* `entry` - (Required) Represents an entry and a target.\n* `target` - (Required) Represents the map target.\n\n### Posix Profile\n\n* `gid` - (Required) The POSIX group ID used for all EFS operations by this user.\n* `uid` - (Required) The POSIX user ID used for all EFS operations by this user.\n* `secondary_gids` - (Optional) The secondary POSIX group IDs used for all EFS operations by this user.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id`  - The ID of the resource\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Transfer Accesses using the `server_id` and `external_id`. For example:\n\n```terraform\nimport {\n  to = aws_transfer_access.example\n  id = \"s-12345678/S-1-1-12-1234567890-123456789-1234567890-1234\"\n}\n```\n\nUsing `terraform import`, import Transfer Accesses using the `server_id` and `external_id`. For example:\n\n```console\n% terraform import aws_transfer_access.example s-12345678/S-1-1-12-1234567890-123456789-1234567890-1234\n```\n",
      "language": "hcl",
      "path": "website/docs/r/transfer_access.html.markdown",
      "slug": "transfer_access",
      "subcategory": "Transfer Family",
      "title": "transfer_access",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255897"
    }
  }
}