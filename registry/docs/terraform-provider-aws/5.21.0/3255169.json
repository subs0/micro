{
  "data": {
    "type": "provider-docs",
    "id": "3255169",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"ECR (Elastic Container Registry)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ecr_repository\"\ndescription: |-\n  Provides an Elastic Container Registry Repository.\n---\n\n# Resource: aws_ecr_repository\n\nProvides an Elastic Container Registry Repository.\n\n## Example Usage\n\n```terraform\nresource \"aws_ecr_repository\" \"foo\" {\n  name                 = \"bar\"\n  image_tag_mutability = \"MUTABLE\"\n\n  image_scanning_configuration {\n    scan_on_push = true\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Required) Name of the repository.\n* `encryption_configuration` - (Optional) Encryption configuration for the repository. See [below for schema](#encryption_configuration).\n* `force_delete` - (Optional) If `true`, will delete the repository even if it contains images.\n  Defaults to `false`.\n* `image_tag_mutability` - (Optional) The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.\n* `image_scanning_configuration` - (Optional) Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the [ECR User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html) for more information about image scanning.\n    * `scan_on_push` - (Required) Indicates whether images are scanned after being pushed to the repository (true) or not scanned (false).\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### encryption_configuration\n\n* `encryption_type` - (Optional) The encryption type to use for the repository. Valid values are `AES256` or `KMS`. Defaults to `AES256`.\n* `kms_key` - (Optional) The ARN of the KMS key to use when `encryption_type` is `KMS`. If not specified, uses the default AWS managed key for ECR.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Full ARN of the repository.\n* `registry_id` - The registry ID where the repository was created.\n* `repository_url` - The URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`).\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `delete` - (Default `20m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ECR Repositories using the `name`. For example:\n\n```terraform\nimport {\n  to = aws_ecr_repository.service\n  id = \"test-service\"\n}\n```\n\nUsing `terraform import`, import ECR Repositories using the `name`. For example:\n\n```console\n% terraform import aws_ecr_repository.service test-service\n```\n",
      "language": "hcl",
      "path": "website/docs/r/ecr_repository.html.markdown",
      "slug": "ecr_repository",
      "subcategory": "ECR (Elastic Container Registry)",
      "title": "ecr_repository",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255169"
    }
  }
}