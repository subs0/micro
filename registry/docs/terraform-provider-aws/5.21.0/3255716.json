{
  "data": {
    "type": "provider-docs",
    "id": "3255716",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"S3 (Simple Storage)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_s3_bucket_website_configuration\"\ndescription: |-\n  Provides an S3 bucket website configuration resource.\n---\n\n# Resource: aws_s3_bucket_website_configuration\n\nProvides an S3 bucket website configuration resource. For more information, see [Hosting Websites on S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).\n\n## Example Usage\n\n### With `routing_rule` configured\n\n```terraform\nresource \"aws_s3_bucket_website_configuration\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n\n  index_document {\n    suffix = \"index.html\"\n  }\n\n  error_document {\n    key = \"error.html\"\n  }\n\n  routing_rule {\n    condition {\n      key_prefix_equals = \"docs/\"\n    }\n    redirect {\n      replace_key_prefix_with = \"documents/\"\n    }\n  }\n}\n```\n\n### With `routing_rules` configured\n\n```terraform\nresource \"aws_s3_bucket_website_configuration\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n\n  index_document {\n    suffix = \"index.html\"\n  }\n\n  error_document {\n    key = \"error.html\"\n  }\n\n  routing_rules = <<EOF\n[{\n    \"Condition\": {\n        \"KeyPrefixEquals\": \"docs/\"\n    },\n    \"Redirect\": {\n        \"ReplaceKeyPrefixWith\": \"\"\n    }\n}]\nEOF\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `bucket` - (Required, Forces new resource) Name of the bucket.\n* `error_document` - (Optional, Conflicts with `redirect_all_requests_to`) Name of the error document for the website. [See below](#error_document).\n* `expected_bucket_owner` - (Optional, Forces new resource) Account ID of the expected bucket owner.\n* `index_document` - (Optional, Required if `redirect_all_requests_to` is not specified) Name of the index document for the website. [See below](#index_document).\n* `redirect_all_requests_to` - (Optional, Required if `index_document` is not specified) Redirect behavior for every request to this bucket's website endpoint. [See below](#redirect_all_requests_to). Conflicts with `error_document`, `index_document`, and `routing_rule`.\n* `routing_rule` - (Optional, Conflicts with `redirect_all_requests_to` and `routing_rules`) List of rules that define when a redirect is applied and the redirect behavior. [See below](#routing_rule).\n* `routing_rules` - (Optional, Conflicts with `routing_rule` and `redirect_all_requests_to`) JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)\n  describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`\"\"`) as seen in the [example above](#with-routing_rules-configured).\n\n### error_document\n\nThe `error_document` configuration block supports the following arguments:\n\n* `key` - (Required) Object key name to use when a 4XX class error occurs.\n\n### index_document\n\nThe `index_document` configuration block supports the following arguments:\n\n* `suffix` - (Required) Suffix that is appended to a request that is for a directory on the website endpoint.\nFor example, if the suffix is `index.html` and you make a request to `samplebucket/images/`, the data that is returned will be for the object with the key name `images/index.html`.\nThe suffix must not be empty and must not include a slash character.\n\n### redirect_all_requests_to\n\nThe `redirect_all_requests_to` configuration block supports the following arguments:\n\n* `host_name` - (Required) Name of the host where requests are redirected.\n* `protocol` - (Optional) Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: `http`, `https`.\n\n### routing_rule\n\nThe `routing_rule` configuration block supports the following arguments:\n\n* `condition` - (Optional) Configuration block for describing a condition that must be met for the specified redirect to apply. [See below](#condition).\n* `redirect` - (Required) Configuration block for redirect information. [See below](#redirect).\n\n### condition\n\nThe `condition` configuration block supports the following arguments:\n\n* `http_error_code_returned_equals` - (Optional, Required if `key_prefix_equals` is not specified) HTTP error code when the redirect is applied. If specified with `key_prefix_equals`, then both must be true for the redirect to be applied.\n* `key_prefix_equals` - (Optional, Required if `http_error_code_returned_equals` is not specified) Object key name prefix when the redirect is applied. If specified with `http_error_code_returned_equals`, then both must be true for the redirect to be applied.\n\n### redirect\n\nThe `redirect` configuration block supports the following arguments:\n\n* `host_name` - (Optional) Host name to use in the redirect request.\n* `http_redirect_code` - (Optional) HTTP redirect code to use on the response.\n* `protocol` - (Optional) Protocol to use when redirecting requests. The default is the protocol that is used in the original request. Valid values: `http`, `https`.\n* `replace_key_prefix_with` - (Optional, Conflicts with `replace_key_with`) Object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix `docs/` (objects in the `docs/` folder) to `documents/`, you can set a `condition` block with `key_prefix_equals` set to `docs/` and in the `redirect` set `replace_key_prefix_with` to `/documents`.\n* `replace_key_with` - (Optional, Conflicts with `replace_key_prefix_with`) Specific object key to use in the redirect request. For example, redirect request to `error.html`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The `bucket` or `bucket` and `expected_bucket_owner` separated by a comma (`,`) if the latter is provided.\n* `website_domain` - Domain of the website endpoint. This is used to create Route 53 alias records.\n* `website_endpoint` - Website endpoint.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 bucket website configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:\n\nIf the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the `bucket`:\n\n```terraform\nimport {\n  to = aws_s3_bucket_website_configuration.example\n  id = \"bucket-name\"\n}\n```\n\nIf the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):\n\n```terraform\nimport {\n  to = aws_s3_bucket_website_configuration.example\n  id = \"bucket-name,123456789012\"\n}\n```\n\n**Using `terraform import` to import** S3 bucket website configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:\n\nIf the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the `bucket`:\n\n```console\n% terraform import aws_s3_bucket_website_configuration.example bucket-name\n```\n\nIf the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):\n\n```console\n% terraform import aws_s3_bucket_website_configuration.example bucket-name,123456789012\n```\n",
      "language": "hcl",
      "path": "website/docs/r/s3_bucket_website_configuration.html.markdown",
      "slug": "s3_bucket_website_configuration",
      "subcategory": "S3 (Simple Storage)",
      "title": "s3_bucket_website_configuration",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255716"
    }
  }
}