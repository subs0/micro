{
  "data": {
    "type": "provider-docs",
    "id": "3255503",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"VPC (Virtual Private Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_network_acl\"\ndescription: |-\n  Provides an network ACL resource.\n---\n\n# Resource: aws_network_acl\n\nProvides an network ACL resource. You might set up network ACLs with rules similar\nto your security groups in order to add an additional layer of security to your VPC.\n\n~> **NOTE on Network ACLs and Network ACL Rules:** Terraform currently\nprovides both a standalone [Network ACL Rule](network_acl_rule.html) resource and a Network ACL resource with rules\ndefined in-line. At this time you cannot use a Network ACL with in-line rules\nin conjunction with any Network ACL Rule resources. Doing so will cause\na conflict of rule settings and will overwrite rules.\n\n~> **NOTE on Network ACLs and Network ACL Associations:** Terraform provides both a standalone [network ACL association](network_acl_association.html)\nresource and a network ACL resource with a `subnet_ids` attribute. Do not use the same subnet ID in both a network ACL\nresource and a network ACL association resource. Doing so will cause a conflict of associations and will overwrite the association.\n\n## Example Usage\n\n```terraform\nresource \"aws_network_acl\" \"main\" {\n  vpc_id = aws_vpc.main.id\n\n  egress {\n    protocol   = \"tcp\"\n    rule_no    = 200\n    action     = \"allow\"\n    cidr_block = \"10.3.0.0/18\"\n    from_port  = 443\n    to_port    = 443\n  }\n\n  ingress {\n    protocol   = \"tcp\"\n    rule_no    = 100\n    action     = \"allow\"\n    cidr_block = \"10.3.0.0/18\"\n    from_port  = 80\n    to_port    = 80\n  }\n\n  tags = {\n    Name = \"main\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `vpc_id` - (Required) The ID of the associated VPC.\n* `subnet_ids` - (Optional) A list of Subnet IDs to apply the ACL to\n* `ingress` - (Optional) Specifies an ingress rule. Parameters defined below.\n  This argument is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).\n* `egress` - (Optional) Specifies an egress rule. Parameters defined below.\n  This argument is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### egress and ingress\n\nBoth arguments are processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).\n\nBoth `egress` and `ingress` support the following keys:\n\n* `from_port` - (Required) The from port to match.\n* `to_port` - (Required) The to port to match.\n* `rule_no` - (Required) The rule number. Used for ordering.\n* `action` - (Required) The action to take.\n* `protocol` - (Required) The protocol to match. If using the -1 'all'\nprotocol, you must specify a from and to port of 0.\n* `cidr_block` - (Optional) The CIDR block to match. This must be a\nvalid network mask.\n* `ipv6_cidr_block` - (Optional) The IPv6 CIDR block.\n* `icmp_type` - (Optional) The ICMP type to be used. Default 0.\n* `icmp_code` - (Optional) The ICMP type code to be used. Default 0.\n\n~> Note: For more information on ICMP types and codes, see here: https://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The ID of the network ACL\n* `arn` - The ARN of the network ACL\n* `owner_id` - The ID of the AWS account that owns the network ACL.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Network ACLs using the `id`. For example:\n\n```terraform\nimport {\n  to = aws_network_acl.main\n  id = \"acl-7aaabd18\"\n}\n```\n\nUsing `terraform import`, import Network ACLs using the `id`. For example:\n\n```console\n% terraform import aws_network_acl.main acl-7aaabd18\n```\n",
      "language": "hcl",
      "path": "website/docs/r/network_acl.html.markdown",
      "slug": "network_acl",
      "subcategory": "VPC (Virtual Private Cloud)",
      "title": "network_acl",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255503"
    }
  }
}