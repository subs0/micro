{
  "data": {
    "type": "provider-docs",
    "id": "3254898",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"CloudFormation\"\nlayout: \"aws\"\npage_title: \"AWS: aws_cloudformation_stack_set\"\ndescription: |-\n  Manages a CloudFormation StackSet.\n---\n\n# Resource: aws_cloudformation_stack_set\n\nManages a CloudFormation StackSet. StackSets allow CloudFormation templates to be easily deployed across multiple accounts and regions via StackSet Instances ([`aws_cloudformation_stack_set_instance` resource](/docs/providers/aws/r/cloudformation_stack_set_instance.html)). Additional information about StackSets can be found in the [AWS CloudFormation User Guide](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/what-is-cfnstacksets.html).\n\n~> **NOTE:** All template parameters, including those with a `Default`, must be configured or ignored with the `lifecycle` configuration block `ignore_changes` argument.\n\n~> **NOTE:** All `NoEcho` template parameters must be ignored with the `lifecycle` configuration block `ignore_changes` argument.\n\n## Example Usage\n\n```terraform\ndata \"aws_iam_policy_document\" \"AWSCloudFormationStackSetAdministrationRole_assume_role_policy\" {\n  statement {\n    actions = [\"sts:AssumeRole\"]\n    effect  = \"Allow\"\n\n    principals {\n      identifiers = [\"cloudformation.amazonaws.com\"]\n      type        = \"Service\"\n    }\n  }\n}\n\nresource \"aws_iam_role\" \"AWSCloudFormationStackSetAdministrationRole\" {\n  assume_role_policy = data.aws_iam_policy_document.AWSCloudFormationStackSetAdministrationRole_assume_role_policy.json\n  name               = \"AWSCloudFormationStackSetAdministrationRole\"\n}\n\nresource \"aws_cloudformation_stack_set\" \"example\" {\n  administration_role_arn = aws_iam_role.AWSCloudFormationStackSetAdministrationRole.arn\n  name                    = \"example\"\n\n  parameters = {\n    VPCCidr = \"10.0.0.0/16\"\n  }\n\n  template_body = jsonencode({\n    Parameters = {\n      VPCCidr = {\n        Type        = \"String\"\n        Default     = \"10.0.0.0/16\"\n        Description = \"Enter the CIDR block for the VPC. Default is 10.0.0.0/16.\"\n      }\n    }\n    Resources = {\n      myVpc = {\n        Type = \"AWS::EC2::VPC\"\n        Properties = {\n          CidrBlock = {\n            Ref = \"VPCCidr\"\n          }\n          Tags = [\n            {\n              Key   = \"Name\"\n              Value = \"Primary_CF_VPC\"\n            }\n          ]\n        }\n      }\n    }\n  })\n}\n\ndata \"aws_iam_policy_document\" \"AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy\" {\n  statement {\n    actions   = [\"sts:AssumeRole\"]\n    effect    = \"Allow\"\n    resources = [\"arn:aws:iam::*:role/${aws_cloudformation_stack_set.example.execution_role_name}\"]\n  }\n}\n\nresource \"aws_iam_role_policy\" \"AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy\" {\n  name   = \"ExecutionPolicy\"\n  policy = data.aws_iam_policy_document.AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy.json\n  role   = aws_iam_role.AWSCloudFormationStackSetAdministrationRole.name\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `administration_role_arn` - (Optional) Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the `SELF_MANAGED` permission model.\n* `auto_deployment` - (Optional) Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the `SERVICE_MANAGED` permission model.\n    * `enabled` - (Optional) Whether or not auto-deployment is enabled.\n    * `retain_stacks_on_account_removal` - (Optional) Whether or not to retain stacks when the account is removed.\n* `name` - (Required) Name of the StackSet. The name must be unique in the region where you create your StackSet. The name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.\n* `capabilities` - (Optional) A list of capabilities. Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_AUTO_EXPAND`.\n* `operation_preferences` - (Optional) Preferences for how AWS CloudFormation performs a stack set update.\n* `description` - (Optional) Description of the StackSet.\n* `execution_role_name` - (Optional) Name of the IAM Role in all target accounts for StackSet operations. Defaults to `AWSCloudFormationStackSetExecutionRole` when using the `SELF_MANAGED` permission model. This should not be defined when using the `SERVICE_MANAGED` permission model.\n* `managed_execution` - (Optional) Configuration block to allow StackSets to perform non-conflicting operations concurrently and queues conflicting operations.\n    * `active` - (Optional) When set to true, StackSets performs non-conflicting operations concurrently and queues conflicting operations. After conflicting operations finish, StackSets starts queued operations in request order. Default is false.\n* `parameters` - (Optional) Key-value map of input parameters for the StackSet template. All template parameters, including those with a `Default`, must be configured or ignored with `lifecycle` configuration block `ignore_changes` argument. All `NoEcho` template parameters must be ignored with the `lifecycle` configuration block `ignore_changes` argument.\n* `permission_model` - (Optional) Describes how the IAM roles required for your StackSet are created. Valid values: `SELF_MANAGED` (default), `SERVICE_MANAGED`.\n* `call_as` - (Optional) Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account. Valid values: `SELF` (default), `DELEGATED_ADMIN`.\n* `tags` - (Optional) Key-value map of tags to associate with this StackSet and the Stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the Stacks. A maximum number of 50 tags can be specified. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `template_body` - (Optional) String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with `template_url`.\n* `template_url` - (Optional) String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with `template_body`.\n\n### `operation_preferences` Argument Reference\n\nThe `operation_preferences` configuration block supports the following arguments:\n\n* `failure_tolerance_count` - (Optional) The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.\n* `failure_tolerance_percentage` - (Optional) The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.\n* `max_concurrent_count` - (Optional) The maximum number of accounts in which to perform this operation at one time.\n* `max_concurrent_percentage` - (Optional) The maximum percentage of accounts in which to perform this operation at one time.\n* `region_concurrency_type` - (Optional) The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.\n* `region_order` - (Optional) The order of the Regions in where you want to perform the stack operation.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Amazon Resource Name (ARN) of the StackSet.\n* `id` - Name of the StackSet.\n* `stack_set_id` - Unique identifier of the StackSet.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `update` - (Default `30m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CloudFormation StackSets using the `name`. For example:\n\n```terraform\nimport {\n  to = aws_cloudformation_stack_set.example\n  id = \"example\"\n}\n```\n\nImport CloudFormation StackSets when acting a delegated administrator in a member account using the `name` and `call_as` values separated by a comma (`,`). For example:\n\n```terraform\nimport {\n  to = aws_cloudformation_stack_set.example\n  id = \"example,DELEGATED_ADMIN\"\n}\n```\n\nUsing `terraform import`, import CloudFormation StackSets using the `name`. For example:\n\n```console\n% terraform import aws_cloudformation_stack_set.example example\n```\n\nUsing `terraform import`, import CloudFormation StackSets when acting a delegated administrator in a member account using the `name` and `call_as` values separated by a comma (`,`). For example:\n\n```console\n% terraform import aws_cloudformation_stack_set.example example,DELEGATED_ADMIN\n```\n",
      "language": "hcl",
      "path": "website/docs/r/cloudformation_stack_set.html.markdown",
      "slug": "cloudformation_stack_set",
      "subcategory": "CloudFormation",
      "title": "cloudformation_stack_set",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3254898"
    }
  }
}