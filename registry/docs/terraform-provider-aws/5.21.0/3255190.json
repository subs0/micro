{
  "data": {
    "type": "provider-docs",
    "id": "3255190",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"EKS (Elastic Kubernetes)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_eks_addon\"\ndescription: |-\n  Manages an EKS add-on\n---\n\n# Resource: aws_eks_addon\n\nManages an EKS add-on.\n\n## Example Usage\n\n```terraform\nresource \"aws_eks_addon\" \"example\" {\n  cluster_name = aws_eks_cluster.example.name\n  addon_name   = \"vpc-cni\"\n}\n```\n\n## Example Update add-on usage with resolve_conflicts_on_update and PRESERVE\n\n`resolve_conflicts_on_update` with `PRESERVE` can be used to retain the config changes applied to the add-on with kubectl while upgrading to a newer version of the add-on.\n\n```terraform\nresource \"aws_eks_addon\" \"example\" {\n  cluster_name                = aws_eks_cluster.example.name\n  addon_name                  = \"coredns\"\n  addon_version               = \"v1.10.1-eksbuild.1\" #e.g., previous version v1.9.3-eksbuild.3 and the new version is v1.10.1-eksbuild.1\n  resolve_conflicts_on_update = \"PRESERVE\"\n}\n```\n\n## Example add-on usage with custom configuration_values\n\nCustom add-on configuration can be passed using `configuration_values` as a single JSON string while creating or updating the add-on.\n\n~> **Note:** `configuration_values` is a single JSON string should match the valid JSON schema for each add-on with specific version.\n\nTo find the correct JSON schema for each add-on can be extracted using [describe-addon-configuration](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-configuration.html) call.\nThis below is an example for extracting the `configuration_values` schema for `coredns`.\n\n```bash\n aws eks describe-addon-configuration \\\n --addon-name coredns \\\n --addon-version v1.10.1-eksbuild.1\n```\n\nExample to create a `coredns` managed addon with custom `configuration_values`.\n\n```terraform\nresource \"aws_eks_addon\" \"example\" {\n  cluster_name                = \"mycluster\"\n  addon_name                  = \"coredns\"\n  addon_version               = \"v1.10.1-eksbuild.1\"\n  resolve_conflicts_on_create = \"OVERWRITE\"\n\n  configuration_values = jsonencode({\n    replicaCount = 4\n    resources = {\n      limits = {\n        cpu    = \"100m\"\n        memory = \"150Mi\"\n      }\n      requests = {\n        cpu    = \"100m\"\n        memory = \"150Mi\"\n      }\n    }\n  })\n}\n```\n\n### Example IAM Role for EKS Addon \"vpc-cni\" with AWS managed policy\n\n```terraform\nresource \"aws_eks_cluster\" \"example\" {\n  # ... other configuration ...\n}\n\ndata \"tls_certificate\" \"example\" {\n  url = aws_eks_cluster.example.identity[0].oidc[0].issuer\n}\n\nresource \"aws_iam_openid_connect_provider\" \"example\" {\n  client_id_list  = [\"sts.amazonaws.com\"]\n  thumbprint_list = [data.tls_certificate.example.certificates[0].sha1_fingerprint]\n  url             = aws_eks_cluster.example.identity[0].oidc[0].issuer\n}\n\ndata \"aws_iam_policy_document\" \"example_assume_role_policy\" {\n  statement {\n    actions = [\"sts:AssumeRoleWithWebIdentity\"]\n    effect  = \"Allow\"\n\n    condition {\n      test     = \"StringEquals\"\n      variable = \"${replace(aws_iam_openid_connect_provider.example.url, \"https://\", \"\")}:sub\"\n      values   = [\"system:serviceaccount:kube-system:aws-node\"]\n    }\n\n    principals {\n      identifiers = [aws_iam_openid_connect_provider.example.arn]\n      type        = \"Federated\"\n    }\n  }\n}\n\nresource \"aws_iam_role\" \"example\" {\n  assume_role_policy = data.aws_iam_policy_document.example_assume_role_policy.json\n  name               = \"example-vpc-cni-role\"\n}\n\nresource \"aws_iam_role_policy_attachment\" \"example\" {\n  policy_arn = \"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"\n  role       = aws_iam_role.example.name\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `addon_name` – (Required) Name of the EKS add-on. The name must match one of\n  the names returned by [describe-addon-versions](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html).\n* `cluster_name` – (Required) Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\\-_]+$`).\n\nThe following arguments are optional:\n\n* `addon_version` – (Optional) The version of the EKS add-on. The version must\n  match one of the versions returned by [describe-addon-versions](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html).\n* `configuration_values` - (Optional) custom configuration values for addons with single JSON string. This JSON string value must match the JSON schema derived from [describe-addon-configuration](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-configuration.html).\n* `resolve_conflicts_on_create` - (Optional) How to resolve field value conflicts when migrating a self-managed add-on to an Amazon EKS add-on. Valid values are `NONE` and `OVERWRITE`. For more details see the [CreateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateAddon.html) API Docs.\n* `resolve_conflicts_on_update` - (Optional) How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Valid values are `NONE`, `OVERWRITE`, and `PRESERVE`. For more details see the [UpdateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html) API Docs.\n* `resolve_conflicts` - (**Deprecated** use the `resolve_conflicts_on_create` and `resolve_conflicts_on_update` attributes instead) Define how to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on or when applying version updates to the add-on. Valid values are `NONE`, `OVERWRITE` and `PRESERVE`. Note that `PRESERVE` is only valid on addon update, not for initial addon creation. If you need to set this to `PRESERVE`, use the `resolve_conflicts_on_create` and `resolve_conflicts_on_update` attributes instead. For more details check [UpdateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html) API Docs.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `preserve` - (Optional) Indicates if you want to preserve the created resources when deleting the EKS add-on.\n* `service_account_role_arn` - (Optional) The Amazon Resource Name (ARN) of an\n  existing IAM role to bind to the add-on's service account. The role must be\n  assigned the IAM permissions required by the add-on. If you don't specify\n  an existing IAM role, then the add-on uses the permissions assigned to the node\n  IAM role. For more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html)\n  in the Amazon EKS User Guide.\n\n  ~> **Note:** To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC)\n  provider created for your cluster. For more information, [see Enabling IAM roles\n  for service accounts on your cluster](https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html)\n  in the Amazon EKS User Guide.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Amazon Resource Name (ARN) of the EKS add-on.\n* `id` - EKS Cluster name and EKS Addon name separated by a colon (`:`).\n* `status` - Status of the EKS add-on.\n* `created_at` - Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was created.\n* `modified_at` - Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was updated.\n* `tags_all` - (Optional) Key-value map of resource tags, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `20m`)\n* `update` - (Default `20m`)\n* `delete` - (Default `40m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EKS add-on using the `cluster_name` and `addon_name` separated by a colon (`:`). For example:\n\n```terraform\nimport {\n  to = aws_eks_addon.my_eks_addon\n  id = \"my_cluster_name:my_addon_name\"\n}\n```\n\nUsing `terraform import`, import EKS add-on using the `cluster_name` and `addon_name` separated by a colon (`:`). For example:\n\n```console\n% terraform import aws_eks_addon.my_eks_addon my_cluster_name:my_addon_name\n```\n",
      "language": "hcl",
      "path": "website/docs/r/eks_addon.html.markdown",
      "slug": "eks_addon",
      "subcategory": "EKS (Elastic Kubernetes)",
      "title": "eks_addon",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255190"
    }
  }
}