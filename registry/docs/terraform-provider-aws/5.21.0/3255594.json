{
  "data": {
    "type": "provider-docs",
    "id": "3255594",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"QuickSight\"\nlayout: \"aws\"\npage_title: \"AWS: aws_quicksight_data_set\"\ndescription: |-\n  Manages a Resource QuickSight Data Set.\n---\n\n# Resource: aws_quicksight_data_set\n\nResource for managing a QuickSight Data Set.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\nresource \"aws_quicksight_data_set\" \"example\" {\n  data_set_id = \"example-id\"\n  name        = \"example-name\"\n  import_mode = \"SPICE\"\n\n  physical_table_map {\n    physical_table_map_id = \"example-id\"\n    s3_source {\n      data_source_arn = aws_quicksight_data_source.example.arn\n      input_columns {\n        name = \"Column1\"\n        type = \"STRING\"\n      }\n      upload_settings {\n        format = \"JSON\"\n      }\n    }\n  }\n}\n```\n\n### With Column Level Permission Rules\n\n```terraform\nresource \"aws_quicksight_data_set\" \"example\" {\n  data_set_id = \"example-id\"\n  name        = \"example-name\"\n  import_mode = \"SPICE\"\n\n  physical_table_map {\n    physical_table_map_id = \"example-id\"\n    s3_source {\n      data_source_arn = aws_quicksight_data_source.example.arn\n      input_columns {\n        name = \"Column1\"\n        type = \"STRING\"\n      }\n      upload_settings {\n        format = \"JSON\"\n      }\n    }\n  }\n  column_level_permission_rules {\n    column_names = [\"Column1\"]\n    principals   = [aws_quicksight_user.example.arn]\n  }\n}\n```\n\n### With Field Folders\n\n```terraform\nresource \"aws_quicksight_data_set\" \"example\" {\n  data_set_id = \"example-id\"\n  name        = \"example-name\"\n  import_mode = \"SPICE\"\n\n  physical_table_map {\n    physical_table_map_id = \"example-id\"\n    s3_source {\n      data_source_arn = aws_quicksight_data_source.example.arn\n      input_columns {\n        name = \"Column1\"\n        type = \"STRING\"\n      }\n      upload_settings {\n        format = \"JSON\"\n      }\n    }\n  }\n  field_folders {\n    field_folders_id = \"example-id\"\n    columns          = [\"Column1\"]\n    description      = \"example description\"\n  }\n}\n```\n\n### With Permissions\n\n```terraform\nresource \"aws_quicksight_data_set\" \"example\" {\n  data_set_id = \"example-id\"\n  name        = \"example-name\"\n  import_mode = \"SPICE\"\n\n  physical_table_map {\n    physical_table_map_id = \"example-id\"\n    s3_source {\n      data_source_arn = aws_quicksight_data_source.example.arn\n      input_columns {\n        name = \"Column1\"\n        type = \"STRING\"\n      }\n      upload_settings {\n        format = \"JSON\"\n      }\n    }\n  }\n  permissions {\n    actions = [\n      \"quicksight:DescribeDataSet\",\n      \"quicksight:DescribeDataSetPermissions\",\n      \"quicksight:PassDataSet\",\n      \"quicksight:DescribeIngestion\",\n      \"quicksight:ListIngestions\",\n    ]\n    principal = aws_quicksight_user.example.arn\n  }\n}\n```\n\n### With Row Level Permission Tag Configuration\n\n```terraform\nresource \"aws_quicksight_data_set\" \"example\" {\n  data_set_id = \"example-id\"\n  name        = \"example-name\"\n  import_mode = \"SPICE\"\n\n  physical_table_map {\n    physical_table_map_id = \"example-id\"\n    s3_source {\n      data_source_arn = aws_quicksight_data_source.example.arn\n      input_columns {\n        name = \"Column1\"\n        type = \"STRING\"\n      }\n      upload_settings {\n        format = \"JSON\"\n      }\n    }\n  }\n  row_level_permission_tag_configuration {\n    status = \"ENABLED\"\n    tag_rules {\n      column_name               = \"Column1\"\n      tag_key                   = \"tagkey\"\n      match_all_value           = \"*\"\n      tag_multi_value_delimiter = \",\"\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `data_set_id` - (Required, Forces new resource) Identifier for the data set.\n* `import_mode` - (Required) Indicates whether you want to import the data into SPICE. Valid values are `SPICE` and `DIRECT_QUERY`.\n* `name` - (Required) Display name for the dataset.\n* `physical_table_map` - (Required) Declares the physical tables that are available in the underlying data sources. See [physical_table_map](#physical_table_map).\n\nThe following arguments are optional:\n\n* `aws_account_id` - (Optional, Forces new resource) AWS account ID.\n* `column_groups` - (Optional) Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported. See [column_groups](#column_groups).\n* `column_level_permission_rules` - (Optional) A set of 1 or more definitions of a [ColumnLevelPermissionRule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html). See [column_level_permission_rules](#column_level_permission_rules).\n* `data_set_usage_configuration` - (Optional) The usage configuration to apply to child datasets that reference this dataset as a source. See [data_set_usage_configuration](#data_set_usage_configuration).\n* `field_folders` - (Optional) The folder that contains fields and nested subfolders for your dataset. See [field_folders](#field_folders).\n* `logical_table_map` - (Optional) Configures the combination and transformation of the data from the physical tables. Maximum of 1 entry. See [logical_table_map](#logical_table_map).\n* `permissions` - (Optional) A set of resource permissions on the data source. Maximum of 64 items. See [permissions](#permissions).\n* `row_level_permission_data_set` - (Optional) The row-level security configuration for the data that you want to create. See [row_level_permission_data_set](#row_level_permission_data_set).\n* `row_level_permission_tag_configuration` - (Optional) The configuration of tags on a dataset to set row-level security. Row-level security tags are currently supported for anonymous embedding only. See [row_level_permission_tag_configuration](#row_level_permission_tag_configuration).\n* `refresh_properties` - (Optional) The refresh properties for the data set. **NOTE**: Only valid when `import_mode` is set to `SPICE`. See [refresh_properties](#refresh_properties).\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### physical_table_map\n\nFor a `physical_table_map` item to be valid, only one of `custom_sql`, `relational_table`, or `s3_source` should be configured.\n\n* `physical_table_map_id` - (Required) Key of the physical table map.\n* `custom_sql` - (Optional) A physical table type built from the results of the custom SQL query. See [custom_sql](#custom_sql).\n* `relational_table` - (Optional) A physical table type for relational data sources. See [relational_table](#relational_table).\n* `s3_source` - (Optional) A physical table type for as S3 data source. See [s3_source](#s3_source).\n\n### custom_sql\n\n* `data_source_arn` - (Required) ARN of the data source.\n* `name` - (Required) Display name for the SQL query result.\n* `sql_query` - (Required) SQL query.\n* `columns` - (Optional) Column schema from the SQL query result set. See [columns](#columns).\n\n### columns\n\n* `name` - (Required) Name of this column in the underlying data source.\n* `type` - (Required) Data type of the column.\n\n### relational_table\n\n* `data_source_arn` - (Required) ARN of the data source.\n* `input_columns` - (Required) Column schema of the table. See [input_columns](#input_columns).\n* `name` - (Required) Name of the relational table.\n* `catalog` - (Optional) Catalog associated with the table.\n* `schema` - (Optional) Schema name. This name applies to certain relational database engines.\n\n### input_columns\n\n* `name` - (Required) Name of this column in the underlying data source.\n* `type` - (Required) Data type of the column.\n\n### s3_source\n\n* `data_source_arn` - (Required) ARN of the data source.\n* `input_columns` - (Required) Column schema of the table. See [input_columns](#input_columns).\n* `upload_settings` - (Required) Information about the format for the S3 source file or files. See [upload_settings](#upload_settings).\n\n### upload_settings\n\n* `contains_header` - (Optional) Whether the file has a header row, or the files each have a header row.\n* `delimiter` - (Optional) Delimiter between values in the file.\n* `format` - (Optional) File format. Valid values are `CSV`, `TSV`, `CLF`, `ELF`, `XLSX`, and `JSON`.\n* `start_from_row` - (Optional) A row number to start reading data from.\n* `text_qualifier` - (Optional) Text qualifier. Valid values are `DOUBLE_QUOTE` and `SINGLE_QUOTE`.\n\n### column_groups\n\n* `geo_spatial_column_group` - (Optional) Geospatial column group that denotes a hierarchy. See [geo_spatial_column_group](#geo_spatial_column_group).\n\n### geo_spatial_column_group\n\n* `columns` - (Required) Columns in this hierarchy.\n* `country_code` - (Required) Country code. Valid values are `US`.\n* `name` - (Required) A display name for the hierarchy.\n\n### column_level_permission_rules\n\n* `column_names` - (Optional) An array of column names.\n* `principals` - (Optional) An array of ARNs for Amazon QuickSight users or groups.\n\n### data_set_usage_configuration\n\n* `disable_use_as_direct_query_source` - (Optional) Controls whether a child dataset of a direct query can use this dataset as a source.\n* `disable_use_as_imported_source` - (Optional) Controls whether a child dataset that's stored in QuickSight can use this dataset as a source.\n\n### field_folders\n\n* `field_folders_id` - (Required) Key of the field folder map.\n* `columns` - (Optional) An array of column names to add to the folder. A column can only be in one folder.\n* `description` - (Optional) Field folder description.\n\n### logical_table_map\n\n* `alias` - (Required) A display name for the logical table.\n* `logical_table_map_id` - (Required) Key of the logical table map.\n* `data_transforms` - (Optional) Transform operations that act on this logical table. For this structure to be valid, only one of the attributes can be non-null. See [data_transforms](#data_transforms).\n* `source` - (Optional) Source of this logical table. See [source](#source).\n\n### data_transforms\n\n* `cast_column_type_operation` - (Optional) A transform operation that casts a column to a different type. See [cast_column_type_operation](#cast_column_type_operation).\n* `create_columns_operation` - (Optional) An operation that creates calculated columns. Columns created in one such operation form a lexical closure. See [create_columns_operation](#create_columns_operation).\n* `filter_operation` - (Optional) An operation that filters rows based on some condition. See [filter_operation](#filter_operation).\n* `project_operation` - (Optional) An operation that projects columns. Operations that come after a projection can only refer to projected columns. See [project_operation](#project_operation).\n* `rename_column_operation` - (Optional) An operation that renames a column. See [rename_column_operation](#rename_column_operation).\n* `tag_column_operation` - (Optional) An operation that tags a column with additional information. See [tag_column_operation](#tag_column_operation).\n* `untag_column_operation` - (Optional) A transform operation that removes tags associated with a column. See [untag_column_operation](#untag_column_operation).\n\n### cast_column_type_operation\n\n* `column_name` - (Required) Column name.\n* `new_column_type` - (Required) New column data type. Valid values are `STRING`, `INTEGER`, `DECIMAL`, `DATETIME`.\n* `format` - (Optional) When casting a column from string to datetime type, you can supply a string in a format supported by Amazon QuickSight to denote the source data format.\n\n### create_columns_operation\n\n* `columns` - (Required) Calculated columns to create. See [columns](#columns-1).\n\n### columns\n\n* `column_id` - (Required) A unique ID to identify a calculated column. During a dataset update, if the column ID of a calculated column matches that of an existing calculated column, Amazon QuickSight preserves the existing calculated column.\n* `column_name` - (Required) Column name.\n* `expression` - (Required) An expression that defines the calculated column.\n\n### filter_operation\n\n* `condition_expression` - (Required) An expression that must evaluate to a Boolean value. Rows for which the expression evaluates to true are kept in the dataset.\n\n### project_operation\n\n* `projected_columns` - (Required) Projected columns.\n\n### rename_column_operation\n\n* `column_name` - (Required) Column to be renamed.\n* `new_column_name` - (Required) New name for the column.\n\n### tag_column_operation\n\n* `column_name` - (Required) Column name.\n* `tags` - (Required) The dataset column tag, currently only used for geospatial type tagging. See [tags](#tags).\n\n### tags\n\n* `column_description` - (Optional) A description for a column. See [column_description](#column_description).\n* `column_geographic_role` - (Optional) A geospatial role for a column. Valid values are `COUNTRY`, `STATE`, `COUNTY`, `CITY`, `POSTCODE`, `LONGITUDE`, and `LATITUDE`.\n\n### column_description\n\n* `text` - (Optional) The text of a description for a column.\n\n### untag_column_operation\n\n* `column_name` - (Required) Column name.\n* `tag_names` - (Required) The column tags to remove from this column.\n\n### source\n\n* `data_set_arn` - (Optional) ARN of the parent data set.\n* `join_instruction` - (Optional) Specifies the result of a join of two logical tables. See [join_instruction](#join_instruction).\n* `physical_table_id` - (Optional) Physical table ID.\n\n### join_instruction\n\n* `left_operand` - (Required) Operand on the left side of a join.\n* `on_clause` - (Required) Join instructions provided in the ON clause of a join.\n* `right_operand` - (Required) Operand on the right side of a join.\n* `type` - (Required) Type of join. Valid values are `INNER`, `OUTER`, `LEFT`, and `RIGHT`.\n* `left_join_key_properties` - (Optional) Join key properties of the left operand. See [left_join_key_properties](#left_join_key_properties).\n* `right_join_key_properties` - (Optional) Join key properties of the right operand. See [right_join_key_properties](#right_join_key_properties).\n\n### left_join_key_properties\n\n* `unique_key` - (Optional) A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Amazon QuickSight to optimize query performance.\n\n### right_join_key_properties\n\n* `unique_key` - (Optional) A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Amazon QuickSight to optimize query performance.\n\n### permissions\n\n* `actions` - (Required) List of IAM actions to grant or revoke permissions on.\n* `principal` - (Required) ARN of the principal. See the [ResourcePermission documentation](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ResourcePermission.html) for the applicable ARN values.\n\n### row_level_permission_data_set\n\n* `arn` - (Required) ARN of the dataset that contains permissions for RLS.\n* `permission_policy` - (Required) Type of permissions to use when interpreting the permissions for RLS. Valid values are `GRANT_ACCESS` and `DENY_ACCESS`.\n* `format_version` - (Optional) User or group rules associated with the dataset that contains permissions for RLS.\n* `namespace` - (Optional) Namespace associated with the dataset that contains permissions for RLS.\n* `status` - (Optional) Status of the row-level security permission dataset. If enabled, the status is `ENABLED`. If disabled, the status is `DISABLED`.\n\n### row_level_permission_tag_configuration\n\n* `tag_rules` - (Required) A set of rules associated with row-level security, such as the tag names and columns that they are assigned to. See [tag_rules](#tag_rules).\n* `status` - (Optional) The status of row-level security tags. If enabled, the status is `ENABLED`. If disabled, the status is `DISABLED`.\n\n### refresh_properties\n\n* `refresh_configuration` - (Required) The refresh configuration for the data set. See [refresh_configuration](#refresh_configuration).\n\n### refresh_configuration\n\n* `incremental_refresh` - (Required) The incremental refresh for the data set. See [incremental_refresh](#incremental_refresh).\n\n### incremental_refresh\n\n* `lookback_window` - (Required) The lookback window setup for an incremental refresh configuration. See [lookback_window](#lookback_window).\n\n### lookback_window\n\n* `column_name` - (Required) The name of the lookback window column.\n* `size` - (Required) The lookback window column size.\n* `size_unit` - (Required) The size unit that is used for the lookback window column. Valid values for this structure are `HOUR`, `DAY`, and `WEEK`.\n\n### tag_rules\n\n* `column_name` - (Required) Column name that a tag key is assigned to.\n* `tag_key` - (Required) Unique key for a tag.\n* `match_all_value` - (Optional) A string that you want to use to filter by all the values in a column in the dataset and don’t want to list the values one by one.\n* `tag_multi_value_delimiter` - (Optional) A string that you want to use to delimit the values when you pass the values at run time.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Amazon Resource Name (ARN) of the data set.\n* `id` - A comma-delimited string joining AWS account ID and data set ID.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a QuickSight Data Set using the AWS account ID and data set ID separated by a comma (`,`). For example:\n\n```terraform\nimport {\n  to = aws_quicksight_data_set.example\n  id = \"123456789012,example-id\"\n}\n```\n\nUsing `terraform import`, import a QuickSight Data Set using the AWS account ID and data set ID separated by a comma (`,`). For example:\n\n```console\n% terraform import aws_quicksight_data_set.example 123456789012,example-id\n```\n",
      "language": "hcl",
      "path": "website/docs/r/quicksight_data_set.html.markdown",
      "slug": "quicksight_data_set",
      "subcategory": "QuickSight",
      "title": "quicksight_data_set",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255594"
    }
  }
}