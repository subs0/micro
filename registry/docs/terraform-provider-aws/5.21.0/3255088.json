{
  "data": {
    "type": "provider-docs",
    "id": "3255088",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"DocumentDB\"\nlayout: \"aws\"\npage_title: \"AWS: aws_docdb_subnet_group\"\ndescription: |-\n  Provides an DocumentDB subnet group resource.\n---\n\n# Resource: aws_docdb_subnet_group\n\nProvides an DocumentDB subnet group resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_docdb_subnet_group\" \"default\" {\n  name       = \"main\"\n  subnet_ids = [aws_subnet.frontend.id, aws_subnet.backend.id]\n\n  tags = {\n    Name = \"My docdb subnet group\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Optional, Forces new resource) The name of the docDB subnet group. If omitted, Terraform will assign a random, unique name.\n* `name_prefix` - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with `name`.\n* `description` - (Optional) The description of the docDB subnet group. Defaults to \"Managed by Terraform\".\n* `subnet_ids` - (Required) A list of VPC subnet IDs.\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The docDB subnet group name.\n* `arn` - The ARN of the docDB subnet group.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DocumentDB Subnet groups using the `name`. For example:\n\n```terraform\nimport {\n  to = aws_docdb_subnet_group.default\n  id = \"production-subnet-group\"\n}\n```\n\nUsing `terraform import`, import DocumentDB Subnet groups using the `name`. For example:\n\n```console\n% terraform import aws_docdb_subnet_group.default production-subnet-group\n```\n",
      "language": "hcl",
      "path": "website/docs/r/docdb_subnet_group.html.markdown",
      "slug": "docdb_subnet_group",
      "subcategory": "DocumentDB",
      "title": "docdb_subnet_group",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3255088"
    }
  }
}