{
  "data": {
    "type": "provider-docs",
    "id": "3198436",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Glue\"\nlayout: \"aws\"\npage_title: \"AWS: aws_glue_job\"\ndescription: |-\n  Provides an Glue Job resource.\n---\n\n# Resource: aws_glue_job\n\nProvides a Glue Job resource.\n\n-> Glue functionality, such as monitoring and logging of jobs, is typically managed with the `default_arguments` argument. See the [Special Parameters Used by AWS Glue](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-glue-arguments.html) topic in the Glue developer guide for additional information.\n\n## Example Usage\n\n### Python Job\n\n```terraform\nresource \"aws_glue_job\" \"example\" {\n  name     = \"example\"\n  role_arn = aws_iam_role.example.arn\n\n  command {\n    script_location = \"s3://${aws_s3_bucket.example.bucket}/example.py\"\n  }\n}\n```\n\n### Ray Job\n\n```terraform\nresource \"aws_glue_job\" \"example\" {\n  name         = \"example\"\n  role_arn     = aws_iam_role.example.arn\n  glue_version = \"4.0\"\n  worker_type  = \"Z.2X\"\n\n  command {\n    name            = \"glueray\"\n    python_version  = \"3.9\"\n    runtime         = \"Ray2.4\"\n    script_location = \"s3://${aws_s3_bucket.example.bucket}/example.py\"\n  }\n}\n```\n\n### Scala Job\n\n```terraform\nresource \"aws_glue_job\" \"example\" {\n  name     = \"example\"\n  role_arn = aws_iam_role.example.arn\n\n  command {\n    script_location = \"s3://${aws_s3_bucket.example.bucket}/example.scala\"\n  }\n\n  default_arguments = {\n    \"--job-language\" = \"scala\"\n  }\n}\n```\n\n### Streaming Job\n\n```terraform\nresource \"aws_glue_job\" \"example\" {\n  name     = \"example streaming job\"\n  role_arn = aws_iam_role.example.arn\n\n  command {\n    name            = \"gluestreaming\"\n    script_location = \"s3://${aws_s3_bucket.example.bucket}/example.script\"\n  }\n}\n```\n\n### Enabling CloudWatch Logs and Metrics\n\n```terraform\nresource \"aws_cloudwatch_log_group\" \"example\" {\n  name              = \"example\"\n  retention_in_days = 14\n}\n\nresource \"aws_glue_job\" \"example\" {\n  # ... other configuration ...\n\n  default_arguments = {\n    # ... potentially other arguments ...\n    \"--continuous-log-logGroup\"          = aws_cloudwatch_log_group.example.name\n    \"--enable-continuous-cloudwatch-log\" = \"true\"\n    \"--enable-continuous-log-filter\"     = \"true\"\n    \"--enable-metrics\"                   = \"\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `command` – (Required) The command of the job. Defined below.\n* `connections` – (Optional) The list of connections used for this job.\n* `default_arguments` – (Optional) The map of default arguments for this job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes. For information about how to specify and consume your own Job arguments, see the [Calling AWS Glue APIs in Python](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-calling.html) topic in the developer guide. For information about the key-value pairs that AWS Glue consumes to set up your job, see the [Special Parameters Used by AWS Glue](http://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-python-glue-arguments.html) topic in the developer guide.\n* `non_overridable_arguments` – (Optional) Non-overridable arguments for this job, specified as name-value pairs.\n* `description` – (Optional) Description of the job.\n* `execution_property` – (Optional) Execution property of the job. Defined below.\n* `glue_version` - (Optional) The version of glue to use, for example \"1.0\". Ray jobs should set this to 4.0 or greater. For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).\n* `execution_class` - (Optional) Indicates whether the job is run with a standard or flexible execution class. The standard execution class is ideal for time-sensitive workloads that require fast job startup and dedicated resources. Valid value: `FLEX`, `STANDARD`.\n* `max_capacity` – (Optional) The maximum number of AWS Glue data processing units (DPUs) that can be allocated when this job runs. `Required` when `pythonshell` is set, accept either `0.0625` or `1.0`. Use `number_of_workers` and `worker_type` arguments instead with `glue_version` `2.0` and above.\n* `max_retries` – (Optional) The maximum number of times to retry this job if it fails.\n* `name` – (Required) The name you assign to this job. It must be unique in your account.\n* `notification_property` - (Optional) Notification property of the job. Defined below.\n* `role_arn` – (Required) The ARN of the IAM role associated with this job.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `timeout` – (Optional) The job timeout in minutes. The default is 2880 minutes (48 hours) for `glueetl` and `pythonshell` jobs, and null (unlimited) for `gluestreaming` jobs.\n* `security_configuration` - (Optional) The name of the Security Configuration to be associated with the job.\n* `worker_type` - (Optional) The type of predefined worker that is allocated when a job runs. Accepts a value of Standard, G.1X, G.2X, or G.025X for Spark jobs. Accepts the value Z.2X for Ray jobs.\n    * For the Standard worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.\n    * For the G.1X worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. Recommended for memory-intensive jobs.\n    * For the G.2X worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. Recommended for memory-intensive jobs.\n    * For the G.025X worker type, each worker maps to 0.25 DPU (2 vCPU, 4GB of memory, 64 GB disk), and provides 1 executor per worker. Recommended for low volume streaming jobs. Only available for Glue version 3.0.\n    * For the Z.2X worker type, each worker maps to 2 M-DPU (8vCPU, 64 GB of m emory, 128 GB disk), and provides up to 8 Ray workers based on the autoscaler.\n* `number_of_workers` - (Optional) The number of workers of a defined workerType that are allocated when a job runs.\n\n### command Argument Reference\n\n* `name` - (Optional) The name of the job command. Defaults to `glueetl`. Use `pythonshell` for Python Shell Job Type, `glueray` for Ray Job Type, or `gluestreaming` for Streaming Job Type. `max_capacity` needs to be set if `pythonshell` is chosen.\n* `script_location` - (Required) Specifies the S3 path to a script that executes a job.\n* `python_version` - (Optional) The Python version being used to execute a Python shell job. Allowed values are 2, 3 or 3.9. Version 3 refers to Python 3.6.\n* `runtime` - (Optional) In Ray jobs, runtime is used to specify the versions of Ray, Python and additional libraries available in your environment. This field is not used in other job types. For supported runtime environment values, see [Working with Ray jobs](https://docs.aws.amazon.com/glue/latest/dg/ray-jobs-section.html#author-job-ray-runtimes) in the Glue Developer Guide.\n\n### execution_property Argument Reference\n\n* `max_concurrent_runs` - (Optional) The maximum number of concurrent runs allowed for a job. The default is 1.\n\n### notification_property Argument Reference\n\n* `notify_delay_after` - (Optional) After a job run starts, the number of minutes to wait before sending a job run delay notification.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Amazon Resource Name (ARN) of Glue Job\n* `id` - Job name\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Glue Jobs using `name`. For example:\n\n```terraform\nimport {\n  to = aws_glue_job.MyJob\n  id = \"MyJob\"\n}\n```\n\nUsing `terraform import`, import Glue Jobs using `name`. For example:\n\n```console\n% terraform import aws_glue_job.MyJob MyJob\n```\n",
      "language": "hcl",
      "path": "website/docs/r/glue_job.html.markdown",
      "slug": "glue_job",
      "subcategory": "Glue",
      "title": "glue_job",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198436"
    }
  }
}