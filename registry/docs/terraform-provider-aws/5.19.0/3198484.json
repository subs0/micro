{
  "data": {
    "type": "provider-docs",
    "id": "3198484",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"IAM (Identity & Access Management)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_iam_user_policy\"\ndescription: |-\n  Provides an IAM policy attached to a user.\n---\n\n# Resource: aws_iam_user_policy\n\nProvides an IAM policy attached to a user.\n\n## Example Usage\n\n```terraform\nresource \"aws_iam_user_policy\" \"lb_ro\" {\n  name = \"test\"\n  user = aws_iam_user.lb.name\n\n  # Terraform's \"jsonencode\" function converts a\n  # Terraform expression result to valid JSON syntax.\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Action = [\n          \"ec2:Describe*\",\n        ]\n        Effect   = \"Allow\"\n        Resource = \"*\"\n      },\n    ]\n  })\n}\n\nresource \"aws_iam_user\" \"lb\" {\n  name = \"loadbalancer\"\n  path = \"/system/\"\n}\n\nresource \"aws_iam_access_key\" \"lb\" {\n  user = aws_iam_user.lb.name\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).\n* `name` - (Optional) The name of the policy. If omitted, Terraform will assign a random, unique name.\n* `name_prefix` - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with `name`.\n* `user` - (Required) IAM user to which to attach this policy.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The user policy ID, in the form of `user_name:user_policy_name`.\n* `name` - The name of the policy (always set).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IAM User Policies using the `user_name:user_policy_name`. For example:\n\n```terraform\nimport {\n  to = aws_iam_user_policy.mypolicy\n  id = \"user_of_mypolicy_name:mypolicy_name\"\n}\n```\n\nUsing `terraform import`, import IAM User Policies using the `user_name:user_policy_name`. For example:\n\n```console\n% terraform import aws_iam_user_policy.mypolicy user_of_mypolicy_name:mypolicy_name\n```\n",
      "language": "hcl",
      "path": "website/docs/r/iam_user_policy.html.markdown",
      "slug": "iam_user_policy",
      "subcategory": "IAM (Identity & Access Management)",
      "title": "iam_user_policy",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198484"
    }
  }
}