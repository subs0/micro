{
  "data": {
    "type": "provider-docs",
    "id": "3199049",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"CloudWatch Synthetics\"\nlayout: \"aws\"\npage_title: \"AWS: aws_synthetics_canary\"\ndescription: |-\n  Provides a Synthetics Canary resource\n---\n\n# Resource: aws_synthetics_canary\n\nProvides a Synthetics Canary resource.\n\n~> **NOTE:** When you create a canary, AWS creates supporting implicit resources. See the Amazon CloudWatch Synthetics documentation on [DeleteCanary](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DeleteCanary.html) for a full list. Neither AWS nor Terraform deletes these implicit resources automatically when the canary is deleted. Before deleting a canary, ensure you have all the information about the canary that you need to delete the implicit resources using Terraform shell commands, the AWS Console, or AWS CLI.\n\n## Example Usage\n\n```terraform\nresource \"aws_synthetics_canary\" \"some\" {\n  name                 = \"some-canary\"\n  artifact_s3_location = \"s3://some-bucket/\"\n  execution_role_arn   = \"some-role\"\n  handler              = \"exports.handler\"\n  zip_file             = \"test-fixtures/lambdatest.zip\"\n  runtime_version      = \"syn-1.0\"\n\n  schedule {\n    expression = \"rate(0 minute)\"\n  }\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `artifact_s3_location` - (Required) Location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary.\n* `execution_role_arn` - (Required) ARN of the IAM role to be used to run the canary. see [AWS Docs](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CreateCanary.html#API_CreateCanary_RequestSyntax) for permissions needs for IAM Role.\n* `handler` - (Required) Entry point to use for the source code when running the canary. This value must end with the string `.handler` .\n* `name` - (Required) Name for this canary. Has a maximum length of 21 characters. Valid characters are lowercase alphanumeric, hyphen, or underscore.\n* `runtime_version` - (Required) Runtime version to use for the canary. Versions change often so consult the [Amazon CloudWatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html) for the latest valid versions. Values include `syn-python-selenium-1.0`, `syn-nodejs-puppeteer-3.0`, `syn-nodejs-2.2`, `syn-nodejs-2.1`, `syn-nodejs-2.0`, and `syn-1.0`.\n* `schedule` -  (Required) Configuration block providing how often the canary is to run and when these test runs are to stop. Detailed below.\n\nThe following arguments are optional:\n\n* `delete_lambda` - (Optional)  Specifies whether to also delete the Lambda functions and layers used by this canary. The default is `false`.\n* `vpc_config` - (Optional) Configuration block. Detailed below.\n* `failure_retention_period` - (Optional) Number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.\n* `run_config` - (Optional) Configuration block for individual canary runs. Detailed below.\n* `s3_bucket` - (Optional) Full bucket name which is used if your canary script is located in S3. The bucket must already exist. **Conflicts with `zip_file`.**\n* `s3_key` - (Optional) S3 key of your script. **Conflicts with `zip_file`.**\n* `s3_version` - (Optional) S3 version ID of your script. **Conflicts with `zip_file`.**\n* `start_canary` - (Optional) Whether to run or stop the canary.\n* `success_retention_period` - (Optional) Number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `artifact_config` - (Optional) configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See [Artifact Config](#artifact_config).\n* `zip_file` - (Optional) ZIP file that contains the script, if you input your canary script directly into the canary instead of referring to an S3 location. It can be up to 225KB. **Conflicts with `s3_bucket`, `s3_key`, and `s3_version`.**\n\n### artifact_config\n\n* `s3_encryption` - (Optional) Configuration of the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. See [S3 Encryption](#s3_encryption).\n\n### s3_encryption\n\n* `encryption_mode` - (Optional) The encryption method to use for artifacts created by this canary. Valid values are: `SSE_S3` and `SSE_KMS`.\n* `kms_key_arn` - (Optional) The ARN of the customer-managed KMS key to use, if you specify `SSE_KMS` for `encryption_mode`.\n\n### schedule\n\n* `expression` - (Required) Rate expression or cron expression that defines how often the canary is to run. For rate expression, the syntax is `rate(number unit)`. _unit_ can be `minute`, `minutes`, or `hour`. For cron expression, the syntax is `cron(expression)`. For more information about the syntax for cron expressions, see [Scheduling canary runs using cron](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_cron.html).\n* `duration_in_seconds` - (Optional) Duration in seconds, for the canary to continue making regular runs according to the schedule in the Expression value.\n\n### run_config\n\n* `timeout_in_seconds` - (Optional) Number of seconds the canary is allowed to run before it must stop. If you omit this field, the frequency of the canary is used, up to a maximum of 840 (14 minutes).\n* `memory_in_mb` - (Optional) Maximum amount of memory available to the canary while it is running, in MB. The value you specify must be a multiple of 64.\n* `active_tracing` - (Optional) Whether this canary is to use active AWS X-Ray tracing when it runs. You can enable active tracing only for canaries that use version syn-nodejs-2.0 or later for their canary runtime.\n* `environment_variables` - (Optional) Map of environment variables that are accessible from the canary during execution. Please see [AWS Docs](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime) for variables reserved for Lambda.\n\n### vpc_config\n\nIf this canary tests an endpoint in a VPC, this structure contains information about the subnet and security groups of the VPC endpoint. For more information, see [Running a Canary in a VPC](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html).\n\n* `subnet_ids` - (Required) IDs of the subnets where this canary is to run.\n* `security_group_ids` - (Required) IDs of the security groups for this canary.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Amazon Resource Name (ARN) of the Canary.\n* `engine_arn` - ARN of the Lambda function that is used as your canary's engine.\n* `id` - Name for this canary.\n* `source_location_arn` - ARN of the Lambda layer where Synthetics stores the canary script code.\n* `status` - Canary status.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n* `timeline` - Structure that contains information about when the canary was created, modified, and most recently run. see [Timeline](#timeline).\n\n### vpc_config\n\n* `vpc_id` - ID of the VPC where this canary is to run.\n\n### timeline\n\n* `created` - Date and time the canary was created.\n* `last_modified` - Date and time the canary was most recently modified.\n* `last_started` - Date and time that the canary's most recent run started.\n* `last_stopped` - Date and time that the canary's most recent run ended.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Synthetics Canaries using the `name`. For example:\n\n```terraform\nimport {\n  to = aws_synthetics_canary.some\n  id = \"some-canary\"\n}\n```\n\nUsing `terraform import`, import Synthetics Canaries using the `name`. For example:\n\n```console\n% terraform import aws_synthetics_canary.some some-canary\n```\n",
      "language": "hcl",
      "path": "website/docs/r/synthetics_canary.html.markdown",
      "slug": "synthetics_canary",
      "subcategory": "CloudWatch Synthetics",
      "title": "synthetics_canary",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3199049"
    }
  }
}