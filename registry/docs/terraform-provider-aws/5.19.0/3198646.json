{
  "data": {
    "type": "provider-docs",
    "id": "3198646",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"MQ\"\nlayout: \"aws\"\npage_title: \"AWS: aws_mq_configuration\"\ndescription: |-\n  Provides an MQ configuration Resource\n---\n\n# Resource: aws_mq_configuration\n\nProvides an MQ Configuration Resource.\n\nFor more information on Amazon MQ, see [Amazon MQ documentation](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/welcome.html).\n\n## Example Usage\n\n### ActiveMQ\n\n```terraform\nresource \"aws_mq_configuration\" \"example\" {\n  description    = \"Example Configuration\"\n  name           = \"example\"\n  engine_type    = \"ActiveMQ\"\n  engine_version = \"5.15.0\"\n\n  data = <<DATA\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<broker xmlns=\"http://activemq.apache.org/schema/core\">\n  <plugins>\n    <forcePersistencyModeBrokerPlugin persistenceFlag=\"true\"/>\n    <statisticsBrokerPlugin/>\n    <timeStampingBrokerPlugin ttlCeiling=\"86400000\" zeroExpirationOverride=\"86400000\"/>\n  </plugins>\n</broker>\nDATA\n}\n```\n\n### RabbitMQ\n\n```terraform\nresource \"aws_mq_configuration\" \"example\" {\n  description    = \"Example Configuration\"\n  name           = \"example\"\n  engine_type    = \"RabbitMQ\"\n  engine_version = \"3.11.16\"\n\n  data = <<DATA\n# Default RabbitMQ delivery acknowledgement timeout is 30 minutes in milliseconds\nconsumer_timeout = 1800000\nDATA\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `data` - (Required) Broker configuration in XML format for `ActiveMQ` or [Cuttlefish](https://github.com/Kyorai/cuttlefish) format for `RabbitMQ`. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.\n* `engine_type` - (Required) Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.\n* `engine_version` - (Required) Version of the broker engine.\n* `name` - (Required) Name of the configuration.\n\nThe following arguments are optional:\n\n* `authentication_strategy` - (Optional) Authentication strategy associated with the configuration. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.\n* `description` - (Optional) Description of the configuration.\n* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the configuration.\n* `id` - Unique ID that Amazon MQ generates for the configuration.\n* `latest_revision` - Latest revision of the configuration.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import MQ Configurations using the configuration ID. For example:\n\n```terraform\nimport {\n  to = aws_mq_configuration.example\n  id = \"c-0187d1eb-88c8-475a-9b79-16ef5a10c94f\"\n}\n```\n\nUsing `terraform import`, import MQ Configurations using the configuration ID. For example:\n\n```console\n% terraform import aws_mq_configuration.example c-0187d1eb-88c8-475a-9b79-16ef5a10c94f\n```\n",
      "language": "hcl",
      "path": "website/docs/r/mq_configuration.html.markdown",
      "slug": "mq_configuration",
      "subcategory": "MQ",
      "title": "mq_configuration",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198646"
    }
  }
}