{
  "data": {
    "type": "provider-docs",
    "id": "3198782",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"RDS (Relational Database)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_rds_cluster_instance\"\ndescription: |-\n  Provides an RDS Cluster Resource Instance\n---\n\n# Resource: aws_rds_cluster_instance\n\nProvides an RDS Cluster Instance Resource. A Cluster Instance Resource defines\nattributes that are specific to a single instance in a [RDS Cluster][3],\nspecifically running Amazon Aurora.\n\nUnlike other RDS resources that support replication, with Amazon Aurora you do\nnot designate a primary and subsequent replicas. Instead, you simply add RDS\nInstances and Aurora manages the replication. You can use the [count][5]\nmeta-parameter to make multiple instances and join them all to the same RDS\nCluster, or you may specify different Cluster Instance resources with various\n`instance_class` sizes.\n\nFor more information on Amazon Aurora, see [Aurora on Amazon RDS][2] in the Amazon RDS User Guide.\n\n~> **NOTE:** Deletion Protection from the RDS service can only be enabled at the cluster level, not for individual cluster instances. You can still add the [`prevent_destroy` lifecycle behavior](https://www.terraform.io/language/meta-arguments/lifecycle#prevent_destroy) to your Terraform resource configuration if you desire protection from accidental deletion.\n\n~> **NOTE:** `aurora` is no longer a valid `engine` because of [Amazon Aurora's MySQL-Compatible Edition version 1 end of life](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.MySQL56.EOL.html).\n\n## Example Usage\n\n```terraform\nresource \"aws_rds_cluster_instance\" \"cluster_instances\" {\n  count              = 2\n  identifier         = \"aurora-cluster-demo-${count.index}\"\n  cluster_identifier = aws_rds_cluster.default.id\n  instance_class     = \"db.r4.large\"\n  engine             = aws_rds_cluster.default.engine\n  engine_version     = aws_rds_cluster.default.engine_version\n}\n\nresource \"aws_rds_cluster\" \"default\" {\n  cluster_identifier = \"aurora-cluster-demo\"\n  availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n  database_name      = \"mydb\"\n  master_username    = \"foo\"\n  master_password    = \"barbut8chars\"\n}\n```\n\n## Argument Reference\n\nFor more detailed documentation about each argument, refer to\nthe [AWS official documentation](https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html).\n\nThis argument supports the following arguments:\n\n* `apply_immediately` - (Optional) Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default is`false`.\n* `auto_minor_version_upgrade` - (Optional) Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.\n* `availability_zone` - (Optional, Computed, Forces new resource) EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) about the details.\n* `ca_cert_identifier` - (Optional) Identifier of the CA certificate for the DB instance.\n* `cluster_identifier` - (Required, Forces new resource) Identifier of the [`aws_rds_cluster`](/docs/providers/aws/r/rds_cluster.html) in which to launch this instance.\n* `copy_tags_to_snapshot` – (Optional, boolean) Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default `false`.\n* `custom_iam_instance_profile` - (Optional) Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.\n* `db_parameter_group_name` - (Optional) Name of the DB parameter group to associate with this instance.\n* `db_subnet_group_name` - (Required if `publicly_accessible = false`, Optional otherwise, Forces new resource) DB subnet group to associate with this DB instance. **NOTE:** This must match the `db_subnet_group_name` of the attached [`aws_rds_cluster`](/docs/providers/aws/r/rds_cluster.html).\n* `engine_version` - (Optional) Database engine version.\n* `engine` - (Required, Forces new resource) Name of the database engine to be used for the RDS instance. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`.\n* `identifier_prefix` - (Optional, Forces new resource) Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.\n* `identifier` - (Optional, Forces new resource) Identifier for the RDS instance, if omitted, Terraform will assign a random, unique identifier.\n* `instance_class` - (Required) Instance class to use. For details on CPU and memory, see [Scaling Aurora DB Instances][4]. Aurora uses `db.*` instance classes/types. Please see [AWS Documentation][7] for currently available instance classes and complete details.\n* `monitoring_interval` - (Optional) Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.\n* `monitoring_role_arn` - (Optional) ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the [AWS Documentation](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html) what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.\n* `performance_insights_enabled` - (Optional) Specifies whether Performance Insights is enabled or not.\n* `performance_insights_kms_key_id` - (Optional) ARN for the KMS key to encrypt Performance Insights data. When specifying `performance_insights_kms_key_id`, `performance_insights_enabled` needs to be set to true.\n* `performance_insights_retention_period` - (Optional) Amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`. When specifying `performance_insights_retention_period`, `performance_insights_enabled` needs to be set to true. Defaults to '7'.\n* `preferred_backup_window` - (Optional) Daily time range during which automated backups are created if automated backups are enabled. Eg: \"04:00-09:00\". **NOTE:** If `preferred_backup_window` is set at the cluster level, this argument **must** be omitted.\n* `preferred_maintenance_window` - (Optional) Window to perform maintenance in. Syntax: \"ddd:hh24:mi-ddd:hh24:mi\". Eg: \"Mon:00:00-Mon:03:00\".\n* `promotion_tier` - (Optional) Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.\n* `publicly_accessible` - (Optional) Bool to control if instance is publicly accessible. Default `false`. See the documentation on [Creating DB Instances][6] for more details on controlling this property.\n* `tags` - (Optional) Map of tags to assign to the instance. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Amazon Resource Name (ARN) of cluster instance\n* `cluster_identifier` - RDS Cluster Identifier\n* `identifier` - Instance identifier\n* `id` - Instance identifier\n* `writer` – Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.\n* `availability_zone` - Availability zone of the instance\n* `endpoint` - DNS address for this instance. May not be writable\n* `engine` - Database engine\n* `engine_version_actual` - Database engine version\n* `port` - Database port\n* `storage_encrypted` - Specifies whether the DB cluster is encrypted.\n* `kms_key_id` - ARN for the KMS encryption key if one is set to the cluster.\n* `network_type` - Network type of the DB instance.\n* `dbi_resource_id` - Region-unique, immutable identifier for the DB instance.\n* `performance_insights_enabled` - Specifies whether Performance Insights is enabled or not.\n* `performance_insights_kms_key_id` - ARN for the KMS encryption key used by Performance Insights.\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n[2]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html\n[3]: /docs/providers/aws/r/rds_cluster.html\n[4]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html\n[5]: https://www.terraform.io/docs/configuration/meta-arguments/count.html\n[6]: https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html\n[7]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `90m`)\n- `update` - (Default `90m`)\n- `delete` - (Default `90m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import RDS Cluster Instances using the `identifier`. For example:\n\n```terraform\nimport {\n  to = aws_rds_cluster_instance.prod_instance_1\n  id = \"aurora-cluster-instance-1\"\n}\n```\n\nUsing `terraform import`, import RDS Cluster Instances using the `identifier`. For example:\n\n```console\n% terraform import aws_rds_cluster_instance.prod_instance_1 aurora-cluster-instance-1\n```\n",
      "language": "hcl",
      "path": "website/docs/r/rds_cluster_instance.html.markdown",
      "slug": "rds_cluster_instance",
      "subcategory": "RDS (Relational Database)",
      "title": "rds_cluster_instance",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198782"
    }
  }
}