{
  "data": {
    "type": "provider-docs",
    "id": "3197554",
    "attributes": {
      "category": "data-sources",
      "content": "---\nsubcategory: \"Transit Gateway\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ec2_transit_gateway_route_table_routes\"\ndescription: |-\n   Provides informations for routes of a specific transit gateway\n---\n\n# Data Source: aws_ec2_transit_gateway_route_table_routes\n\nProvides informations for routes of a specific transit gateway, such as state, type, cidr\n\n## Example Usage\n\n```terraform\ndata \"aws_ec2_transit_gateway_route_table_routes\" \"test\" {\n  filter {\n    name   = \"type\"\n    values = [\"propagated\"]\n  }\n  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.example.id\n}\n```\n\n### Complexe use case with transit gateway peering\n\nThis example allow to create a mesh of transit gateway for diffÃ©rent regions routing all traffic to on-prem VPN\n\n```terraform\nresource \"aws_ec2_transit_gateway\" \"this\" {\n  default_route_table_association = \"disable\"\n  default_route_table_propagation = \"disable\"\n}\n\nresource \"aws_ec2_transit_gateway_vpc_attachment\" \"this\" {\n  subnet_ids                                      = [for s in aws_subnet.private : s.id]\n  transit_gateway_id                              = aws_ec2_transit_gateway.this[0].id\n  vpc_id                                          = aws_vpc.this.id\n  transit_gateway_default_route_table_association = false\n  transit_gateway_default_route_table_propagation = false\n  depends_on                                      = [aws_subnet.private, aws_subnet.public]\n}\n\nresource \"aws_ec2_transit_gateway_route_table\" \"this\" {\n  transit_gateway_id = local.my_transit_gateway_id\n}\n\nresource \"aws_ec2_transit_gateway_route_table_association\" \"vpc\" {\n  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.this.id\n  transit_gateway_route_table_id = local.my_transit_gateway_id_route_table\n}\n\nresource \"aws_ec2_transit_gateway_route_table_association\" \"vpn\" {\n  transit_gateway_attachment_id  = aws_vpn_connection.this[0].transit_gateway_attachment_id\n  transit_gateway_route_table_id = local.my_transit_gateway_id_route_table\n}\n\nresource \"aws_ec2_transit_gateway_route_table_propagation\" \"vpc\" {\n  transit_gateway_attachment_id  = aws_ec2_transit_gateway_vpc_attachment.this.id\n  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.this.id\n}\n\nresource \"aws_ec2_transit_gateway_route_table_propagation\" \"vpn\" {\n  transit_gateway_attachment_id  = aws_vpn_connection.this[0].transit_gateway_attachment_id\n  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.this.id\n}\n\nprovider \"aws\" {\n  alias  = \"eu-central-1\"\n  region = \"eu-central-1\"\n}\n\nresource \"aws_ec2_transit_gateway\" \"eu-central-1\" {\n  default_route_table_association = \"disable\"\n  default_route_table_propagation = \"disable\"\n  provider                        = aws.eu-central-1\n}\n\nresource \"aws_ec2_transit_gateway_peering_attachment\" \"eu-central-1\" {\n  peer_region             = \"eu-central-1\"\n  peer_transit_gateway_id = aws_ec2_transit_gateway.eu-central-1.id\n  transit_gateway_id      = aws_ec2_transit_gateway.this[0].id\n\n  tags = {\n    Name = \"TGW mesh from eu-central-1\"\n  }\n}\n\nresource \"aws_ec2_transit_gateway_route_table\" \"eu-central-1\" {\n  transit_gateway_id = aws_ec2_transit_gateway.eu-central-1.id\n  tags               = merge({ Name = \"wl-transit-gateway-routetable-eu-central-1\" }, local.global_tags)\n  provider           = aws.eu-central-1\n}\n\nresource \"aws_ec2_transit_gateway_peering_attachment_accepter\" \"eu-central-1\" {\n  transit_gateway_attachment_id = aws_ec2_transit_gateway_peering_attachment.eu-central-1.id\n  provider                      = aws.eu-central-1\n  tags = {\n    Name = \"Accepter TGW peering eu-central-1\"\n  }\n}\n\ndata \"aws_ec2_transit_gateway_vpc_attachments\" \"filtered-eu-central-1\" {\n  provider = aws.eu-central-1\n  filter {\n    name   = \"state\"\n    values = [\"pendingAcceptance\", \"available\"]\n  }\n}\n\ndata \"aws_ec2_transit_gateway_vpc_attachment\" \"unit-eu-central-1\" {\n  for_each = toset(data.aws_ec2_transit_gateway_vpc_attachments.filtered-eu-central-1.ids)\n  id       = each.value\n  provider = aws.eu-central-1\n}\n\nlocals {\n  trusted_aws_accounts_ids = {} # add to this list all account ids you trust\n\n  trusted_vpc_attachments_list_eu-central-1 = compact([for k, tva in data.aws_ec2_transit_gateway_vpc_attachment.unit-eu-central-1 : contains(local.trusted_aws_accounts_ids, lookup(tva, \"vpc_owner_id\", \"\")) ? tva.id : \"\"])\n  ## create a map with all vpc attachments trusted to be able to use for_each to avoid conflict on plan/apply ##\n  trusted_vpc_attachements_eu-central-1 = toset(sort(local.trusted_vpc_attachments_list_eu-central-1))\n\n}\n\nresource \"aws_ec2_transit_gateway_vpc_attachment_accepter\" \"trusted_accounts_eu-central-1_tgw\" {\n  for_each                                        = local.trusted_vpc_attachements_eu-central-1\n  transit_gateway_attachment_id                   = each.value\n  transit_gateway_default_route_table_propagation = false\n  transit_gateway_default_route_table_association = false\n  tags                                            = local.global_tags\n  provider                                        = aws.eu-central-1\n  lifecycle {\n    prevent_destroy = false\n    ignore_changes  = [subnet_ids, id, dns_support, ipv6_support, transit_gateway_id, vpc_id, vpc_owner_id]\n  }\n}\n\nresource \"aws_ec2_transit_gateway_route_table_association\" \"trusted_accounts_eu-central-1\" {\n  for_each                       = aws_ec2_transit_gateway_vpc_attachment_accepter.trusted_accounts_eu-central-1_tgw\n  transit_gateway_attachment_id  = each.value.transit_gateway_attachment_id\n  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.eu-central-1.id\n  provider                       = aws.eu-central-1\n}\n\nresource \"aws_ec2_transit_gateway_route_table_propagation\" \"trusted_accounts_eu-central-1\" {\n  for_each                       = aws_ec2_transit_gateway_vpc_attachment_accepter.trusted_accounts_eu-central-1_tgw\n  transit_gateway_attachment_id  = each.value.transit_gateway_attachment_id\n  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.eu-central-1.id\n  provider                       = aws.eu-central-1\n}\n\ndata \"aws_ec2_transit_gateway_route_table_routes\" \"test\" {\n  filter {\n    name   = \"type\"\n    values = [\"propagated\"]\n  }\n  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.eu-central-1.id\n  provider                       = aws.eu-central-1\n  depends_on                     = [aws_ec2_transit_gateway_route_table_propagation.trusted_accounts_eu-central-1]\n}\n\nresource \"aws_ec2_transit_gateway_route\" \"default-region-to-eu-central-1\" {\n  for_each                       = { for r in data.aws_ec2_transit_gateway_route_table_routes.test.routes : r.destination_cidr_block => r }\n  destination_cidr_block         = each.key\n  transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table.this.id\n  transit_gateway_attachment_id  = aws_ec2_transit_gateway_peering_attachment.eu-central-1.id\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `filter` - (Required) Custom filter block as described below.\n* `transit_gateway_route_table_id` - (Required) Identifier of EC2 Transit Gateway Route Table.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) Name of the field to filter by, as defined by\n  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayRoutes.html).\n* `values` - (Required) Set of values that are accepted for the given field.\n\n## Attributes Reference\n\nIn addition to all arguments above, the following attributes are exported:\n\n* `id` - The transit gateway route table id suffixed by `-routes`\n* `routes` - List of Transit Gateway Routes.\n\n#### Routes list Attributes Reference\n\n* `destination_cidr_block` - The CIDR used for route destination matches.\n* `prefix_list_id` - The ID of the prefix list used for destination matches.\n* `state` - The current state of the route, can be `active`, `deleted`, `pending`, `blackhole`, `deleting`.\n* `transit_gateway_route_table_announcement_id` - The id of the transit gateway route table announcement, most of the time it is an empty string.\n* `type` - The type of the route, can be `propagated` or `static`.\n",
      "language": "hcl",
      "path": "website/docs/d/ec2_transit_gateway_route_table_routes.html.markdown",
      "slug": "ec2_transit_gateway_route_table_routes",
      "subcategory": "Transit Gateway",
      "title": "ec2_transit_gateway_route_table_routes",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3197554"
    }
  }
}