{
  "data": {
    "type": "provider-docs",
    "id": "3198160",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Config\"\nlayout: \"aws\"\npage_title: \"AWS: aws_config_organization_custom_policy_rule\"\ndescription: |-\n  Terraform resource for managing an AWS Config Organization Custom Policy.\n---\n\n# Resource: aws_config_organization_custom_policy_rule\n\nManages a Config Organization Custom Policy Rule. More information about these rules can be found in the [Enabling AWS Config Rules Across all Accounts in Your Organization](https://docs.aws.amazon.com/config/latest/developerguide/config-rule-multi-account-deployment.html) and [AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) documentation. For working with Organization Managed Rules (those invoking an AWS managed rule), see the [`aws_config_organization_managed__rule` resource](/docs/providers/aws/r/config_organization_managed_rule.html).\n\n~> **NOTE:** This resource must be created in the Organization master account and rules will include the master account unless its ID is added to the `excluded_accounts` argument.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\nresource \"aws_config_organization_custom_policy_rule\" \"example\" {\n  name = \"example_rule_name\"\n\n  policy_runtime = \"guard-2.x.x\"\n  policy_text    = <<-EOF\n  let status = ['ACTIVE']\n\n  rule tableisactive when\n      resourceType == \"AWS::DynamoDB::Table\" {\n      configuration.tableStatus == %status\n  }\n\n  rule checkcompliance when\n      resourceType == \"AWS::DynamoDB::Table\"\n      tableisactive {\n          let pitr = supplementaryConfiguration.ContinuousBackupsDescription.pointInTimeRecoveryDescription.pointInTimeRecoveryStatus\n          %pitr == \"ENABLED\"\n      }\n  EOF\n\n  resource_types_scope = [\"AWS::DynamoDB::Table\"]\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `name` - (Required) name of the rule\n* `policy_text` - (Required) policy definition containing the logic for your organization AWS Config Custom Policy rule\n* `policy_runtime` - (Required)  runtime system for your organization AWS Config Custom Policy rules\n* `trigger_types` - (Required) List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`\n\nThe following arguments are optional:\n\n* `description` - (Optional) Description of the rule\n* `debug_log_delivery_accounts` - (Optional) List of AWS account identifiers to exclude from the rule\n* `excluded_accounts` - (Optional) List of AWS account identifiers to exclude from the rule\n* `input_parameters` - (Optional) A string in JSON format that is passed to the AWS Config Rule Lambda Function\n* `maximum_execution_frequency` - (Optional) Maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.\n* `resource_id_scope` - (Optional) Identifier of the AWS resource to evaluate\n* `resource_types_scope` - (Optional) List of types of AWS resources to evaluate\n* `tag_key_scope` - (Optional, Required if `tag_value_scope` is configured) Tag key of AWS resources to evaluate\n* `tag_value_scope` - (Optional) Tag value of AWS resources to evaluate\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Amazon Resource Name (ARN) of the rule\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `20m`)\n* `update` - (Default `20m`)\n* `delete` - (Default `20m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import a Config Organization Custom Policy Rule using the `name` argument. For example:\n\n```terraform\nimport {\n  to = aws_config_organization_custom_policy_rule.example\n  id = \"example_rule_name\"\n}\n```\n\nUsing `terraform import`, import a Config Organization Custom Policy Rule using the `name` argument. For example:\n\n```console\n% terraform import aws_config_organization_custom_policy_rule.example example_rule_name\n```\n",
      "language": "hcl",
      "path": "website/docs/r/config_organization_custom_policy_rule.html.markdown",
      "slug": "config_organization_custom_policy_rule",
      "subcategory": "Config",
      "title": "config_organization_custom_policy_rule",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198160"
    }
  }
}