{
  "data": {
    "type": "provider-docs",
    "id": "3198002",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"AppSync\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appsync_function\"\ndescription: |-\n  Provides an AppSync Function.\n---\n\n# Resource: aws_appsync_function\n\nProvides an AppSync Function.\n\n## Example Usage\n\n```terraform\nresource \"aws_appsync_graphql_api\" \"example\" {\n  authentication_type = \"API_KEY\"\n  name                = \"example\"\n  schema              = <<EOF\ntype Mutation {\n  putPost(id: ID!, title: String!): Post\n}\n\ntype Post {\n  id: ID!\n  title: String!\n}\n\ntype Query {\n  singlePost(id: ID!): Post\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n}\nEOF\n}\n\nresource \"aws_appsync_datasource\" \"example\" {\n  api_id = aws_appsync_graphql_api.example.id\n  name   = \"example\"\n  type   = \"HTTP\"\n\n  http_config {\n    endpoint = \"http://example.com\"\n  }\n}\n\nresource \"aws_appsync_function\" \"example\" {\n  api_id                   = aws_appsync_graphql_api.example.id\n  data_source              = aws_appsync_datasource.example.name\n  name                     = \"example\"\n  request_mapping_template = <<EOF\n{\n    \"version\": \"2018-05-29\",\n    \"method\": \"GET\",\n    \"resourcePath\": \"/\",\n    \"params\":{\n        \"headers\": $utils.http.copyheaders($ctx.request.headers)\n    }\n}\nEOF\n\n  response_mapping_template = <<EOF\n#if($ctx.result.statusCode == 200)\n    $ctx.result.body\n#else\n    $utils.appendError($ctx.result.body, $ctx.result.statusCode)\n#end\nEOF\n}\n```\n\n## Example Usage With Code\n\n```terraform\nresource \"aws_appsync_function\" \"example\" {\n  api_id      = aws_appsync_graphql_api.example.id\n  data_source = aws_appsync_datasource.example.name\n  name        = \"example\"\n  code        = file(\"some-code-dir\")\n\n  runtime {\n    name            = \"APPSYNC_JS\"\n    runtime_version = \"1.0.0\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `api_id` - (Required) ID of the associated AppSync API.\n* `code` - (Optional) The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.\n* `data_source` - (Required) Function data source name.\n* `max_batch_size` - (Optional) Maximum batching size for a resolver. Valid values are between `0` and `2000`.\n* `name` - (Required) Function name. The function name does not have to be unique.\n* `request_mapping_template` - (Optional) Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.\n* `response_mapping_template` - (Optional) Function response mapping template.\n* `description` - (Optional) Function description.\n* `runtime` - (Optional) Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See [Runtime](#runtime).\n* `sync_config` - (Optional) Describes a Sync configuration for a resolver. See [Sync Config](#sync-config).\n* `function_version` - (Optional) Version of the request mapping template. Currently the supported value is `2018-05-29`. Does not apply when specifying `code`.\n\n### Runtime\n\nThis argument supports the following arguments:\n\n* `name` - (Optional) The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.\n* `runtime_version` - (Optional) The version of the runtime to use. Currently, the only allowed version is `1.0.0`.\n\n### Sync Config\n\nThis argument supports the following arguments:\n\n* `conflict_detection` - (Optional) Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.\n* `conflict_handler` - (Optional) Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.\n* `lambda_conflict_handler_config` - (Optional) Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See [Lambda Conflict Handler Config](#lambda-conflict-handler-config).\n\n#### Lambda Conflict Handler Config\n\nThis argument supports the following arguments:\n\n* `lambda_conflict_handler_arn` - (Optional) ARN for the Lambda function to use as the Conflict Handler.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - API Function ID (Formatted as ApiId-FunctionId)\n* `arn` - ARN of the Function object.\n* `function_id` - Unique ID representing the Function object.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_appsync_function` using the AppSync API ID and Function ID separated by `-`. For example:\n\n```terraform\nimport {\n  to = aws_appsync_function.example\n  id = \"xxxxx-yyyyy\"\n}\n```\n\nUsing `terraform import`, import `aws_appsync_function` using the AppSync API ID and Function ID separated by `-`. For example:\n\n```console\n% terraform import aws_appsync_function.example xxxxx-yyyyy\n```\n",
      "language": "hcl",
      "path": "website/docs/r/appsync_function.html.markdown",
      "slug": "appsync_function",
      "subcategory": "AppSync",
      "title": "appsync_function",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198002"
    }
  }
}