{
  "data": {
    "type": "provider-docs",
    "id": "3198340",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"ECS (Elastic Container)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ecs_capacity_provider\"\ndescription: |-\n  Provides an ECS cluster capacity provider.\n---\n\n# Resource: aws_ecs_capacity_provider\n\nProvides an ECS cluster capacity provider. More information can be found on the [ECS Developer Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-capacity-providers.html).\n\n~> **NOTE:** Associating an ECS Capacity Provider to an Auto Scaling Group will automatically add the `AmazonECSManaged` tag to the Auto Scaling Group. This tag should be included in the `aws_autoscaling_group` resource configuration to prevent Terraform from removing it in subsequent executions as well as ensuring the `AmazonECSManaged` tag is propagated to all EC2 Instances in the Auto Scaling Group if `min_size` is above 0 on creation. Any EC2 Instances in the Auto Scaling Group without this tag must be manually be updated, otherwise they may cause unexpected scaling behavior and metrics.\n\n## Example Usage\n\n```terraform\nresource \"aws_autoscaling_group\" \"test\" {\n  # ... other configuration, including potentially other tags ...\n\n  tag {\n    key                 = \"AmazonECSManaged\"\n    value               = true\n    propagate_at_launch = true\n  }\n}\n\nresource \"aws_ecs_capacity_provider\" \"test\" {\n  name = \"test\"\n\n  auto_scaling_group_provider {\n    auto_scaling_group_arn         = aws_autoscaling_group.test.arn\n    managed_termination_protection = \"ENABLED\"\n\n    managed_scaling {\n      maximum_scaling_step_size = 1000\n      minimum_scaling_step_size = 1\n      status                    = \"ENABLED\"\n      target_capacity           = 10\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `auto_scaling_group_provider` - (Required) Configuration block for the provider for the ECS auto scaling group. Detailed below.\n* `name` - (Required) Name of the capacity provider.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### `auto_scaling_group_provider`\n\n* `auto_scaling_group_arn` - (Required) - ARN of the associated auto scaling group.\n* `managed_scaling` - (Optional) - Configuration block defining the parameters of the auto scaling. Detailed below.\n* `managed_termination_protection` - (Optional) - Enables or disables container-aware termination of instances in the auto scaling group when scale-in happens. Valid values are `ENABLED` and `DISABLED`.\n\n### `managed_scaling`\n\n* `instance_warmup_period` - (Optional) Period of time, in seconds, after a newly launched Amazon EC2 instance can contribute to CloudWatch metrics for Auto Scaling group. If this parameter is omitted, the default value of 300 seconds is used.\n* `maximum_scaling_step_size` - (Optional) Maximum step adjustment size. A number between 1 and 10,000.\n* `minimum_scaling_step_size` - (Optional) Minimum step adjustment size. A number between 1 and 10,000.\n* `status` - (Optional) Whether auto scaling is managed by ECS. Valid values are `ENABLED` and `DISABLED`.\n* `target_capacity` - (Optional) Target utilization for the capacity provider. A number between 1 and 100.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN that identifies the capacity provider.\n* `id` - ARN that identifies the capacity provider.\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ECS Capacity Providers using the `name`. For example:\n\n```terraform\nimport {\n  to = aws_ecs_capacity_provider.example\n  id = \"example\"\n}\n```\n\nUsing `terraform import`, import ECS Capacity Providers using the `name`. For example:\n\n```console\n% terraform import aws_ecs_capacity_provider.example example\n```\n",
      "language": "hcl",
      "path": "website/docs/r/ecs_capacity_provider.html.markdown",
      "slug": "ecs_capacity_provider",
      "subcategory": "ECS (Elastic Container)",
      "title": "ecs_capacity_provider",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198340"
    }
  }
}