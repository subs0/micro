{
  "data": {
    "type": "provider-docs",
    "id": "3198245",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"DMS (Database Migration)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_dms_replication_instance\"\ndescription: |-\n  Provides a DMS (Data Migration Service) replication instance resource.\n---\n\n# Resource: aws_dms_replication_instance\n\nProvides a DMS (Data Migration Service) replication instance resource. DMS replication instances can be created, updated, deleted, and imported.\n\n## Example Usage\n\nCreate required roles and then create a DMS instance, setting the depends_on to the required role policy attachments.\n\n```terraform\n# Database Migration Service requires the below IAM Roles to be created before\n# replication instances can be created. See the DMS Documentation for\n# additional information: https://docs.aws.amazon.com/dms/latest/userguide/security-iam.html#CHAP_Security.APIRole\n#  * dms-vpc-role\n#  * dms-cloudwatch-logs-role\n#  * dms-access-for-endpoint\n\ndata \"aws_iam_policy_document\" \"dms_assume_role\" {\n  statement {\n    actions = [\"sts:AssumeRole\"]\n\n    principals {\n      identifiers = [\"dms.amazonaws.com\"]\n      type        = \"Service\"\n    }\n  }\n}\n\nresource \"aws_iam_role\" \"dms-access-for-endpoint\" {\n  assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json\n  name               = \"dms-access-for-endpoint\"\n}\n\nresource \"aws_iam_role_policy_attachment\" \"dms-access-for-endpoint-AmazonDMSRedshiftS3Role\" {\n  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role\"\n  role       = aws_iam_role.dms-access-for-endpoint.name\n}\n\nresource \"aws_iam_role\" \"dms-cloudwatch-logs-role\" {\n  assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json\n  name               = \"dms-cloudwatch-logs-role\"\n}\n\nresource \"aws_iam_role_policy_attachment\" \"dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole\" {\n  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole\"\n  role       = aws_iam_role.dms-cloudwatch-logs-role.name\n}\n\nresource \"aws_iam_role\" \"dms-vpc-role\" {\n  assume_role_policy = data.aws_iam_policy_document.dms_assume_role.json\n  name               = \"dms-vpc-role\"\n}\n\nresource \"aws_iam_role_policy_attachment\" \"dms-vpc-role-AmazonDMSVPCManagementRole\" {\n  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole\"\n  role       = aws_iam_role.dms-vpc-role.name\n}\n\n# Create a new replication instance\nresource \"aws_dms_replication_instance\" \"test\" {\n  allocated_storage            = 20\n  apply_immediately            = true\n  auto_minor_version_upgrade   = true\n  availability_zone            = \"us-west-2c\"\n  engine_version               = \"3.1.4\"\n  kms_key_arn                  = \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\"\n  multi_az                     = false\n  preferred_maintenance_window = \"sun:10:30-sun:14:30\"\n  publicly_accessible          = true\n  replication_instance_class   = \"dms.t2.micro\"\n  replication_instance_id      = \"test-dms-replication-instance-tf\"\n  replication_subnet_group_id  = aws_dms_replication_subnet_group.test-dms-replication-subnet-group-tf.id\n\n  tags = {\n    Name = \"test\"\n  }\n\n  vpc_security_group_ids = [\n    \"sg-12345678\",\n  ]\n\n  depends_on = [\n    aws_iam_role_policy_attachment.dms-access-for-endpoint-AmazonDMSRedshiftS3Role,\n    aws_iam_role_policy_attachment.dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole,\n    aws_iam_role_policy_attachment.dms-vpc-role-AmazonDMSVPCManagementRole\n  ]\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `allocated_storage` - (Optional, Default: 50, Min: 5, Max: 6144) The amount of storage (in gigabytes) to be initially allocated for the replication instance.\n* `allow_major_version_upgrade` - (Optional, Default: false) Indicates that major version upgrades are allowed.\n* `apply_immediately` - (Optional, Default: false) Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.\n* `auto_minor_version_upgrade` - (Optional, Default: false) Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.\n* `availability_zone` - (Optional) The EC2 Availability Zone that the replication instance will be created in.\n* `engine_version` - (Optional) The engine version number of the replication instance.\n* `kms_key_arn` - (Optional) The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.\n* `multi_az` - (Optional) Specifies if the replication instance is a multi-az deployment. You cannot set the `availability_zone` parameter if the `multi_az` parameter is set to `true`.\n* `network_type` - (Optional) The type of IP address protocol used by a replication instance. Valid values: `IPV4`, `DUAL`.\n* `preferred_maintenance_window` - (Optional) The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).\n\n    - Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.\n    - Format: `ddd:hh24:mi-ddd:hh24:mi`\n    - Valid Days: `mon, tue, wed, thu, fri, sat, sun`\n    - Constraints: Minimum 30-minute window.\n\n* `publicly_accessible` - (Optional, Default: false) Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.\n* `replication_instance_class` - (Required) The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for available instance sizes and advice on which one to choose.\n* `replication_instance_id` - (Required) The replication instance identifier. This parameter is stored as a lowercase string.\n\n    - Must contain from 1 to 63 alphanumeric characters or hyphens.\n    - First character must be a letter.\n    - Cannot end with a hyphen\n    - Cannot contain two consecutive hyphens.\n\n* `replication_subnet_group_id` - (Optional) A subnet group to associate with the replication instance.\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `vpc_security_group_ids` - (Optional) A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `replication_instance_arn` - The Amazon Resource Name (ARN) of the replication instance.\n* `replication_instance_private_ips` -  A list of the private IP addresses of the replication instance.\n* `replication_instance_public_ips` - A list of the public IP addresses of the replication instance.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `40m`)\n- `update` - (Default `30m`)\n- `delete` - (Default `30m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import replication instances using the `replication_instance_id`. For example:\n\n```terraform\nimport {\n  to = aws_dms_replication_instance.test\n  id = \"test-dms-replication-instance-tf\"\n}\n```\n\nUsing `terraform import`, import replication instances using the `replication_instance_id`. For example:\n\n```console\n% terraform import aws_dms_replication_instance.test test-dms-replication-instance-tf\n```\n",
      "language": "hcl",
      "path": "website/docs/r/dms_replication_instance.html.markdown",
      "slug": "dms_replication_instance",
      "subcategory": "DMS (Database Migration)",
      "title": "dms_replication_instance",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198245"
    }
  }
}