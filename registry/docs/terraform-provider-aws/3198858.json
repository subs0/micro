{
  "data": {
    "type": "provider-docs",
    "id": "3198858",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"S3 Control\"\nlayout: \"aws\"\npage_title: \"AWS: aws_s3_access_point\"\ndescription: |-\n  Manages an S3 Access Point.\n---\n\n# Resource: aws_s3_access_point\n\nProvides a resource to manage an S3 Access Point.\n\n~> **NOTE on Access Points and Access Point Policies:** Terraform provides both a standalone [Access Point Policy](s3control_access_point_policy.html) resource and an Access Point resource with a resource policy defined in-line. You cannot use an Access Point with in-line resource policy in conjunction with an Access Point Policy resource. Doing so will cause a conflict of policies and will overwrite the access point's resource policy.\n\n-> Advanced usage: To use a custom API endpoint for this Terraform resource, use the [`s3control` endpoint provider configuration](/docs/providers/aws/index.html#s3control), not the `s3` endpoint provider configuration.\n\n## Example Usage\n\n### AWS Partition Bucket\n\n```terraform\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"example\"\n}\n\nresource \"aws_s3_access_point\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  name   = \"example\"\n}\n```\n\n### S3 on Outposts Bucket\n\n```terraform\nresource \"aws_s3control_bucket\" \"example\" {\n  bucket = \"example\"\n}\n\nresource \"aws_s3_access_point\" \"example\" {\n  bucket = aws_s3control_bucket.example.arn\n  name   = \"example\"\n\n  # VPC must be specified for S3 on Outposts\n  vpc_configuration {\n    vpc_id = aws_vpc.example.id\n  }\n}\n\nresource \"aws_vpc\" \"example\" {\n  cidr_block = \"10.0.0.0/16\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `bucket` - (Required) Name of an AWS Partition S3 Bucket or the ARN of S3 on Outposts Bucket that you want to associate this access point with.\n* `name` - (Required) Name you want to assign to this access point.\n\nThe following arguments are optional:\n\n* `account_id` - (Optional) AWS account ID for the owner of the bucket for which you want to create an access point. Defaults to automatically determined account ID of the Terraform AWS provider.\n* `bucket_account_id` - (Optional) AWS account ID associated with the S3 bucket associated with this access point.\n* `policy` - (Optional) Valid JSON document that specifies the policy that you want to apply to this access point. Removing `policy` from your configuration or setting `policy` to null or an empty string (i.e., `policy = \"\"`) _will not_ delete the policy since it could have been set by `aws_s3control_access_point_policy`. To remove the `policy`, set it to `\"{}\"` (an empty JSON document).\n* `public_access_block_configuration` - (Optional) Configuration block to manage the `PublicAccessBlock` configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. Detailed below.\n* `vpc_configuration` - (Optional) Configuration block to restrict access to this access point to requests from the specified Virtual Private Cloud (VPC). Required for S3 on Outposts. Detailed below.\n\n### public_access_block_configuration Configuration Block\n\nThe following arguments are optional:\n\n* `block_public_acls` - (Optional) Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to `true`. Enabling this setting does not affect existing policies or ACLs. When set to `true` causes the following behavior:\n    * PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.\n    * PUT Object calls fail if the request includes a public ACL.\n    * PUT Bucket calls fail if the request includes a public ACL.\n* `block_public_policy` - (Optional) Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to `true`. Enabling this setting does not affect existing bucket policies. When set to `true` causes Amazon S3 to:\n    * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.\n* `ignore_public_acls` - (Optional) Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to `true`. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to `true` causes Amazon S3 to:\n    * Ignore all public ACLs on buckets in this account and any objects that they contain.\n* `restrict_public_buckets` - (Optional) Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to `true`. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to `true`:\n    * Only the bucket owner and AWS Services can access buckets with public policies.\n\n### vpc_configuration Configuration Block\n\nThe following arguments are required:\n\n* `vpc_id` - (Required)  This access point will only allow connections from the specified VPC ID.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `alias` - Alias of the S3 Access Point.\n* `arn` - ARN of the S3 Access Point.\n* `domain_name` - DNS domain name of the S3 Access Point in the format _`name`_-_`account_id`_.s3-accesspoint._region_.amazonaws.com.\nNote: S3 access points only support secure access by HTTPS. HTTP isn't supported.\n* `endpoints` - VPC endpoints for the S3 Access Point.\n* `has_public_access_policy` - Indicates whether this access point currently has a policy that allows public access.\n* `id` - For Access Point of an AWS Partition S3 Bucket, the AWS account ID and access point name separated by a colon (`:`). For S3 on Outposts Bucket, the ARN of the Access Point.\n* `network_origin` - Indicates whether this access point allows access from the public Internet. Values are `VPC` (the access point doesn't allow access from the public Internet) and `Internet` (the access point allows access from the public Internet, subject to the access point and bucket access policies).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import this resource using the `account_id` and `name` separated by a colon (`:`) for Access Points associated with an AWS Partition S3 Bucket or the ARN for Access Points associated with an S3 on Outposts Bucket. For example:\n\nImport using the `account_id` and `name` separated by a colon (`:`) for Access Points associated with an AWS Partition S3 Bucket:\n\n```terraform\nimport {\n  to = aws_s3_access_point.example\n  id = \"123456789012:example\"\n}\n```\n\nImport using the ARN for Access Points associated with an S3 on Outposts Bucket:\n\n```terraform\nimport {\n  to = aws_s3_access_point.example\n  id = \"arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-1234567890123456/accesspoint/example\"\n}\n```\n\n**Using `terraform import` to import.** For example:\n\nImport using the `account_id` and `name` separated by a colon (`:`) for Access Points associated with an AWS Partition S3 Bucket:\n\n```console\n% terraform import aws_s3_access_point.example 123456789012:example\n```\n\nImport using the ARN for Access Points associated with an S3 on Outposts Bucket:\n\n```console\n% terraform import aws_s3_access_point.example arn:aws:s3-outposts:us-east-1:123456789012:outpost/op-1234567890123456/accesspoint/example\n```\n",
      "language": "hcl",
      "path": "website/docs/r/s3_access_point.html.markdown",
      "slug": "s3_access_point",
      "subcategory": "S3 Control",
      "title": "s3_access_point",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198858"
    }
  }
}