{
  "data": {
    "type": "provider-docs",
    "id": "3198064",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"CloudFormation\"\nlayout: \"aws\"\npage_title: \"AWS: aws_cloudformation_stack\"\ndescription: |-\n  Provides a CloudFormation Stack resource.\n---\n\n# Resource: aws_cloudformation_stack\n\nProvides a CloudFormation Stack resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_cloudformation_stack\" \"network\" {\n  name = \"networking-stack\"\n\n  parameters = {\n    VPCCidr = \"10.0.0.0/16\"\n  }\n\n  template_body = jsonencode({\n    Parameters = {\n      VPCCidr = {\n        Type        = \"String\"\n        Default     = \"10.0.0.0/16\"\n        Description = \"Enter the CIDR block for the VPC. Default is 10.0.0.0/16.\"\n      }\n    }\n\n    Resources = {\n      myVpc = {\n        Type = \"AWS::EC2::VPC\"\n        Properties = {\n          CidrBlock = {\n            \"Ref\" = \"VPCCidr\"\n          }\n          Tags = [\n            {\n              Key   = \"Name\"\n              Value = \"Primary_CF_VPC\"\n            }\n          ]\n        }\n      }\n    }\n  })\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Required) Stack name.\n* `template_body` - (Optional) Structure containing the template body (max size: 51,200 bytes).\n* `template_url` - (Optional) Location of a file containing the template body (max size: 460,800 bytes).\n* `capabilities` - (Optional) A list of capabilities.\n  Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, or `CAPABILITY_AUTO_EXPAND`\n* `disable_rollback` - (Optional) Set to true to disable rollback of the stack if stack creation failed.\n  Conflicts with `on_failure`.\n* `notification_arns` - (Optional) A list of SNS topic ARNs to publish stack related events.\n* `on_failure` - (Optional) Action to be taken if stack creation fails. This must be\n  one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disable_rollback`.\n* `parameters` - (Optional) A map of Parameter structures that specify input parameters for the stack.\n* `policy_body` - (Optional) Structure containing the stack policy body.\n  Conflicts w/ `policy_url`.\n* `policy_url` - (Optional) Location of a file containing the stack policy.\n  Conflicts w/ `policy_body`.\n* `tags` - (Optional) Map of resource tags to associate with this stack. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `iam_role_arn` - (Optional) The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.\n* `timeout_in_minutes` - (Optional) The amount of time that can pass before the stack status becomes `CREATE_FAILED`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - A unique identifier of the stack.\n* `outputs` - A map of outputs from the stack.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `30m`)\n- `update` - (Default `30m`)\n- `delete` - (Default `30m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Cloudformation Stacks using the `name`. For example:\n\n```terraform\nimport {\n  to = aws_cloudformation_stack.stack\n  id = \"networking-stack\"\n}\n```\n\nUsing `terraform import`, import Cloudformation Stacks using the `name`. For example:\n\n```console\n% terraform import aws_cloudformation_stack.stack networking-stack\n```\n",
      "language": "hcl",
      "path": "website/docs/r/cloudformation_stack.html.markdown",
      "slug": "cloudformation_stack",
      "subcategory": "CloudFormation",
      "title": "cloudformation_stack",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198064"
    }
  }
}