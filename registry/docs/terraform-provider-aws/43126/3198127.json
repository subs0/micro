{
  "data": {
    "type": "provider-docs",
    "id": "3198127",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"CodeDeploy\"\nlayout: \"aws\"\npage_title: \"AWS: aws_codedeploy_deployment_config\"\ndescription: |-\n  Provides a CodeDeploy deployment config.\n---\n\n# Resource: aws_codedeploy_deployment_config\n\nProvides a CodeDeploy deployment config for an application\n\n## Example Usage\n\n### Server Usage\n\n```terraform\nresource \"aws_codedeploy_deployment_config\" \"foo\" {\n  deployment_config_name = \"test-deployment-config\"\n\n  minimum_healthy_hosts {\n    type  = \"HOST_COUNT\"\n    value = 2\n  }\n}\n\nresource \"aws_codedeploy_deployment_group\" \"foo\" {\n  app_name               = aws_codedeploy_app.foo_app.name\n  deployment_group_name  = \"bar\"\n  service_role_arn       = aws_iam_role.foo_role.arn\n  deployment_config_name = aws_codedeploy_deployment_config.foo.id\n\n  ec2_tag_filter {\n    key   = \"filterkey\"\n    type  = \"KEY_AND_VALUE\"\n    value = \"filtervalue\"\n  }\n\n  trigger_configuration {\n    trigger_events     = [\"DeploymentFailure\"]\n    trigger_name       = \"foo-trigger\"\n    trigger_target_arn = \"foo-topic-arn\"\n  }\n\n  auto_rollback_configuration {\n    enabled = true\n    events  = [\"DEPLOYMENT_FAILURE\"]\n  }\n\n  alarm_configuration {\n    alarms  = [\"my-alarm-name\"]\n    enabled = true\n  }\n}\n```\n\n### Lambda Usage\n\n```terraform\nresource \"aws_codedeploy_deployment_config\" \"foo\" {\n  deployment_config_name = \"test-deployment-config\"\n  compute_platform       = \"Lambda\"\n\n  traffic_routing_config {\n    type = \"TimeBasedLinear\"\n\n    time_based_linear {\n      interval   = 10\n      percentage = 10\n    }\n  }\n}\n\nresource \"aws_codedeploy_deployment_group\" \"foo\" {\n  app_name               = aws_codedeploy_app.foo_app.name\n  deployment_group_name  = \"bar\"\n  service_role_arn       = aws_iam_role.foo_role.arn\n  deployment_config_name = aws_codedeploy_deployment_config.foo.id\n\n  auto_rollback_configuration {\n    enabled = true\n    events  = [\"DEPLOYMENT_STOP_ON_ALARM\"]\n  }\n\n  alarm_configuration {\n    alarms  = [\"my-alarm-name\"]\n    enabled = true\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `deployment_config_name` - (Required) The name of the deployment config.\n* `compute_platform` - (Optional) The compute platform can be `Server`, `Lambda`, or `ECS`. Default is `Server`.\n* `minimum_healthy_hosts` - (Optional) A minimum_healthy_hosts block. Required for `Server` compute platform. Minimum Healthy Hosts are documented below.\n* `traffic_routing_config` - (Optional) A traffic_routing_config block. Traffic Routing Config is documented below.\n\nThe `minimum_healthy_hosts` block supports the following:\n\n* `type` - (Required) The type can either be `FLEET_PERCENT` or `HOST_COUNT`.\n* `value` - (Required) The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as\na percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the\ndeployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.\nWhen the type is `HOST_COUNT`, the value represents the minimum number of healthy instances as an absolute value.\n\nThe `traffic_routing_config` block supports the following:\n\n* `type` - (Optional) Type of traffic routing config. One of `TimeBasedCanary`, `TimeBasedLinear`, `AllAtOnce`.\n* `time_based_canary` - (Optional) The time based canary configuration information. If `type` is `TimeBasedLinear`, use `time_based_linear` instead.\n* `time_based_linear` - (Optional) The time based linear configuration information. If `type` is `TimeBasedCanary`, use `time_based_canary` instead.\n\nThe `time_based_canary` block supports the following:\n\n* `interval` - (Optional) The number of minutes between the first and second traffic shifts of a `TimeBasedCanary` deployment.\n* `percentage` - (Optional) The percentage of traffic to shift in the first increment of a `TimeBasedCanary` deployment.\n\nThe `time_based_linear` block supports the following:\n\n* `interval` - (Optional) The number of minutes between each incremental traffic shift of a `TimeBasedLinear` deployment.\n* `percentage` - (Optional) The percentage of traffic that is shifted at the start of each increment of a `TimeBasedLinear` deployment.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The deployment group's config name.\n* `deployment_config_id` - The AWS Assigned deployment config id\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodeDeploy Deployment Configurations using the `deployment_config_name`. For example:\n\n```terraform\nimport {\n  to = aws_codedeploy_deployment_config.example\n  id = \"my-deployment-config\"\n}\n```\n\nUsing `terraform import`, import CodeDeploy Deployment Configurations using the `deployment_config_name`. For example:\n\n```console\n% terraform import aws_codedeploy_deployment_config.example my-deployment-config\n```\n",
      "language": "hcl",
      "path": "website/docs/r/codedeploy_deployment_config.html.markdown",
      "slug": "codedeploy_deployment_config",
      "subcategory": "CodeDeploy",
      "title": "codedeploy_deployment_config",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198127"
    }
  }
}