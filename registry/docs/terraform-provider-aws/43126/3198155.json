{
  "data": {
    "type": "provider-docs",
    "id": "3198155",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Config\"\nlayout: \"aws\"\npage_title: \"AWS: aws_config_configuration_recorder\"\ndescription: |-\n  Provides an AWS Config Configuration Recorder.\n---\n\n# Resource: aws_config_configuration_recorder\n\nProvides an AWS Config Configuration Recorder. Please note that this resource **does not start** the created recorder automatically.\n\n~> **Note:** _Starting_ the Configuration Recorder requires a [delivery channel](/docs/providers/aws/r/config_delivery_channel.html) (while delivery channel creation requires Configuration Recorder). This is why [`aws_config_configuration_recorder_status`](/docs/providers/aws/r/config_configuration_recorder_status.html) is a separate resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_config_configuration_recorder\" \"foo\" {\n  name     = \"example\"\n  role_arn = aws_iam_role.r.arn\n}\n\ndata \"aws_iam_policy_document\" \"assume_role\" {\n  statement {\n    effect = \"Allow\"\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"config.amazonaws.com\"]\n    }\n\n    actions = [\"sts:AssumeRole\"]\n  }\n}\n\nresource \"aws_iam_role\" \"r\" {\n  name               = \"awsconfig-example\"\n  assume_role_policy = data.aws_iam_policy_document.assume_role.json\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Optional) The name of the recorder. Defaults to `default`. Changing it recreates the resource.\n* `role_arn` - (Required) Amazon Resource Name (ARN) of the IAM role. Used to make read or write requests to the delivery channel and to describe the AWS resources associated with the account. See [AWS Docs](http://docs.aws.amazon.com/config/latest/developerguide/iamrole-permissions.html) for more details.\n* `recording_group` - (Optional) Recording group - see below.\n\n### `recording_group`\n\n* `all_supported` - (Optional) Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resource_types`. Defaults to `true`.\n* `exclusion_by_resource_types` - (Optional) An object that specifies how AWS Config excludes resource types from being recorded by the configuration recorder.To use this option, you must set the useOnly field of RecordingStrategy to `EXCLUSION_BY_RESOURCE_TYPES` Requires `all_supported = false`. Conflicts with `resource_types`.\n* `include_global_resource_types` - (Optional) Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `all_supported = true`. Conflicts with `resource_types`.\n* `recording_strategy` - (Optional) Recording Strategy - see below..\n* `resource_types` - (Optional) A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `all_supported` must be set to false.\n\n#### `recording_strategy`\n\n* ` use_only` - (Optional) The recording strategy for the configuration recorder.See [relevant part of AWS Docs](https://docs.aws.amazon.com/config/latest/APIReference/API_RecordingStrategy.html)\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Name of the recorder\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Configuration Recorder using the name. For example:\n\n```terraform\nimport {\n  to = aws_config_configuration_recorder.foo\n  id = \"example\"\n}\n```\n\nUsing `terraform import`, import Configuration Recorder using the name. For example:\n\n```console\n% terraform import aws_config_configuration_recorder.foo example\n```\n",
      "language": "hcl",
      "path": "website/docs/r/config_configuration_recorder.html.markdown",
      "slug": "config_configuration_recorder",
      "subcategory": "Config",
      "title": "config_configuration_recorder",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198155"
    }
  }
}