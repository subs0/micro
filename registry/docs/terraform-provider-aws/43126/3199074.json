{
  "data": {
    "type": "provider-docs",
    "id": "3199074",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"VPC (Virtual Private Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_vpc_endpoint\"\ndescription: |-\n  Provides a VPC Endpoint resource.\n---\n\n# Resource: aws_vpc_endpoint\n\nProvides a VPC Endpoint resource.\n\n~> **NOTE on VPC Endpoints and VPC Endpoint Associations:** Terraform provides both standalone VPC Endpoint Associations for\n[Route Tables](vpc_endpoint_route_table_association.html) - (an association between a VPC endpoint and a single `route_table_id`),\n[Security Groups](vpc_endpoint_security_group_association.html) - (an association between a VPC endpoint and a single `security_group_id`),\nand [Subnets](vpc_endpoint_subnet_association.html) - (an association between a VPC endpoint and a single `subnet_id`) and\na VPC Endpoint resource with `route_table_ids` and `subnet_ids` attributes.\nDo not use the same resource ID in both a VPC Endpoint resource and a VPC Endpoint Association resource.\nDoing so will cause a conflict of associations and will overwrite the association.\n\n## Example Usage\n\n### Basic\n\n```terraform\nresource \"aws_vpc_endpoint\" \"s3\" {\n  vpc_id       = aws_vpc.main.id\n  service_name = \"com.amazonaws.us-west-2.s3\"\n}\n```\n\n### Basic w/ Tags\n\n```terraform\nresource \"aws_vpc_endpoint\" \"s3\" {\n  vpc_id       = aws_vpc.main.id\n  service_name = \"com.amazonaws.us-west-2.s3\"\n\n  tags = {\n    Environment = \"test\"\n  }\n}\n```\n\n### Interface Endpoint Type\n\n```terraform\nresource \"aws_vpc_endpoint\" \"ec2\" {\n  vpc_id            = aws_vpc.main.id\n  service_name      = \"com.amazonaws.us-west-2.ec2\"\n  vpc_endpoint_type = \"Interface\"\n\n  security_group_ids = [\n    aws_security_group.sg1.id,\n  ]\n\n  private_dns_enabled = true\n}\n```\n\n### Gateway Load Balancer Endpoint Type\n\n```terraform\ndata \"aws_caller_identity\" \"current\" {}\n\nresource \"aws_vpc_endpoint_service\" \"example\" {\n  acceptance_required        = false\n  allowed_principals         = [data.aws_caller_identity.current.arn]\n  gateway_load_balancer_arns = [aws_lb.example.arn]\n}\n\nresource \"aws_vpc_endpoint\" \"example\" {\n  service_name      = aws_vpc_endpoint_service.example.service_name\n  subnet_ids        = [aws_subnet.example.id]\n  vpc_endpoint_type = aws_vpc_endpoint_service.example.service_type\n  vpc_id            = aws_vpc.example.id\n}\n```\n\n### Non-AWS Service\n\n```terraform\nresource \"aws_vpc_endpoint\" \"ptfe_service\" {\n  vpc_id            = var.vpc_id\n  service_name      = var.ptfe_service\n  vpc_endpoint_type = \"Interface\"\n\n  security_group_ids = [\n    aws_security_group.ptfe_service.id,\n  ]\n\n  subnet_ids          = [local.subnet_ids]\n  private_dns_enabled = false\n}\n\ndata \"aws_route53_zone\" \"internal\" {\n  name         = \"vpc.internal.\"\n  private_zone = true\n  vpc_id       = var.vpc_id\n}\n\nresource \"aws_route53_record\" \"ptfe_service\" {\n  zone_id = data.aws_route53_zone.internal.zone_id\n  name    = \"ptfe.${data.aws_route53_zone.internal.name}\"\n  type    = \"CNAME\"\n  ttl     = \"300\"\n  records = [aws_vpc_endpoint.ptfe_service.dns_entry[0][\"dns_name\"]]\n}\n```\n\n~> **NOTE The `dns_entry` output is a list of maps:** Terraform interpolation support for lists of maps requires the `lookup` and `[]` until full support of lists of maps is available\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `service_name` - (Required) The service name. For AWS services the service name is usually in the form `com.amazonaws.<region>.<service>` (the SageMaker Notebook service is an exception to this rule, the service name is in the form `aws.sagemaker.<region>.notebook`).\n* `vpc_id` - (Required) The ID of the VPC in which the endpoint will be used.\n* `auto_accept` - (Optional) Accept the VPC endpoint (the VPC endpoint and service need to be in the same AWS account).\n* `policy` - (Optional) A policy to attach to the endpoint that controls access to the service. This is a JSON formatted string. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).\n* `private_dns_enabled` - (Optional; AWS services and AWS Marketplace partner services only) Whether or not to associate a private hosted zone with the specified VPC. Applicable for endpoints of type `Interface`.\nDefaults to `false`.\n* `dns_options` - (Optional) The DNS options for the endpoint. See dns_options below.\n* `ip_address_type` - (Optional) The IP address type for the endpoint. Valid values are `ipv4`, `dualstack`, and `ipv6`.\n* `route_table_ids` - (Optional) One or more route table IDs. Applicable for endpoints of type `Gateway`.\n* `subnet_ids` - (Optional) The ID of one or more subnets in which to create a network interface for the endpoint. Applicable for endpoints of type `GatewayLoadBalancer` and `Interface`.\n* `security_group_ids` - (Optional) The ID of one or more security groups to associate with the network interface. Applicable for endpoints of type `Interface`.\nIf no security groups are specified, the VPC's [default security group](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#DefaultSecurityGroup) is associated with the endpoint.\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `vpc_endpoint_type` - (Optional) The VPC endpoint type, `Gateway`, `GatewayLoadBalancer`, or `Interface`. Defaults to `Gateway`.\n\n### dns_options\n\n* `dns_record_ip_type` - (Optional) The DNS records created for the endpoint. Valid values are `ipv4`, `dualstack`, `service-defined`, and `ipv6`.\n* `private_dns_only_for_inbound_resolver_endpoint` - (Optional) Indicates whether to enable private DNS only for inbound endpoints. This option is available only for services that support both gateway and interface endpoints. It routes traffic that originates from the VPC to the gateway endpoint and traffic that originates from on-premises to the interface endpoint. Default is `false`. Can only be specified if private_dns_enabled is `true`.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `10m`)\n- `update` - (Default `10m`)\n- `delete` - (Default `10m`)\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The ID of the VPC endpoint.\n* `arn` - The Amazon Resource Name (ARN) of the VPC endpoint.\n* `cidr_blocks` - The list of CIDR blocks for the exposed AWS service. Applicable for endpoints of type `Gateway`.\n* `dns_entry` - The DNS entries for the VPC Endpoint. Applicable for endpoints of type `Interface`. DNS blocks are documented below.\n* `network_interface_ids` - One or more network interfaces for the VPC Endpoint. Applicable for endpoints of type `Interface`.\n* `owner_id` - The ID of the AWS account that owns the VPC endpoint.\n* `prefix_list_id` - The prefix list ID of the exposed AWS service. Applicable for endpoints of type `Gateway`.\n* `requester_managed` -  Whether or not the VPC Endpoint is being managed by its service - `true` or `false`.\n* `state` - The state of the VPC endpoint.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\nDNS blocks (for `dns_entry`) support the following attributes:\n\n* `dns_name` - The DNS name.\n* `hosted_zone_id` - The ID of the private hosted zone.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Endpoints using the VPC endpoint `id`. For example:\n\n```terraform\nimport {\n  to = aws_vpc_endpoint.endpoint1\n  id = \"vpce-3ecf2a57\"\n}\n```\n\nUsing `terraform import`, import VPC Endpoints using the VPC endpoint `id`. For example:\n\n```console\n% terraform import aws_vpc_endpoint.endpoint1 vpce-3ecf2a57\n```\n",
      "language": "hcl",
      "path": "website/docs/r/vpc_endpoint.html.markdown",
      "slug": "vpc_endpoint",
      "subcategory": "VPC (Virtual Private Cloud)",
      "title": "vpc_endpoint",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3199074"
    }
  }
}