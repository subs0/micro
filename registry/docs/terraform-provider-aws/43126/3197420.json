{
  "data": {
    "type": "provider-docs",
    "id": "3197420",
    "attributes": {
      "category": "data-sources",
      "content": "---\nsubcategory: \"Auto Scaling\"\nlayout: \"aws\"\npage_title: \"AWS: aws_autoscaling_group\"\ndescription: |-\n  Get information on an Amazon EC2 Autoscaling Group.\n---\n\n# Data Source: aws_autoscaling_group\n\nUse this data source to get information on an existing autoscaling group.\n\n## Example Usage\n\n```terraform\ndata \"aws_autoscaling_group\" \"foo\" {\n  name = \"foo\"\n}\n```\n\n## Argument Reference\n\n* `name` - Specify the exact name of the desired autoscaling group.\n\n## Attribute Reference\n\n~> **NOTE:** Some values are not always set and may not be available for\ninterpolation.\n\n* `arn` - ARN of the Auto Scaling group.\n* `availability_zones` - One or more Availability Zones for the group.\n* `default_cool_down` - Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.\n* `desired_capacity` - Desired size of the group.\n* `desired_capacity_type` - The unit of measurement for the value returned for `desired_capacity`.\n* `enabled_metrics` - List of metrics enabled for collection.\n* `health_check_grace_period` - The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service.\n* `health_check_type` - Service to use for the health checks. The valid values are EC2 and ELB.\n* `id` - Name of the Auto Scaling Group.\n* `launch_configuration` - The name of the associated launch configuration.\n* `launch_template` - List of launch templates for the group.\n    * `id` - ID of the launch template.\n    * `name` - Name of the launch template.\n    * `version` - Template version.\n* `load_balancers` - One or more load balancers associated with the group.\n* `max_instance_lifetime` - Maximum amount of time, in seconds, that an instance can be in service.\n* `max_size` - Maximum size of the group.\n* `min_size` - Minimum size of the group.\n* `mixed_instances_policy` - List of mixed instances policy objects for the group.\n    * `instances_distribution` - List of instances distribution objects.\n        * `on_demand_allocation_strategy` - Strategy used when launching on-demand instances.\n        * `on_demand_base_capacity` -  Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances.\n        * `spot_allocation_strategy` - Strategy used when launching Spot instances.\n        * `spot_instance_pools` - Number of Spot pools per availability zone to allocate capacity.\n        * `spot_max_price` - Maximum price per unit hour that the user is willing to pay for the Spot instances.\n    * `launch_template` - List of launch templates along with the overrides.\n        * `launch_template_specification` - List of launch template specification objects.\n            * `launch_template_id` - ID of the launch template.\n            * `launch_template_name` - Name of the launch template.\n            * `version` - Template version.\n        * `override` - List of properties overriding the same properties in the launch template.\n            * `instance_requirements` - List of instance requirements objects.\n                * `accelerator_count - List of objects describing the minimum and maximum number of accelerators for an instance type.\n                    * `min` - Minimum.\n                    * `max` - Maximum.\n                * `accelerator_manufacturers` - List of accelerator manufacturer names.\n                * `accelerator_names` - List of accelerator names.\n                * `accelerator_total_memory_mib` - List of objects describing the minimum and maximum total memory of the accelerators.\n                * `accelerator_types` - List of accelerator types.\n                * `allowed_instance_types` - List of instance types to apply the specified attributes against.\n                * `bare_metal` - Indicates whether bare metal instances are included, excluded, or required.\n                * `baseline_ebs_bandwidth_mbps` - List of objects describing the minimum and maximum baseline EBS bandwidth (Mbps).\n                    * `min` - Minimum.\n                    * `max` - Maximum.\n                * `burstable_performance` - Indicates whether burstable performance instance types are included, excluded, or required.\n                * `cpu_manufacturers` - List of CPU manufacturer names.\n                * `excluded_instance_types` - List of excluded instance types.\n                * `instance_generations` - List of instance generation names.\n                * `local_storage` - Indicates whether instance types with instance store volumes are included, excluded, or required.\n                * `local_storage_types` - List of local storage type names.\n                * `memory_gib_per_vcpu` - List of objects describing the minimum and maximum amount of memory (GiB) per vCPU.\n                    * `min` - Minimum.\n                    * `max` - Maximum.\n                * `memory_mib` - List of objects describing the minimum and maximum amount of memory (MiB).\n                    * `min` - Minimum.\n                    * `max` - Maximum.\n                * `network_bandwidth_gbps` - List of objects describing the minimum and maximum amount of network bandwidth (Gbps).\n                    * `min` - Minimum.\n                    * `max`- Maximum.\n                * `network_interface_count` - List of objects describing the minimum and maximum amount of network interfaces.\n                    * `min` - Minimum.\n                    * `max` - Maximum.\n                * `on_demand_max_price_percentage_over_lowest_price` - Price protection threshold for On-Demand Instances.\n                * `require_hibernate_support` - Indicates whether instance types must support On-Demand Instance Hibernation.\n                * `spot_max_price_percentage_over_lowest_price` - Price protection threshold for Spot Instances.\n                * `total_local_storage_gb` - List of objects describing the minimum and maximum total storage (GB).\n                    * `min` - Minimum.\n                    * `max` - Maximum.\n                * `vcpu_count` - List of objects describing the minimum and maximum number of vCPUs.\n                    * `min` - Minimum.\n                    * `max` - Maximum.\n            * `instance_type` - Overriding instance type.\n            * `launch_template_specification` - List of overriding launch template specification objects.\n                * `launch_template_id` - ID of the launch template.\n                * `launch_template_name` - Name of the launch template.\n                * `version` - Template version.\n            * `weighted_capacity` - Number of capacity units, which gives the instance type a proportional weight to other instance types.\n* `name` - Name of the Auto Scaling Group.\n* `placement_group` - Name of the placement group into which to launch your instances, if any. For more information, see Placement Groups (http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the Amazon Elastic Compute Cloud User Guide.\n* `predicted_capacity` - Predicted capacity of the group.\n* `service_linked_role_arn` - ARN of the service-linked role that the Auto Scaling group uses to call other AWS services on your behalf.\n* `status` - Current state of the group when DeleteAutoScalingGroup is in progress.\n* `suspended_processes` - List of processes suspended processes for the Auto Scaling Group.\n* `tag` - List of tags for the group.\n    * `key` - Key.\n    * `value` - Value.\n    * `propagate_at_launch` - Whether the tag is propagated to Amazon EC2 instances launched via this ASG.\n* `target_group_arns` - ARNs of the target groups for your load balancer.\n* `termination_policies` - The termination policies for the group.\n* `traffic_source` -Traffic sources.\n    * `identifier` - Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.\n    * `type` - Traffic source type.\n* `vpc_zone_identifier` - VPC ID for the group.\n* `warm_pool` - List of warm pool configuration objects.\n    * `instance_reuse_policy` - List of instance reuse policy objects.\n        * `reuse_on_scale_in` - Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in.\n    * `max_group_prepared_policy` - Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.\n    * `min_size` - Minimum number of instances to maintain in the warm pool.\n    * `pool_state` - Instance state to transition to after the lifecycle actions are complete.\n* `warm_pool_size` - Current size of the warm pool.\n",
      "language": "hcl",
      "path": "website/docs/d/autoscaling_group.html.markdown",
      "slug": "autoscaling_group",
      "subcategory": "Auto Scaling",
      "title": "autoscaling_group",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3197420"
    }
  }
}