{
  "data": {
    "type": "provider-docs",
    "id": "3199080",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"VPC (Virtual Private Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_vpc_endpoint_service\"\ndescription: |-\n  Provides a VPC Endpoint Service resource.\n---\n\n# Resource: aws_vpc_endpoint_service\n\nProvides a VPC Endpoint Service resource.\nService consumers can create an _Interface_ [VPC Endpoint](vpc_endpoint.html) to connect to the service.\n\n~> **NOTE on VPC Endpoint Services and VPC Endpoint Service Allowed Principals:** Terraform provides\nboth a standalone [VPC Endpoint Service Allowed Principal](vpc_endpoint_service_allowed_principal.html) resource\nand a VPC Endpoint Service resource with an `allowed_principals` attribute. Do not use the same principal ARN in both\na VPC Endpoint Service resource and a VPC Endpoint Service Allowed Principal resource. Doing so will cause a conflict\nand will overwrite the association.\n\n## Example Usage\n\n### Network Load Balancers\n\n```terraform\nresource \"aws_vpc_endpoint_service\" \"example\" {\n  acceptance_required        = false\n  network_load_balancer_arns = [aws_lb.example.arn]\n}\n```\n\n### Gateway Load Balancers\n\n```terraform\nresource \"aws_vpc_endpoint_service\" \"example\" {\n  acceptance_required        = false\n  gateway_load_balancer_arns = [aws_lb.example.arn]\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `acceptance_required` - (Required) Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.\n* `allowed_principals` - (Optional) The ARNs of one or more principals allowed to discover the endpoint service.\n* `gateway_load_balancer_arns` - (Optional) Amazon Resource Names (ARNs) of one or more Gateway Load Balancers for the endpoint service.\n* `network_load_balancer_arns` - (Optional) Amazon Resource Names (ARNs) of one or more Network Load Balancers for the endpoint service.\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `private_dns_name` - (Optional) The private DNS name for the service.\n* `supported_ip_address_types` - (Optional) The supported IP address types. The possible values are `ipv4` and `ipv6`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The ID of the VPC endpoint service.\n* `availability_zones` - A set of Availability Zones in which the service is available.\n* `arn` - The Amazon Resource Name (ARN) of the VPC endpoint service.\n* `base_endpoint_dns_names` - A set of DNS names for the service.\n* `manages_vpc_endpoints` - Whether or not the service manages its VPC endpoints - `true` or `false`.\n* `service_name` - The service name.\n* `service_type` - The service type, `Gateway` or `Interface`.\n* `state` - The state of the VPC endpoint service.\n* `private_dns_name_configuration` - List of objects containing information about the endpoint service private DNS name configuration.\n    * `name` - Name of the record subdomain the service provider needs to create.\n    * `state` - Verification state of the VPC endpoint service. Consumers of the endpoint service can use the private name only when the state is `verified`.\n    * `type` - Endpoint service verification type, for example `TXT`.\n    * `value` - Value the service provider adds to the private DNS name domain record before verification.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import VPC Endpoint Services using the VPC endpoint service `id`. For example:\n\n```terraform\nimport {\n  to = aws_vpc_endpoint_service.foo\n  id = \"vpce-svc-0f97a19d3fa8220bc\"\n}\n```\n\nUsing `terraform import`, import VPC Endpoint Services using the VPC endpoint service `id`. For example:\n\n```console\n% terraform import aws_vpc_endpoint_service.foo vpce-svc-0f97a19d3fa8220bc\n```\n",
      "language": "hcl",
      "path": "website/docs/r/vpc_endpoint_service.html.markdown",
      "slug": "vpc_endpoint_service",
      "subcategory": "VPC (Virtual Private Cloud)",
      "title": "vpc_endpoint_service",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3199080"
    }
  }
}