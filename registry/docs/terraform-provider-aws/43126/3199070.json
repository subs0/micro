{
  "data": {
    "type": "provider-docs",
    "id": "3199070",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"EBS (EC2)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_volume_attachment\"\ndescription: |-\n  Provides an AWS EBS Volume Attachment\n---\n\n# Resource: aws_volume_attachment\n\nProvides an AWS EBS Volume Attachment as a top level resource, to attach and\ndetach volumes from AWS Instances.\n\n~> **NOTE on EBS block devices:** If you use `ebs_block_device` on an `aws_instance`, Terraform will assume management over the full set of non-root EBS block devices for the instance, and treats additional block devices as drift. For this reason, `ebs_block_device` cannot be mixed with external `aws_ebs_volume` + `aws_volume_attachment` resources for a given instance.\n\n## Example Usage\n\n```terraform\nresource \"aws_volume_attachment\" \"ebs_att\" {\n  device_name = \"/dev/sdh\"\n  volume_id   = aws_ebs_volume.example.id\n  instance_id = aws_instance.web.id\n}\n\nresource \"aws_instance\" \"web\" {\n  ami               = \"ami-21f78e11\"\n  availability_zone = \"us-west-2a\"\n  instance_type     = \"t2.micro\"\n\n  tags = {\n    Name = \"HelloWorld\"\n  }\n}\n\nresource \"aws_ebs_volume\" \"example\" {\n  availability_zone = \"us-west-2a\"\n  size              = 1\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `device_name` - (Required) The device name to expose to the instance (for\nexample, `/dev/sdh` or `xvdh`).  See [Device Naming on Linux Instances][1] and [Device Naming on Windows Instances][2] for more information.\n* `instance_id` - (Required) ID of the Instance to attach to\n* `volume_id` - (Required) ID of the Volume to be attached\n* `force_detach` - (Optional, Boolean) Set to `true` if you want to force the\nvolume to detach. Useful if previous attempts failed, but use this option only\nas a last resort, as this can result in **data loss**. See\n[Detaching an Amazon EBS Volume from an Instance][3] for more information.\n* `skip_destroy` - (Optional, Boolean) Set this to true if you do not wish\nto detach the volume from the instance to which it is attached at destroy\ntime, and instead just remove the attachment from Terraform state. This is\nuseful when destroying an instance which has volumes created by some other\nmeans attached.\n* `stop_instance_before_detaching` - (Optional, Boolean) Set this to true to ensure that the target instance is stopped\nbefore trying to detach the volume. Stops the instance, if it is not already stopped.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `device_name` - The device name exposed to the instance\n* `instance_id` - ID of the Instance\n* `volume_id` - ID of the Volume\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EBS Volume Attachments using `DEVICE_NAME:VOLUME_ID:INSTANCE_ID`. For example:\n\n```terraform\nimport {\n  to = aws_volume_attachment.example\n  id = \"/dev/sdh:vol-049df61146c4d7901:i-12345678\"\n}\n```\n\nUsing `terraform import`, import EBS Volume Attachments using `DEVICE_NAME:VOLUME_ID:INSTANCE_ID`. For example:\n\n```console\n% terraform import aws_volume_attachment.example /dev/sdh:vol-049df61146c4d7901:i-12345678\n```\n\n[1]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html#available-ec2-device-names\n[2]: https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/device_naming.html#available-ec2-device-names\n[3]: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html\n",
      "language": "hcl",
      "path": "website/docs/r/volume_attachment.html.markdown",
      "slug": "volume_attachment",
      "subcategory": "EBS (EC2)",
      "title": "volume_attachment",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3199070"
    }
  }
}