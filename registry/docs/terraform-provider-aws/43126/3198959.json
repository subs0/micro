{
  "data": {
    "type": "provider-docs",
    "id": "3198959",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Service Catalog\"\nlayout: \"aws\"\npage_title: \"AWS: aws_servicecatalog_provisioning_artifact\"\ndescription: |-\n  Manages a Service Catalog Provisioning Artifact\n---\n\n# Resource: aws_servicecatalog_provisioning_artifact\n\nManages a Service Catalog Provisioning Artifact for a specified product.\n\n-> A \"provisioning artifact\" is also referred to as a \"version.\"\n\n~> **NOTE:** You cannot create a provisioning artifact for a product that was shared with you.\n\n~> **NOTE:** The user or role that use this resource must have the `cloudformation:GetTemplate` IAM policy permission. This policy permission is required when using the `template_physical_id` argument.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\nresource \"aws_servicecatalog_provisioning_artifact\" \"example\" {\n  name         = \"example\"\n  product_id   = aws_servicecatalog_product.example.id\n  type         = \"CLOUD_FORMATION_TEMPLATE\"\n  template_url = \"https://${aws_s3_bucket.example.bucket_regional_domain_name}/${aws_s3_object.example.key}\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `product_id` - (Required) Identifier of the product.\n* `template_physical_id` - (Required if `template_url` is not provided) Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.\n* `template_url` - (Required if `template_physical_id` is not provided) Template source as URL of the CloudFormation template in Amazon S3.\n\nThe following arguments are optional:\n\n* `accept_language` - (Optional) Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). The default value is `en`.\n* `active` - (Optional) Whether the product version is active. Inactive provisioning artifacts are invisible to end users. End users cannot launch or update a provisioned product from an inactive provisioning artifact. Default is `true`.\n* `description` - (Optional) Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.\n* `disable_template_validation` - (Optional) Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.\n* `guidance` - (Optional) Information set by the administrator to provide guidance to end users about which provisioning artifacts to use. Valid values are `DEFAULT` and `DEPRECATED`. The default is `DEFAULT`. Users are able to make updates to a provisioned product of a deprecated version but cannot launch new provisioned products using a deprecated version.\n* `name` - (Optional) Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.\n* `type` - (Optional) Type of provisioning artifact. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ProvisioningArtifactProperties.html) for valid list of values.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `created_time` - Time when the provisioning artifact was created.\n* `id` - Provisioning artifact identifier and product identifier separated by a colon.\n* `provisioning_artifact_id` - Provisioning artifact identifier.\n* `status` - Status of the provisioning artifact.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `3m`)\n- `read` - (Default `10m`)\n- `update` - (Default `3m`)\n- `delete` - (Default `3m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_servicecatalog_provisioning_artifact` using the provisioning artifact ID and product ID separated by a colon. For example:\n\n```terraform\nimport {\n  to = aws_servicecatalog_provisioning_artifact.example\n  id = \"pa-ij2b6lusy6dec:prod-el3an0rma3\"\n}\n```\n\nUsing `terraform import`, import `aws_servicecatalog_provisioning_artifact` using the provisioning artifact ID and product ID separated by a colon. For example:\n\n```console\n% terraform import aws_servicecatalog_provisioning_artifact.example pa-ij2b6lusy6dec:prod-el3an0rma3\n```\n",
      "language": "hcl",
      "path": "website/docs/r/servicecatalog_provisioning_artifact.html.markdown",
      "slug": "servicecatalog_provisioning_artifact",
      "subcategory": "Service Catalog",
      "title": "servicecatalog_provisioning_artifact",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198959"
    }
  }
}