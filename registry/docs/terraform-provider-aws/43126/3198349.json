{
  "data": {
    "type": "provider-docs",
    "id": "3198349",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"EFS (Elastic File System)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_efs_file_system\"\ndescription: |-\n  Provides an Elastic File System (EFS) File System resource.\n---\n\n# Resource: aws_efs_file_system\n\nProvides an Elastic File System (EFS) File System resource.\n\n## Example Usage\n\n### EFS File System w/ tags\n\n```terraform\nresource \"aws_efs_file_system\" \"foo\" {\n  creation_token = \"my-product\"\n\n  tags = {\n    Name = \"MyProduct\"\n  }\n}\n```\n\n### Using lifecycle policy\n\n```terraform\nresource \"aws_efs_file_system\" \"foo_with_lifecyle_policy\" {\n  creation_token = \"my-product\"\n\n  lifecycle_policy {\n    transition_to_ia = \"AFTER_30_DAYS\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `availability_zone_name` - (Optional) the AWS Availability Zone in which to create the file system. Used to create a file system that uses One Zone storage classes. See [user guide](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html) for more information.\n* `creation_token` - (Optional) A unique name (a maximum of 64 characters are allowed)\nused as reference when creating the Elastic File System to ensure idempotent file\nsystem creation. By default generated by Terraform. See [Elastic File System](http://docs.aws.amazon.com/efs/latest/ug/)\nuser guide for more information.\n* `encrypted` - (Optional) If true, the disk will be encrypted.\n* `kms_key_id` - (Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.\n* `lifecycle_policy` - (Optional) A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).\n* `performance_mode` - (Optional) The file system performance mode. Can be either `\"generalPurpose\"` or `\"maxIO\"` (Default: `\"generalPurpose\"`).\n* `provisioned_throughput_in_mibps` - (Optional) The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughput_mode` set to `provisioned`.\n* `tags` - (Optional) A map of tags to assign to the file system. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `throughput_mode` - (Optional) Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`, or `elastic`. When using `provisioned`, also set `provisioned_throughput_in_mibps`.\n\n### Lifecycle Policy Arguments\n\n`lifecycle_policy` supports the following arguments:\n\n* `transition_to_ia` - (Optional) Indicates how long it takes to transition files to the IA storage class. Valid values: `AFTER_1_DAY`, `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, or `AFTER_90_DAYS`.\n* `transition_to_primary_storage_class` - (Optional) Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: `AFTER_1_ACCESS`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Amazon Resource Name of the file system.\n* `availability_zone_id` - The identifier of the Availability Zone in which the file system's One Zone storage classes exist.\n* `id` - The ID that identifies the file system (e.g., fs-ccfc0d65).\n* `dns_name` - The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).\n* `name` - The value of the file system's `Name` tag.\n* `number_of_mount_targets` - The current number of mount targets that the file system has.\n* `owner_id` - The AWS account that created the file system. If the file system was createdby an IAM user, the parent account to which the user belongs is the owner.\n* `size_in_bytes` - The latest known metered size (in bytes) of data stored in the file system, the value is not the exact size that the file system was at any point in time. See [Size In Bytes](#size-in-bytes).\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n### Size In Bytes\n\n* `value` - The latest known metered size (in bytes) of data stored in the file system.\n* `value_in_ia` - The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.\n* `value_in_standard` - The latest known metered size (in bytes) of data stored in the Standard storage class.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the EFS file systems using the `id`. For example:\n\n```terraform\nimport {\n  to = aws_efs_file_system.foo\n  id = \"fs-6fa144c6\"\n}\n```\n\nUsing `terraform import`, import the EFS file systems using the `id`. For example:\n\n```console\n% terraform import aws_efs_file_system.foo fs-6fa144c6\n```\n",
      "language": "hcl",
      "path": "website/docs/r/efs_file_system.html.markdown",
      "slug": "efs_file_system",
      "subcategory": "EFS (Elastic File System)",
      "title": "efs_file_system",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198349"
    }
  }
}