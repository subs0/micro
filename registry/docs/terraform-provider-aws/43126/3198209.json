{
  "data": {
    "type": "provider-docs",
    "id": "3198209",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"RDS (Relational Database)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_db_parameter_group\"\ndescription: |-\n  Provides an RDS DB parameter group resource.\n---\n\n# Resource: aws_db_parameter_group\n\nProvides an RDS DB parameter group resource. Documentation of the available parameters for various RDS engines can be found at:\n\n* [Aurora MySQL Parameters](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Reference.html)\n* [Aurora PostgreSQL Parameters](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraPostgreSQL.Reference.html)\n* [MariaDB Parameters](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.MariaDB.Parameters.html)\n* [Oracle Parameters](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ModifyInstance.Oracle.html#USER_ModifyInstance.Oracle.sqlnet)\n* [PostgreSQL Parameters](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.PostgreSQL.CommonDBATasks.html#Appendix.PostgreSQL.CommonDBATasks.Parameters)\n\n> **Hands-on:** For an example of the `aws_db_parameter_group` in use, follow the [Manage AWS RDS Instances](https://learn.hashicorp.com/tutorials/terraform/aws-rds?in=terraform/aws&utm_source=WEBSITE&utm_medium=WEB_IO&utm_offer=ARTICLE_PAGE&utm_content=DOCS) tutorial on HashiCorp Learn.\n\n~> **NOTE:** After applying your changes, you may encounter a perpetual diff in your Terraform plan\noutput for a `parameter` whose `value` remains unchanged but whose `apply_method` is changing\n(e.g., from `immediate` to `pending-reboot`, or `pending-reboot` to `immediate`). If only the\napply method of a parameter is changing, the AWS API will not register this change. To change\nthe `apply_method` of a parameter, its value must also change.\n\n## Example Usage\n\n### Basic Usage\n\n```terraform\nresource \"aws_db_parameter_group\" \"default\" {\n  name   = \"rds-pg\"\n  family = \"mysql5.6\"\n\n  parameter {\n    name  = \"character_set_server\"\n    value = \"utf8\"\n  }\n\n  parameter {\n    name  = \"character_set_client\"\n    value = \"utf8\"\n  }\n}\n```\n\n### `create_before_destroy` Lifecycle Configuration\n\nThe [`create_before_destroy`](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#create_before_destroy)\nlifecycle configuration is necessary for modifications that force re-creation of an existing,\nin-use parameter group. This includes common situations like changing the group `name` or\nbumping the `family` version during a major version upgrade. This configuration will prevent destruction\nof the deposed parameter group while still in use by the database during upgrade.\n\n```terraform\nresource \"aws_db_parameter_group\" \"example\" {\n  name   = \"my-pg\"\n  family = \"postgres13\"\n\n  parameter {\n    name  = \"log_connections\"\n    value = \"1\"\n  }\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_db_instance\" \"example\" {\n  # other attributes\n  parameter_group_name = aws_db_parameter_group.example.name\n  apply_immediately    = true\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Optional, Forces new resource) The name of the DB parameter group. If omitted, Terraform will assign a random, unique name.\n* `name_prefix` - (Optional, Forces new resource) Creates a unique name beginning with the specified prefix. Conflicts with `name`.\n* `family` - (Required, Forces new resource) The family of the DB parameter group.\n* `description` - (Optional, Forces new resource) The description of the DB parameter group. Defaults to \"Managed by Terraform\".\n* `parameter` - (Optional) A list of DB parameters to apply. Note that parameters may differ from a family to an other. Full list of all parameters can be discovered via [`aws rds describe-db-parameters`](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-parameters.html) after initial creation of the group.\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\nParameter blocks support the following:\n\n* `name` - (Required) The name of the DB parameter.\n* `value` - (Required) The value of the DB parameter.\n* `apply_method` - (Optional) \"immediate\" (default), or \"pending-reboot\". Some\n    engines can't apply some parameters without a reboot, and you will need to\n    specify \"pending-reboot\" here.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The db parameter group name.\n* `arn` - The ARN of the db parameter group.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import DB Parameter groups using the `name`. For example:\n\n```terraform\nimport {\n  to = aws_db_parameter_group.rds_pg\n  id = \"rds-pg\"\n}\n```\n\nUsing `terraform import`, import DB Parameter groups using the `name`. For example:\n\n```console\n% terraform import aws_db_parameter_group.rds_pg rds-pg\n```\n",
      "language": "hcl",
      "path": "website/docs/r/db_parameter_group.html.markdown",
      "slug": "db_parameter_group",
      "subcategory": "RDS (Relational Database)",
      "title": "db_parameter_group",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198209"
    }
  }
}