{
  "data": {
    "type": "provider-docs",
    "id": "3198862",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"S3 (Simple Storage)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_s3_bucket_acl\"\ndescription: |-\n  Provides an S3 bucket ACL resource.\n---\n\n# Resource: aws_s3_bucket_acl\n\nProvides an S3 bucket ACL resource.\n\n~> **Note:** `terraform destroy` does not delete the S3 Bucket ACL but does remove the resource from Terraform state.\n\n## Example Usage\n\n### With `private` ACL\n\n```terraform\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"my-tf-example-bucket\"\n}\n\nresource \"aws_s3_bucket_ownership_controls\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  rule {\n    object_ownership = \"BucketOwnerPreferred\"\n  }\n}\n\nresource \"aws_s3_bucket_acl\" \"example\" {\n  depends_on = [aws_s3_bucket_ownership_controls.example]\n\n  bucket = aws_s3_bucket.example.id\n  acl    = \"private\"\n}\n```\n\n### With `public-read` ACL\n\n-> This example explicitly disables the default S3 bucket security settings. This\nshould be done with caution, as all bucket objects become publicly exposed.\n\n```terraform\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"my-tf-example-bucket\"\n}\n\nresource \"aws_s3_bucket_ownership_controls\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  rule {\n    object_ownership = \"BucketOwnerPreferred\"\n  }\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n\n  block_public_acls       = false\n  block_public_policy     = false\n  ignore_public_acls      = false\n  restrict_public_buckets = false\n}\n\nresource \"aws_s3_bucket_acl\" \"example\" {\n  depends_on = [\n    aws_s3_bucket_ownership_controls.example,\n    aws_s3_bucket_public_access_block.example,\n  ]\n\n  bucket = aws_s3_bucket.example.id\n  acl    = \"public-read\"\n}\n```\n\n### With Grants\n\n```terraform\ndata \"aws_canonical_user_id\" \"current\" {}\n\nresource \"aws_s3_bucket\" \"example\" {\n  bucket = \"my-tf-example-bucket\"\n}\n\nresource \"aws_s3_bucket_ownership_controls\" \"example\" {\n  bucket = aws_s3_bucket.example.id\n  rule {\n    object_ownership = \"BucketOwnerPreferred\"\n  }\n}\n\nresource \"aws_s3_bucket_acl\" \"example\" {\n  depends_on = [aws_s3_bucket_ownership_controls.example]\n\n  bucket = aws_s3_bucket.example.id\n  access_control_policy {\n    grant {\n      grantee {\n        id   = data.aws_canonical_user_id.current.id\n        type = \"CanonicalUser\"\n      }\n      permission = \"READ\"\n    }\n\n    grant {\n      grantee {\n        type = \"Group\"\n        uri  = \"http://acs.amazonaws.com/groups/s3/LogDelivery\"\n      }\n      permission = \"READ_ACP\"\n    }\n\n    owner {\n      id = data.aws_canonical_user_id.current.id\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `acl` - (Optional, Conflicts with `access_control_policy`) Canned ACL to apply to the bucket.\n* `access_control_policy` - (Optional, Conflicts with `acl`) Configuration block that sets the ACL permissions for an object per grantee. [See below](#access_control_policy).\n* `bucket` - (Required, Forces new resource) Name of the bucket.\n* `expected_bucket_owner` - (Optional, Forces new resource) Account ID of the expected bucket owner.\n\n### access_control_policy\n\nThe `access_control_policy` configuration block supports the following arguments:\n\n* `grant` - (Required) Set of `grant` configuration blocks. [See below](#grant).\n* `owner` - (Required) Configuration block of the bucket owner's display name and ID. [See below](#owner).\n\n### grant\n\nThe `grant` configuration block supports the following arguments:\n\n* `grantee` - (Required) Configuration block for the person being granted permissions. [See below](#grantee).\n* `permission` - (Required) Logging permissions assigned to the grantee for the bucket.\n\n### owner\n\nThe `owner` configuration block supports the following arguments:\n\n* `id` - (Required) ID of the owner.\n* `display_name` - (Optional) Display name of the owner.\n\n### grantee\n\nThe `grantee` configuration block supports the following arguments:\n\n* `email_address` - (Optional) Email address of the grantee. See [Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for supported AWS regions where this argument can be specified.\n* `id` - (Optional) Canonical user ID of the grantee.\n* `type` - (Required) Type of grantee. Valid values: `CanonicalUser`, `AmazonCustomerByEmail`, `Group`.\n* `uri` - (Optional) URI of the grantee group.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The `bucket`, `expected_bucket_owner` (if configured), and `acl` (if configured) separated by commas (`,`).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import S3 bucket ACL using `bucket`, `expected_bucket_owner`, and/or `acl`, depending on your situation. For example:\n\nIf the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a\n[canned ACL][1] (i.e. predefined grant), import using the `bucket`:\n\n```terraform\nimport {\n  to = aws_s3_bucket_acl.example\n  id = \"bucket-name\"\n}\n```\n\nIf the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a\n[canned ACL][1] (i.e. predefined grant), import using the `bucket` and `acl` separated by a comma (`,`):\n\n```terraform\nimport {\n  to = aws_s3_bucket_acl.example\n  id = \"bucket-name,private\"\n}\n```\n\nIf the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a [canned ACL][1] (i.e. predefined grant), imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):\n\n```terraform\nimport {\n  to = aws_s3_bucket_acl.example\n  id = \"bucket-name,123456789012\"\n}\n```\n\nIf the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a\n[canned ACL][1] (i.e. predefined grant), imported using the `bucket`, `expected_bucket_owner`, and `acl` separated by commas (`,`):\n\n```terraform\nimport {\n  to = aws_s3_bucket_acl.example\n  id = \"bucket-name,123456789012,private\"\n}\n```\n\n**Using `terraform import` to import** using `bucket`, `expected_bucket_owner`, and/or `acl`, depending on your situation. For example:\n\nIf the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a\n[canned ACL][1] (i.e. predefined grant), import using the `bucket`:\n\n```console\n% terraform import aws_s3_bucket_acl.example bucket-name\n```\n\nIf the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a [canned ACL][1] (i.e. predefined grant), import using the `bucket` and `acl` separated by a comma (`,`):\n\n```console\n% terraform import aws_s3_bucket_acl.example bucket-name,private\n```\n\nIf the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a [canned ACL][1] (i.e. predefined grant), imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):\n\n```console\n% terraform import aws_s3_bucket_acl.example bucket-name,123456789012\n```\n\nIf the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a [canned ACL][1] (i.e. predefined grant), imported using the `bucket`, `expected_bucket_owner`, and `acl` separated by commas (`,`):\n\n```console\n% terraform import aws_s3_bucket_acl.example bucket-name,123456789012,private\n```\n\n[1]: https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl\n",
      "language": "hcl",
      "path": "website/docs/r/s3_bucket_acl.html.markdown",
      "slug": "s3_bucket_acl",
      "subcategory": "S3 (Simple Storage)",
      "title": "s3_bucket_acl",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198862"
    }
  }
}