{
  "data": {
    "type": "provider-docs",
    "id": "3198717",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"OpsWorks\"\nlayout: \"aws\"\npage_title: \"AWS: aws_opsworks_instance\"\ndescription: |-\n  Provides an OpsWorks instance resource.\n---\n\n# Resource: aws_opsworks_instance\n\nProvides an OpsWorks instance resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_opsworks_instance\" \"my-instance\" {\n  stack_id = aws_opsworks_stack.main.id\n\n  layer_ids = [\n    aws_opsworks_custom_layer.my-layer.id,\n  ]\n\n  instance_type = \"t2.micro\"\n  os            = \"Amazon Linux 2015.09\"\n  state         = \"stopped\"\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `layer_ids` - (Required) List of the layers the instance will belong to.\n* `stack_id` - (Required) Identifier of the stack the instance will belong to.\n\nThe following arguments are optional:\n\n* `agent_version` - (Optional) OpsWorks agent to install. Default is `INHERIT`.\n* `ami_id` - (Optional) AMI to use for the instance.  If an AMI is specified, `os` must be `Custom`.\n* `architecture` - (Optional) Machine architecture for created instances.  Valid values are `x86_64` or `i386`. The default is `x86_64`.\n* `auto_scaling_type` - (Optional) Creates load-based or time-based instances.  Valid values are `load`, `timer`.\n* `availability_zone` - (Optional) Name of the availability zone where instances will be created by default.\n* `delete_ebs` - (Optional) Whether to delete EBS volume on deletion. Default is `true`.\n* `delete_eip` - (Optional) Whether to delete the Elastic IP on deletion.\n* `ebs_block_device` - (Optional) Configuration block for additional EBS block devices to attach to the instance. See [Block Devices](#block-devices) below.\n* `ebs_optimized` - (Optional) Whether the launched EC2 instance will be EBS-optimized.\n* `ecs_cluster_arn` - (Optional) ECS cluster's ARN for container instances.\n* `elastic_ip` - (Optional) Instance Elastic IP address.\n* `ephemeral_block_device` - (Optional) Configuration block for ephemeral (also known as \"Instance Store\") volumes on the instance. See [Block Devices](#block-devices) below.\n* `hostname` - (Optional) Instance's host name.\n* `infrastructure_class` - (Optional) For registered instances, infrastructure class: ec2 or on-premises.\n* `install_updates_on_boot` - (Optional) Controls where to install OS and package updates when the instance boots.  Default is `true`.\n* `instance_profile_arn` - (Optional) ARN of the instance's IAM profile.\n* `instance_type` - (Optional) Type of instance to start.\n* `os` - (Optional) Name of operating system that will be installed.\n* `root_block_device` - (Optional) Configuration block for the root block device of the instance. See [Block Devices](#block-devices) below.\n* `root_device_type` - (Optional) Name of the type of root device instances will have by default. Valid values are `ebs` or `instance-store`.\n* `ssh_key_name` - (Optional) Name of the SSH keypair that instances will have by default.\n* `state` - (Optional) Desired state of the instance. Valid values are `running` or `stopped`.\n* `subnet_id` - (Optional) Subnet ID to attach to.\n* `tenancy` - (Optional) Instance tenancy to use. Valid values are `default`, `dedicated` or `host`.\n* `virtualization_type` - (Optional) Keyword to choose what virtualization mode created instances will use. Valid values are `paravirtual` or `hvm`.\n\n## Block devices\n\nEach of the `*_block_device` attributes controls a portion of the AWS\nInstance's \"Block Device Mapping\". It's a good idea to familiarize yourself with [AWS's Block Device\nMapping docs](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)\nto understand the implications of using these attributes.\n\n### `ebs_block_device`\n\n* `delete_on_termination` - (Optional) Whether the volume should be destroyed on instance termination. Default is `true`.\n* `device_name` - (Required) Name of the device to mount.\n* `iops` - (Optional) Amount of provisioned [IOPS](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). This must be set with a `volume_type` of `io1`.\n* `snapshot_id` - (Optional) Snapshot ID to mount.\n* `volume_size` - (Optional) Size of the volume in gigabytes.\n* `volume_type` - (Optional) Type of volume. Valid values are `standard`, `gp2`, or `io1`. Default is `standard`.\n\nModifying any `ebs_block_device` currently requires resource replacement.\n\n### `ephemeral_block_device`\n\n* `device_name` - Name of the block device to mount on the instance.\n* `virtual_name` - The [Instance Store Device Name](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames) (e.g., `ephemeral0`).\n\nEach AWS Instance type has a different set of Instance Store block devices\navailable for attachment. AWS [publishes a\nlist](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes)\nof which ephemeral devices are available on each type. The devices are always\nidentified by the `virtual_name` in the format `ephemeral{0..N}`.\n\n### `root_block_device`\n\n* `delete_on_termination` - (Optional) Whether the volume should be destroyed on instance termination. Default is `true`.\n* `iops` - (Optional) Amount of provisioned [IOPS](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). This must be set with a `volume_type` of `io1`.\n* `volume_size` - (Optional) Size of the volume in gigabytes.\n* `volume_type` - (Optional) Type of volume. Valid values are `standard`, `gp2`, or `io1`. Default is `standard`.\n\nModifying any of the `root_block_device` settings requires resource\nreplacement.\n\n~> **NOTE:** Currently, changes to `*_block_device` configuration of _existing_\nresources cannot be automatically detected by Terraform. After making updates\nto block device configuration, resource recreation can be manually triggered by\nusing the [`taint` command](https://www.terraform.io/docs/commands/taint.html).\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `created_at` - Time that the instance was created.\n* `ec2_instance_id` - EC2 instance ID.\n* `id` - ID of the OpsWorks instance.\n* `last_service_error_id` - ID of the last service error.\n* `platform` - Instance's platform.\n* `private_dns` - Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.\n* `private_ip` - Private IP address assigned to the instance.\n* `public_dns` - Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.\n* `public_ip` - Public IP address assigned to the instance, if applicable.\n* `registered_by` - For registered instances, who performed the registration.\n* `reported_agent_version` - Instance's reported AWS OpsWorks Stacks agent version.\n* `reported_os_family` - For registered instances, the reported operating system family.\n* `reported_os_name` - For registered instances, the reported operating system name.\n* `reported_os_version` - For registered instances, the reported operating system version.\n* `root_device_volume_id` - Root device volume ID.\n* `security_group_ids` - Associated security groups.\n* `ssh_host_dsa_key_fingerprint` - SSH key's Deep Security Agent (DSA) fingerprint.\n* `ssh_host_rsa_key_fingerprint` - SSH key's RSA fingerprint.\n* `status` - Instance status. Will be one of `booting`, `connection_lost`, `online`, `pending`, `rebooting`, `requested`, `running_setup`, `setup_failed`, `shutting_down`, `start_failed`, `stop_failed`, `stopped`, `stopping`, `terminated`, or `terminating`.\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `10m`)\n- `delete` - (Default `10m`)\n- `update` - (Default `10m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Opsworks Instances using the instance `id`. For example:\n\n```terraform\nimport {\n  to = aws_opsworks_instance.my_instance\n  id = \"4d6d1710-ded9-42a1-b08e-b043ad7af1e2\"\n}\n```\n\nUsing `terraform import`, import Opsworks Instances using the instance `id`. For example:\n\n```console\n% terraform import aws_opsworks_instance.my_instance 4d6d1710-ded9-42a1-b08e-b043ad7af1e2\n```\n",
      "language": "hcl",
      "path": "website/docs/r/opsworks_instance.html.markdown",
      "slug": "opsworks_instance",
      "subcategory": "OpsWorks",
      "title": "opsworks_instance",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198717"
    }
  }
}