{
  "data": {
    "type": "provider-docs",
    "id": "3224943",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Auto Scaling Plans\"\nlayout: \"aws\"\npage_title: \"AWS: aws_autoscalingplans_scaling_plan\"\ndescription: |-\n  Manages an AWS Auto Scaling scaling plan.\n---\n\n# Resource: aws_autoscalingplans_scaling_plan\n\nManages an AWS Auto Scaling scaling plan.\nMore information can be found in the [AWS Auto Scaling User Guide](https://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html).\n\n~> **NOTE:** The AWS Auto Scaling service uses an AWS IAM service-linked role to manage predictive scaling of Amazon EC2 Auto Scaling groups. The service attempts to automatically create this role the first time a scaling plan with predictive scaling enabled is created.\nAn [`aws_iam_service_linked_role`](/docs/providers/aws/r/iam_service_linked_role.html) resource can be used to manually manage this role.\nSee the [AWS documentation](https://docs.aws.amazon.com/autoscaling/plans/userguide/aws-auto-scaling-service-linked-roles.html#create-service-linked-role-manual) for more details.\n\n## Example Usage\n\n### Basic Dynamic Scaling\n\n```terraform\ndata \"aws_availability_zones\" \"available\" {}\n\nresource \"aws_autoscaling_group\" \"example\" {\n  name_prefix = \"example\"\n\n  launch_configuration = aws_launch_configuration.example.name\n  availability_zones   = [data.aws_availability_zones.available.names[0]]\n\n  min_size = 0\n  max_size = 3\n\n  tags = [\n    {\n      key                 = \"application\"\n      value               = \"example\"\n      propagate_at_launch = true\n    },\n  ]\n}\n\nresource \"aws_autoscalingplans_scaling_plan\" \"example\" {\n  name = \"example-dynamic-cost-optimization\"\n\n  application_source {\n    tag_filter {\n      key    = \"application\"\n      values = [\"example\"]\n    }\n  }\n\n  scaling_instruction {\n    max_capacity       = 3\n    min_capacity       = 0\n    resource_id        = format(\"autoScalingGroup/%s\", aws_autoscaling_group.example.name)\n    scalable_dimension = \"autoscaling:autoScalingGroup:DesiredCapacity\"\n    service_namespace  = \"autoscaling\"\n\n    target_tracking_configuration {\n      predefined_scaling_metric_specification {\n        predefined_scaling_metric_type = \"ASGAverageCPUUtilization\"\n      }\n\n      target_value = 70\n    }\n  }\n}\n```\n\n### Basic Predictive Scaling\n\n```terraform\ndata \"aws_availability_zones\" \"available\" {}\n\nresource \"aws_autoscaling_group\" \"example\" {\n  name_prefix = \"example\"\n\n  launch_configuration = aws_launch_configuration.example.name\n  availability_zones   = [data.aws_availability_zones.available.names[0]]\n\n  min_size = 0\n  max_size = 3\n\n  tags = [\n    {\n      key                 = \"application\"\n      value               = \"example\"\n      propagate_at_launch = true\n    },\n  ]\n}\n\nresource \"aws_autoscalingplans_scaling_plan\" \"example\" {\n  name = \"example-predictive-cost-optimization\"\n\n  application_source {\n    tag_filter {\n      key    = \"application\"\n      values = [\"example\"]\n    }\n  }\n\n  scaling_instruction {\n    disable_dynamic_scaling = true\n\n    max_capacity       = 3\n    min_capacity       = 0\n    resource_id        = format(\"autoScalingGroup/%s\", aws_autoscaling_group.example.name)\n    scalable_dimension = \"autoscaling:autoScalingGroup:DesiredCapacity\"\n    service_namespace  = \"autoscaling\"\n\n    target_tracking_configuration {\n      predefined_scaling_metric_specification {\n        predefined_scaling_metric_type = \"ASGAverageCPUUtilization\"\n      }\n\n      target_value = 70\n    }\n\n    predictive_scaling_max_capacity_behavior = \"SetForecastCapacityToMaxCapacity\"\n    predictive_scaling_mode                  = \"ForecastAndScale\"\n\n    predefined_load_metric_specification {\n      predefined_load_metric_type = \"ASGTotalCPUUtilization\"\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Required) Name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.\n* `application_source` - (Required) CloudFormation stack or set of tags. You can create one scaling plan per application source.\n* `scaling_instruction` - (Required) Scaling instructions. More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_ScalingInstruction.html).\n\nThe `application_source` object supports the following:\n\n* `cloudformation_stack_arn` - (Optional) ARN of a AWS CloudFormation stack.\n* `tag_filter` - (Optional) Set of tags.\n\nThe `tag_filter` object supports the following:\n\n* `key` - (Required) Tag key.\n* `values` - (Optional) Tag values.\n\nThe `scaling_instruction` object supports the following:\n\n* `max_capacity` - (Required) Maximum capacity of the resource. The exception to this upper limit is if you specify a non-default setting for `predictive_scaling_max_capacity_behavior`.\n* `min_capacity` - (Required) Minimum capacity of the resource.\n* `resource_id` - (Required) ID of the resource. This string consists of the resource type and unique identifier.\n* `scalable_dimension` - (Required) Scalable dimension associated with the resource. Valid values: `autoscaling:autoScalingGroup:DesiredCapacity`, `dynamodb:index:ReadCapacityUnits`, `dynamodb:index:WriteCapacityUnits`, `dynamodb:table:ReadCapacityUnits`, `dynamodb:table:WriteCapacityUnits`, `ecs:service:DesiredCount`, `ec2:spot-fleet-request:TargetCapacity`, `rds:cluster:ReadReplicaCount`.\n* `service_namespace` - (Required) Namespace of the AWS service. Valid values: `autoscaling`, `dynamodb`, `ecs`, `ec2`, `rds`.\n* `target_tracking_configuration` - (Required) Structure that defines new target tracking configurations. Each of these structures includes a specific scaling metric and a target value for the metric, along with various parameters to use with dynamic scaling.\nMore details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_TargetTrackingConfiguration.html).\n* `customized_load_metric_specification` - (Optional) Customized load metric to use for predictive scaling. You must specify either `customized_load_metric_specification` or `predefined_load_metric_specification` when configuring predictive scaling.\nMore details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedLoadMetricSpecification.html).\n* `disable_dynamic_scaling` - (Optional) Boolean controlling whether dynamic scaling by AWS Auto Scaling is disabled. Defaults to `false`.\n* `predefined_load_metric_specification` - (Optional) Predefined load metric to use for predictive scaling. You must specify either `predefined_load_metric_specification` or `customized_load_metric_specification` when configuring predictive scaling.\nMore details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedLoadMetricSpecification.html).\n* `predictive_scaling_max_capacity_behavior`- (Optional) Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity specified for the resource.\nValid values: `SetForecastCapacityToMaxCapacity`, `SetMaxCapacityAboveForecastCapacity`, `SetMaxCapacityToForecastCapacity`.\n* `predictive_scaling_max_capacity_buffer` - (Optional) Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity.\n* `predictive_scaling_mode` - (Optional) Predictive scaling mode. Valid values: `ForecastAndScale`, `ForecastOnly`.\n* `scaling_policy_update_behavior` - (Optional) Controls whether a resource's externally created scaling policies are kept or replaced. Valid values: `KeepExternalPolicies`, `ReplaceExternalPolicies`. Defaults to `KeepExternalPolicies`.\n* `scheduled_action_buffer_time` - (Optional) Amount of time, in seconds, to buffer the run time of scheduled scaling actions when scaling out.\n\nThe `customized_load_metric_specification` object supports the following:\n\n* `metric_name` - (Required) Name of the metric.\n* `namespace` - (Required) Namespace of the metric.\n* `statistic` - (Required) Statistic of the metric. Currently, the value must always be `Sum`.\n* `dimensions` - (Optional) Dimensions of the metric.\n* `unit` - (Optional) Unit of the metric.\n\nThe `predefined_load_metric_specification` object supports the following:\n\n* `predefined_load_metric_type` - (Required) Metric type. Valid values: `ALBTargetGroupRequestCount`, `ASGTotalCPUUtilization`, `ASGTotalNetworkIn`, `ASGTotalNetworkOut`.\n* `resource_label` - (Optional) Identifies the resource associated with the metric type.\n\nThe `target_tracking_configuration` object supports the following:\n\n* `target_value` - (Required) Target value for the metric.\n* `customized_scaling_metric_specification` - (Optional) Customized metric. You can specify either `customized_scaling_metric_specification` or `predefined_scaling_metric_specification`.\nMore details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_CustomizedScalingMetricSpecification.html).\n* `disable_scale_in` - (Optional) Boolean indicating whether scale in by the target tracking scaling policy is disabled. Defaults to `false`.\n* `predefined_scaling_metric_specification` - (Optional) Predefined metric. You can specify either `predefined_scaling_metric_specification` or `customized_scaling_metric_specification`.\nMore details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_PredefinedScalingMetricSpecification.html).\n* `estimated_instance_warmup` - (Optional) Estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics.\nThis value is used only if the resource is an Auto Scaling group.\n* `scale_in_cooldown` - (Optional) Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.\nThis value is not used if the scalable resource is an Auto Scaling group.\n* `scale_out_cooldown` - (Optional) Amount of time, in seconds, after a scale-out activity completes before another scale-out activity can start.\nThis value is not used if the scalable resource is an Auto Scaling group.\n\nThe `customized_scaling_metric_specification` object supports the following:\n\n* `metric_name` - (Required) Name of the metric.\n* `namespace` - (Required) Namespace of the metric.\n* `statistic` - (Required) Statistic of the metric. Valid values: `Average`, `Maximum`, `Minimum`, `SampleCount`, `Sum`.\n* `dimensions` - (Optional) Dimensions of the metric.\n* `unit` - (Optional) Unit of the metric.\n\nThe `predefined_scaling_metric_specification` object supports the following:\n\n* `predefined_scaling_metric_type` - (Required) Metric type. Valid values: `ALBRequestCountPerTarget`, `ASGAverageCPUUtilization`, `ASGAverageNetworkIn`, `ASGAverageNetworkOut`, `DynamoDBReadCapacityUtilization`, `DynamoDBWriteCapacityUtilization`, `ECSServiceAverageCPUUtilization`, `ECSServiceAverageMemoryUtilization`, `EC2SpotFleetRequestAverageCPUUtilization`, `EC2SpotFleetRequestAverageNetworkIn`, `EC2SpotFleetRequestAverageNetworkOut`, `RDSReaderAverageCPUUtilization`, `RDSReaderAverageDatabaseConnections`.\n* `resource_label` - (Optional) Identifies the resource associated with the metric type.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Scaling plan identifier.\n* `scaling_plan_version` - The version number of the scaling plan. This value is always 1.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Auto Scaling scaling plans using the `name`. For example:\n\n```terraform\nimport {\n  to = aws_autoscalingplans_scaling_plan.example\n  id = \"MyScale1\"\n}\n```\n\nUsing `terraform import`, import Auto Scaling scaling plans using the `name`. For example:\n\n```console\n% terraform import aws_autoscalingplans_scaling_plan.example MyScale1\n```\n",
      "language": "hcl",
      "path": "website/docs/r/autoscalingplans_scaling_plan.html.markdown",
      "slug": "autoscalingplans_scaling_plan",
      "subcategory": "Auto Scaling Plans",
      "title": "autoscalingplans_scaling_plan",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3224943"
    }
  }
}