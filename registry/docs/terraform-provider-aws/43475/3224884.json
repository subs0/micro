{
  "data": {
    "type": "provider-docs",
    "id": "3224884",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"AppConfig\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appconfig_environment\"\ndescription: |-\n  Provides an AppConfig Environment resource.\n---\n\n# Resource: aws_appconfig_environment\n\nProvides an AppConfig Environment resource for an [`aws_appconfig_application` resource](appconfig_application.html.markdown). One or more environments can be defined for an application.\n\n## Example Usage\n\n```terraform\nresource \"aws_appconfig_environment\" \"example\" {\n  name           = \"example-environment-tf\"\n  description    = \"Example AppConfig Environment\"\n  application_id = aws_appconfig_application.example.id\n\n  monitor {\n    alarm_arn      = aws_cloudwatch_metric_alarm.example.arn\n    alarm_role_arn = aws_iam_role.example.arn\n  }\n\n  tags = {\n    Type = \"AppConfig Environment\"\n  }\n}\n\nresource \"aws_appconfig_application\" \"example\" {\n  name        = \"example-application-tf\"\n  description = \"Example AppConfig Application\"\n\n  tags = {\n    Type = \"AppConfig Application\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `application_id` - (Required, Forces new resource) AppConfig application ID. Must be between 4 and 7 characters in length.\n* `name` - (Required) Name for the environment. Must be between 1 and 64 characters in length.\n* `description` - (Optional) Description of the environment. Can be at most 1024 characters.\n* `monitor` - (Optional) Set of Amazon CloudWatch alarms to monitor during the deployment process. Maximum of 5. See [Monitor](#monitor) below for more details.\n* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### Monitor\n\nThe `monitor` block supports the following:\n\n* `alarm_arn` - (Required) ARN of the Amazon CloudWatch alarm.\n* `alarm_role_arn` - (Optional) ARN of an IAM role for AWS AppConfig to monitor `alarm_arn`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - ARN of the AppConfig Environment.\n* `id` - (**Deprecated**) AppConfig environment ID and application ID separated by a colon (`:`).\n* `environment_id` - AppConfig environment ID.\n* `state` - State of the environment. Possible values are `READY_FOR_DEPLOYMENT`, `DEPLOYING`, `ROLLING_BACK`\n  or `ROLLED_BACK`.\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AppConfig Environments using the environment ID and application ID separated by a colon (`:`). For example:\n\n```terraform\nimport {\n  to = aws_appconfig_environment.example\n  id = \"71abcde:11xxxxx\"\n}\n```\n\nUsing `terraform import`, import AppConfig Environments using the environment ID and application ID separated by a colon (`:`). For example:\n\n```console\n% terraform import aws_appconfig_environment.example 71abcde:11xxxxx\n```\n",
      "language": "hcl",
      "path": "website/docs/r/appconfig_environment.html.markdown",
      "slug": "appconfig_environment",
      "subcategory": "AppConfig",
      "title": "appconfig_environment",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3224884"
    }
  }
}