{
  "data": {
    "type": "provider-docs",
    "id": "3225156",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Directory Service\"\nlayout: \"aws\"\npage_title: \"AWS: aws_directory_service_trust\"\ndescription: |-\n  Manages a trust relationship between two Active Directory Directories.\n---\n\n# Resource: aws_directory_service_trust\n\nManages a trust relationship between two Active Directory Directories.\n\nThe directories may either be both AWS Managed Microsoft AD domains or an AWS Managed Microsoft AD domain and a self-managed Active Directory Domain.\n\nThe Trust relationship must be configured on both sides of the relationship.\nIf a Trust has only been created on one side, it will be in the state `VerifyFailed`.\nOnce the second Trust is created, the first will update to the correct state.\n\n## Example Usage\n\n### Two-Way Trust\n\n```terraform\nresource \"aws_directory_service_trust\" \"one\" {\n  directory_id = aws_directory_service_directory.one.id\n\n  remote_domain_name = aws_directory_service_directory.two.name\n  trust_direction    = \"Two-Way\"\n  trust_password     = \"Some0therPassword\"\n\n  conditional_forwarder_ip_addrs = aws_directory_service_directory.two.dns_ip_addresses\n}\n\nresource \"aws_directory_service_trust\" \"two\" {\n  directory_id = aws_directory_service_directory.two.id\n\n  remote_domain_name = aws_directory_service_directory.one.name\n  trust_direction    = \"Two-Way\"\n  trust_password     = \"Some0therPassword\"\n\n  conditional_forwarder_ip_addrs = aws_directory_service_directory.one.dns_ip_addresses\n}\n\nresource \"aws_directory_service_directory\" \"one\" {\n  name = \"one.example.com\"\n  type = \"MicrosoftAD\"\n  # ...\n}\n\nresource \"aws_directory_service_directory\" \"two\" {\n  name = \"two.example.com\"\n  type = \"MicrosoftAD\"\n  # ...\n}\n```\n\n### One-Way Trust\n\n```terraform\nresource \"aws_directory_service_trust\" \"one\" {\n  directory_id = aws_directory_service_directory.one.id\n\n  remote_domain_name = aws_directory_service_directory.two.name\n  trust_direction    = \"One-Way: Incoming\"\n  trust_password     = \"Some0therPassword\"\n\n  conditional_forwarder_ip_addrs = aws_directory_service_directory.two.dns_ip_addresses\n}\n\nresource \"aws_directory_service_trust\" \"two\" {\n  directory_id = aws_directory_service_directory.two.id\n\n  remote_domain_name = aws_directory_service_directory.one.name\n  trust_direction    = \"One-Way: Outgoing\"\n  trust_password     = \"Some0therPassword\"\n\n  conditional_forwarder_ip_addrs = aws_directory_service_directory.one.dns_ip_addresses\n}\n\nresource \"aws_directory_service_directory\" \"one\" {\n  name = \"one.example.com\"\n  type = \"MicrosoftAD\"\n  # ...\n}\n\nresource \"aws_directory_service_directory\" \"two\" {\n  name = \"two.example.com\"\n  type = \"MicrosoftAD\"\n  # ...\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `conditional_forwarder_ip_addrs` - (Optional) Set of IPv4 addresses for the DNS server associated with the remote Directory.\n  Can contain between 1 and 4 values.\n* `delete_associated_conditional_forwarder` - (Optional) Whether to delete the conditional forwarder when deleting the Trust relationship.\n* `directory_id` - (Required) ID of the Directory.\n* `remote_domain_name` - (Required) Fully qualified domain name of the remote Directory.\n* `selective_auth` - (Optional) Whether to enable selective authentication.\n  Valid values are `Enabled` and `Disabled`.\n  Default value is `Disabled`.\n* `trust_direction` - (Required) The direction of the Trust relationship.\n  Valid values are `One-Way: Outgoing`, `One-Way: Incoming`, and `Two-Way`.\n* `trust_password` - (Required) Password for the Trust.\n  Does not need to match the passwords for either Directory.\n  Can contain upper- and lower-case letters, numbers, and punctuation characters.\n  May be up to 128 characters long.\n* `trust_type` - (Optional) Type of the Trust relationship.\n  Valid values are `Forest` and `External`.\n  Default value is `Forest`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `created_date_time` - Date and time when the Trust was created.\n* `id` - The Trust identifier.\n* `last_updated_date_time` - Date and time when the Trust was last updated.\n* `state_last_updated_date_time` - Date and time when the Trust state in `trust_state` was last updated.\n* `trust_state` - State of the Trust relationship.\n  One of `Created`, `VerifyFailed`,`Verified`, `UpdateFailed`,`Updated`,`Deleted`, or `Failed`.\n* `trust_state_reason` - Reason for the Trust state set in `trust_state`.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import the Trust relationship using the directory ID and remote domain name, separated by a `/`. For example:\n\n```terraform\nimport {\n  to = aws_directory_service_trust.example\n  id = \"d-926724cf57/directory.example.com\"\n}\n```\n\nUsing `terraform import`, import the Trust relationship using the directory ID and remote domain name, separated by a `/`. For example:\n\n```console\n% terraform import aws_directory_service_trust.example d-926724cf57/directory.example.com\n```\n",
      "language": "hcl",
      "path": "website/docs/r/directory_service_trust.html.markdown",
      "slug": "directory_service_trust",
      "subcategory": "Directory Service",
      "title": "directory_service_trust",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225156"
    }
  }
}