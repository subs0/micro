{
  "data": {
    "type": "provider-docs",
    "id": "3224895",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"App Mesh\"\nlayout: \"aws\"\npage_title: \"AWS: aws_appmesh_route\"\ndescription: |-\n  Provides an AWS App Mesh route resource.\n---\n\n# Resource: aws_appmesh_route\n\nProvides an AWS App Mesh route resource.\n\n## Example Usage\n\n### HTTP Routing\n\n```terraform\nresource \"aws_appmesh_route\" \"serviceb\" {\n  name                = \"serviceB-route\"\n  mesh_name           = aws_appmesh_mesh.simple.id\n  virtual_router_name = aws_appmesh_virtual_router.serviceb.name\n\n  spec {\n    http_route {\n      match {\n        prefix = \"/\"\n      }\n\n      action {\n        weighted_target {\n          virtual_node = aws_appmesh_virtual_node.serviceb1.name\n          weight       = 90\n        }\n\n        weighted_target {\n          virtual_node = aws_appmesh_virtual_node.serviceb2.name\n          weight       = 10\n        }\n      }\n    }\n  }\n}\n```\n\n### HTTP Header Routing\n\n```terraform\nresource \"aws_appmesh_route\" \"serviceb\" {\n  name                = \"serviceB-route\"\n  mesh_name           = aws_appmesh_mesh.simple.id\n  virtual_router_name = aws_appmesh_virtual_router.serviceb.name\n\n  spec {\n    http_route {\n      match {\n        method = \"POST\"\n        prefix = \"/\"\n        scheme = \"https\"\n\n        header {\n          name = \"clientRequestId\"\n\n          match {\n            prefix = \"123\"\n          }\n        }\n      }\n\n      action {\n        weighted_target {\n          virtual_node = aws_appmesh_virtual_node.serviceb.name\n          weight       = 100\n        }\n      }\n    }\n  }\n}\n```\n\n### Retry Policy\n\n```terraform\nresource \"aws_appmesh_route\" \"serviceb\" {\n  name                = \"serviceB-route\"\n  mesh_name           = aws_appmesh_mesh.simple.id\n  virtual_router_name = aws_appmesh_virtual_router.serviceb.name\n\n  spec {\n    http_route {\n      match {\n        prefix = \"/\"\n      }\n\n      retry_policy {\n        http_retry_events = [\n          \"server-error\",\n        ]\n        max_retries = 1\n\n        per_retry_timeout {\n          unit  = \"s\"\n          value = 15\n        }\n      }\n\n      action {\n        weighted_target {\n          virtual_node = aws_appmesh_virtual_node.serviceb.name\n          weight       = 100\n        }\n      }\n    }\n  }\n}\n```\n\n### TCP Routing\n\n```terraform\nresource \"aws_appmesh_route\" \"serviceb\" {\n  name                = \"serviceB-route\"\n  mesh_name           = aws_appmesh_mesh.simple.id\n  virtual_router_name = aws_appmesh_virtual_router.serviceb.name\n\n  spec {\n    tcp_route {\n      action {\n        weighted_target {\n          virtual_node = aws_appmesh_virtual_node.serviceb1.name\n          weight       = 100\n        }\n      }\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Required) Name to use for the route. Must be between 1 and 255 characters in length.\n* `mesh_name` - (Required) Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.\n* `mesh_owner` - (Optional) AWS account ID of the service mesh's owner. Defaults to the account ID the [AWS provider][1] is currently connected to.\n* `virtual_router_name` - (Required) Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.\n* `spec` - (Required) Route specification to apply.\n* `tags` - (Optional) Map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\nThe `spec` object supports the following:\n\n* `grpc_route` - (Optional) GRPC routing information for the route.\n* `http2_route` - (Optional) HTTP/2 routing information for the route.\n* `http_route` - (Optional) HTTP routing information for the route.\n* `priority` - (Optional) Priority for the route, between `0` and `1000`.\nRoutes are matched based on the specified value, where `0` is the highest priority.\n* `tcp_route` - (Optional) TCP routing information for the route.\n\nThe `grpc_route` object supports the following:\n\n* `action` - (Required) Action to take if a match is determined.\n* `match` - (Required) Criteria for determining an gRPC request match.\n* `retry_policy` - (Optional) Retry policy.\n* `timeout` - (Optional) Types of timeouts.\n\nThe `http2_route` and `http_route` objects supports the following:\n\n* `action` - (Required) Action to take if a match is determined.\n* `match` - (Required) Criteria for determining an HTTP request match.\n* `retry_policy` - (Optional) Retry policy.\n* `timeout` - (Optional) Types of timeouts.\n\nThe `tcp_route` object supports the following:\n\n* `action` - (Required) Action to take if a match is determined.\n* `timeout` - (Optional) Types of timeouts.\n\nThe `action` object supports the following:\n\n* `weighted_target` - (Required) Targets that traffic is routed to when a request matches the route.\nYou can specify one or more targets and their relative weights with which to distribute traffic.\n\nThe `timeout` object supports the following:\n\n* `idle` - (Optional) Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.\n\nThe `idle` object supports the following:\n\n* `unit` - (Required) Unit of time. Valid values: `ms`, `s`.\n* `value` - (Required) Number of time units. Minimum value of `0`.\n\nThe `grpc_route`'s `match` object supports the following:\n\n* `metadata` - (Optional) Data to match from the gRPC request.\n* `method_name` - (Optional) Method name to match from the request. If you specify a name, you must also specify a `service_name`.\n* `service_name` - (Optional) Fully qualified domain name for the service to match from the request.\n* `port`- (Optional) The port number to match from the request.\n\nThe `metadata` object supports the following:\n\n* `name` - (Required) Name of the route. Must be between 1 and 50 characters in length.\n* `invert` - (Optional) If `true`, the match is on the opposite of the `match` criteria. Default is `false`.\n* `match` - (Optional) Data to match from the request.\n\nThe `metadata`'s `match` object supports the following:\n\n* `exact` - (Optional) Value sent by the client must match the specified value exactly. Must be between 1 and 255 characters in length.\n* `prefix` - (Optional) Value sent by the client must begin with the specified characters. Must be between 1 and 255 characters in length.\n* `port`- (Optional) The port number to match from the request.\n* `range`- (Optional) Object that specifies the range of numbers that the value sent by the client must be included in.\n* `regex` - (Optional) Value sent by the client must include the specified characters. Must be between 1 and 255 characters in length.\n* `suffix` - (Optional) Value sent by the client must end with the specified characters. Must be between 1 and 255 characters in length.\n\nThe `grpc_route`'s `retry_policy` object supports the following:\n\n* `grpc_retry_events` - (Optional) List of gRPC retry events.\nValid values: `cancelled`, `deadline-exceeded`, `internal`, `resource-exhausted`, `unavailable`.\n* `http_retry_events` - (Optional) List of HTTP retry events.\nValid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).\n* `max_retries` - (Required) Maximum number of retries.\n* `per_retry_timeout` - (Required) Per-retry timeout.\n* `tcp_retry_events` - (Optional) List of TCP retry events. The only valid value is `connection-error`.\n\nThe `grpc_route`'s `timeout` object supports the following:\n\n* `idle` - (Optional) Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.\n* `per_request` - (Optional) Per request timeout.\n\nThe `idle` and `per_request` objects support the following:\n\n* `unit` - (Required) Unit of time. Valid values: `ms`, `s`.\n* `value` - (Required) Number of time units. Minimum value of `0`.\n\nThe `http2_route` and `http_route`'s `match` object supports the following:\n\n* `prefix` - (Optional) Path with which to match requests.\nThis parameter must always start with /, which by itself matches all requests to the virtual router service name.\n* `port`- (Optional) The port number to match from the request.\n* `header` - (Optional) Client request headers to match on.\n* `method` - (Optional) Client request header method to match on. Valid values: `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `CONNECT`, `OPTIONS`, `TRACE`, `PATCH`.\n* `path` - (Optional) Client request path to match on.\n* `query_parameter` - (Optional) Client request query parameters to match on.\n* `scheme` - (Optional) Client request header scheme to match on. Valid values: `http`, `https`.\n\nThe `match`'s `path` object supports the following:\n\n* `exact` - (Optional) The exact path to match on.\n* `regex` - (Optional) The regex used to match the path.\n\nThe `match`'s `query_parameter` object supports the following:\n\n* `name` - (Required) Name for the query parameter that will be matched on.\n* `match` - (Optional) The query parameter to match on.\n\nThe `query_parameter`'s `match` object supports the following:\n\n* `exact` - (Optional) The exact query parameter to match on.\n\nThe `http2_route` and `http_route`'s `retry_policy` object supports the following:\n\n* `http_retry_events` - (Optional) List of HTTP retry events.\nValid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).\n* `max_retries` - (Required) Maximum number of retries.\n* `per_retry_timeout` - (Required) Per-retry timeout.\n* `tcp_retry_events` - (Optional) List of TCP retry events. The only valid value is `connection-error`.\n\nYou must specify at least one value for `http_retry_events`, or at least one value for `tcp_retry_events`.\n\nThe `http2_route` and `http_route`'s `timeout` object supports the following:\n\n* `idle` - (Optional) Idle timeout. An idle timeout bounds the amount of time that a connection may be idle.\n* `per_request` - (Optional) Per request timeout.\n\nThe `idle` and `per_request` objects support the following:\n\n* `unit` - (Required) Unit of time. Valid values: `ms`, `s`.\n* `value` - (Required) Number of time units. Minimum value of `0`.\n\nThe `per_retry_timeout` object supports the following:\n\n* `unit` - (Required) Retry unit. Valid values: `ms`, `s`.\n* `value` - (Required) Retry value.\n\nThe `weighted_target` object supports the following:\n\n* `virtual_node` - (Required) Virtual node to associate with the weighted target. Must be between 1 and 255 characters in length.\n* `weight` - (Required) Relative weight of the weighted target. An integer between 0 and 100.\n* `port` - (Optional) The targeted port of the weighted object.\n\nThe `header` object supports the following:\n\n* `name` - (Required) Name for the HTTP header in the client request that will be matched on.\n* `invert` - (Optional) If `true`, the match is on the opposite of the `match` method and value. Default is `false`.\n* `match` - (Optional) Method and value to match the header value sent with a request. Specify one match method.\n\nThe `header`'s `match` object supports the following:\n\n* `exact` - (Optional) Header value sent by the client must match the specified value exactly.\n* `prefix` - (Optional) Header value sent by the client must begin with the specified characters.\n* `port`- (Optional) The port number to match from the request.\n* `range`- (Optional) Object that specifies the range of numbers that the header value sent by the client must be included in.\n* `regex` - (Optional) Header value sent by the client must include the specified characters.\n* `suffix` - (Optional) Header value sent by the client must end with the specified characters.\n\nThe `range` object supports the following:\n\n* `end` - (Required) End of the range.\n* `start` - (Requited) Start of the range.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the route.\n* `arn` - ARN of the route.\n* `created_date` - Creation date of the route.\n* `last_updated_date` - Last update date of the route.\n* `resource_owner` - Resource owner's AWS account ID.\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import App Mesh virtual routes using `mesh_name` and `virtual_router_name` together with the route's `name`. For example:\n\n```terraform\nimport {\n  to = aws_appmesh_route.serviceb\n  id = \"simpleapp/serviceB/serviceB-route\"\n}\n```\n\nUsing `terraform import`, import App Mesh virtual routes using `mesh_name` and `virtual_router_name` together with the route's `name`. For example:\n\n```console\n% terraform import aws_appmesh_route.serviceb simpleapp/serviceB/serviceB-route\n```\n\n[1]: /docs/providers/aws/index.html\n",
      "language": "hcl",
      "path": "website/docs/r/appmesh_route.html.markdown",
      "slug": "appmesh_route",
      "subcategory": "App Mesh",
      "title": "appmesh_route",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3224895"
    }
  }
}