{
  "data": {
    "type": "provider-docs",
    "id": "3225405",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"IAM (Identity & Access Management)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_iam_virtual_mfa_device\"\ndescription: |-\n  Provides an IAM Virtual MFA Device\n---\n\n# Resource: aws_iam_virtual_mfa_device\n\nProvides an IAM Virtual MFA Device.\n\n~> **Note:** All attributes will be stored in the raw state as plain-text.\n[Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).\n\n~> **Note:** A virtual MFA device cannot be directly associated with an IAM User from Terraform.\n  To associate the virtual MFA device with a user and enable it, use the code returned in either `base_32_string_seed` or `qr_code_png` to generate TOTP authentication codes.\n  The authentication codes can then be used with the AWS CLI command [`aws iam enable-mfa-device`](https://docs.aws.amazon.com/cli/latest/reference/iam/enable-mfa-device.html) or the AWS API call [`EnableMFADevice`](https://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html).\n\n## Example Usage\n\n**Using certs on file:**\n\n```terraform\nresource \"aws_iam_virtual_mfa_device\" \"example\" {\n  virtual_mfa_device_name = \"example\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `virtual_mfa_device_name` - (Required) The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device.\n* `path` â€“ (Optional) The path for the virtual MFA device.\n* `tags` - (Optional) Map of resource tags for the virtual mfa device. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - The Amazon Resource Name (ARN) specifying the virtual mfa device.\n* `base_32_string_seed` - The base32 seed defined as specified in [RFC3548](https://tools.ietf.org/html/rfc3548.txt). The `base_32_string_seed` is base64-encoded.\n* `enable_date` - The date and time when the virtual MFA device was enabled.\n* `qr_code_png` -  A QR code PNG image that encodes `otpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String` where `$virtualMFADeviceName` is one of the create call arguments. AccountName is the user name if set (otherwise, the account ID), and Base32String is the seed in base32 format.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n* `user_name` - The associated IAM User name if the virtual MFA device is enabled.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IAM Virtual MFA Devices using the `arn`. For example:\n\n```terraform\nimport {\n  to = aws_iam_virtual_mfa_device.example\n  id = \"arn:aws:iam::123456789012:mfa/example\"\n}\n```\n\nUsing `terraform import`, import IAM Virtual MFA Devices using the `arn`. For example:\n\n```console\n% terraform import aws_iam_virtual_mfa_device.example arn:aws:iam::123456789012:mfa/example\n```\n",
      "language": "hcl",
      "path": "website/docs/r/iam_virtual_mfa_device.html.markdown",
      "slug": "iam_virtual_mfa_device",
      "subcategory": "IAM (Identity & Access Management)",
      "title": "iam_virtual_mfa_device",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225405"
    }
  }
}