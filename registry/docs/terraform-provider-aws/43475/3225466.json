{
  "data": {
    "type": "provider-docs",
    "id": "3225466",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"KMS (Key Management)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_kms_external_key\"\ndescription: |-\n  Manages a single-Region or multi-Region primary KMS key that uses external key material.\n---\n\n# Resource: aws_kms_external_key\n\nManages a single-Region or multi-Region primary KMS key that uses external key material.\nTo instead manage a single-Region or multi-Region primary KMS key where AWS automatically generates and potentially rotates key material, see the [`aws_kms_key` resource](/docs/providers/aws/r/kms_key.html).\n\n~> **Note:** All arguments including the key material will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).\n\n## Example Usage\n\n```terraform\nresource \"aws_kms_external_key\" \"example\" {\n  description = \"KMS EXTERNAL for AMI encryption\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `bypass_policy_lockout_safety_check` - (Optional) Specifies whether to disable the policy lockout check performed when creating or updating the key's policy. Setting this value to `true` increases the risk that the key becomes unmanageable. For more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the AWS Key Management Service Developer Guide. Defaults to `false`.\n* `deletion_window_in_days` - (Optional) Duration in days after which the key is deleted after destruction of the resource. Must be between `7` and `30` days. Defaults to `30`.\n* `description` - (Optional) Description of the key.\n* `enabled` - (Optional) Specifies whether the key is enabled. Keys pending import can only be `false`. Imported keys default to `true` unless expired.\n* `key_material_base64` - (Optional) Base64 encoded 256-bit symmetric encryption key material to import. The CMK is permanently associated with this key material. The same key material can be reimported, but you cannot import different key material.\n* `multi_region` - (Optional) Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key. Defaults to `false`.\n* `policy` - (Optional) A key policy JSON document. If you do not provide a key policy, AWS KMS attaches a default key policy to the CMK.\n* `tags` - (Optional) A key-value map of tags to assign to the key. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `valid_to` - (Optional) Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. If not specified, key material does not expire. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - The Amazon Resource Name (ARN) of the key.\n* `expiration_model` - Whether the key material expires. Empty when pending key material import, otherwise `KEY_MATERIAL_EXPIRES` or `KEY_MATERIAL_DOES_NOT_EXPIRE`.\n* `id` - The unique identifier for the key.\n* `key_state` - The state of the CMK.\n* `key_usage` - The cryptographic operations for which you can use the CMK.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import KMS External Keys using the `id`. For example:\n\n```terraform\nimport {\n  to = aws_kms_external_key.a\n  id = \"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"\n}\n```\n\nUsing `terraform import`, import KMS External Keys using the `id`. For example:\n\n```console\n% terraform import aws_kms_external_key.a arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\n```\n",
      "language": "hcl",
      "path": "website/docs/r/kms_external_key.html.markdown",
      "slug": "kms_external_key",
      "subcategory": "KMS (Key Management)",
      "title": "kms_external_key",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225466"
    }
  }
}