{
  "data": {
    "type": "provider-docs",
    "id": "3225051",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"CodeStar Connections\"\nlayout: \"aws\"\npage_title: \"AWS: aws_codestarconnections_host\"\ndescription: |-\n  Provides a CodeStar Host\n---\n\n# Resource: aws_codestarconnections_host\n\nProvides a CodeStar Host.\n\n~> **NOTE:** The `aws_codestarconnections_host` resource is created in the state `PENDING`. Authentication with the host provider must be completed in the AWS Console. For more information visit [Set up a pending host](https://docs.aws.amazon.com/dtconsole/latest/userguide/connections-host-setup.html).\n\n## Example Usage\n\n```terraform\nresource \"aws_codestarconnections_host\" \"example\" {\n  name              = \"example-host\"\n  provider_endpoint = \"https://example.com\"\n  provider_type     = \"GitHubEnterpriseServer\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Required) The name of the host to be created. The name must be unique in the calling AWS account.\n* `provider_endpoint` - (Required) The endpoint of the infrastructure to be represented by the host after it is created.\n* `provider_type` - (Required) The name of the external provider where your third-party code repository is configured.\n* `vpc_configuration` - (Optional) The VPC configuration to be provisioned for the host. A VPC must be configured, and the infrastructure to be represented by the host must already be connected to the VPC.\n\nA `vpc_configuration` block supports the following arguments:\n\n* `security_group_ids` - (Required) ID of the security group or security groups associated with the Amazon VPC connected to the infrastructure where your provider type is installed.\n* `subnet_ids` - (Required) The ID of the subnet or subnets associated with the Amazon VPC connected to the infrastructure where your provider type is installed.\n* `tls_certificate` - (Optional) The value of the Transport Layer Security (TLS) certificate associated with the infrastructure where your provider type is installed.\n* `vpc_id` - (Required) The ID of the Amazon VPC connected to the infrastructure where your provider type is installed.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The CodeStar Host ARN.\n* `arn` - The CodeStar Host ARN.\n* `status` - The CodeStar Host status. Possible values are `PENDING`, `AVAILABLE`, `VPC_CONFIG_DELETING`, `VPC_CONFIG_INITIALIZING`, and `VPC_CONFIG_FAILED_INITIALIZATION`.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import CodeStar Host using the ARN. For example:\n\n```terraform\nimport {\n  to = aws_codestarconnections_host.example-host\n  id = \"arn:aws:codestar-connections:us-west-1:0123456789:host/79d4d357-a2ee-41e4-b350-2fe39ae59448\"\n}\n```\n\nUsing `terraform import`, import CodeStar Host using the ARN. For example:\n\n```console\n% terraform import aws_codestarconnections_host.example-host arn:aws:codestar-connections:us-west-1:0123456789:host/79d4d357-a2ee-41e4-b350-2fe39ae59448\n```\n",
      "language": "hcl",
      "path": "website/docs/r/codestarconnections_host.html.markdown",
      "slug": "codestarconnections_host",
      "subcategory": "CodeStar Connections",
      "title": "codestarconnections_host",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225051"
    }
  }
}