{
  "data": {
    "type": "provider-docs",
    "id": "3225488",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Auto Scaling\"\nlayout: \"aws\"\npage_title: \"AWS: aws_launch_configuration\"\ndescription: |-\n  Provides a resource to create a new launch configuration, used for autoscaling groups.\n---\n\n# Resource: aws_launch_configuration\n\nProvides a resource to create a new launch configuration, used for autoscaling groups.\n\n!> **WARNING:** The use of launch configurations is discouraged in favour of launch templates. Read more in the [AWS EC2 Documentation](https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-configurations.html).\n\n-> **Note** When using `aws_launch_configuration` with `aws_autoscaling_group`, it is recommended to use the `name_prefix` (Optional) instead of the `name` (Optional) attribute. This will allow Terraform lifecycles to detect changes to the launch configuration and update the autoscaling group correctly.\n\n## Example Usage\n\n```terraform\ndata \"aws_ami\" \"ubuntu\" {\n  most_recent = true\n\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"]\n  }\n\n  filter {\n    name   = \"virtualization-type\"\n    values = [\"hvm\"]\n  }\n\n  owners = [\"099720109477\"] # Canonical\n}\n\nresource \"aws_launch_configuration\" \"as_conf\" {\n  name          = \"web_config\"\n  image_id      = data.aws_ami.ubuntu.id\n  instance_type = \"t2.micro\"\n}\n```\n\n## Using with AutoScaling Groups\n\nLaunch Configurations cannot be updated after creation with the Amazon\nWeb Service API. In order to update a Launch Configuration, Terraform will\ndestroy the existing resource and create a replacement. In order to effectively\nuse a Launch Configuration resource with an [AutoScaling Group resource][1],\nit's recommended to specify `create_before_destroy` in a [lifecycle][2] block.\nEither omit the Launch Configuration `name` attribute, or specify a partial name\nwith `name_prefix`.  Example:\n\n```terraform\ndata \"aws_ami\" \"ubuntu\" {\n  most_recent = true\n\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"]\n  }\n\n  filter {\n    name   = \"virtualization-type\"\n    values = [\"hvm\"]\n  }\n\n  owners = [\"099720109477\"] # Canonical\n}\n\nresource \"aws_launch_configuration\" \"as_conf\" {\n  name_prefix   = \"terraform-lc-example-\"\n  image_id      = data.aws_ami.ubuntu.id\n  instance_type = \"t2.micro\"\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_autoscaling_group\" \"bar\" {\n  name                 = \"terraform-asg-example\"\n  launch_configuration = aws_launch_configuration.as_conf.name\n  min_size             = 1\n  max_size             = 2\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n```\n\nWith this setup Terraform generates a unique name for your Launch\nConfiguration and can then update the AutoScaling Group without conflict before\ndestroying the previous Launch Configuration.\n\n## Using with Spot Instances\n\nLaunch configurations can set the spot instance pricing to be used for the\nAuto Scaling Group to reserve instances. Simply specifying the `spot_price`\nparameter will set the price on the Launch Configuration which will attempt to\nreserve your instances at this price.  See the [AWS Spot Instance\ndocumentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)\nfor more information or how to launch [Spot Instances][3] with Terraform.\n\n```terraform\ndata \"aws_ami\" \"ubuntu\" {\n  most_recent = true\n\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"]\n  }\n\n  filter {\n    name   = \"virtualization-type\"\n    values = [\"hvm\"]\n  }\n\n  owners = [\"099720109477\"] # Canonical\n}\n\nresource \"aws_launch_configuration\" \"as_conf\" {\n  image_id      = data.aws_ami.ubuntu.id\n  instance_type = \"m4.large\"\n  spot_price    = \"0.001\"\n\n  lifecycle {\n    create_before_destroy = true\n  }\n}\n\nresource \"aws_autoscaling_group\" \"bar\" {\n  name                 = \"terraform-asg-example\"\n  launch_configuration = aws_launch_configuration.as_conf.name\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `image_id` - (Required) The EC2 image ID to launch.\n* `instance_type` - (Required) The size of instance to launch.\n\nThe following arguments are optional:\n\n* `associate_public_ip_address` - (Optional) Associate a public ip address with an instance in a VPC.\n* `ebs_block_device` - (Optional) Additional EBS block devices to attach to the instance. See [Block Devices](#block-devices) below for details.\n* `ebs_optimized` - (Optional) If true, the launched EC2 instance will be EBS-optimized.\n* `enable_monitoring` - (Optional) Enables/disables detailed monitoring. This is enabled by default.\n* `ephemeral_block_device` - (Optional) Customize Ephemeral (also known as \"Instance Store\") volumes on the instance. See [Block Devices](#block-devices) below for details.\n* `iam_instance_profile` - (Optional) The name attribute of the IAM instance profile to associate with launched instances.\n* `key_name` - (Optional) The key name that should be used for the instance.\n* `metadata_options` - The metadata options for the instance.\n    * `http_endpoint` - The state of the metadata service: `enabled`, `disabled`.\n    * `http_tokens` - If session tokens are required: `optional`, `required`.\n    * `http_put_response_hop_limit` - The desired HTTP PUT response hop limit for instance metadata requests.\n* `name` - (Optional) The name of the launch configuration. If you leave this blank, Terraform will auto-generate a unique name. Conflicts with `name_prefix`.\n* `name_prefix` - (Optional) Creates a unique name beginning with the specified prefix. Conflicts with `name`.\n* `security_groups` - (Optional) A list of associated security group IDS.\n* `placement_tenancy` - (Optional) The tenancy of the instance. Valid values are `default` or `dedicated`, see [AWS's Create Launch Configuration](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_CreateLaunchConfiguration.html) for more details.\n* `root_block_device` - (Optional) Customize details about the root block device of the instance. See [Block Devices](#block-devices) below for details.\n* `spot_price` - (Optional; Default: On-demand price) The maximum price to use for reserving spot instances.\n* `user_data` - (Optional) The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `user_data_base64` instead.\n* `user_data_base64` - (Optional) Can be used instead of `user_data` to pass base64-encoded binary data directly. Use this instead of `user_data` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.\n\n## Block devices\n\nEach of the `*_block_device` attributes controls a portion of the AWS\nLaunch Configuration's \"Block Device Mapping\". It's a good idea to familiarize yourself with [AWS's Block Device\nMapping docs](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)\nto understand the implications of using these attributes.\n\nEach AWS Instance type has a different set of Instance Store block devices\navailable for attachment. AWS [publishes a\nlist](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#StorageOnInstanceTypes)\nof which ephemeral devices are available on each type. The devices are always\nidentified by the `virtual_name` in the format `ephemeral{0..N}`.\n\n~> **NOTE:** Changes to `*_block_device` configuration of _existing_ resources\ncannot currently be detected by Terraform. After updating to block device\nconfiguration, resource recreation can be manually triggered by using the\n[`taint` command](https://www.terraform.io/docs/commands/taint.html).\n  \n### ebs_block_device\n\nModifying any of the `ebs_block_device` settings requires resource replacement.\n\n* `device_name` - (Required) The name of the device to mount.\n* `snapshot_id` - (Optional) The Snapshot ID to mount.\n* `volume_type` - (Optional) The type of volume. Can be `standard`, `gp2`, `gp3`, `st1`, `sc1` or `io1`.\n* `volume_size` - (Optional) The size of the volume in gigabytes.\n* `iops` - (Optional) The amount of provisioned\n  [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).\n  This must be set with a `volume_type` of `\"io1\"`.\n* `throughput` - (Optional) The throughput (MiBps) to provision for a `gp3` volume.\n* `delete_on_termination` - (Optional) Whether the volume should be destroyed\n  on instance termination (Default: `true`).\n* `encrypted` - (Optional) Whether the volume should be encrypted or not. Defaults to `false`.\n* `no_device` - (Optional) Whether the device in the block device mapping of the AMI is suppressed.\n\n### ephemeral_block_device\n\n* `device_name` - (Required) The name of the block device to mount on the instance.\n* `no_device` - (Optional) Whether the device in the block device mapping of the AMI is suppressed.\n* `virtual_name` - (Optional) The [Instance Store Device Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames).\n\n### root_block_device\n\n-> Modifying any of the `root_block_device` settings requires resource replacement.\n\n* `delete_on_termination` - (Optional) Whether the volume should be destroyed on instance termination. Defaults to `true`.\n* `encrypted` - (Optional) Whether the volume should be encrypted or not. Defaults to `false`.\n* `iops` - (Optional) The amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). This must be set with a `volume_type` of `io1`.\n* `throughput` - (Optional) The throughput (MiBps) to provision for a `gp3` volume.\n* `volume_size` - (Optional) The size of the volume in gigabytes.\n* `volume_type` - (Optional) The type of volume. Can be `standard`, `gp2`, `gp3`, `st1`, `sc1` or `io1`.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The ID of the launch configuration.\n* `arn` - The Amazon Resource Name of the launch configuration.\n* `name` - The name of the launch configuration.\n\n[1]: /docs/providers/aws/r/autoscaling_group.html\n[2]: https://www.terraform.io/docs/configuration/meta-arguments/lifecycle.html\n[3]: /docs/providers/aws/r/spot_instance_request.html\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import launch configurations using the `name`. For example:\n\n```terraform\nimport {\n  to = aws_launch_configuration.as_conf\n  id = \"terraform-lg-123456\"\n}\n```\n\nUsing `terraform import`, import launch configurations using the `name`. For example:\n\n```console\n% terraform import aws_launch_configuration.as_conf terraform-lg-123456\n```\n",
      "language": "hcl",
      "path": "website/docs/r/launch_configuration.html.markdown",
      "slug": "launch_configuration",
      "subcategory": "Auto Scaling",
      "title": "launch_configuration",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225488"
    }
  }
}