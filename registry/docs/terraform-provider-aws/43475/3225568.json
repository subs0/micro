{
  "data": {
    "type": "provider-docs",
    "id": "3225568",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Managed Streaming for Kafka\"\nlayout: \"aws\"\npage_title: \"AWS: aws_msk_scram_secret_association\"\ndescription: |-\n  Associates SCRAM secrets with a Managed Streaming for Kafka (MSK) cluster.\n---\n\n# Resource: aws_msk_scram_secret_association\n\nAssociates SCRAM secrets stored in the Secrets Manager service with a Managed Streaming for Kafka (MSK) cluster.\n\n-> **Note:** The following assumes the MSK cluster has SASL/SCRAM authentication enabled. See below for example usage or refer to the [Username/Password Authentication](https://docs.aws.amazon.com/msk/latest/developerguide/msk-password.html) section of the MSK Developer Guide for more details.\n\nTo set up username and password authentication for a cluster, create an [`aws_secretsmanager_secret` resource](/docs/providers/aws/r/secretsmanager_secret.html) and associate\na username and password with the secret with an [`aws_secretsmanager_secret_version` resource](/docs/providers/aws/r/secretsmanager_secret_version.html). When creating a secret for the cluster,\nthe `name` must have the prefix `AmazonMSK_` and you must either use an existing custom AWS KMS key or create a new\ncustom AWS KMS key for your secret with the [`aws_kms_key` resource](/docs/providers/aws/r/kms_key.html). It is important to note that a policy is required for the `aws_secretsmanager_secret`\nresource in order for Kafka to be able to read it. This policy is attached automatically when the `aws_msk_scram_secret_association` is used,\nhowever, this policy will not be in terraform and as such, will present a diff on plan/apply. For that reason, you must use the [`aws_secretsmanager_secret_policy`\nresource](/docs/providers/aws/r/secretsmanager_secret_policy.html) as shown below in order to ensure that the state is in a clean state after the creation of secret and the association to the cluster.\n\n## Example Usage\n\n```terraform\nresource \"aws_msk_scram_secret_association\" \"example\" {\n  cluster_arn     = aws_msk_cluster.example.arn\n  secret_arn_list = [aws_secretsmanager_secret.example.arn]\n\n  depends_on = [aws_secretsmanager_secret_version.example]\n}\n\nresource \"aws_msk_cluster\" \"example\" {\n  cluster_name = \"example\"\n  # ... other configuration...\n  client_authentication {\n    sasl {\n      scram = true\n    }\n  }\n}\n\nresource \"aws_secretsmanager_secret\" \"example\" {\n  name       = \"AmazonMSK_example\"\n  kms_key_id = aws_kms_key.example.key_id\n}\n\nresource \"aws_kms_key\" \"example\" {\n  description = \"Example Key for MSK Cluster Scram Secret Association\"\n}\n\nresource \"aws_secretsmanager_secret_version\" \"example\" {\n  secret_id     = aws_secretsmanager_secret.example.id\n  secret_string = jsonencode({ username = \"user\", password = \"pass\" })\n}\n\ndata \"aws_iam_policy_document\" \"example\" {\n  statement {\n    sid    = \"AWSKafkaResourcePolicy\"\n    effect = \"Allow\"\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"kafka.amazonaws.com\"]\n    }\n\n    actions   = [\"secretsmanager:getSecretValue\"]\n    resources = [aws_secretsmanager_secret.example.arn]\n  }\n}\n\nresource \"aws_secretsmanager_secret_policy\" \"example\" {\n  secret_arn = aws_secretsmanager_secret.example.arn\n  policy     = data.aws_iam_policy_document.example.json\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `cluster_arn` - (Required, Forces new resource) Amazon Resource Name (ARN) of the MSK cluster.\n* `secret_arn_list` - (Required) List of AWS Secrets Manager secret ARNs.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - Amazon Resource Name (ARN) of the MSK cluster.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import MSK SCRAM Secret Associations using the `id`. For example:\n\n```terraform\nimport {\n  to = aws_msk_scram_secret_association.example\n  id = \"arn:aws:kafka:us-west-2:123456789012:cluster/example/279c0212-d057-4dba-9aa9-1c4e5a25bfc7-3\"\n}\n```\n\nUsing `terraform import`, import MSK SCRAM Secret Associations using the `id`. For example:\n\n```console\n% terraform import aws_msk_scram_secret_association.example arn:aws:kafka:us-west-2:123456789012:cluster/example/279c0212-d057-4dba-9aa9-1c4e5a25bfc7-3\n```\n",
      "language": "hcl",
      "path": "website/docs/r/msk_scram_secret_association.html.markdown",
      "slug": "msk_scram_secret_association",
      "subcategory": "Managed Streaming for Kafka",
      "title": "msk_scram_secret_association",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225568"
    }
  }
}