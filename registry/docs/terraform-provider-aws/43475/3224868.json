{
  "data": {
    "type": "provider-docs",
    "id": "3224868",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"API Gateway V2\"\nlayout: \"aws\"\npage_title: \"AWS: aws_apigatewayv2_domain_name\"\ndescription: |-\n  Manages an Amazon API Gateway Version 2 domain name.\n---\n\n# Resource: aws_apigatewayv2_domain_name\n\nManages an Amazon API Gateway Version 2 domain name.\nMore information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html).\n\n-> **Note:** This resource establishes ownership of and the TLS settings for\na particular domain name. An API stage can be associated with the domain name using the `aws_apigatewayv2_api_mapping` resource.\n\n## Example Usage\n\n### Basic\n\n```terraform\nresource \"aws_apigatewayv2_domain_name\" \"example\" {\n  domain_name = \"ws-api.example.com\"\n\n  domain_name_configuration {\n    certificate_arn = aws_acm_certificate.example.arn\n    endpoint_type   = \"REGIONAL\"\n    security_policy = \"TLS_1_2\"\n  }\n}\n```\n\n### Associated Route 53 Resource Record\n\n```terraform\nresource \"aws_apigatewayv2_domain_name\" \"example\" {\n  domain_name = \"http-api.example.com\"\n\n  domain_name_configuration {\n    certificate_arn = aws_acm_certificate.example.arn\n    endpoint_type   = \"REGIONAL\"\n    security_policy = \"TLS_1_2\"\n  }\n}\n\nresource \"aws_route53_record\" \"example\" {\n  name    = aws_apigatewayv2_domain_name.example.domain_name\n  type    = \"A\"\n  zone_id = aws_route53_zone.example.zone_id\n\n  alias {\n    name                   = aws_apigatewayv2_domain_name.example.domain_name_configuration[0].target_domain_name\n    zone_id                = aws_apigatewayv2_domain_name.example.domain_name_configuration[0].hosted_zone_id\n    evaluate_target_health = false\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `domain_name` - (Required) Domain name. Must be between 1 and 512 characters in length.\n* `domain_name_configuration` - (Required) Domain name configuration. See below.\n* `mutual_tls_authentication` - (Optional) Mutual TLS authentication configuration for the domain name.\n* `tags` - (Optional) Map of tags to assign to the domain name. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### `domain_name_configuration`\n\n* `certificate_arn` - (Required) ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source. Use the [`aws_acm_certificate`](/docs/providers/aws/r/acm_certificate.html) resource to configure an ACM certificate.\n* `endpoint_type` - (Required) Endpoint type. Valid values: `REGIONAL`.\n* `hosted_zone_id` - (Computed) Amazon Route 53 Hosted Zone ID of the endpoint.\n* `ownership_verification_certificate_arn` - (Optional) ARN of the AWS-issued certificate used to validate custom domain ownership (when `certificate_arn` is issued via an ACM Private CA or `mutual_tls_authentication` is configured with an ACM-imported certificate.)\n* `security_policy` - (Required) Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.\n* `target_domain_name` - (Computed) Target domain name.\n\n### `mutual_tls_authentication`\n\n* `truststore_uri` - (Required) Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, `s3://bucket-name/key-name`. The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.\n* `truststore_version` - (Optional) Version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `api_mapping_selection_expression` - [API mapping selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-mapping-selection-expressions) for the domain name.\n* `arn` - ARN of the domain name.\n* `id` - Domain name identifier.\n* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `10m`)\n- `update` - (Default `60m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_apigatewayv2_domain_name` using the domain name. For example:\n\n```terraform\nimport {\n  to = aws_apigatewayv2_domain_name.example\n  id = \"ws-api.example.com\"\n}\n```\n\nUsing `terraform import`, import `aws_apigatewayv2_domain_name` using the domain name. For example:\n\n```console\n% terraform import aws_apigatewayv2_domain_name.example ws-api.example.com\n```\n",
      "language": "hcl",
      "path": "website/docs/r/apigatewayv2_domain_name.html.markdown",
      "slug": "apigatewayv2_domain_name",
      "subcategory": "API Gateway V2",
      "title": "apigatewayv2_domain_name",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3224868"
    }
  }
}