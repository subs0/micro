{
  "data": {
    "type": "provider-docs",
    "id": "3226007",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"VPC IPAM (IP Address Manager)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_vpc_ipam_pool_cidr\"\ndescription: |-\n  Provisions a CIDR from an IPAM address pool.\n---\n\n# Resource: aws_vpc_ipam_pool_cidr\n\nProvisions a CIDR from an IPAM address pool.\n\n~> **NOTE:** Provisioning Public IPv4 or Public IPv6 require [steps outside the scope of this resource](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html#prepare-for-byoip). The resource accepts `message` and `signature` as part of the `cidr_authorization_context` attribute but those must be generated ahead of time. Public IPv6 CIDRs that are provisioned into a Pool with `publicly_advertisable = true` and all public IPv4 CIDRs also require creating a Route Origin Authorization (ROA) object in your Regional Internet Registry (RIR).\n\n~> **NOTE:** In order to deprovision CIDRs all Allocations must be released. Allocations created by a VPC take up to 30 minutes to be released. However, for IPAM to properly manage the removal of allocation records created by VPCs and other resources, you must [grant it permissions](https://docs.aws.amazon.com/vpc/latest/ipam/choose-single-user-or-orgs-ipam.html) in\neither a single account or organizationally. If you are unable to deprovision a cidr after waiting over 30 minutes, you may be missing the Service Linked Role.\n\n## Example Usage\n\nBasic usage:\n\n```terraform\ndata \"aws_region\" \"current\" {}\n\nresource \"aws_vpc_ipam\" \"example\" {\n  operating_regions {\n    region_name = data.aws_region.current.name\n  }\n}\n\nresource \"aws_vpc_ipam_pool\" \"example\" {\n  address_family = \"ipv4\"\n  ipam_scope_id  = aws_vpc_ipam.example.private_default_scope_id\n  locale         = data.aws_region.current.name\n}\n\nresource \"aws_vpc_ipam_pool_cidr\" \"example\" {\n  ipam_pool_id = aws_vpc_ipam_pool.example.id\n  cidr         = \"172.20.0.0/16\"\n}\n```\n\nProvision Public IPv6 Pool CIDRs:\n\n```terraform\ndata \"aws_region\" \"current\" {}\n\nresource \"aws_vpc_ipam\" \"example\" {\n  operating_regions {\n    region_name = data.aws_region.current.name\n  }\n}\n\nresource \"aws_vpc_ipam_pool\" \"ipv6_test_public\" {\n  address_family = \"ipv6\"\n  ipam_scope_id  = aws_vpc_ipam.example.public_default_scope_id\n  locale         = \"us-east-1\"\n  description    = \"public ipv6\"\n  advertisable   = false\n  aws_service    = \"ec2\"\n}\n\nresource \"aws_vpc_ipam_pool_cidr\" \"ipv6_test_public\" {\n  ipam_pool_id = aws_vpc_ipam_pool.ipv6_test_public.id\n  cidr         = var.ipv6_cidr\n  cidr_authorization_context {\n    message   = var.message\n    signature = var.signature\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `cidr` - (Optional) The CIDR you want to assign to the pool. Conflicts with `netmask_length`.\n* `cidr_authorization_context` - (Optional) A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See [cidr_authorization_context](#cidr_authorization_context) for more information.\n* `ipam_pool_id` - (Required) The ID of the pool to which you want to assign a CIDR.\n* `netmask_length` - (Optional) If provided, the cidr provisioned into the specified pool will be the next available cidr given this declared netmask length. Conflicts with `cidr`.\n\n### cidr_authorization_context\n\n* `message` - (Optional) The plain-text authorization message for the prefix and account.\n* `signature` - (Optional) The signed authorization message for the prefix and account.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The ID of the IPAM Pool Cidr concatenated with the IPAM Pool ID.\n* `ipam_pool_cidr_id` - The unique ID generated by AWS for the pool cidr. Typically this is the resource `id` but this attribute was added to the API calls after the fact and is therefore not used as the terraform resource id.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import IPAMs using the `<cidr>_<ipam-pool-id>`. For example:\n\n**NOTE:** Do not use the IPAM Pool Cidr ID as this was introduced after the resource already existed.\n\n```terraform\nimport {\n  to = aws_vpc_ipam_pool_cidr.example\n  id = \"172.20.0.0/24_ipam-pool-0e634f5a1517cccdc\"\n}\n```\n\nUsing `terraform import`, import IPAMs using the `<cidr>_<ipam-pool-id>`. For example:\n\n**NOTE:** Do not use the IPAM Pool Cidr ID as this was introduced after the resource already existed.\n\n```console\n% terraform import aws_vpc_ipam_pool_cidr.example 172.20.0.0/24_ipam-pool-0e634f5a1517cccdc\n```\n",
      "language": "hcl",
      "path": "website/docs/r/vpc_ipam_pool_cidr.html.markdown",
      "slug": "vpc_ipam_pool_cidr",
      "subcategory": "VPC IPAM (IP Address Manager)",
      "title": "vpc_ipam_pool_cidr",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3226007"
    }
  }
}