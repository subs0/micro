{
  "data": {
    "type": "provider-docs",
    "id": "3225010",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"EventBridge\"\nlayout: \"aws\"\npage_title: \"AWS: aws_cloudwatch_event_bus_policy\"\ndescription: |-\n  Provides a resource to create an EventBridge policy to support cross-account events.\n---\n\n# Resource: aws_cloudwatch_event_bus_policy\n\nProvides a resource to create an EventBridge resource policy to support cross-account events.\n\n~> **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.\n\n~> **Note:** The EventBridge bus policy resource  (`aws_cloudwatch_event_bus_policy`) is incompatible with the EventBridge permission resource (`aws_cloudwatch_event_permission`) and will overwrite permissions.\n\n## Example Usage\n\n### Account Access\n\n```hcl\ndata \"aws_iam_policy_document\" \"test\" {\n  statement {\n    sid    = \"DevAccountAccess\"\n    effect = \"Allow\"\n    actions = [\n      \"events:PutEvents\",\n    ]\n    resources = [\n      \"arn:aws:events:eu-west-1:123456789012:event-bus/default\"\n    ]\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"123456789012\"]\n    }\n  }\n}\n\nresource \"aws_cloudwatch_event_bus_policy\" \"test\" {\n  policy         = data.aws_iam_policy_document.test.json\n  event_bus_name = aws_cloudwatch_event_bus.test.name\n}\n```\n\n### Organization Access\n\n```hcl\ndata \"aws_iam_policy_document\" \"test\" {\n  statement {\n    sid    = \"OrganizationAccess\"\n    effect = \"Allow\"\n    actions = [\n      \"events:DescribeRule\",\n      \"events:ListRules\",\n      \"events:ListTargetsByRule\",\n      \"events:ListTagsForResource\",\n    ]\n    resources = [\n      \"arn:aws:events:eu-west-1:123456789012:rule/*\",\n      \"arn:aws:events:eu-west-1:123456789012:event-bus/default\"\n    ]\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"*\"]\n    }\n\n    condition {\n      test     = \"StringEquals\"\n      variable = \"aws:PrincipalOrgID\"\n      values   = [aws_organizations_organization.example.id]\n    }\n  }\n}\n\nresource \"aws_cloudwatch_event_bus_policy\" \"test\" {\n  policy         = data.aws_iam_policy_document.test.json\n  event_bus_name = aws_cloudwatch_event_bus.test.name\n}\n```\n\n### Multiple Statements\n\n```hcl\ndata \"aws_iam_policy_document\" \"test\" {\n\n  statement {\n    sid    = \"DevAccountAccess\"\n    effect = \"Allow\"\n    actions = [\n      \"events:PutEvents\",\n    ]\n    resources = [\n      \"arn:aws:events:eu-west-1:123456789012:event-bus/default\"\n    ]\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"123456789012\"]\n    }\n  }\n\n  statement {\n    sid    = \"OrganizationAccess\"\n    effect = \"Allow\"\n    actions = [\n      \"events:DescribeRule\",\n      \"events:ListRules\",\n      \"events:ListTargetsByRule\",\n      \"events:ListTagsForResource\",\n    ]\n    resources = [\n      \"arn:aws:events:eu-west-1:123456789012:rule/*\",\n      \"arn:aws:events:eu-west-1:123456789012:event-bus/default\"\n    ]\n\n    principals {\n      type        = \"AWS\"\n      identifiers = [\"*\"]\n    }\n\n    condition {\n      test     = \"StringEquals\"\n      variable = \"aws:PrincipalOrgID\"\n      values   = [aws_organizations_organization.example.id]\n    }\n  }\n}\n\nresource \"aws_cloudwatch_event_bus_policy\" \"test\" {\n  policy         = data.aws_iam_policy_document.test.json\n  event_bus_name = aws_cloudwatch_event_bus.test.name\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `policy` - (Required) The text of the policy. For more information about building AWS IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://learn.hashicorp.com/terraform/aws/iam-policy).\n* `event_bus_name` - (Optional) The name of the event bus to set the permissions on.\n  If you omit this, the permissions are set on the `default` event bus.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The name of the EventBridge event bus.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import an EventBridge policy using the `event_bus_name`. For example:\n\n```terraform\nimport {\n  to = aws_cloudwatch_event_bus_policy.DevAccountAccess\n  id = \"example-event-bus\"\n}\n```\n\nUsing `terraform import`, import an EventBridge policy using the `event_bus_name`. For example:\n\n```console\n% terraform import aws_cloudwatch_event_bus_policy.DevAccountAccess example-event-bus\n```\n",
      "language": "hcl",
      "path": "website/docs/r/cloudwatch_event_bus_policy.html.markdown",
      "slug": "cloudwatch_event_bus_policy",
      "subcategory": "EventBridge",
      "title": "cloudwatch_event_bus_policy",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225010"
    }
  }
}