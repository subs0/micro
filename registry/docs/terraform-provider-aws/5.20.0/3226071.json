{
  "data": {
    "type": "provider-docs",
    "id": "3226071",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"WorkSpaces\"\nlayout: \"aws\"\npage_title: \"AWS: aws_workspaces_directory\"\ndescription: |-\n  Provides a WorkSpaces directory in AWS WorkSpaces Service.\n---\n\n# Resource: aws_workspaces_directory\n\nProvides a WorkSpaces directory in AWS WorkSpaces Service.\n\n~> **NOTE:** AWS WorkSpaces service requires [`workspaces_DefaultRole`](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspaces-access-control.html#create-default-role) IAM role to operate normally.\n\n## Example Usage\n\n```terraform\nresource \"aws_workspaces_directory\" \"example\" {\n  directory_id = aws_directory_service_directory.example.id\n  subnet_ids = [\n    aws_subnet.example_c.id,\n    aws_subnet.example_d.id\n  ]\n\n  tags = {\n    Example = true\n  }\n\n  self_service_permissions {\n    change_compute_type  = true\n    increase_volume_size = true\n    rebuild_workspace    = true\n    restart_workspace    = true\n    switch_running_mode  = true\n  }\n\n  workspace_access_properties {\n    device_type_android    = \"ALLOW\"\n    device_type_chromeos   = \"ALLOW\"\n    device_type_ios        = \"ALLOW\"\n    device_type_linux      = \"DENY\"\n    device_type_osx        = \"ALLOW\"\n    device_type_web        = \"DENY\"\n    device_type_windows    = \"DENY\"\n    device_type_zeroclient = \"DENY\"\n  }\n\n  workspace_creation_properties {\n    custom_security_group_id            = aws_security_group.example.id\n    default_ou                          = \"OU=AWS,DC=Workgroup,DC=Example,DC=com\"\n    enable_internet_access              = true\n    enable_maintenance_mode             = true\n    user_enabled_as_local_administrator = true\n  }\n\n  depends_on = [\n    aws_iam_role_policy_attachment.workspaces_default_service_access,\n    aws_iam_role_policy_attachment.workspaces_default_self_service_access\n  ]\n}\n\nresource \"aws_directory_service_directory\" \"example\" {\n  name     = \"corp.example.com\"\n  password = \"#S1ncerely\"\n  size     = \"Small\"\n\n  vpc_settings {\n    vpc_id = aws_vpc.example.id\n    subnet_ids = [\n      aws_subnet.example_a.id,\n      aws_subnet.example_b.id\n    ]\n  }\n}\n\ndata \"aws_iam_policy_document\" \"workspaces\" {\n  statement {\n    actions = [\"sts:AssumeRole\"]\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"workspaces.amazonaws.com\"]\n    }\n  }\n}\n\nresource \"aws_iam_role\" \"workspaces_default\" {\n  name               = \"workspaces_DefaultRole\"\n  assume_role_policy = data.aws_iam_policy_document.workspaces.json\n}\n\nresource \"aws_iam_role_policy_attachment\" \"workspaces_default_service_access\" {\n  role       = aws_iam_role.workspaces_default.name\n  policy_arn = \"arn:aws:iam::aws:policy/AmazonWorkSpacesServiceAccess\"\n}\n\nresource \"aws_iam_role_policy_attachment\" \"workspaces_default_self_service_access\" {\n  role       = aws_iam_role.workspaces_default.name\n  policy_arn = \"arn:aws:iam::aws:policy/AmazonWorkSpacesSelfServiceAccess\"\n}\n\nresource \"aws_vpc\" \"example\" {\n  cidr_block = \"10.0.0.0/16\"\n}\n\nresource \"aws_subnet\" \"example_a\" {\n  vpc_id            = aws_vpc.example.id\n  availability_zone = \"us-east-1a\"\n  cidr_block        = \"10.0.0.0/24\"\n}\n\nresource \"aws_subnet\" \"example_b\" {\n  vpc_id            = aws_vpc.example.id\n  availability_zone = \"us-east-1b\"\n  cidr_block        = \"10.0.1.0/24\"\n}\nresource \"aws_subnet\" \"example_c\" {\n  vpc_id            = aws_vpc.example.id\n  availability_zone = \"us-east-1c\"\n  cidr_block        = \"10.0.2.0/24\"\n}\n\nresource \"aws_subnet\" \"example_d\" {\n  vpc_id            = aws_vpc.example.id\n  availability_zone = \"us-east-1d\"\n  cidr_block        = \"10.0.3.0/24\"\n}\n```\n\n### IP Groups\n\n```terraform\nresource \"aws_workspaces_directory\" \"example\" {\n  directory_id = aws_directory_service_directory.example.id\n\n  ip_group_ids = [\n    aws_workspaces_ip_group.example.id,\n  ]\n}\n\nresource \"aws_workspaces_ip_group\" \"example\" {\n  name = \"example\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `directory_id` - (Required) The directory identifier for registration in WorkSpaces service.\n* `subnet_ids` - (Optional) The identifiers of the subnets where the directory resides.\n* `ip_group_ids` - The identifiers of the IP access control groups associated with the directory.\n* `tags` – (Optional) A map of tags assigned to the WorkSpaces directory. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `self_service_permissions` – (Optional) Permissions to enable or disable self-service capabilities. Defined below.\n* `workspace_access_properties` – (Optional) Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.\n* `workspace_creation_properties` – (Optional) Default properties that are used for creating WorkSpaces. Defined below.\n\n### self_service_permissions\n\n* `change_compute_type` – (Optional) Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.\n* `increase_volume_size` – (Optional) Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.\n* `rebuild_workspace` – (Optional) Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.\n* `restart_workspace` – (Optional) Whether WorkSpaces directory users can restart their workspace. Default `true`.\n* `switch_running_mode` – (Optional) Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.\n\n### workspace_access_properties\n\n* `device_type_android` – (Optional) Indicates whether users can use Android devices to access their WorkSpaces.\n* `device_type_chromeos` – (Optional) Indicates whether users can use Chromebooks to access their WorkSpaces.\n* `device_type_ios` – (Optional) Indicates whether users can use iOS devices to access their WorkSpaces.\n* `device_type_linux` – (Optional) Indicates whether users can use Linux clients to access their WorkSpaces.\n* `device_type_osx` – (Optional) Indicates whether users can use macOS clients to access their WorkSpaces.\n* `device_type_web` – (Optional) Indicates whether users can access their WorkSpaces through a web browser.\n* `device_type_windows` – (Optional) Indicates whether users can use Windows clients to access their WorkSpaces.\n* `device_type_zeroclient` – (Optional) Indicates whether users can use zero client devices to access their WorkSpaces.\n\n### workspace_creation_properties\n\n-> **Note:** Once you specified `custom_security_group_id` or `default_ou`, there is no way to delete these attributes. If you cleanup them from the configuration, they still be present in state.\n\n* `custom_security_group_id` – (Optional) The identifier of your custom security group. Should relate to the same VPC, where workspaces reside in.\n* `default_ou` – (Optional) The default organizational unit (OU) for your WorkSpace directories. Should conform `\"OU=<value>,DC=<value>,...,DC=<value>\"` pattern.\n* `enable_internet_access` – (Optional) Indicates whether internet access is enabled for your WorkSpaces.\n* `enable_maintenance_mode` – (Optional) Indicates whether maintenance mode is enabled for your WorkSpaces. For more information, see [WorkSpace Maintenance](https://docs.aws.amazon.com/workspaces/latest/adminguide/workspace-maintenance.html)..\n* `user_enabled_as_local_administrator` – (Optional) Indicates whether users are local administrators of their WorkSpaces.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - The WorkSpaces directory identifier.\n* `alias` - The directory alias.\n* `customer_user_name` - The user name for the service account.\n* `directory_name` - The name of the directory.\n* `directory_type` - The directory type.\n* `dns_ip_addresses` - The IP addresses of the DNS servers for the directory.\n* `iam_role_id` - The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.\n* `ip_group_ids` - The identifiers of the IP access control groups associated with the directory.\n* `registration_code` - The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n* `workspace_security_group_id` - The identifier of the security group that is assigned to new WorkSpaces.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Workspaces directory using the directory ID. For example:\n\n```terraform\nimport {\n  to = aws_workspaces_directory.main\n  id = \"d-4444444444\"\n}\n```\n\nUsing `terraform import`, import Workspaces directory using the directory ID. For example:\n\n```console\n% terraform import aws_workspaces_directory.main d-4444444444\n```\n",
      "language": "hcl",
      "path": "website/docs/r/workspaces_directory.html.markdown",
      "slug": "workspaces_directory",
      "subcategory": "WorkSpaces",
      "title": "workspaces_directory",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3226071"
    }
  }
}