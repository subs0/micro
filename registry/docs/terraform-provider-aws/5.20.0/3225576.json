{
  "data": {
    "type": "provider-docs",
    "id": "3225576",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Neptune\"\nlayout: \"aws\"\npage_title: \"AWS: aws_neptune_cluster\"\ndescription: |-\n  Provides an Neptune Cluster Resource\n---\n\n# Resource: aws_neptune_cluster\n\nProvides an Neptune Cluster Resource. A Cluster Resource defines attributes that are\napplied to the entire cluster of Neptune Cluster Instances.\n\nChanges to a Neptune Cluster can occur when you manually change a\nparameter, such as `backup_retention_period`, and are reflected in the next maintenance\nwindow. Because of this, Terraform may report a difference in its planning\nphase because a modification has not yet taken place. You can use the\n`apply_immediately` flag to instruct the service to apply the change immediately\n(see documentation below).\n\n## Example Usage\n\n```terraform\nresource \"aws_neptune_cluster\" \"default\" {\n  cluster_identifier                  = \"neptune-cluster-demo\"\n  engine                              = \"neptune\"\n  backup_retention_period             = 5\n  preferred_backup_window             = \"07:00-09:00\"\n  skip_final_snapshot                 = true\n  iam_database_authentication_enabled = true\n  apply_immediately                   = true\n}\n```\n\n~> **Note:** AWS Neptune does not support user name/password–based access control.\nSee the AWS [Docs](https://docs.aws.amazon.com/neptune/latest/userguide/limits.html) for more information.\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `allow_major_version_upgrade` - (Optional) Specifies whether upgrades between different major versions are allowed. You must set it to `true` when providing an `engine_version` parameter that uses a different major version than the DB cluster's current version. Default is `false`.\n* `apply_immediately` - (Optional) Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`.\n* `availability_zones` - (Optional) A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.\n* `backup_retention_period` - (Optional) The days to retain backups for. Default `1`\n* `cluster_identifier` - (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier.\n* `cluster_identifier_prefix` - (Optional, Forces new resource) Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.\n* `copy_tags_to_snapshot` - (Optional) If set to true, tags are copied to any snapshot of the DB cluster that is created.\n* `enable_cloudwatch_logs_exports` - (Optional) A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports `audit`.\n* `engine` - (Optional) The name of the database engine to be used for this Neptune cluster. Defaults to `neptune`.\n* `engine_version` - (Optional) The database engine version.\n* `final_snapshot_identifier` - (Optional) The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.\n* `global_cluster_identifier` - (Optional) The global cluster identifier specified on [`aws_neptune_global_cluster`](/docs/providers/aws/r/neptune_global_cluster.html).\n* `iam_roles` - (Optional) A List of ARNs for the IAM roles to associate to the Neptune Cluster.\n* `iam_database_authentication_enabled` - (Optional) Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.\n* `kms_key_arn` - (Optional) The ARN for the KMS encryption key. When specifying `kms_key_arn`, `storage_encrypted` needs to be set to true.\n* `neptune_subnet_group_name` - (Optional) A Neptune subnet group to associate with this Neptune instance.\n* `neptune_cluster_parameter_group_name` - (Optional) A cluster parameter group to associate with the cluster.\n* `neptune_instance_parameter_group_name` - (Optional) The name of the DB parameter group to apply to all instances of the DB cluster.\n* `preferred_backup_window` - (Optional) The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00\n* `preferred_maintenance_window` - (Optional) The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30\n* `port` - (Optional) The port on which the Neptune accepts connections. Default is `8182`.\n* `replication_source_identifier` - (Optional) ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.\n* `skip_final_snapshot` - (Optional) Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.\n* `snapshot_identifier` - (Optional) Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot. Automated snapshots **should not** be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.\n* `storage_encrypted` - (Optional) Specifies whether the Neptune cluster is encrypted. The default is `false` if not specified.\n* `tags` - (Optional) A map of tags to assign to the Neptune cluster. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `vpc_security_group_ids` - (Optional) List of VPC security groups to associate with the Cluster\n* `deletion_protection` - (Optional) A value that indicates whether the DB cluster has deletion protection enabled.The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.\n* `serverless_v2_scaling_configuration` - (Optional) If set, create the Neptune cluster as a serverless one. See [Serverless](#serverless) for example block attributes.\n\n### Serverless\n\n**Neptune serverless has some limitations. Please see the [limitations on the AWS documentation](https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless.html#neptune-serverless-limitations) before jumping into Neptune Serverless.**\n\nNeptune serverless requires that the `engine_version` attribute must be `1.2.0.1` or above. Also, you need to provide a cluster parameter group compatible with the family `neptune1.2`. In the example below, the default cluster parameter group is used.\n\n```terraform\nresource \"aws_neptune_cluster\" \"example\" {\n  cluster_identifier                   = \"neptune-cluster-development\"\n  engine                               = \"neptune\"\n  engine_version                       = \"1.2.0.1\"\n  neptune_cluster_parameter_group_name = \"default.neptune1.2\"\n  skip_final_snapshot                  = true\n  apply_immediately                    = true\n\n  serverless_v2_scaling_configuration {}\n}\n\nresource \"aws_neptune_cluster_instance\" \"example\" {\n  cluster_identifier           = aws_neptune_cluster.example.cluster_identifier\n  instance_class               = \"db.serverless\"\n  neptune_parameter_group_name = \"default.neptune1.2\"\n}\n```\n\n* `min_capacity`: (default: **2.5**) The minimum Neptune Capacity Units (NCUs) for this cluster. Must be greater or equal than **1**. See [AWS Documentation](https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless-capacity-scaling.html) for more details.\n* `max_capacity`: (default: **128**) The maximum Neptune Capacity Units (NCUs) for this cluster. Must be lower or equal than **128**. See [AWS Documentation](https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless-capacity-scaling.html) for more details.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - The Neptune Cluster Amazon Resource Name (ARN)\n* `cluster_resource_id` - The Neptune Cluster Resource ID\n* `cluster_members` – List of Neptune Instances that are a part of this cluster\n* `endpoint` - The DNS address of the Neptune instance\n* `hosted_zone_id` - The Route53 Hosted Zone ID of the endpoint\n* `id` - The Neptune Cluster Identifier\n* `reader_endpoint` - A read-only endpoint for the Neptune cluster, automatically load-balanced across replicas\n* `status` - The Neptune instance status\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n- `create` - (Default `120m`)\n- `update` - (Default `120m`)\n- `delete` - (Default `120m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import `aws_neptune_cluster` using the cluster identifier. For example:\n\n```terraform\nimport {\n  to = aws_neptune_cluster.example\n  id = \"my-cluster\"\n}\n```\n\nUsing `terraform import`, import `aws_neptune_cluster` using the cluster identifier. For example:\n\n```console\n% terraform import aws_neptune_cluster.example my-cluster\n```\n",
      "language": "hcl",
      "path": "website/docs/r/neptune_cluster.html.markdown",
      "slug": "neptune_cluster",
      "subcategory": "Neptune",
      "title": "neptune_cluster",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225576"
    }
  }
}