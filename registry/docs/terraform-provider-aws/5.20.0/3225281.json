{
  "data": {
    "type": "provider-docs",
    "id": "3225281",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Elastic Beanstalk\"\nlayout: \"aws\"\npage_title: \"AWS: aws_elastic_beanstalk_environment\"\ndescription: |-\n  Provides an Elastic Beanstalk Environment Resource\n---\n\n# Resource: aws_elastic_beanstalk_environment\n\nProvides an Elastic Beanstalk Environment Resource. Elastic Beanstalk allows\nyou to deploy and manage applications in the AWS cloud without worrying about\nthe infrastructure that runs those applications.\n\nEnvironments are often things such as `development`, `integration`, or\n`production`.\n\n## Example Usage\n\n```terraform\nresource \"aws_elastic_beanstalk_application\" \"tftest\" {\n  name        = \"tf-test-name\"\n  description = \"tf-test-desc\"\n}\n\nresource \"aws_elastic_beanstalk_environment\" \"tfenvtest\" {\n  name                = \"tf-test-name\"\n  application         = aws_elastic_beanstalk_application.tftest.name\n  solution_stack_name = \"64bit Amazon Linux 2015.03 v2.0.3 running Go 1.4\"\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `name` - (Required) A unique name for this Environment. This name is used\n  in the application URL\n* `application` – (Required) Name of the application that contains the version\n  to be deployed\n* `cname_prefix` - (Optional) Prefix to use for the fully qualified DNS name of\n  the Environment.\n* `description` - (Optional) Short description of the Environment\n* `tier` - (Optional) Elastic Beanstalk Environment tier. Valid values are `Worker`\n  or `WebServer`. If tier is left blank `WebServer` will be used.\n* `setting` – (Optional) Option settings to configure the new Environment. These\n  override specific values that are set as defaults. The format is detailed\n  below in [Option Settings](#option-settings)\n* `solution_stack_name` – (Optional) A solution stack to base your environment\noff of. Example stacks can be found in the [Amazon API documentation][1]\n* `template_name` – (Optional) The name of the Elastic Beanstalk Configuration\n  template to use in deployment\n* `platform_arn` – (Optional) The [ARN][2] of the Elastic Beanstalk [Platform][3]\n  to use in deployment\n* `wait_for_ready_timeout` - (Default `20m`) The maximum\n  [duration](https://golang.org/pkg/time/#ParseDuration) that Terraform should\n  wait for an Elastic Beanstalk Environment to be in a ready state before timing\n  out.\n* `poll_interval` – The time between polling the AWS API to\ncheck if changes have been applied. Use this to adjust the rate of API calls\nfor any `create` or `update` action. Minimum `10s`, maximum `180s`. Omit this to\nuse the default behavior, which is an exponential backoff\n* `version_label` - (Optional) The name of the Elastic Beanstalk Application Version\nto use in deployment.\n* `tags` - (Optional) A set of tags to apply to the Environment. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n## Option Settings\n\nSome options can be stack-specific, check [AWS Docs](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html)\nfor supported options and examples.\n\nThe `setting` and `all_settings` mappings support the following format:\n\n* `namespace` - unique namespace identifying the option's associated AWS resource\n* `name` - name of the configuration option\n* `value` - value for the configuration option\n* `resource` - (Optional) resource name for [scheduled action](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html#command-options-general-autoscalingscheduledaction)\n\n### Example With Options\n\n```terraform\nresource \"aws_elastic_beanstalk_application\" \"tftest\" {\n  name        = \"tf-test-name\"\n  description = \"tf-test-desc\"\n}\n\nresource \"aws_elastic_beanstalk_environment\" \"tfenvtest\" {\n  name                = \"tf-test-name\"\n  application         = aws_elastic_beanstalk_application.tftest.name\n  solution_stack_name = \"64bit Amazon Linux 2015.03 v2.0.3 running Go 1.4\"\n\n  setting {\n    namespace = \"aws:ec2:vpc\"\n    name      = \"VPCId\"\n    value     = \"vpc-xxxxxxxx\"\n  }\n\n  setting {\n    namespace = \"aws:ec2:vpc\"\n    name      = \"Subnets\"\n    value     = \"subnet-xxxxxxxx\"\n  }\n}\n```\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `id` - ID of the Elastic Beanstalk Environment.\n* `name` - Name of the Elastic Beanstalk Environment.\n* `description` - Description of the Elastic Beanstalk Environment.\n* `tier` - The environment tier specified.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n* `application` – The Elastic Beanstalk Application specified for this environment.\n* `setting` – Settings specifically set for this Environment.\n* `all_settings` – List of all option settings configured in this Environment. These\n  are a combination of default settings and their overrides from `setting` in\n  the configuration.\n* `cname` - Fully qualified DNS name for this Environment.\n* `autoscaling_groups` - The autoscaling groups used by this Environment.\n* `instances` - Instances used by this Environment.\n* `launch_configurations` - Launch configurations in use by this Environment.\n* `load_balancers` - Elastic load balancers in use by this Environment.\n* `queues` - SQS queues in use by this Environment.\n* `triggers` - Autoscaling triggers in use by this Environment.\n* `endpoint_url` - The URL to the Load Balancer for this Environment\n\n[1]: https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html\n[2]: https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\n[3]: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Elastic Beanstalk Environments using the `id`. For example:\n\n```terraform\nimport {\n  to = aws_elastic_beanstalk_environment.prodenv\n  id = \"e-rpqsewtp2j\"\n}\n```\n\nUsing `terraform import`, import Elastic Beanstalk Environments using the `id`. For example:\n\n```console\n% terraform import aws_elastic_beanstalk_environment.prodenv e-rpqsewtp2j\n```\n",
      "language": "hcl",
      "path": "website/docs/r/elastic_beanstalk_environment.html.markdown",
      "slug": "elastic_beanstalk_environment",
      "subcategory": "Elastic Beanstalk",
      "title": "elastic_beanstalk_environment",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225281"
    }
  }
}