{
  "data": {
    "type": "provider-docs",
    "id": "3225247",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"ECR (Elastic Container Registry)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_ecr_lifecycle_policy\"\ndescription: |-\n  Manages an ECR repository lifecycle policy.\n---\n\n# Resource: aws_ecr_lifecycle_policy\n\nManages an ECR repository lifecycle policy.\n\n~> **NOTE:** Only one `aws_ecr_lifecycle_policy` resource can be used with the same ECR repository. To apply multiple rules, they must be combined in the `policy` JSON.\n\n~> **NOTE:** The AWS ECR API seems to reorder rules based on `rulePriority`. If you define multiple rules that are not sorted in ascending `rulePriority` order in the Terraform code, the resource will be flagged for recreation every `terraform plan`.\n\n## Example Usage\n\n### Policy on untagged image\n\n```terraform\nresource \"aws_ecr_repository\" \"foo\" {\n  name = \"bar\"\n}\n\nresource \"aws_ecr_lifecycle_policy\" \"foopolicy\" {\n  repository = aws_ecr_repository.foo.name\n\n  policy = <<EOF\n{\n    \"rules\": [\n        {\n            \"rulePriority\": 1,\n            \"description\": \"Expire images older than 14 days\",\n            \"selection\": {\n                \"tagStatus\": \"untagged\",\n                \"countType\": \"sinceImagePushed\",\n                \"countUnit\": \"days\",\n                \"countNumber\": 14\n            },\n            \"action\": {\n                \"type\": \"expire\"\n            }\n        }\n    ]\n}\nEOF\n}\n```\n\n### Policy on tagged image\n\n```terraform\nresource \"aws_ecr_repository\" \"foo\" {\n  name = \"bar\"\n}\n\nresource \"aws_ecr_lifecycle_policy\" \"foopolicy\" {\n  repository = aws_ecr_repository.foo.name\n\n  policy = <<EOF\n{\n    \"rules\": [\n        {\n            \"rulePriority\": 1,\n            \"description\": \"Keep last 30 images\",\n            \"selection\": {\n                \"tagStatus\": \"tagged\",\n                \"tagPrefixList\": [\"v\"],\n                \"countType\": \"imageCountMoreThan\",\n                \"countNumber\": 30\n            },\n            \"action\": {\n                \"type\": \"expire\"\n            }\n        }\n    ]\n}\nEOF\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `repository` - (Required) Name of the repository to apply the policy.\n* `policy` - (Required) The policy document. This is a JSON formatted string. See more details about [Policy Parameters](http://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html#lifecycle_policy_parameters) in the official AWS docs.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `repository` - The name of the repository.\n* `registry_id` - The registry ID where the repository was created.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import ECR Lifecycle Policy using the name of the repository. For example:\n\n```terraform\nimport {\n  to = aws_ecr_lifecycle_policy.example\n  id = \"tf-example\"\n}\n```\n\nUsing `terraform import`, import ECR Lifecycle Policy using the name of the repository. For example:\n\n```console\n% terraform import aws_ecr_lifecycle_policy.example tf-example\n```\n",
      "language": "hcl",
      "path": "website/docs/r/ecr_lifecycle_policy.html.markdown",
      "slug": "ecr_lifecycle_policy",
      "subcategory": "ECR (Elastic Container Registry)",
      "title": "ecr_lifecycle_policy",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3225247"
    }
  }
}