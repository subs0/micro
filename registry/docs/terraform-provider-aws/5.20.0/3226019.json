{
  "data": {
    "type": "provider-docs",
    "id": "3226019",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"VPC (Virtual Private Cloud)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_vpc_security_group_egress_rule\"\ndescription: |-\n  Provides a VPC security group egress rule resource.\n---\n\n# Resource: aws_vpc_security_group_egress_rule\n\nManages an outbound (egress) rule for a security group.\n\nWhen specifying an outbound rule for your security group in a VPC, the configuration must include a destination for the traffic.\n\n~> **NOTE on Security Groups and Security Group Rules:** Terraform currently provides a [Security Group resource](security_group.html) with `ingress` and `egress` rules defined in-line and a [Security Group Rule resource](security_group_rule.html) which manages one or more `ingress` or\n`egress` rules. Both of these resource were added before AWS assigned a [security group rule unique ID](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules.html), and they do not work well in all scenarios using the`description` and `tags` attributes, which rely on the unique ID.\nThe `aws_vpc_security_group_egress_rule` resource has been added to address these limitations and should be used for all new security group rules.\nYou should not use the `aws_vpc_security_group_egress_rule` resource in conjunction with an `aws_security_group` resource with in-line rules or with `aws_security_group_rule` resources defined for the same Security Group, as rule conflicts may occur and rules will be overwritten.\n\n## Example Usage\n\n```terraform\nresource \"aws_vpc_security_group_egress_rule\" \"example\" {\n  security_group_id = aws_security_group.example.id\n\n  cidr_ipv4   = \"10.0.0.0/8\"\n  from_port   = 80\n  ip_protocol = \"tcp\"\n  to_port     = 80\n}\n```\n\n## Argument Reference\n\n~> **Note** Although `cidr_ipv4`, `cidr_ipv6`, `prefix_list_id`, and `referenced_security_group_id` are all marked as optional, you *must* provide one of them in order to configure the destination of the traffic. The `from_port` and `to_port` arguments are required unless `ip_protocol` is set to `-1` or `icmpv6`.\n\nThis argument supports the following arguments:\n\n* `cidr_ipv4` - (Optional) The destination IPv4 CIDR range.\n* `cidr_ipv6` - (Optional) The destination IPv6 CIDR range.\n* `description` - (Optional) The security group rule description.\n* `from_port` - (Optional) The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type.\n* `ip_protocol` - (Optional) The IP protocol name or number. Use `-1` to specify all protocols. Note that if `ip_protocol` is set to `-1`, it translates to all protocols, all port ranges, and `from_port` and `to_port` values should not be defined.\n* `prefix_list_id` - (Optional) The ID of the destination prefix list.\n* `referenced_security_group_id` - (Optional) The destination security group that is referenced in the rule.\n* `security_group_id` - (Required) The ID of the security group.\n* `tags` - (Optional) A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `to_port` - (Optional) The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - The Amazon Resource Name (ARN) of the security group rule.\n* `security_group_rule_id` - The ID of the security group rule.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import security group egress rules using the `security_group_rule_id`. For example:\n\n```terraform\nimport {\n  to = aws_vpc_security_group_egress_rule.example\n  id = \"sgr-02108b27edd666983\"\n}\n```\n\nUsing `terraform import`, import security group egress rules using the `security_group_rule_id`. For example:\n\n```console\n% terraform import aws_vpc_security_group_egress_rule.example sgr-02108b27edd666983\n```\n",
      "language": "hcl",
      "path": "website/docs/r/vpc_security_group_egress_rule.html.markdown",
      "slug": "vpc_security_group_egress_rule",
      "subcategory": "VPC (Virtual Private Cloud)",
      "title": "vpc_security_group_egress_rule",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3226019"
    }
  }
}