{
  "data": {
    "type": "provider-docs",
    "id": "3224955",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"Batch\"\nlayout: \"aws\"\npage_title: \"AWS: aws_batch_job_definition\"\ndescription: |-\n  Provides a Batch Job Definition resource.\n---\n\n# Resource: aws_batch_job_definition\n\nProvides a Batch Job Definition resource.\n\n## Example Usage\n\n```terraform\nresource \"aws_batch_job_definition\" \"test\" {\n  name = \"tf_test_batch_job_definition\"\n  type = \"container\"\n  container_properties = jsonencode({\n    command = [\"ls\", \"-la\"],\n    image   = \"busybox\"\n\n    resourceRequirements = [\n      {\n        type  = \"VCPU\"\n        value = \"0.25\"\n      },\n      {\n        type  = \"MEMORY\"\n        value = \"512\"\n      }\n    ]\n\n    volumes = [\n      {\n        host = {\n          sourcePath = \"/tmp\"\n        }\n        name = \"tmp\"\n      }\n    ]\n\n    environment = [\n      {\n        name  = \"VARNAME\"\n        value = \"VARVAL\"\n      }\n    ]\n\n    mountPoints = [\n      {\n        sourceVolume  = \"tmp\"\n        containerPath = \"/tmp\"\n        readOnly      = false\n      }\n    ]\n\n    ulimits = [\n      {\n        hardLimit = 1024\n        name      = \"nofile\"\n        softLimit = 1024\n      }\n    ]\n  })\n}\n```\n\n### Fargate Platform Capability\n\n```terraform\nresource \"aws_iam_role\" \"ecs_task_execution_role\" {\n  name               = \"tf_test_batch_exec_role\"\n  assume_role_policy = data.aws_iam_policy_document.assume_role_policy.json\n}\n\ndata \"aws_iam_policy_document\" \"assume_role_policy\" {\n  statement {\n    actions = [\"sts:AssumeRole\"]\n\n    principals {\n      type        = \"Service\"\n      identifiers = [\"ecs-tasks.amazonaws.com\"]\n    }\n  }\n}\n\nresource \"aws_iam_role_policy_attachment\" \"ecs_task_execution_role_policy\" {\n  role       = aws_iam_role.ecs_task_execution_role.name\n  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\"\n}\n\nresource \"aws_batch_job_definition\" \"test\" {\n  name = \"tf_test_batch_job_definition\"\n  type = \"container\"\n\n  platform_capabilities = [\n    \"FARGATE\",\n  ]\n\n  container_properties = jsonencode({\n    command    = [\"echo\", \"test\"]\n    image      = \"busybox\"\n    jobRoleArn = \"arn:aws:iam::123456789012:role/AWSBatchS3ReadOnly\"\n\n    fargatePlatformConfiguration = {\n      platformVersion = \"LATEST\"\n    }\n\n    resourceRequirements = [\n      {\n        type  = \"VCPU\"\n        value = \"0.25\"\n      },\n      {\n        type  = \"MEMORY\"\n        value = \"512\"\n      }\n    ]\n\n    executionRoleArn = aws_iam_role.ecs_task_execution_role.arn\n  })\n}\n```\n\n## Argument Reference\n\nThe following arguments are required:\n\n* `name` - (Required) Specifies the name of the job definition.\n* `type` - (Required) The type of job definition. Must be `container`.\n\nThe following arguments are optional:\n\n* `container_properties` - (Optional) A valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html)\n    provided as a single valid JSON document. This parameter is required if the `type` parameter is `container`.\n* `parameters` - (Optional) Specifies the parameter substitution placeholders to set in the job definition.\n* `platform_capabilities` - (Optional) The platform capabilities required by the job definition. If no value is specified, it defaults to `EC2`. To run the job on Fargate resources, specify `FARGATE`.\n* `propagate_tags` - (Optional) Specifies whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is `false`.\n* `retry_strategy` - (Optional) Specifies the retry strategy to use for failed jobs that are submitted with this job definition.\n    Maximum number of `retry_strategy` is `1`.  Defined below.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n* `timeout` - (Optional) Specifies the timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.\n\n### retry_strategy\n\n* `attempts` - (Optional) The number of times to move a job to the `RUNNABLE` status. You may specify between `1` and `10` attempts.\n* `evaluate_on_exit` - (Optional) The [evaluate on exit](#evaluate_on_exit) conditions under which the job should be retried or failed. If this parameter is specified, then the `attempts` parameter must also be specified. You may specify up to 5 configuration blocks.\n\n#### evaluate_on_exit\n\n* `action` - (Required) Specifies the action to take if all of the specified conditions are met. The values are not case sensitive. Valid values: `RETRY`, `EXIT`.\n* `on_exit_code` - (Optional) A glob pattern to match against the decimal representation of the exit code returned for a job.\n* `on_reason` - (Optional) A glob pattern to match against the reason returned for a job.\n* `on_status_reason` - (Optional) A glob pattern to match against the status reason returned for a job.\n  \n### timeout\n\n* `attempt_duration_seconds` - (Optional) The time duration in seconds after which AWS Batch terminates your jobs if they have not finished. The minimum value for the timeout is `60` seconds.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - The Amazon Resource Name of the job definition.\n* `revision` - The revision of the job definition.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Batch Job Definition using the `arn`. For example:\n\n```terraform\nimport {\n  to = aws_batch_job_definition.test\n  id = \"arn:aws:batch:us-east-1:123456789012:job-definition/sample\"\n}\n```\n\nUsing `terraform import`, import Batch Job Definition using the `arn`. For example:\n\n```console\n% terraform import aws_batch_job_definition.test arn:aws:batch:us-east-1:123456789012:job-definition/sample\n```\n",
      "language": "hcl",
      "path": "website/docs/r/batch_job_definition.html.markdown",
      "slug": "batch_job_definition",
      "subcategory": "Batch",
      "title": "batch_job_definition",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3224955"
    }
  }
}