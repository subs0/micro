{
  "data": {
    "type": "provider-docs",
    "id": "3198359",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"EKS (Elastic Kubernetes)\"\nlayout: \"aws\"\npage_title: \"AWS: aws_eks_identity_provider_config\"\ndescription: |-\n  Manages an EKS Identity Provider Configuration.\n---\n\n# Resource: aws_eks_identity_provider_config\n\nManages an EKS Identity Provider Configuration.\n\n## Example Usage\n\n```terraform\nresource \"aws_eks_identity_provider_config\" \"example\" {\n  cluster_name = aws_eks_cluster.example.name\n\n  oidc {\n    client_id                     = \"your client_id\"\n    identity_provider_config_name = \"example\"\n    issuer_url                    = \"your issuer_url\"\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `cluster_name` – (Required) Name of the EKS Cluster.\n* `oidc` - (Required) Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster. Detailed below.\n* `tags` - (Optional) Key-value map of resource tags. If configured with a provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.\n\n### oidc Configuration Block\n\n* `client_id` – (Required) Client ID for the OpenID Connect identity provider.\n* `groups_claim` - (Optional) The JWT claim that the provider will use to return groups.\n* `groups_prefix` - (Optional) A prefix that is prepended to group claims e.g., `oidc:`.\n* `identity_provider_config_name` – (Required) The name of the identity provider config.\n* `issuer_url` - (Required) Issuer URL for the OpenID Connect identity provider.\n* `required_claims` - (Optional) The key value pairs that describe required claims in the identity token.\n* `username_claim` - (Optional) The JWT claim that the provider will use as the username.\n* `username_prefix` - (Optional) A prefix that is prepended to username claims.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `arn` - Amazon Resource Name (ARN) of the EKS Identity Provider Configuration.\n* `id` - EKS Cluster name and EKS Identity Provider Configuration name separated by a colon (`:`).\n* `status` - Status of the EKS Identity Provider Configuration.\n* `tags_all` - A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs#default_tags-configuration-block).\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `40m`)\n* `delete` - (Default `40m`)\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EKS Identity Provider Configurations using the `cluster_name` and `identity_provider_config_name` separated by a colon (`:`). For example:\n\n```terraform\nimport {\n  to = aws_eks_identity_provider_config.my_identity_provider_config\n  id = \"my_cluster:my_identity_provider_config\"\n}\n```\n\nUsing `terraform import`, import EKS Identity Provider Configurations using the `cluster_name` and `identity_provider_config_name` separated by a colon (`:`). For example:\n\n```console\n% terraform import aws_eks_identity_provider_config.my_identity_provider_config my_cluster:my_identity_provider_config\n```\n",
      "language": "hcl",
      "path": "website/docs/r/eks_identity_provider_config.html.markdown",
      "slug": "eks_identity_provider_config",
      "subcategory": "EKS (Elastic Kubernetes)",
      "title": "eks_identity_provider_config",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198359"
    }
  }
}