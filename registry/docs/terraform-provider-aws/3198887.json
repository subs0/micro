{
  "data": {
    "type": "provider-docs",
    "id": "3198887",
    "attributes": {
      "category": "resources",
      "content": "---\nsubcategory: \"S3 Control\"\nlayout: \"aws\"\npage_title: \"AWS: aws_s3control_multi_region_access_point\"\ndescription: |-\n  Provides a resource to manage an S3 Multi-Region Access Point associated with specified buckets.\n---\n\n# Resource: aws_s3control_multi_region_access_point\n\nProvides a resource to manage an S3 Multi-Region Access Point associated with specified buckets.\n\n## Example Usage\n\n### Multiple AWS Buckets in Different Regions\n\n```terraform\nprovider \"aws\" {\n  region = \"us-east-1\"\n  alias  = \"primary_region\"\n}\n\nprovider \"aws\" {\n  region = \"us-west-2\"\n  alias  = \"secondary_region\"\n}\n\nresource \"aws_s3_bucket\" \"foo_bucket\" {\n  provider = aws.primary_region\n\n  bucket = \"example-bucket-foo\"\n}\n\nresource \"aws_s3_bucket\" \"bar_bucket\" {\n  provider = aws.secondary_region\n\n  bucket = \"example-bucket-bar\"\n}\n\nresource \"aws_s3control_multi_region_access_point\" \"example\" {\n  details {\n    name = \"example\"\n\n    region {\n      bucket = aws_s3_bucket.foo_bucket.id\n    }\n\n    region {\n      bucket = aws_s3_bucket.bar_bucket.id\n    }\n  }\n}\n```\n\n## Argument Reference\n\nThis resource supports the following arguments:\n\n* `account_id` - (Optional) The AWS account ID for the owner of the buckets for which you want to create a Multi-Region Access Point. Defaults to automatically determined account ID of the Terraform AWS provider.\n* `details` - (Required) A configuration block containing details about the Multi-Region Access Point. See [Details Configuration Block](#details-configuration) below for more details\n\n## Timeouts\n\n[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):\n\n* `create` - (Default `60m`)\n* `delete` - (Default `15m`)\n\n### Details Configuration\n\nThe `details` block supports the following:\n\n* `name` - (Required) The name of the Multi-Region Access Point.\n* `public_access_block` - (Optional) Configuration block to manage the `PublicAccessBlock` configuration that you want to apply to this Multi-Region Access Point. You can enable the configuration options in any combination. See [Public Access Block Configuration](#public-access-block-configuration) below for more details.\n* `region` - (Required) The Region configuration block to specify the bucket associated with the Multi-Region Access Point. See [Region Configuration](#region-configuration) below for more details.\n\nFor more information, see the documentation on [Multi-Region Access Points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPoints.html).\n\n### Public Access Block Configuration\n\nThe `public_access_block` block supports the following:\n\n* `block_public_acls` - (Optional) Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to `true`. Enabling this setting does not affect existing policies or ACLs. When set to `true` causes the following behavior:\n    * PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.\n    * PUT Object calls fail if the request includes a public ACL.\n    * PUT Bucket calls fail if the request includes a public ACL.\n* `block_public_policy` - (Optional) Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to `true`. Enabling this setting does not affect existing bucket policies. When set to `true` causes Amazon S3 to:\n    * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.\n* `ignore_public_acls` - (Optional) Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to `true`. Enabling this setting does not affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set. When set to `true` causes Amazon S3 to:\n    * Ignore all public ACLs on buckets in this account and any objects that they contain.\n* `restrict_public_buckets` - (Optional) Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to `true`. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to `true`:\n    * Only the bucket owner and AWS Services can access buckets with public policies.\n\n### Region Configuration\n\nThe `region` block supports the following:\n\n* `bucket` - (Required) The name of the associated bucket for the Region.\n* `bucket_account_id` - (Optional) The AWS account ID that owns the Amazon S3 bucket that's associated with this Multi-Region Access Point.\n\n## Attribute Reference\n\nThis resource exports the following attributes in addition to the arguments above:\n\n* `alias` - The alias for the Multi-Region Access Point.\n* `arn` - Amazon Resource Name (ARN) of the Multi-Region Access Point.\n* `domain_name` - The DNS domain name of the S3 Multi-Region Access Point in the format _`alias`_.accesspoint.s3-global.amazonaws.com. For more information, see the documentation on [Multi-Region Access Point Requests](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html).\n* `id` - The AWS account ID and access point name separated by a colon (`:`).\n* `status` - The current status of the Multi-Region Access Point. One of: `READY`, `INCONSISTENT_ACROSS_REGIONS`, `CREATING`, `PARTIALLY_CREATED`, `PARTIALLY_DELETED`, `DELETING`.\n\n## Import\n\nIn Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Multi-Region Access Points using the `account_id` and `name` of the Multi-Region Access Point separated by a colon (`:`). For example:\n\n```terraform\nimport {\n  to = aws_s3control_multi_region_access_point.example\n  id = \"123456789012:example\"\n}\n```\n\nUsing `terraform import`, import Multi-Region Access Points using the `account_id` and `name` of the Multi-Region Access Point separated by a colon (`:`). For example:\n\n```console\n% terraform import aws_s3control_multi_region_access_point.example 123456789012:example\n```\n",
      "language": "hcl",
      "path": "website/docs/r/s3control_multi_region_access_point.html.markdown",
      "slug": "s3control_multi_region_access_point",
      "subcategory": "S3 Control",
      "title": "s3control_multi_region_access_point",
      "truncated": false
    },
    "links": {
      "self": "/v2/provider-docs/3198887"
    }
  }
}