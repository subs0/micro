// To parse this data:
//
//   import { Convert, TerraformProviderAws } from "./file";
//
//   const terraformProviderAws = Convert.toTerraformProviderAws(json);
//
// These functions will throw an error if the JSON doesn't
// match the expected interface, even if the JSON is valid.

/**
 * some description goes here
 */
export interface TerraformProviderAws {
    data?:     Data;
    resource?: Resource;
}

export interface Data {
    cloudwatch_log_group?:                                  DataCloudwatchLogGroup;
    sesv2_configuration_set?:                               DataSesv2ConfigurationSet;
    acmpca_certificate_authority?:                          DataAcmpcaCertificateAuthority;
    ec2_managed_prefix_list?:                               DataEc2ManagedPrefixList;
    rds_certificate?:                                       RDSCertificate;
    api_gateway_export?:                                    APIGateway;
    eks_clusters?:                                          EksClusters;
    networkmanager_global_network?:                         NetworkmanagerGlobalNetwork;
    cloudfront_function?:                                   CloudfrontFunction;
    eips?:                                                  Eips;
    organizations_policies_for_target?:                     OrganizationsPoliciesForTarget;
    mskconnect_custom_plugin?:                              Mskconnect;
    cloudwatch_log_groups?:                                 CloudwatchLogGroups;
    ssm_patch_baseline?:                                    DataSsmPatchBaseline;
    kms_alias?:                                             KmsAlias;
    wafregional_web_acl?:                                   WafIpset;
    glue_data_catalog_encryption_settings?:                 GlueDataCatalogEncryptionSettings;
    ec2_transit_gateway_route_table_propagations?:          EbsVolumes;
    ssm_maintenance_windows?:                               Ec2TransitGatewayAttachments;
    vpc_ipam_preview_next_cidr?:                            VpcIPAMPreviewNextCIDR;
    connect_hours_of_operation?:                            ConnectHoursOfOperation;
    appconfig_configuration_profile?:                       DataAppconfigConfigurationProfile;
    route53_traffic_policy_document?:                       Route53TrafficPolicyDocument;
    ecr_image?:                                             EcrImage;
    location_map?:                                          LocationMap;
    s3_account_public_access_block?:                        S3AccountPublicAccessBlock;
    connect_lambda_function_association?:                   ConnectLambdaFunctionAssociation;
    connect_security_profile?:                              ConnectSecurityProfile;
    ec2_client_vpn_endpoint?:                               DataEc2ClientVPNEndpoint;
    networkmanager_devices?:                                Networkmanager;
    lakeformation_permissions?:                             DataLakeformationPermissions;
    cloudformation_stack?:                                  DataCloudformationStack;
    memorydb_subnet_group?:                                 ElasticacheSubnetGroup;
    ebs_volume?:                                            DataEbsVolume;
    location_geofence_collection?:                          LocationGeofenceCollection;
    networkmanager_links?:                                  NetworkmanagerLinks;
    launch_configuration?:                                  DataLaunchConfiguration;
    codecommit_repository?:                                 DataCodecommitRepository;
    fsx_ontap_file_system?:                                 CanonicalUserID;
    sesv2_dedicated_ip_pool?:                               Sesv2DedicatedIPPool;
    iam_policy?:                                            DataIamPolicy;
    apigatewayv2_api?:                                      DataApigatewayv2API;
    emr_release_labels?:                                    EmrReleaseLabels;
    appmesh_virtual_gateway?:                               Appmesh;
    caller_identity?:                                       CallerIdentity;
    route_table?:                                           DataRouteTable;
    autoscaling_group?:                                     AutoscalingGroup;
    ecs_container_definition?:                              EcsContainerDefinition;
    neptune_orderable_db_instance?:                         NeptuneOrderableDBInstance;
    api_gateway_authorizer?:                                APIGatewayAuthorizer;
    outposts_asset?:                                        OutpostsAsset;
    ec2_local_gateway?:                                     Ec2LocalGateway;
    s3_bucket_object?:                                      DataS3BucketObject;
    appmesh_route?:                                         Appmesh;
    network_acls?:                                          Ec2LocalGatewayVirtualInterfaceGroup;
    vpc_dhcp_options?:                                      VpcDHCPOptions;
    organizations_organizational_unit_descendant_accounts?: OrganizationsOrganizationalUnitChildAccountsClass;
    key_pair?:                                              DataKeyPair;
    networkmanager_global_networks?:                        NetworkmanagerGlobalNetworks;
    acmpca_certificate?:                                    AcmpcaCertificateCertificate;
    redshiftserverless_credentials?:                        RedshiftserverlessCredentials;
    vpc_peering_connections?:                               EbsVolumes;
    connect_instance?:                                      DataConnectInstance;
    route_tables?:                                          Ec2LocalGatewayVirtualInterfaceGroup;
    api_gateway_domain_name?:                               DataAPIGatewayDomainName;
    waf_web_acl?:                                           WafIpset;
    customer_gateway?:                                      CustomerGateway;
    batch_scheduling_policy?:                               BatchSchedulingPolicy;
    route53_resolver_rules?:                                Route53ResolverRules;
    ebs_snapshot?:                                          DataEbsSnapshot;
    memorydb_snapshot?:                                     MemorydbSnapshot;
    organizations_policy?:                                  OrganizationsPolicy;
    api_gateway_sdk?:                                       APIGateway;
    docdb_engine_version?:                                  EngineVersion;
    kms_ciphertext?:                                        KmsCiphertext;
    organizations_delegated_administrators?:                OrganizationsDelegatedAdministrators;
    appmesh_gateway_route?:                                 Appmesh;
    location_tracker?:                                      LocationTracker;
    datapipeline_pipeline_definition?:                      DatapipelinePipelineDefinition;
    efs_access_points?:                                     EFSAccessPoints;
    security_groups?:                                       SecurityGroups;
    api_gateway_rest_api?:                                  DataAPIGatewayRESTAPI;
    ssm_parameters_by_path?:                                SsmParametersByPath;
    elasticache_replication_group?:                         DataElasticacheReplicationGroup;
    kms_custom_key_store?:                                  DataKmsCustomKeyStore;
    rds_cluster?:                                           DataRDSCluster;
    memorydb_acl?:                                          MemorydbACL;
    fsx_openzfs_snapshot?:                                  FsxOpenzfsSnapshot;
    iam_saml_provider?:                                     IamSamlProvider;
    ec2_public_ipv4_pools?:                                 EbsVolumes;
    ssoadmin_instances?:                                    SsoadminInstances;
    networkmanager_site?:                                   NetworkmanagerSite;
    quicksight_user?:                                       DataQuicksightUser;
    subnets?:                                               Ec2InstanceTypes;
    kms_secrets?:                                           KmsSecrets;
    ce_tags?:                                               CeTags;
    appmesh_virtual_node?:                                  Appmesh;
    networkfirewall_firewall?:                              DataNetworkfirewallFirewall;
    ssmcontacts_contact_channel?:                           KmsSecretClass;
    neptune_engine_version?:                                EngineVersion;
    organizations_organizational_units?:                    OrganizationsOrganizationalUnitChildAccountsClass;
    glue_script?:                                           GlueScript;
    lambda_alias?:                                          LambdaAlias;
    imagebuilder_component?:                                ImagebuilderComponent;
    wafv2_web_acl?:                                         DataWafv2RuleGroup;
    ec2_managed_prefix_lists?:                              EbsVolumes;
    rds_reserved_instance_offering?:                        RDSReservedInstanceOffering;
    cloudcontrolapi_resource?:                              DataCloudcontrolapiResource;
    vpc_ipam_pool_cidrs?:                                   VpcIPAMPoolCidrs;
    wafregional_rule?:                                      WafIpset;
    ec2_local_gateway_route_tables?:                        EbsVolumes;
    ecrpublic_authorization_token?:                         EcrpublicAuthorizationToken;
    quicksight_group?:                                      QuicksightGroup;
    ec2_instance_types?:                                    Ec2InstanceTypes;
    batch_job_queue?:                                       BatchJobQueue;
    oam_sinks?:                                             OamInks;
    backup_vault?:                                          DataBackupVault;
    servicecatalog_portfolio_constraints?:                  ServicecatalogPortfolioConstraints;
    kms_key?:                                               DataKmsKey;
    sfn_alias?:                                             DataSfnAlias;
    ec2_instance_type?:                                     Ec2InstanceType;
    route53_resolver_firewall_config?:                      Route53ResolverConfig;
    cloudfront_realtime_log_config?:                        CloudfrontRealtimeLogConfig;
    dms_replication_subnet_group?:                          DataDmsReplicationSubnetGroup;
    arn?:                                                   Arn;
    docdb_orderable_db_instance?:                           DocdbOrderableDBInstance;
    dms_replication_instance?:                              DmsReplicationInstance;
    ec2_local_gateway_virtual_interface?:                   Ec2LocalGatewayVirtualInterface;
    lakeformation_resource?:                                DataLakeformationResource;
    lambda_code_signing_config?:                            LambdaCodeSigningConfig;
    vpc?:                                                   DataVpc;
    ec2_public_ipv4_pool?:                                  Ec2PublicIpv4Pool;
    mq_broker?:                                             DataMqBroker;
    iam_server_certificate?:                                DataIamServerCertificate;
    lb_hosted_zone_id?:                                     LBHostedZoneID;
    resourcegroupstaggingapi_resources?:                    ResourcegroupstaggingapiResources;
    globalaccelerator_accelerator?:                         GlobalacceleratorAccelerator;
    licensemanager_grants?:                                 Ec2TransitGatewayAttachments;
    subnet?:                                                Subnet;
    region?:                                                Region;
    vpn_gateway?:                                           DataVPNGateway;
    workspaces_directory?:                                  WorkspacesDirectory;
    ebs_default_kms_key?:                                   DataEbsDefaultKmsKey;
    elasticache_subnet_group?:                              ElasticacheSubnetGroup;
    service?:                                               DataService;
    msk_cluster?:                                           DataMskCluster;
    grafana_workspace?:                                     DataGrafanaWorkspace;
    cognito_user_pool_clients?:                             CognitoUserPoolClients;
    outposts_outpost_instance_types?:                       OutpostsOutpostInstanceTypes;
    sqs_queues?:                                            SqsQueues;
    lambda_layer_version?:                                  LambdaLayerVersion;
    efs_access_point?:                                      DataEFSAccessPoint;
    imagebuilder_distribution_configurations?:              ImagebuilderDistributionConfigurations;
    nat_gateways?:                                          Ec2LocalGatewayVirtualInterfaceGroup;
    ec2_transit_gateway_attachment?:                        Ec2TransitGatewayAttachment;
    ecs_task_execution?:                                    EcsTaskExecution;
    organizations_organization?:                            OrganizationsOrganization;
    api_gateway_authorizers?:                               APIGatewayAuthorizers;
    ram_resource_share?:                                    DataRAMResourceShare;
    service_discovery_http_namespace?:                      ElasticacheSubnetGroup;
    db_instances?:                                          DBInstances;
    opensearchserverless_security_config?:                  DataOpensearchserverlessSecurityConfig;
    connect_user_hierarchy_group?:                          ConnectUserHierarchyGroup;
    elasticache_cluster?:                                   DataElasticacheCluster;
    backup_framework?:                                      BackupFramework;
    budgets_budget?:                                        BudgetsBudget;
    redshiftserverless_namespace?:                          DataRedshiftserverlessNamespace;
    redshift_service_account?:                              ServiceAccount;
    cloudformation_type?:                                   CloudformationType;
    s3_object?:                                             DataS3BucketObject;
    redshift_orderable_cluster?:                            RedshiftOrderableCluster;
    sesv2_email_identity?:                                  DataSesv2EmailIdentity;
    connect_prompt?:                                        ConnectPrompt;
    route53_resolver_firewall_rule_group_association?:      DataRoute53ResolverFirewallRuleGroupAssociation;
    ec2_transit_gateway_vpc_attachment?:                    Ec2TransitGatewayVpcAttachment;
    eip?:                                                   DataEip;
    ssmincidents_response_plan?:                            SsmincidentsResponsePlan;
    fsx_ontap_storage_virtual_machine?:                     DataFsxOntapStorageVirtualMachine;
    organizations_organizational_unit_child_accounts?:      OrganizationsOrganizationalUnitChildAccountsClass;
    lex_intent?:                                            Lex;
    dms_endpoint?:                                          DataDmsEndpoint;
    kendra_index?:                                          KendraIndex;
    vpc_ipam_pool?:                                         VpcIPAMPool;
    vpclattice_auth_policy?:                                VpclatticeAuthPolicy;
    cloudformation_export?:                                 CloudformationExport;
    lbs?:                                                   Lbs;
    location_tracker_associations?:                         LocationTrackerAssociations;
    imagebuilder_distribution_configuration?:               DataImagebuilderDistributionConfiguration;
    codestarconnections_connection?:                        CodestarconnectionsConnection;
    security_group?:                                        Ec2LocalGatewayVirtualInterfaceGroup;
    cloudhsm_v2_cluster?:                                   DataCloudhsmV2Cluster;
    emrcontainers_virtual_cluster?:                         DataEmrcontainersVirtualCluster;
    wafv2_ip_set?:                                          Wafv2Set;
    kinesis_stream_consumer?:                               KinesisStreamConsumer;
    connect_bot_association?:                               DataConnectBotAssociation;
    waf_rule?:                                              WafIpset;
    ec2_transit_gateway_vpn_attachment?:                    Ec2TransitGatewayDxGatewayAttachmentClass;
    appconfig_environment?:                                 DataAppconfigEnvironment;
    ebs_volumes?:                                           EbsVolumes;
    codeartifact_repository_endpoint?:                      CodeartifactRepositoryEndpoint;
    signer_signing_job?:                                    DataSignerSigningJob;
    autoscaling_groups?:                                    AutoscalingGroups;
    outposts_assets?:                                       OutpostsAssets;
    cloudtrail_service_account?:                            ServiceAccount;
    waf_rate_based_rule?:                                   WafIpset;
    lambda_functions?:                                      LambdaFunctions;
    secretsmanager_secret?:                                 DataSecretsmanagerSecret;
    iam_account_alias?:                                     DataIamAccountAlias;
    connect_instance_storage_config?:                       ConnectInstanceStorageConfig;
    route53_resolver_endpoint?:                             DataRoute53ResolverEndpoint;
    sagemaker_prebuilt_ecr_image?:                          SagemakerPrebuiltEcrImage;
    db_subnet_group?:                                       DataDBSubnetGroup;
    servicecatalog_portfolio?:                              ServicecatalogPortfolio;
    appmesh_virtual_router?:                                Appmesh;
    directory_service_directory?:                           DataDirectoryServiceDirectory;
    iam_user?:                                              DataIamUser;
    cloudfront_origin_access_identities?:                   CloudfrontOriginAccessIdentities;
    eks_node_groups?:                                       EksNodeGroups;
    networkmanager_core_network_policy_document?:           NetworkmanagerCoreNetworkPolicyDocument;
    secretsmanager_secret_rotation?:                        DataSecretsmanagerSecretRotation;
    kms_secret?:                                            KmsSecretClass;
    signer_signing_profile?:                                SignerSigningProfile;
    vpclattice_listener?:                                   DataVpclatticeListener;
    ec2_transit_gateway_multicast_domain?:                  DataEc2TransitGatewayMulticastDomain;
    opensearchserverless_access_policy?:                    OpensearchserverlessPolicy;
    servicecatalog_launch_paths?:                           ServicecatalogLaunchPaths;
    dynamodb_table?:                                        ElbClass;
    s3_bucket_objects?:                                     S3Objects;
    storagegateway_local_disk?:                             StoragegatewayLocalDiskClass;
    connect_routing_profile?:                               ConnectRoutingProfile;
    rds_engine_version?:                                    RDSEngineVersion;
    cloudfront_cache_policy?:                               CloudfrontCachePolicy;
    dx_connection?:                                         DataDxConnection;
    ec2_transit_gateway_route_table_routes?:                Ec2TransitGatewayAttachments;
    cloudwatch_event_source?:                               CloudwatchEventSource;
    networkmanager_device?:                                 NetworkmanagerDevice;
    appintegrations_event_integration?:                     AppintegrationsEventIntegration;
    location_place_index?:                                  DataLocationPlaceIndex;
    connect_contact_flow_module?:                           ConnectContactFlowModule;
    availability_zone?:                                     AvailabilityZone;
    dx_location?:                                           DxLocation;
    nat_gateway?:                                           DataNatGateway;
    servicequotas_service?:                                 ServicequotasService;
    location_route_calculator?:                             LocationRouteCalculator;
    globalaccelerator_custom_routing_accelerator?:          GlobalacceleratorAccelerator;
    ec2_coip_pool?:                                         Ec2CoipPool;
    ecs_service?:                                           DataEcsService;
    s3control_multi_region_access_point?:                   DataS3ControlMultiRegionAccessPoint;
    imagebuilder_image_recipes?:                            Imagebuilder;
    eks_addon?:                                             DataEksAddon;
    oam_links?:                                             OamInks;
    ec2_transit_gateway_peering_attachment?:                DataEc2TransitGatewayPeeringAttachment;
    acm_certificate?:                                       DataACMCertificate;
    opensearchserverless_vpc_endpoint?:                     OpensearchserverlessVpcEndpoint;
    servicequotas_service_quota?:                           ServicequotasServiceQuota;
    ec2_coip_pools?:                                        EbsVolumes;
    eks_addon_version?:                                     EksAddonVersion;
    elb?:                                                   ElbClass;
    eks_cluster_auth?:                                      EksClusterAuth;
    imagebuilder_container_recipes?:                        Imagebuilder;
    lb?:                                                    CloudwatchEventBus;
    iam_session_context?:                                   IamSessionContext;
    partition?:                                             Partition;
    ses_active_receipt_rule_set?:                           SesActiveReceiptRuleSet;
    workspaces_bundle?:                                     WorkspacesBundle;
    workspaces_image?:                                      WorkspacesImage;
    imagebuilder_image_pipeline?:                           DataImagebuilderImagePipeline;
    imagebuilder_image_recipe?:                             DataImagebuilderImageRecipe;
    backup_selection?:                                      DataBackupSelection;
    imagebuilder_components?:                               Imagebuilder;
    mskconnect_worker_configuration?:                       Mskconnect;
    ssm_parameter?:                                         DataSsmParameter;
    s3_bucket?:                                             DataS3Bucket;
    sqs_queue?:                                             CloudwatchEventBusClass;
    fsx_windows_file_system?:                               DataFsxWindowsFileSystem;
    wafv2_regex_pattern_set?:                               Wafv2RegexPatternSet;
    secretsmanager_random_password?:                        SecretsmanagerRandomPassword;
    cloudwatch_event_bus?:                                  CloudwatchEventBus;
    api_gateway_resource?:                                  APIGatewayResource;
    instances?:                                             Instances;
    connect_quick_connect?:                                 ConnectQuickConnect;
    rds_orderable_db_instance?:                             RDSOrderableDBInstance;
    waf_ipset?:                                             WafIpset;
    memorydb_user?:                                         DataMemorydbUser;
    vpclattice_service_network?:                            VpclatticeServiceNetwork;
    api_gateway_api_key?:                                   APIGatewayAPIKey;
    db_cluster_snapshot?:                                   DBClusterSnapshot;
    dx_locations?:                                          DxLocations;
    db_proxy?:                                              DataDBProxy;
    network_interfaces?:                                    EbsVolumes;
    cloudfront_origin_access_identity?:                     CloudfrontOriginAccessIdentity;
    licensemanager_received_licenses?:                      Ec2TransitGatewayAttachments;
    kinesis_stream?:                                        DataKinesisStream;
    ip_ranges?:                                             IPRanges;
    imagebuilder_image_pipelines?:                          Imagebuilder;
    default_tags?:                                          DefaultTags;
    elasticsearch_domain?:                                  SearchDomain;
    qldb_ledger?:                                           ElbClass;
    ivs_stream_key?:                                        IvsStreamKey;
    msk_vpc_connection?:                                    MskVpcConnection;
    waf_subscribed_rule_group?:                             WafSubscribedRuleGroup;
    elasticache_user?:                                      DataElasticacheUser;
    lb_target_group?:                                       CloudwatchEventBus;
    networkfirewall_resource_policy?:                       ResourcePolicy;
    networkmanager_sites?:                                  Networkmanager;
    wafregional_ipset?:                                     WafIpset;
    organizations_policies?:                                OrganizationsPolicies;
    db_snapshot?:                                           DataDBSnapshot;
    imagebuilder_container_recipe?:                         DataImagebuilderContainerRecipe;
    connect_user?:                                          ConnectUser;
    iam_user_ssh_key?:                                      IamUserSSHKey;
    secretsmanager_secret_version?:                         SecretsmanagerSecretVersion;
    msk_kafka_version?:                                     MskKafkaVersion;
    elastic_beanstalk_hosted_zone?:                         CloudfrontLogDeliveryCanonicalUserID;
    workspaces_workspace?:                                  WorkspacesWorkspace;
    db_event_categories?:                                   DBEventCategories;
    route53_resolver_firewall_rule_group?:                  Route53ResolverFirewallRuleGroup;
    ssoadmin_permission_set?:                               SsoadminPermissionSet;
    apigatewayv2_export?:                                   Apigatewayv2Export;
    apigatewayv2_apis?:                                     Apigatewayv2Apis;
    pricing_product?:                                       PricingProduct;
    cloudfront_log_delivery_canonical_user_id?:             CloudfrontLogDeliveryCanonicalUserID;
    elastic_beanstalk_solution_stack?:                      ElasticBeanstalkSolutionStack;
    guardduty_finding_ids?:                                 GuarddutyFindingIDS;
    iam_users?:                                             Iam;
    quicksight_data_set?:                                   DataQuicksightDataSet;
    ses_domain_identity?:                                   SesDomainIdentity;
    vpc_endpoint?:                                          DataVpcEndpoint;
    sfn_state_machine_versions?:                            SfnStateMachineVersions;
    cloudfront_distribution?:                               DataCloudfrontDistribution;
    outposts_outpost?:                                      OutpostsOutpost;
    vpclattice_service?:                                    VpclatticeService;
    ec2_transit_gateway?:                                   Ec2TransitGateway;
    service_discovery_dns_namespace?:                       ServiceDiscoveryDNSNamespace;
    oam_sink?:                                              OamSink;
    redshiftserverless_workgroup?:                          DataRedshiftserverlessWorkgroup;
    codecatalyst_dev_environment?:                          DataCodecatalystDevEnvironment;
    ec2_transit_gateway_route_table_associations?:          EbsVolumes;
    organizations_delegated_services?:                      OrganizationsDelegatedServices;
    cloudwatch_log_data_protection_policy_document?:        CloudwatchLogDataProtectionPolicyDocument;
    lambda_function_url?:                                   DataLambdaFunctionURL;
    quicksight_theme?:                                      QuicksightTheme;
    organizations_resource_tags?:                           OrganizationsResourceTags;
    transfer_server?:                                       DataTransferServer;
    ecs_task_definition?:                                   DataEcsTaskDefinition;
    mq_broker_instance_type_offerings?:                     MqBrokerInstanceTypeOfferings;
    vpcs?:                                                  EbsVolumes;
    backup_report_plan?:                                    BackupReportPlan;
    ec2_transit_gateway_attachments?:                       Ec2TransitGatewayAttachments;
    glue_catalog_table?:                                    GlueCatalogTable;
    cloudwatch_event_connection?:                           DataCloudwatchEventConnection;
    ec2_local_gateways?:                                    EbsVolumes;
    ec2_local_gateway_virtual_interface_groups?:            Ec2LocalGatewayVirtualInterfaceGroup;
    ebs_encryption_by_default?:                             ServicecatalogOrganizationsAccessClass;
    ses_email_identity?:                                    SesEmailIdentity;
    iot_endpoint?:                                          IotEndpoint;
    route53_resolver_rule?:                                 Route53Resolver;
    availability_zones?:                                    AvailabilityZones;
    ce_cost_category?:                                      CeCostCategory;
    ec2_instance_type_offerings?:                           Ec2InstanceTypeOfferings;
    wafregional_subscribed_rule_group?:                     WafSubscribedRuleGroup;
    lambda_function?:                                       DataLambdaFunction;
    opensearchserverless_collection?:                       OpensearchserverlessCollection;
    vpclattice_resource_policy?:                            VpclatticeResourcePolicyClass;
    cognito_user_pool_client?:                              CognitoUserPoolClient;
    s3_objects?:                                            S3Objects;
    dynamodb_table_item?:                                   DataDynamodbTableItem;
    efs_file_system?:                                       DataEFSFileSystem;
    datapipeline_pipeline?:                                 DatapipelinePipeline;
    cloudfront_origin_request_policy?:                      CloudfrontOriginRequestPolicy;
    eks_cluster?:                                           DataEksCluster;
    cloudfront_response_headers_policy?:                    CloudfrontResponseHeadersPolicy;
    elb_hosted_zone_id?:                                    CloudfrontLogDeliveryCanonicalUserID;
    ec2_transit_gateway_route_tables?:                      EbsVolumes;
    codecommit_approval_rule_template?:                     CodecommitApprovalRuleTemplate;
    ec2_transit_gateway_route_table?:                       DataEc2TransitGatewayRouteTable;
    outposts_outposts?:                                     OutpostsOutposts;
    oam_link?:                                              OamLink;
    prometheus_workspace?:                                  DataPrometheusWorkspace;
    servicecatalog_constraint?:                             ServicecatalogConstraint;
    eks_node_group?:                                        DataEksNodeGroup;
    ec2_transit_gateway_connect?:                           DataEc2TransitGatewayConnect;
    instance?:                                              DataInstance;
    vpc_security_group_rules?:                              Ec2InstanceTypes;
    canonical_user_id?:                                     CanonicalUserID;
    lakeformation_data_lake_settings?:                      LakeformationDataLakeSettings;
    iam_policy_document?:                                   IamPolicyDocument;
    rds_clusters?:                                          RDSClusters;
    serverlessapplicationrepository_application?:           ServerlessapplicationrepositoryApplication;
    ecs_cluster?:                                           DataEcsCluster;
    connect_vocabulary?:                                    ConnectVocabulary;
    dms_certificate?:                                       DataDmsCertificate;
    connect_contact_flow?:                                  DataConnectContactFlow;
    ec2_transit_gateway_connect_peer?:                      DataEc2TransitGatewayConnectPeer;
    ec2_transit_gateway_vpc_attachments?:                   Ec2TransitGatewayAttachments;
    identitystore_user?:                                    DataIdentitystoreUser;
    networkmanager_connections?:                            Networkmanager;
    s3_bucket_policy?:                                      S3BucketPolicy;
    dx_router_configuration?:                               DxRouterConfiguration;
    kendra_query_suggestions_block_list?:                   KendraFAQClass;
    appconfig_environments?:                                AppconfigEnvironments;
    ec2_local_gateway_route_table?:                         Ec2LocalGatewayRouteTable;
    efs_mount_target?:                                      EFSMountTarget;
    lex_slot_type?:                                         Lex;
    service_discovery_service?:                             ServiceDiscoveryService;
    cognito_identity_pool?:                                 DataCognitoIdentityPool;
    api_gateway_vpc_link?:                                  DataAPIGatewayVpcLink;
    ecr_repository?:                                        DataEcrRepository;
    route53_delegation_set?:                                Route53DelegationSet;
    appmesh_mesh?:                                          Appmesh;
    ec2_network_insights_analysis?:                         DataEc2NetworkInsightsAnalysis;
    secretsmanager_secrets?:                                ImagebuilderDistributionConfigurations;
    memorydb_parameter_group?:                              ElasticacheSubnetGroup;
    opensearch_domain?:                                     SearchDomain;
    wafv2_rule_group?:                                      DataWafv2RuleGroup;
    redshift_cluster_credentials?:                          RedshiftClusterCredentials;
    db_instance?:                                           DataDBInstance;
    ec2_host?:                                              DataEc2Host;
    networkmanager_link?:                                   NetworkmanagerLink;
    ec2_spot_price?:                                        Ec2SpotPrice;
    fsx_ontap_storage_virtual_machines?:                    FsxOntapStorageVirtualMachines;
    outposts_outpost_instance_type?:                        OutpostsOutpostInstanceType;
    dx_gateway?:                                            DxGateway;
    codeartifact_authorization_token?:                      CodeartifactAuthorizationToken;
    prefix_list?:                                           PrefixList;
    ami_ids?:                                               AmiIDS;
    appmesh_virtual_service?:                               Appmesh;
    network_interface?:                                     DataNetworkInterface;
    sns_topic?:                                             OrganizationsOrganizationalUnitClass;
    wafregional_rate_based_rule?:                           WafIpset;
    ec2_instance_type_offering?:                            Ec2InstanceTypeOffering;
    mskconnect_connector?:                                  ChimesdkvoiceVoiceProfileDomainClass;
    lex_bot_alias?:                                         Lex;
    servicecatalog_product?:                                ServicecatalogProduct;
    connect_queue?:                                         ConnectQueue;
    ec2_serial_console_access?:                             ServicecatalogOrganizationsAccessClass;
    iam_access_keys?:                                       IamAccessKeys;
    vpc_security_group_rule?:                               VpcSecurityGroupRule;
    inspector_rules_packages?:                              InspectorRulesPackages;
    elastic_beanstalk_application?:                         ElasticBeanstalkApplication;
    kinesis_firehose_delivery_stream?:                      CloudwatchEventBus;
    kendra_experience?:                                     DataKendraExperience;
    ssm_document?:                                          DataSsmDocument;
    kms_public_key?:                                        KmsPublicKey;
    cognito_user_pool_signing_certificate?:                 CognitoUserPoolSigningCertificate;
    iam_roles?:                                             Iam;
    ec2_transit_gateway_dx_gateway_attachment?:             Ec2TransitGatewayDxGatewayAttachmentClass;
    regions?:                                               DataRegions;
    backup_plan?:                                           DataBackupPlan;
    msk_configuration?:                                     MskConfiguration;
    redshift_cluster?:                                      DataRedshiftCluster;
    ssmcontacts_contact?:                                   SsmcontactsContact;
    iam_instance_profile?:                                  DataIamInstanceProfile;
    memorydb_cluster?:                                      MemorydbCluster;
    billing_service_account?:                               BillingServiceAccount;
    ssmcontacts_plan?:                                      SsmcontactsPlan;
    cur_report_definition?:                                 CurReportDefinition;
    outposts_sites?:                                        OutpostsSites;
    kendra_thesaurus?:                                      KendraFAQClass;
    prometheus_workspaces?:                                 PrometheusWorkspaces;
    iam_group?:                                             DataIamGroup;
    msk_broker_nodes?:                                      MskBrokerNodes;
    sfn_state_machine?:                                     DataSfnStateMachine;
    kendra_faq?:                                            KendraFAQClass;
    auditmanager_framework?:                                AuditmanagerFrameworkClass;
    batch_compute_environment?:                             DataBatchComputeEnvironment;
    ami?:                                                   DataAmi;
    redshift_subnet_group?:                                 ElasticacheSubnetGroup;
    ssmincidents_replication_set?:                          DataSsmincidentsReplicationSet;
    appconfig_configuration_profiles?:                      AppconfigConfigurationProfiles;
    iam_principal_policy_simulation?:                       IamPrincipalPolicySimulation;
    lambda_invocation?:                                     DataLambdaInvocation;
    lb_listener?:                                           DataLBListener;
    vpc_peering_connection?:                                DataVpcPeeringConnection;
    servicecatalog_provisioning_artifacts?:                 ServicecatalogProvisioningArtifacts;
    networkmanager_connection?:                             NetworkmanagerConnection;
    sesv2_email_identity_mail_from_attributes?:             Sesv2EmailIdentityMailFromAttributes;
    dms_replication_task?:                                  DmsReplicationTask;
    ecr_authorization_token?:                               EcrAuthorizationToken;
    connect_user_hierarchy_structure?:                      ConnectUserHierarchyStructure;
    ecr_pull_through_cache_rule?:                           KmsSecretClass;
    iam_role?:                                              DataIamRole;
    internet_gateway?:                                      InternetGateway;
    lex_bot?:                                               DataLexBot;
    location_tracker_association?:                          LocationTrackerAssociation;
    glue_connection?:                                       DataGlueConnection;
    imagebuilder_infrastructure_configuration?:             DataImagebuilderInfrastructureConfiguration;
    iam_instance_profiles?:                                 IamInstanceProfiles;
    route53_resolver_query_log_config?:                     Route53ResolverQueryLogConfig;
    cognito_user_pools?:                                    CognitoUserPools;
    vpc_ipam_pools?:                                        VpcIPAMPools;
    imagebuilder_image?:                                    ImagebuilderImage;
    ec2_local_gateway_virtual_interface_group?:             Ec2LocalGatewayVirtualInterfaceGroup;
    iam_openid_connect_provider?:                           IamOpenidConnectProvider;
    identitystore_group?:                                   DataIdentitystoreGroup;
    imagebuilder_infrastructure_configurations?:            ImagebuilderDistributionConfigurations;
    ssm_instances?:                                         Ec2TransitGatewayAttachments;
    auditmanager_control?:                                  AuditmanagerFrameworkClass;
    guardduty_detector?:                                    DataGuarddutyDetector;
    licensemanager_received_license?:                       LicensemanagerReceivedLicense;
    networkfirewall_firewall_policy?:                       DataNetworkfirewallFirewallPolicy;
    route53_zone?:                                          DataRoute53Zone;
    route53_resolver_firewall_rules?:                       Route53ResolverFirewallRules;
    organizations_organizational_unit?:                     OrganizationsOrganizationalUnitClass;
    route?:                                                 RoutesClass;
    route53_resolver_firewall_domain_list?:                 Route53ResolverFirewallDomainList;
    ebs_snapshot_ids?:                                      EbsSnapshotIDS;
    launch_template?:                                       Ec2InstanceTypes;
    vpc_endpoint_service?:                                  DataVpcEndpointService;
    opensearchserverless_security_policy?:                  OpensearchserverlessSecurityPolicy;
    controltower_controls?:                                 ControltowerControls;
    ec2_network_insights_path?:                             DataEc2NetworkInsightsPath;
    elb_service_account?:                                   ServiceAccount;
    sfn_activity?:                                          OrganizationsOrganizationalUnitClass;
    outposts_site?:                                         OutpostsSite;
}

export interface DataACMCertificate {
    domain:             string;
    key_types?:         string;
    statuses?:          string;
    types?:             string;
    most_recent?:       string;
    arn?:               string;
    id?:                string;
    status?:            string;
    certificate?:       string;
    certificate_chain?: string;
    tags?:              string;
}

export interface AcmpcaCertificateCertificate {
    arn?:                      string;
    certificate_authority_arn: string;
    certificate?:              string;
    certificate_chain?:        string;
}

export interface DataAcmpcaCertificateAuthority {
    arn:                          string;
    id?:                          string;
    certificate?:                 string;
    certificate_chain?:           string;
    certificate_signing_request?: string;
    usage_mode?:                  string;
    not_after?:                   string;
    not_before?:                  string;
    serial?:                      string;
    status?:                      string;
    tags?:                        string;
    type?:                        string;
}

export interface DataAmi {
    owners?:              string;
    most_recent?:         string;
    include_deprecated?:  string;
    filter?:              string;
    arn?:                 string;
    architecture?:        string;
    boot_mode?:           string;
    creation_date?:       string;
    deprecation_time?:    string;
    description?:         string;
    hypervisor?:          string;
    image_id?:            string;
    image_location?:      string;
    image_owner_alias?:   string;
    image_type?:          string;
    imds_support?:        string;
    kernel_id?:           string;
    name?:                string;
    owner_id?:            string;
    platform?:            string;
    public?:              string;
    ramdisk_id?:          string;
    root_device_name?:    string;
    root_device_type?:    string;
    root_snapshot_id?:    string;
    sriov_net_support?:   string;
    state?:               string;
    tpm_support?:         string;
    virtualization_type?: string;
    usage_operation?:     string;
    platform_details?:    string;
    ena_support?:         string;
}

export interface AmiIDS {
    owners:              string;
    filter?:             string;
    name_regex?:         string;
    sort_ascending?:     string;
    include_deprecated?: string;
}

export interface APIGatewayAPIKey {
    id?:                string;
    name?:              string;
    value?:             string;
    created_date?:      string;
    last_updated_date?: string;
    customer_id?:       string;
    description?:       string;
    enabled?:           string;
    tags?:              string;
    arn?:               string;
    tags_all?:          string;
}

export interface APIGatewayAuthorizer {
    authorizer_id?:                    string;
    rest_api_id:                       string;
    arn?:                              string;
    authorizer_credentials?:           string;
    authorizer_result_ttl_in_seconds?: string;
    authorizer_uri?:                   string;
    identity_source?:                  string;
    identity_validation_expression?:   string;
    name?:                             string;
    provider_arns?:                    string;
    type?:                             string;
    id?:                               string;
}

export interface APIGatewayAuthorizers {
    rest_api_id: string;
    ids?:        string;
}

export interface DataAPIGatewayDomainName {
    domain_name:                string;
    arn?:                       string;
    certificate_arn?:           string;
    certificate_name?:          string;
    certificate_upload_date?:   string;
    cloudfront_domain_name?:    string;
    cloudfront_zone_id?:        string;
    regional_certificate_arn?:  string;
    regional_certificate_name?: string;
    regional_domain_name?:      string;
    regional_zone_id?:          string;
    security_policy?:           string;
    tags?:                      string;
}

export interface APIGateway {
    export_type?:         string;
    rest_api_id:          string;
    stage_name:           string;
    accepts?:             string;
    parameters?:          string;
    id?:                  string;
    body?:                string;
    content_type?:        string;
    content_disposition?: string;
    sdk_type?:            string;
}

export interface APIGatewayResource {
    rest_api_id: string;
    path?:       string;
    id?:         string;
    parent_id?:  string;
    path_part?:  string;
}

export interface DataAPIGatewayRESTAPI {
    name:                      string;
    api_key_source?:           string;
    arn?:                      string;
    binary_media_types?:       string;
    description?:              string;
    endpoint_configuration?:   string;
    execution_arn?:            string;
    id?:                       string;
    minimum_compression_size?: string;
    policy?:                   string;
    root_resource_id?:         string;
    tags?:                     string;
}

export interface DataAPIGatewayVpcLink {
    name:            string;
    id?:             string;
    description?:    string;
    status?:         string;
    status_message?: string;
    target_arns?:    string;
    tags?:           string;
}

export interface DataApigatewayv2API {
    api_id:                        string;
    api_endpoint?:                 string;
    api_key_selection_expression?: string;
    arn?:                          string;
    cors_configuration?:           string;
    description?:                  string;
    disable_execute_api_endpoint?: string;
    execution_arn?:                string;
    name?:                         string;
    protocol_type?:                string;
    route_selection_expression?:   string;
    tags?:                         string;
    version?:                      string;
    allow_credentials?:            string;
    allow_headers?:                string;
    allow_methods?:                string;
    allow_origins?:                string;
    expose_headers?:               string;
    max_age?:                      string;
}

export interface Apigatewayv2Apis {
    name?:          string;
    protocol_type?: string;
    tags?:          string;
    ids?:           string;
}

export interface Apigatewayv2Export {
    api_id:              string;
    specification:       string;
    output_type:         string;
    export_version?:     string;
    include_extensions?: string;
    stage_name?:         string;
    id?:                 string;
    body?:               string;
}

export interface DataAppconfigConfigurationProfile {
    application_id:           string;
    configuration_profile_id: string;
    arn?:                     string;
    description?:             string;
    id?:                      string;
    location_uri?:            string;
    name?:                    string;
    retrieval_role_arn?:      string;
    tags?:                    string;
}

export interface AppconfigConfigurationProfiles {
    application_id:             string;
    configuration_profile_ids?: string;
}

export interface DataAppconfigEnvironment {
    application_id: string;
    environment_id: string;
    arn?:           string;
    name?:          string;
    description?:   string;
    state?:         string;
    tags?:          string;
}

export interface AppconfigEnvironments {
    application_id:   string;
    environment_ids?: string;
}

export interface AppintegrationsEventIntegration {
    name:             string;
    arn?:             string;
    description?:     string;
    eventbridge_bus?: string;
    event_filter?:    string;
    id?:              string;
    tags?:            string;
    source?:          string;
    tags_all?:        string;
}

export interface Appmesh {
    name:                  string;
    mesh_name?:            string;
    virtual_gateway_name?: string;
    mesh_owner?:           string;
    arn?:                  string;
    created_date?:         string;
    last_updated_date?:    string;
    resource_owner?:       string;
    spec?:                 string;
    tags?:                 string;
    virtual_router_name?:  string;
}

export interface Arn {
    arn:        string;
    partition?: string;
    service?:   string;
    region?:    string;
    account?:   string;
    resource?:  string;
}

export interface AuditmanagerFrameworkClass {
    name: string;
    type: string;
}

export interface AutoscalingGroup {
    name?:                      string;
    arn?:                       string;
    availability_zones?:        string;
    default_cool_down?:         string;
    desired_capacity?:          string;
    desired_capacity_type?:     string;
    enabled_metrics?:           string;
    health_check_grace_period?: string;
    health_check_type?:         string;
    id?:                        string;
    launch_configuration?:      string;
    load_balancers?:            string;
    max_instance_lifetime?:     string;
    max_size?:                  string;
    min_size?:                  string;
    placement_group?:           string;
    predicted_capacity?:        string;
    service_linked_role_arn?:   string;
    status?:                    string;
    suspended_processes?:       string;
    target_group_arns?:         string;
    termination_policies?:      string;
    vpc_zone_identifier?:       string;
    warm_pool_size?:            string;
}

export interface AutoscalingGroups {
    names?: string;
    arns?:  string;
    id?:    string;
}

export interface AvailabilityZone {
    name:                    string;
    values:                  string;
    all_availability_zones?: string;
    filter?:                 string;
    state?:                  string;
    zone_id?:                string;
    group_name?:             string;
    name_suffix?:            string;
    network_border_group?:   string;
    opt_in_status?:          string;
    parent_zone_id?:         string;
    parent_zone_name?:       string;
    region?:                 string;
    zone_type?:              string;
}

export interface AvailabilityZones {
    name:                    string;
    values:                  string;
    all_availability_zones?: string;
    filter?:                 string;
    exclude_names?:          string;
    exclude_zone_ids?:       string;
    state?:                  string;
    id?:                     string;
    names?:                  string;
    zone_ids?:               string;
}

export interface BackupFramework {
    name:                       string;
    arn?:                       string;
    control?:                   string;
    creation_time?:             string;
    deployment_status?:         string;
    description?:               string;
    id?:                        string;
    status?:                    string;
    tags?:                      string;
    input_parameter?:           string;
    scope?:                     string;
    value?:                     string;
    compliance_resource_ids?:   string;
    compliance_resource_types?: string;
    tags_all?:                  string;
}

export interface DataBackupPlan {
    plan_id:  string;
    arn?:     string;
    name?:    string;
    tags?:    string;
    version?: string;
}

export interface BackupReportPlan {
    name:                     string;
    arn?:                     string;
    creation_time?:           string;
    deployment_status?:       string;
    description?:             string;
    id?:                      string;
    report_delivery_channel?: string;
    report_setting?:          string;
    tags?:                    string;
    formats?:                 string;
    s3_bucket_name?:          string;
    s3_key_prefix?:           string;
    accounts?:                string;
    framework_arns?:          string;
    number_of_frameworks?:    string;
    organization_units?:      string;
    regions?:                 string;
    report_template?:         string;
    tags_all?:                string;
}

export interface DataBackupSelection {
    plan_id:       string;
    selection_id:  string;
    name?:         string;
    iam_role_arn?: string;
    resources?:    string;
}

export interface DataBackupVault {
    name:             string;
    arn?:             string;
    kms_key_arn?:     string;
    recovery_points?: string;
    tags?:            string;
}

export interface DataBatchComputeEnvironment {
    compute_environment_name: string;
    arn?:                     string;
    ecs_cluster_arn?:         string;
    service_role?:            string;
    type?:                    string;
    status?:                  string;
    status_reason?:           string;
    state?:                   string;
    tags?:                    string;
}

export interface BatchJobQueue {
    name:                   string;
    arn?:                   string;
    scheduling_policy_arn?: string;
    status?:                string;
    status_reason?:         string;
    state?:                 string;
    tags?:                  string;
    priority?:              string;
    compute_environments?:  string;
    tags_all?:              string;
}

export interface BatchSchedulingPolicy {
    arn?:                 string;
    fairshare_policy?:    string;
    name?:                string;
    tags?:                string;
    compute_reservation?: string;
    share_delay_seconds?: string;
    share_distribution?:  string;
    share_identifier?:    string;
    weight_factor?:       string;
    tags_all?:            string;
}

export interface BillingServiceAccount {
    id?:  string;
    arn?: string;
}

export interface BudgetsBudget {
    name?:                       string;
    account_id?:                 string;
    name_prefix?:                string;
    auto_adjust_data?:           string;
    budget_exceeded?:            string;
    budget_limit?:               string;
    budget_type?:                string;
    calculated_spend?:           string;
    cost_filter?:                string;
    cost_types?:                 string;
    notification?:               string;
    planned_limit?:              string;
    time_period_end?:            string;
    time_period_start?:          string;
    time_unit?:                  string;
    auto_adjust_type?:           string;
    historical_options?:         string;
    last_auto_adjust_time?:      string;
    comparison_operator?:        string;
    threshold?:                  string;
    threshold_type?:             string;
    notification_type?:          string;
    subscriber_email_addresses?: string;
    subscriber_sns_topic_arns?:  string;
    include_credit?:             string;
    include_discount?:           string;
    include_other_subscription?: string;
    include_recurring?:          string;
    include_refund?:             string;
    include_subscription?:       string;
    include_support?:            string;
    include_tax?:                string;
    include_upfront?:            string;
    use_amortized?:              string;
    use_blended?:                string;
    budget_adjustment_period?:   string;
    lookback_available_periods?: string;
    amount?:                     string;
    start_time?:                 string;
    unit?:                       string;
    limit_amount?:               string;
    limit_unit?:                 string;
    id?:                         string;
    arn?:                        string;
}

export interface CallerIdentity {
    account_id?: string;
    arn?:        string;
    id?:         string;
    user_id?:    string;
}

export interface CanonicalUserID {
    id?: string;
}

export interface CeCostCategory {
    cost_category_arn?: string;
    arn?:               string;
    default_value?:     string;
    effective_end?:     string;
    effective_start?:   string;
    id?:                string;
    rule?:              string;
    rule_version?:      string;
    split_charge_rule?: string;
    tags?:              string;
    inherited_value?:   string;
    type?:              string;
    value?:             string;
    dimension_key?:     string;
    dimension_name?:    string;
    and?:               string;
    cost_category?:     string;
    dimension?:         string;
    not?:               string;
    or?:                string;
    key?:               string;
    match_options?:     string;
    values?:            string;
    method?:            string;
    parameter?:         string;
    source?:            string;
    targets?:           string;
    name?:              string;
    tags_all?:          string;
}

export interface CeTags {
    time_period:    string;
    start:          string;
    end:            string;
    key:            string;
    filter?:        string;
    search_string?: string;
    sort_by?:       string;
    tag_key?:       string;
    and?:           string;
    cost_category?: string;
    dimension?:     string;
    not?:           string;
    or?:            string;
    tag?:           string;
    match_options?: string;
    values?:        string;
    sort_order?:    string;
    id?:            string;
    tags?:          string;
}

export interface DataCloudcontrolapiResource {
    identifier:       string;
    type_name:        string;
    role_arn?:        string;
    type_version_id?: string;
    properties?:      string;
}

export interface CloudformationExport {
    name:                string;
    value?:              string;
    exporting_stack_id?: string;
}

export interface DataCloudformationStack {
    name:                string;
    capabilities?:       string;
    description?:        string;
    disable_rollback?:   string;
    notification_arns?:  string;
    outputs?:            string;
    parameters?:         string;
    tags?:               string;
    template_body?:      string;
    iam_role_arn?:       string;
    timeout_in_minutes?: string;
}

export interface CloudformationType {
    arn?:                    string;
    type?:                   string;
    type_name?:              string;
    version_id?:             string;
    default_version_id?:     string;
    deprecated_status?:      string;
    description?:            string;
    documentation_url?:      string;
    execution_role_arn?:     string;
    is_default_version?:     string;
    provisioning_type?:      string;
    schema?:                 string;
    source_url?:             string;
    visibility?:             string;
    schema_handler_package?: string;
    logging_config?:         LoggingConfig;
    type_arn?:               string;
}

export interface LoggingConfig {
    log_group_name: string;
    log_role_arn:   string;
}

export interface CloudfrontCachePolicy {
    name?:                                            string;
    id?:                                              string;
    etag?:                                            string;
    min_ttl?:                                         string;
    max_ttl?:                                         string;
    default_ttl?:                                     string;
    comment?:                                         string;
    parameters_in_cache_key_and_forwarded_to_origin?: string;
    cookies_config?:                                  string;
    headers_config?:                                  string;
    query_strings_config?:                            string;
    enable_accept_encoding_brotli?:                   string;
    enable_accept_encoding_gzip?:                     string;
    cookie_behavior?:                                 string;
    cookies?:                                         string;
    header_behavior?:                                 string;
    headers?:                                         string;
    query_string_behavior?:                           string;
    query_strings?:                                   string;
    items?:                                           string;
}

export interface DataCloudfrontDistribution {
    id?:                             string;
    aliases?:                        string;
    arn?:                            string;
    status?:                         string;
    domain_name?:                    string;
    last_modified_time?:             string;
    in_progress_validation_batches?: string;
    etag?:                           string;
    hosted_zone_id?:                 string;
}

export interface CloudfrontFunction {
    name:                string;
    stage?:              string;
    arn?:                string;
    code?:               string;
    comment?:            string;
    etag?:               string;
    last_modified_time?: string;
    runtime?:            string;
    status?:             string;
    publish?:            string;
    live_stage_etag?:    string;
}

export interface CloudfrontLogDeliveryCanonicalUserID {
    region?: string;
    id?:     string;
}

export interface CloudfrontOriginAccessIdentities {
    comments?:              string;
    iam_arns?:              string;
    ids?:                   string;
    s3_canonical_user_ids?: string;
}

export interface CloudfrontOriginAccessIdentity {
    id?:                              string;
    caller_reference?:                string;
    cloudfront_access_identity_path?: string;
    comment?:                         string;
    etag?:                            string;
    iam_arn?:                         string;
    s3_canonical_user_id?:            string;
}

export interface CloudfrontOriginRequestPolicy {
    name?:                 string;
    id?:                   string;
    comment?:              string;
    cookies_config?:       string;
    etag?:                 string;
    headers_config?:       string;
    query_strings_config?: string;
}

export interface CloudfrontRealtimeLogConfig {
    name:                   string;
    arn?:                   string;
    endpoint?:              string;
    fields?:                string;
    sampling_rate?:         string;
    kinesis_stream_config?: string;
    stream_type?:           string;
    role_arn?:              string;
    stream_arn?:            string;
    id?:                    string;
}

export interface CloudfrontResponseHeadersPolicy {
    name?:                             string;
    id?:                               string;
    comment?:                          string;
    etag?:                             string;
    cors_config?:                      string;
    custom_headers_config?:            string;
    remove_headers_config?:            string;
    security_headers_config?:          string;
    server_timing_headers_config?:     string;
    access_control_allow_credentials?: string;
    access_control_allow_headers?:     string;
    access_control_allow_methods?:     string;
    access_control_allow_origins?:     string;
    access_control_expose_headers?:    string;
    access_control_max_age_sec?:       string;
    header?:                           string;
    override?:                         string;
    value?:                            string;
    content_security_policy?:          string;
    content_type_options?:             string;
    frame_options?:                    string;
    referrer_policy?:                  string;
    strict_transport_security?:        string;
    xss_protection?:                   string;
    frame_option?:                     string;
    include_subdomains?:               string;
    preload?:                          string;
    mode_block?:                       string;
    protection?:                       string;
    report_uri?:                       string;
    enabled?:                          string;
    sampling_rate?:                    string;
    origin_override?:                  string;
}

export interface DataCloudhsmV2Cluster {
    cluster_id:         string;
    cluster_state?:     string;
    vpc_id?:            string;
    security_group_id?: string;
    subnet_ids?:        string;
}

export interface ServiceAccount {
    region?: string;
    id?:     string;
    arn?:    string;
}

export interface CloudwatchEventBus {
    name?: string;
    arn?:  string;
}

export interface DataCloudwatchEventConnection {
    name?:               string;
    arn?:                string;
    secret_arn?:         string;
    authorization_type?: string;
}

export interface CloudwatchEventSource {
    name_prefix?: string;
    arn?:         string;
    created_by?:  string;
    name?:        string;
    state?:       string;
}

export interface CloudwatchLogDataProtectionPolicyDocument {
    name:                 string;
    statement:            string;
    data_identifiers:     string;
    operation:            string;
    findings_destination: string;
    log_group:            string;
    delivery_stream:      string;
    bucket:               string;
    mask_config:          string;
    description?:         string;
    version?:             string;
    sid?:                 string;
    audit?:               string;
    deidentify?:          string;
    cloudwatch_logs?:     string;
    firehose?:            string;
    s3?:                  string;
    json?:                string;
}

export interface DataCloudwatchLogGroup {
    name:               string;
    creation_time?:     string;
    retention_in_days?: string;
    kms_key_id?:        string;
    tags?:              string;
}

export interface CloudwatchLogGroups {
    log_group_name_prefix?: string;
    arns?:                  string;
    log_group_names?:       string;
}

export interface CodeartifactAuthorizationToken {
    domain:               string;
    domain_owner?:        string;
    duration_seconds?:    string;
    authorization_token?: string;
    expiration?:          string;
}

export interface CodeartifactRepositoryEndpoint {
    domain:               string;
    repository:           string;
    format:               string;
    domain_owner?:        string;
    repository_endpoint?: string;
}

export interface DataCodecatalystDevEnvironment {
    env_id:                      string;
    project_name:                string;
    space_name:                  string;
    alias?:                      string;
    creator_id?:                 string;
    ides?:                       string;
    inactivity_timeout_minutes?: string;
    instance_type?:              string;
    last_updated_time?:          string;
    persistent_storage?:         string;
    repositories?:               string;
    status?:                     string;
    status_reason?:              string;
}

export interface CodecommitApprovalRuleTemplate {
    name:                       string;
    approval_rule_template_id?: string;
    content?:                   string;
    creation_date?:             string;
    description?:               string;
    last_modified_date?:        string;
    last_modified_user?:        string;
    rule_content_sha256?:       string;
}

export interface DataCodecommitRepository {
    repository_name: string;
    repository_id?:  string;
    arn?:            string;
    clone_url_http?: string;
    clone_url_ssh?:  string;
}

export interface CodestarconnectionsConnection {
    arn?:               string;
    connection_status?: string;
    id?:                string;
    host_arn?:          string;
    name?:              string;
    provider_type?:     string;
    tags?:              string;
    tags_all?:          string;
}

export interface DataCognitoIdentityPool {
    identity_pool_name:                string;
    id?:                               string;
    arn?:                              string;
    allow_unauthenticated_identities?: string;
    allow_classic_flow?:               string;
    developer_provider_name?:          string;
    cognito_identity_providers?:       string;
    openid_connect_provider_arns?:     string;
    saml_provider_arns?:               string;
    supported_login_providers?:        string;
    tags?:                             string;
}

export interface CognitoUserPoolClient {
    client_id?:                                     string;
    user_pool_id:                                   string;
    access_token_validity?:                         string;
    allowed_oauth_flows_user_pool_client?:          string;
    allowed_oauth_flows?:                           string;
    allowed_oauth_scopes?:                          string;
    analytics_configuration?:                       AnalyticsConfiguration;
    callback_urls?:                                 string;
    client_secret?:                                 string;
    default_redirect_uri?:                          string;
    enable_token_revocation?:                       string;
    explicit_auth_flows?:                           string;
    generate_secret?:                               string;
    id_token_validity?:                             string;
    logout_urls?:                                   string;
    prevent_user_existence_errors?:                 string;
    read_attributes?:                               string;
    refresh_token_validity?:                        string;
    supported_identity_providers?:                  string;
    token_validity_units?:                          TokenValidityUnits;
    write_attributes?:                              string;
    name?:                                          string;
    auth_session_validity?:                         string;
    enable_propagate_additional_user_context_data?: string;
    id?:                                            string;
}

export interface AnalyticsConfiguration {
    application_arn:   string;
    application_id:    string;
    external_id:       string;
    role_arn:          string;
    user_data_shared?: string;
}

export interface TokenValidityUnits {
    access_token:  string;
    id_token:      string;
    refresh_token: string;
}

export interface CognitoUserPoolClients {
    user_pool_id:  string;
    client_ids?:   string;
    client_names?: string;
}

export interface CognitoUserPoolSigningCertificate {
    user_pool_id: string;
    certificate?: string;
}

export interface CognitoUserPools {
    name:  string;
    ids?:  string;
    arns?: string;
}

export interface DataConnectBotAssociation {
    instance_id: string;
    lex_bot:     ConnectBotAssociationLexBot;
}

export interface ConnectBotAssociationLexBot {
    name:        string;
    lex_region?: string;
}

export interface DataConnectContactFlow {
    instance_id:      string;
    contact_flow_id?: string;
    name?:            string;
    arn?:             string;
    content?:         string;
    description?:     string;
    tags?:            string;
    type?:            string;
}

export interface ConnectContactFlowModule {
    instance_id:             string;
    contact_flow_module_id?: string;
    name?:                   string;
    arn?:                    string;
    content?:                string;
    description?:            string;
    tags?:                   string;
    state?:                  string;
    status?:                 string;
}

export interface ConnectHoursOfOperation {
    instance_id:            string;
    hours_of_operation_id?: string;
    name?:                  string;
    arn?:                   string;
    config?:                string;
    description?:           string;
    tags?:                  string;
    time_zone?:             string;
    day?:                   string;
    end_time?:              string;
    start_time?:            string;
    hours?:                 string;
    minutes?:               string;
    id?:                    string;
    tags_all?:              string;
}

export interface DataConnectInstance {
    instance_id?:                    string;
    instance_alias?:                 string;
    created_time?:                   string;
    arn?:                            string;
    identity_management_type?:       string;
    inbound_calls_enabled?:          string;
    outbound_calls_enabled?:         string;
    early_media_enabled?:            string;
    contact_flow_logs_enabled?:      string;
    contact_lens_enabled?:           string;
    auto_resolve_best_voices?:       string;
    multi_party_conference_enabled?: string;
    use_custom_tts_voices?:          string;
    status?:                         string;
    service_role?:                   string;
}

export interface ConnectInstanceStorageConfig {
    association_id?:              string;
    instance_id:                  string;
    resource_type:                string;
    id?:                          string;
    storage_config?:              string;
    kinesis_firehose_config?:     string;
    kinesis_stream_config?:       string;
    kinesis_video_stream_config?: string;
    s3_config?:                   string;
    storage_type?:                string;
    firehose_arn?:                string;
    stream_arn?:                  string;
    encryption_config?:           string;
    prefix?:                      string;
    retention_period_hours?:      string;
    bucket_name?:                 string;
    bucket_prefix?:               string;
    encryption_type?:             string;
    key_id?:                      string;
}

export interface ConnectLambdaFunctionAssociation {
    function_arn: string;
    instance_id:  string;
    id?:          string;
}

export interface ConnectPrompt {
    instance_id: string;
    name:        string;
    arn?:        string;
    prompt_id?:  string;
}

export interface ConnectQueue {
    instance_id:                   string;
    queue_id?:                     string;
    name?:                         string;
    arn?:                          string;
    description?:                  string;
    hours_of_operation_id?:        string;
    id?:                           string;
    max_contacts?:                 string;
    outbound_caller_config?:       string;
    status?:                       string;
    tags?:                         string;
    outbound_caller_id_name?:      string;
    outbound_caller_id_number_id?: string;
    outbound_flow_id?:             string;
    quick_connect_ids?:            string;
    tags_all?:                     string;
}

export interface ConnectQuickConnect {
    instance_id:           string;
    quick_connect_id?:     string;
    name?:                 string;
    arn?:                  string;
    description?:          string;
    id?:                   string;
    quick_connect_config?: string;
    tags?:                 string;
    quick_connect_type?:   string;
    phone_config?:         string;
    queue_config?:         string;
    user_config?:          string;
    phone_number?:         string;
    contact_flow_id?:      string;
    queue_id?:             string;
    user_id?:              string;
    tags_all?:             string;
}

export interface ConnectRoutingProfile {
    instance_id?:               string;
    name?:                      string;
    routing_profile_id?:        string;
    arn?:                       string;
    default_outbound_queue_id?: string;
    description?:               string;
    id?:                        string;
    media_concurrencies?:       string;
    queue_configs?:             string;
    tags?:                      string;
    channel?:                   string;
    concurrency?:               string;
    delay?:                     string;
    priority?:                  string;
    queue_arn?:                 string;
    queue_id?:                  string;
    queue_name?:                string;
    tags_all?:                  string;
}

export interface ConnectSecurityProfile {
    instance_id:               string;
    security_profile_id?:      string;
    name?:                     string;
    arn?:                      string;
    description?:              string;
    id?:                       string;
    organization_resource_id?: string;
    permissions?:              string;
    tags?:                     string;
    tags_all?:                 string;
}

export interface ConnectUser {
    instance_id:                    string;
    name?:                          string;
    user_id?:                       string;
    arn?:                           string;
    directory_user_id?:             string;
    hierarchy_group_id?:            string;
    id?:                            string;
    identity_info?:                 string;
    phone_config?:                  string;
    routing_profile_id?:            string;
    security_profile_ids?:          string;
    tags?:                          string;
    email?:                         string;
    first_name?:                    string;
    last_name?:                     string;
    after_contact_work_time_limit?: string;
    auto_accept?:                   string;
    desk_phone_number?:             string;
    phone_type?:                    string;
    password?:                      string;
    tags_all?:                      string;
}

export interface ConnectUserHierarchyGroup {
    instance_id:         string;
    hierarchy_group_id?: string;
    name?:               string;
    arn?:                string;
    hierarchy_path?:     string;
    level_id?:           string;
    id?:                 string;
    tags?:               string;
    level_one?:          string;
    level_two?:          string;
    level_three?:        string;
    level_four?:         string;
    level_five?:         string;
    parent_group_id?:    string;
    tags_all?:           string;
}

export interface ConnectUserHierarchyStructure {
    instance_id:          string;
    hierarchy_structure?: string;
    level_one?:           string;
    level_two?:           string;
    level_three?:         string;
    level_four?:          string;
    level_five?:          string;
    arn?:                 string;
    id?:                  string;
    name?:                string;
}

export interface ConnectVocabulary {
    instance_id:         string;
    name?:               string;
    vocabulary_id?:      string;
    arn?:                string;
    content?:            string;
    failure_reason?:     string;
    id?:                 string;
    language_code?:      string;
    last_modified_time?: string;
    state?:              string;
    tags?:               string;
    tags_all?:           string;
}

export interface ControltowerControls {
    target_identifier: string;
    enabled_controls?: string;
}

export interface CurReportDefinition {
    report_name:                 string;
    time_unit?:                  string;
    format?:                     string;
    compression?:                string;
    additional_schema_elements?: string;
    s3_bucket?:                  string;
    s3_prefix?:                  string;
    s3_region?:                  string;
    additional_artifacts?:       string;
    refresh_closed_reports?:     string;
    report_versioning?:          string;
    arn?:                        string;
}

export interface CustomerGateway {
    id?:              string;
    filter?:          string;
    arn?:             string;
    bgp_asn?:         string;
    certificate_arn?: string;
    device_name?:     string;
    ip_address?:      string;
    tags?:            string;
    type?:            string;
    tags_all?:        string;
}

export interface DatapipelinePipeline {
    pipeline_id:  string;
    name?:        string;
    description?: string;
    tags?:        string;
}

export interface DatapipelinePipelineDefinition {
    pipeline_id:       string;
    parameter_object?: string;
    parameter_value?:  string;
    pipeline_object?:  string;
    attributes?:       string;
    id?:               string;
    key?:              string;
    string_value?:     string;
    field?:            string;
    name?:             string;
    ref_value?:        string;
    attribute?:        string;
}

export interface DBClusterSnapshot {
    most_recent?:                           string;
    db_cluster_identifier?:                 string;
    db_cluster_snapshot_identifier?:        string;
    snapshot_type?:                         string;
    include_shared?:                        string;
    include_public?:                        string;
    tags?:                                  string;
    allocated_storage?:                     string;
    availability_zones?:                    string;
    db_cluster_snapshot_arn?:               string;
    engine_version?:                        string;
    engine?:                                string;
    id?:                                    string;
    kms_key_id?:                            string;
    license_model?:                         string;
    port?:                                  string;
    snapshot_create_time?:                  string;
    source_db_cluster_snapshot_identifier?: string;
    status?:                                string;
    storage_encrypted?:                     string;
    vpc_id?:                                string;
}

export interface DBEventCategories {
    source_type?:      string;
    event_categories?: string;
    id?:               string;
}

export interface DataDBInstance {
    db_instance_identifier?:          string;
    tags?:                            string;
    address?:                         string;
    allocated_storage?:               string;
    auto_minor_version_upgrade?:      string;
    availability_zone?:               string;
    backup_retention_period?:         string;
    db_cluster_identifier?:           string;
    db_instance_arn?:                 string;
    db_instance_class?:               string;
    db_name?:                         string;
    db_parameter_groups?:             string;
    db_subnet_group?:                 string;
    db_instance_port?:                string;
    enabled_cloudwatch_logs_exports?: string;
    endpoint?:                        string;
    engine?:                          string;
    engine_version?:                  string;
    hosted_zone_id?:                  string;
    iops?:                            string;
    license_model?:                   string;
    master_username?:                 string;
    master_user_secret?:              MasterUserSecret;
    max_allocated_storage?:           string;
    monitoring_interval?:             string;
    monitoring_role_arn?:             string;
    multi_az?:                        string;
    network_type?:                    string;
    option_group_memberships?:        string;
    port?:                            string;
    preferred_backup_window?:         string;
    preferred_maintenance_window?:    string;
    publicly_accessible?:             string;
    resource_id?:                     string;
    storage_encrypted?:               string;
    storage_throughput?:              string;
    storage_type?:                    string;
    timezone?:                        string;
    vpc_security_groups?:             string;
    replicate_source_db?:             string;
    ca_cert_identifier?:              string;
}

export interface MasterUserSecret {
    kms_key_id:    string;
    secret_arn:    string;
    secret_status: string;
}

export interface DBInstances {
    name:                  string;
    values:                string;
    filter?:               string;
    tags?:                 string;
    instance_arns?:        string;
    instance_identifiers?: string;
}

export interface DataDBProxy {
    name:                    string;
    arn?:                    string;
    auth?:                   string;
    debug_logging?:          string;
    endpoint?:               string;
    engine_family?:          string;
    idle_client_timeout?:    string;
    require_tls?:            string;
    role_arn?:               string;
    vpc_id?:                 string;
    vpc_security_group_ids?: string;
    vpc_subnet_ids?:         string;
}

export interface DataDBSnapshot {
    most_recent?:                   string;
    db_instance_identifier?:        string;
    db_snapshot_identifier?:        string;
    snapshot_type?:                 string;
    include_shared?:                string;
    include_public?:                string;
    id?:                            string;
    allocated_storage?:             string;
    availability_zone?:             string;
    db_snapshot_arn?:               string;
    encrypted?:                     string;
    engine?:                        string;
    engine_version?:                string;
    iops?:                          string;
    kms_key_id?:                    string;
    license_model?:                 string;
    option_group_name?:             string;
    source_db_snapshot_identifier?: string;
    source_region?:                 string;
    status?:                        string;
    storage_type?:                  string;
    vpc_id?:                        string;
    snapshot_create_time?:          string;
}

export interface DataDBSubnetGroup {
    name:                     string;
    arn?:                     string;
    description?:             string;
    status?:                  string;
    subnet_ids?:              string;
    supported_network_types?: string;
    vpc_id?:                  string;
}

export interface DefaultTags {
    tags?: EnvironmentClass;
}

export interface EnvironmentClass {
    key:   string;
    value: string;
}

export interface DataDirectoryServiceDirectory {
    directory_id:             string;
    type?:                    string;
    edition?:                 string;
    name?:                    string;
    password?:                string;
    size?:                    string;
    alias?:                   string;
    description?:             string;
    short_name?:              string;
    enable_sso?:              string;
    access_url?:              string;
    dns_ip_addresses?:        string;
    security_group_id?:       string;
    tags?:                    string;
    subnet_ids?:              string;
    vpc_id?:                  string;
    connect_ips?:             string;
    customer_username?:       string;
    customer_dns_ips?:        string;
    authentication_protocol?: string;
    display_label?:           string;
    radius_port?:             string;
    radius_retries?:          string;
    radius_servers?:          string;
    radius_timeout?:          string;
    use_same_username?:       string;
}

export interface DataDmsCertificate {
    certificate_id:             string;
    certificate_creation_date?: string;
    certificate_pem?:           string;
    certificate_owner?:         string;
    certificate_arn?:           string;
    certificate_wallet?:        string;
    key_length?:                string;
    signing_algorithm?:         string;
    valid_from_date?:           string;
    valid_to_date?:             string;
}

export interface DataDmsEndpoint {
    endpoint_id: string;
}

export interface DmsReplicationInstance {
    replication_instance_id:           string;
    allocated_storage?:                string;
    auto_minor_version_upgrade?:       string;
    availability_zone?:                string;
    engine_version?:                   string;
    kms_key_arn?:                      string;
    multi_az?:                         string;
    network_type?:                     string;
    preferred_maintenance_window?:     string;
    publicly_accessible?:              string;
    replication_instance_arn?:         string;
    replication_instance_class?:       string;
    replication_instance_private_ips?: string;
    replication_instance_public_ips?:  string;
    replication_subnet_group_id?:      string;
    vpc_security_group_ids?:           string;
    allow_major_version_upgrade?:      string;
    apply_immediately?:                string;
    tags?:                             string;
    tags_all?:                         string;
}

export interface DataDmsReplicationSubnetGroup {
    replication_subnet_group_id:           string;
    replication_subnet_group_description?: string;
    subnet_ids?:                           string;
    vpc_id?:                               string;
}

export interface DmsReplicationTask {
    replication_task_id:        string;
    cdc_start_position?:        string;
    cdc_start_time?:            string;
    migration_type?:            string;
    replication_instance_arn?:  string;
    replication_task_settings?: string;
    source_endpoint_arn?:       string;
    start_replication_task?:    string;
    status?:                    string;
    table_mappings?:            string;
    target_endpoint_arn?:       string;
    replication_task_arn?:      string;
    tags?:                      string;
    tags_all?:                  string;
}

export interface EngineVersion {
    engine?:                             string;
    parameter_group_family?:             string;
    preferred_versions?:                 string;
    version?:                            string;
    engine_description?:                 string;
    exportable_log_types?:               string;
    supports_log_exports_to_cloudwatch?: string;
    valid_upgrade_targets?:              string;
    version_description?:                string;
    supported_timezones?:                string;
    supports_read_replica?:              string;
}

export interface DocdbOrderableDBInstance {
    engine?:                     string;
    engine_version?:             string;
    instance_class?:             string;
    license_model?:              string;
    preferred_instance_classes?: string;
    vpc?:                        string;
    availability_zones?:         string;
}

export interface DataDxConnection {
    name:              string;
    arn?:              string;
    aws_device?:       string;
    bandwidth?:        string;
    id?:               string;
    location?:         string;
    owner_account_id?: string;
    partner_name?:     string;
    provider_name?:    string;
    tags?:             string;
    vlan_id?:          string;
}

export interface DxGateway {
    name:              string;
    amazon_side_asn?:  string;
    id?:               string;
    owner_account_id?: string;
}

export interface DxLocation {
    location_code:                 string;
    available_macsec_port_speeds?: string;
    available_port_speeds?:        string;
    available_providers?:          string;
    location_name?:                string;
}

export interface DxLocations {
    location_codes?: string;
}

export interface DxRouterConfiguration {
    virtual_interface_id:        string;
    router_type_identifier:      string;
    customer_router_config?:     string;
    router?:                     string;
    platform?:                   string;
    software?:                   string;
    vendor?:                     string;
    xslt_template_name?:         string;
    xslt_template_name_for_mac?: string;
}

export interface ElbClass {
    name: string;
}

export interface DataDynamodbTableItem {
    table_name:                 string;
    key:                        string;
    expression_attribute_name?: string;
    projection_expression?:     string;
    item?:                      string;
}

export interface DataEbsDefaultKmsKey {
    key_arn?: string;
    id?:      string;
}

export interface ServicecatalogOrganizationsAccessClass {
    enabled?: string;
    id?:      string;
}

export interface DataEbsSnapshot {
    most_recent?:            string;
    owners?:                 string;
    snapshot_ids?:           string;
    restorable_by_user_ids?: string;
    filter?:                 string;
    arn?:                    string;
    id?:                     string;
    snapshot_id?:            string;
    description?:            string;
    owner_id?:               string;
    owner_alias?:            string;
    volume_id?:              string;
    encrypted?:              string;
    volume_size?:            string;
    kms_key_id?:             string;
    data_encryption_key_id?: string;
    state?:                  string;
    storage_tier?:           string;
    outpost_arn?:            string;
    tags?:                   string;
}

export interface EbsSnapshotIDS {
    owners?:                 string;
    restorable_by_user_ids?: string;
    filter?:                 string;
    id?:                     string;
    ids?:                    string;
}

export interface DataEbsVolume {
    most_recent?:          string;
    filter?:               string;
    id?:                   string;
    volume_id?:            string;
    arn?:                  string;
    availability_zone?:    string;
    encrypted?:            string;
    iops?:                 string;
    multi_attach_enabled?: string;
    size?:                 string;
    snapshot_id?:          string;
    outpost_arn?:          string;
    volume_type?:          string;
    kms_key_id?:           string;
    tags?:                 string;
    throughput?:           string;
}

export interface EbsVolumes {
    name:                            string;
    values:                          string;
    filter?:                         string;
    tags?:                           string;
    id?:                             string;
    ids?:                            string;
    pool_ids?:                       string;
    transit_gateway_route_table_id?: string;
}

export interface DataEc2ClientVPNEndpoint {
    client_vpn_endpoint_id?:      string;
    filter?:                      Ec2ClientVPNEndpointFilter;
    tags?:                        string;
    arn?:                         string;
    authentication_options?:      string;
    client_cidr_block?:           string;
    client_connect_options?:      string;
    client_login_banner_options?: string;
    connection_log_options?:      string;
    description?:                 string;
    dns_name?:                    string;
    dns_servers?:                 string;
    security_group_ids?:          string;
    self_service_portal?:         string;
    server_certificate_arn?:      string;
    session_timeout_hours?:       string;
    split_tunnel?:                string;
    transport_protocol?:          string;
    vpc_id?:                      string;
    vpn_port?:                    string;
}

export interface Ec2ClientVPNEndpointFilter {
    name:   string;
    values: string;
}

export interface Ec2CoipPool {
    name:                          string;
    values:                        string;
    local_gateway_route_table_id?: string;
    pool_id?:                      string;
    tags?:                         string;
    arn?:                          string;
    pool_cidrs?:                   string;
}

export interface DataEc2Host {
    filter?:            Ec2ClientVPNEndpointFilter;
    host_id?:           string;
    id?:                string;
    arn?:               string;
    asset_id?:          string;
    auto_placement?:    string;
    availability_zone?: string;
    cores?:             string;
    host_recovery?:     string;
    instance_family?:   string;
    instance_type?:     string;
    outpost_arn?:       string;
    owner_id?:          string;
    sockets?:           string;
    total_vcpus?:       string;
}

export interface Ec2InstanceType {
    instance_type:                         string;
    auto_recovery_supported?:              string;
    bare_metal?:                           string;
    burstable_performance_supported?:      string;
    current_generation?:                   string;
    dedicated_hosts_supported?:            string;
    default_cores?:                        string;
    default_threads_per_core?:             string;
    default_vcpus?:                        string;
    ebs_encryption_support?:               string;
    ebs_nvme_support?:                     string;
    ebs_optimized_support?:                string;
    ebs_performance_baseline_bandwidth?:   string;
    ebs_performance_baseline_iops?:        string;
    ebs_performance_baseline_throughput?:  string;
    ebs_performance_maximum_bandwidth?:    string;
    ebs_performance_maximum_iops?:         string;
    ebs_performance_maximum_throughput?:   string;
    efa_supported?:                        string;
    ena_support?:                          string;
    encryption_in_transit_supported?:      string;
    free_tier_eligible?:                   string;
    hibernation_supported?:                string;
    hypervisor?:                           string;
    instance_storage_supported?:           string;
    ipv6_supported?:                       string;
    maximum_ipv4_addresses_per_interface?: string;
    maximum_ipv6_addresses_per_interface?: string;
    maximum_network_interfaces?:           string;
    memory_size?:                          string;
    network_performance?:                  string;
    supported_architectures?:              string;
    supported_placement_strategies?:       string;
    supported_root_device_types?:          string;
    supported_usages_classes?:             string;
    supported_virtualization_types?:       string;
    sustained_clock_speed?:                string;
    total_fpga_memory?:                    string;
    total_gpu_memory?:                     string;
    total_instance_storage?:               string;
    valid_cores?:                          string;
    valid_threads_per_core?:               string;
}

export interface Ec2InstanceTypeOffering {
    name:                      string;
    values:                    string;
    filter?:                   string;
    location_type?:            string;
    preferred_instance_types?: string;
    id?:                       string;
    instance_type?:            string;
}

export interface Ec2InstanceTypeOfferings {
    name:            string;
    values:          string;
    filter?:         string;
    location_type?:  string;
    id?:             string;
    instance_types?: string;
    locations?:      string;
    location_types?: string;
}

export interface Ec2InstanceTypes {
    name:            string;
    values:          string;
    filter?:         string;
    id?:             string;
    instance_types?: string;
    tags?:           string;
    ids?:            string;
}

export interface Ec2LocalGateway {
    name:         string;
    values:       string;
    filter?:      string;
    id?:          string;
    state?:       string;
    tags?:        string;
    outpost_arn?: string;
    owner_id?:    string;
}

export interface Ec2LocalGatewayRouteTable {
    name:                          string;
    values:                        string;
    local_gateway_route_table_id?: string;
    local_gateway_id?:             string;
    outpost_arn?:                  string;
    state?:                        string;
    tags?:                         string;
}

export interface Ec2LocalGatewayVirtualInterface {
    name:              string;
    values:            string;
    filter?:           string;
    id?:               string;
    tags?:             string;
    local_address?:    string;
    local_bgp_asn?:    string;
    local_gateway_id?: string;
    peer_address?:     string;
    peer_bgp_asn?:     string;
    vlan?:             string;
}

export interface Ec2LocalGatewayVirtualInterfaceGroup {
    name:                                 string;
    values:                               string;
    filter?:                              string;
    id?:                                  string;
    local_gateway_id?:                    string;
    tags?:                                string;
    local_gateway_virtual_interface_ids?: string;
    ids?:                                 string;
    vpc_id?:                              string;
    description?:                         string;
}

export interface DataEc2ManagedPrefixList {
    name:            string;
    values:          string;
    id?:             string;
    filter?:         string;
    arn?:            string;
    entries?:        string;
    owner_id?:       string;
    address_family?: string;
    max_entries?:    string;
    tags?:           string;
}

export interface DataEc2NetworkInsightsAnalysis {
    name:                          string;
    values:                        string;
    network_insights_analysis_id?: string;
    filter?:                       string;
    alternate_path_hints?:         string;
    arn?:                          string;
    explanations?:                 string;
    filter_in_arns?:               string;
    forward_path_components?:      string;
    network_insights_path_id?:     string;
    path_found?:                   string;
    return_path_components?:       string;
    start_date?:                   string;
    status?:                       string;
    status_message?:               string;
    warning_message?:              string;
}

export interface DataEc2NetworkInsightsPath {
    name:                      string;
    values:                    string;
    network_insights_path_id?: string;
    filter?:                   string;
    arn?:                      string;
    destination?:              string;
    destination_arn?:          string;
    destination_ip?:           string;
    destination_port?:         string;
    protocol?:                 string;
    source?:                   string;
    source_arn?:               string;
    source_ip?:                string;
    tags?:                     string;
}

export interface Ec2PublicIpv4Pool {
    pool_id:                        string;
    description?:                   string;
    network_border_group?:          string;
    tags?:                          string;
    total_address_count?:           string;
    total_available_address_count?: string;
}

export interface Ec2SpotPrice {
    name:                  string;
    values:                string;
    instance_type?:        string;
    availability_zone?:    string;
    filter?:               string;
    id?:                   string;
    spot_price?:           string;
    spot_price_timestamp?: string;
}

export interface Ec2TransitGateway {
    name?:                               string;
    values?:                             string;
    filter?:                             string;
    id?:                                 string;
    amazon_side_asn?:                    string;
    arn?:                                string;
    association_default_route_table_id?: string;
    auto_accept_shared_attachments?:     string;
    default_route_table_association?:    string;
    default_route_table_propagation?:    string;
    description?:                        string;
    dns_support?:                        string;
    multicast_support?:                  string;
    owner_id?:                           string;
    propagation_default_route_table_id?: string;
    tags?:                               string;
    transit_gateway_cidr_blocks?:        string;
    vpn_ecmp_support?:                   string;
    tags_all?:                           string;
}

export interface Ec2TransitGatewayAttachment {
    name:                                        string;
    values:                                      string;
    filter?:                                     string;
    transit_gateway_attachment_id?:              string;
    arn?:                                        string;
    association_state?:                          string;
    association_transit_gateway_route_table_id?: string;
    resource_id?:                                string;
    resource_owner_id?:                          string;
    resource_type?:                              string;
    state?:                                      string;
    tags?:                                       string;
    transit_gateway_id?:                         string;
    transit_gateway_owner_id?:                   string;
}

export interface Ec2TransitGatewayAttachments {
    name:                            string;
    values:                          string;
    filter?:                         string;
    transit_gateway_route_table_id?: string;
    arns?:                           string;
    ids?:                            string;
}

export interface DataEc2TransitGatewayConnect {
    name:                        string;
    values:                      string;
    filter?:                     string;
    transit_gateway_connect_id?: string;
    protocol?:                   string;
    tags?:                       string;
    transit_gateway_id?:         string;
    transport_attachment_id?:    string;
}

export interface DataEc2TransitGatewayConnectPeer {
    name:                             string;
    values:                           string;
    filter?:                          string;
    transit_gateway_connect_peer_id?: string;
    arn?:                             string;
    bgp_asn?:                         string;
    bgp_peer_address?:                string;
    bgp_transit_gateway_addresses?:   string;
    inside_cidr_blocks?:              string;
    peer_address?:                    string;
    tags?:                            string;
    transit_gateway_address?:         string;
    transit_gateway_attachment_id?:   string;
}

export interface Ec2TransitGatewayDxGatewayAttachmentClass {
    name:                string;
    values:              string;
    transit_gateway_id?: string;
    dx_gateway_id?:      string;
    filter?:             string;
    tags?:               string;
    id?:                 string;
    vpn_connection_id?:  string;
}

export interface DataEc2TransitGatewayMulticastDomain {
    name:                                 string;
    values:                               string;
    filter?:                              string;
    transit_gateway_multicast_domain_id?: string;
    id?:                                  string;
    arn?:                                 string;
    auto_accept_shared_associations?:     string;
    igmpv2_support?:                      string;
    owner_id?:                            string;
    static_sources_support?:              string;
    tags?:                                string;
    transit_gateway_id?:                  string;
}

export interface DataEc2TransitGatewayPeeringAttachment {
    name:                     string;
    values:                   string;
    filter?:                  string;
    id?:                      string;
    tags?:                    string;
    peer_account_id?:         string;
    peer_region?:             string;
    peer_transit_gateway_id?: string;
    transit_gateway_id?:      string;
}

export interface DataEc2TransitGatewayRouteTable {
    name:                             string;
    values:                           string;
    filter?:                          string;
    id?:                              string;
    arn?:                             string;
    default_association_route_table?: string;
    default_propagation_route_table?: string;
    transit_gateway_id?:              string;
    tags?:                            string;
}

export interface Ec2TransitGatewayVpcAttachment {
    name?:                                            string;
    values?:                                          string;
    filter?:                                          string;
    id?:                                              string;
    appliance_mode_support?:                          string;
    dns_support?:                                     string;
    ipv6_support?:                                    string;
    subnet_ids?:                                      string;
    transit_gateway_id?:                              string;
    tags?:                                            string;
    vpc_id?:                                          string;
    vpc_owner_id?:                                    string;
    transit_gateway_default_route_table_association?: string;
    transit_gateway_default_route_table_propagation?: string;
    tags_all?:                                        string;
    transit_gateway_attachment_id?:                   string;
}

export interface EcrAuthorizationToken {
    registry_id?:         string;
    authorization_token?: string;
    expires_at?:          string;
    id?:                  string;
    password?:            string;
    proxy_endpoint?:      string;
    user_name?:           string;
}

export interface EcrImage {
    repository_name:      string;
    registry_id?:         string;
    image_digest?:        string;
    image_tag?:           string;
    most_recent?:         string;
    id?:                  string;
    image_pushed_at?:     string;
    image_size_in_bytes?: string;
    image_tags?:          string;
}

export interface KmsSecretClass {
}

export interface DataEcrRepository {
    name:                          string;
    registry_id?:                  string;
    arn?:                          string;
    encryption_configuration?:     string;
    image_scanning_configuration?: string;
    image_tag_mutability?:         string;
    most_recent_image_tags?:       string;
    repository_url?:               string;
    tags?:                         string;
    encryption_type?:              string;
    kms_key?:                      string;
    scan_on_push?:                 string;
}

export interface EcrpublicAuthorizationToken {
    authorization_token?: string;
    expires_at?:          string;
    id?:                  string;
    password?:            string;
    user_name?:           string;
}

export interface DataEcsCluster {
    cluster_name:                          string;
    arn?:                                  string;
    status?:                               string;
    pending_tasks_count?:                  string;
    running_tasks_count?:                  string;
    registered_container_instances_count?: string;
    service_connect_defaults?:             string;
    setting?:                              string;
    tags?:                                 string;
}

export interface EcsContainerDefinition {
    task_definition:     string;
    container_name:      string;
    image?:              string;
    image_digest?:       string;
    cpu?:                string;
    memory?:             string;
    memory_reservation?: string;
    environment?:        string;
    disable_networking?: string;
    docker_labels?:      string;
}

export interface DataEcsService {
    service_name:         string;
    cluster_arn:          string;
    arn?:                 string;
    desired_count?:       string;
    launch_type?:         string;
    scheduling_strategy?: string;
    task_definition?:     string;
    tags?:                string;
}

export interface DataEcsTaskDefinition {
    task_definition:       string;
    id?:                   string;
    arn?:                  string;
    arn_without_revision?: string;
    execution_role_arn?:   string;
    family?:               string;
    network_mode?:         string;
    revision?:             string;
    status?:               string;
    task_role_arn?:        string;
}

export interface EcsTaskExecution {
    cluster:                          string;
    task_definition:                  string;
    value:                            string;
    capacity_provider_strategy?:      CapacityProviderStrategy;
    desired_count?:                   string;
    enable_ecs_managed_tags?:         string;
    enable_execute_command?:          string;
    group?:                           string;
    launch_type?:                     string;
    network_configuration?:           NetworkConfiguration;
    overrides?:                       Overrides;
    placement_constraints?:           PlacementConstraint;
    placement_strategy?:              PlacementStrategy;
    platform_version?:                string;
    propagate_tags?:                  string;
    reference_id?:                    string;
    started_by?:                      string;
    tags?:                            string;
    weight?:                          string;
    assign_public_ip?:                string;
    container_overrides?:             ContainerOverrides;
    inference_accelerator_overrides?: InferenceAccelerator;
    task_role_arn?:                   string;
    environment?:                     EnvironmentClass;
    resource_requirements?:           ResourceRequirements;
    device_type?:                     string;
    task_arns?:                       string;
    id?:                              string;
}

export interface CapacityProviderStrategy {
    capacity_provider: string;
    base:              string;
    weight:            string;
}

export interface ContainerOverrides {
    command:               string;
    cpu:                   string;
    environment:           string;
    memory:                string;
    memory_reservation:    string;
    name:                  string;
    resource_requirements: string;
}

export interface InferenceAccelerator {
    device_name: string;
    device_type: string;
}

export interface NetworkConfiguration {
    subnets:          string;
    security_groups:  string;
    assign_public_ip: string;
}

export interface Overrides {
    container_overrides:             string;
    cpu:                             string;
    execution_role_arn:              string;
    inference_accelerator_overrides: string;
    memory:                          string;
    task_role_arn:                   string;
}

export interface PlacementConstraint {
    expression: string;
    type:       string;
}

export interface PlacementStrategy {
    field: string;
    type:  string;
}

export interface ResourceRequirements {
    type:  string;
    value: string;
}

export interface DataEFSAccessPoint {
    access_point_id:  string;
    id?:              string;
    arn?:             string;
    file_system_arn?: string;
    file_system_id?:  string;
    tags?:            string;
}

export interface EFSAccessPoints {
    file_system_id: string;
    arns?:          string;
    id?:            string;
    ids?:           string;
}

export interface DataEFSFileSystem {
    file_system_id?:                  string;
    creation_token?:                  string;
    tags?:                            string;
    arn?:                             string;
    availability_zone_name?:          string;
    availability_zone_id?:            string;
    dns_name?:                        string;
    encrypted?:                       string;
    kms_key_id?:                      string;
    lifecycle_policy?:                string;
    name?:                            string;
    performance_mode?:                string;
    provisioned_throughput_in_mibps?: string;
    throughput_mode?:                 string;
    size_in_bytes?:                   string;
}

export interface EFSMountTarget {
    access_point_id?:        string;
    file_system_id?:         string;
    mount_target_id?:        string;
    file_system_arn?:        string;
    subnet_id?:              string;
    ip_address?:             string;
    security_groups?:        string;
    dns_name?:               string;
    mount_target_dns_name?:  string;
    network_interface_id?:   string;
    availability_zone_name?: string;
    availability_zone_id?:   string;
    owner_id?:               string;
    id?:                     string;
}

export interface DataEip {
    filter?:                     string;
    id?:                         string;
    public_ip?:                  string;
    tags?:                       string;
    association_id?:             string;
    domain?:                     string;
    instance_id?:                string;
    network_interface_id?:       string;
    network_interface_owner_id?: string;
    private_ip?:                 string;
    private_dns?:                string;
    public_dns?:                 string;
    public_ipv4_pool?:           string;
    carrier_ip?:                 string;
    customer_owned_ipv4_pool?:   string;
    customer_owned_ip?:          string;
}

export interface Eips {
    name:            string;
    values:          string;
    filter?:         string;
    tags?:           string;
    id?:             string;
    allocation_ids?: string;
    public_ips?:     string;
}

export interface DataEksAddon {
    addon_name:                string;
    cluster_name:              string;
    arn?:                      string;
    addon_version?:            string;
    configuration_values?:     string;
    service_account_role_arn?: string;
    id?:                       string;
    created_at?:               string;
    modified_at?:              string;
}

export interface EksAddonVersion {
    addon_name:         string;
    kubernetes_version: string;
    most_recent?:       string;
    id?:                string;
    version?:           string;
}

export interface DataEksCluster {
    name:                       string;
    id?:                        string;
    arn?:                       string;
    cluster_id?:                string;
    created_at?:                string;
    enabled_cluster_log_types?: string;
    endpoint?:                  string;
    platform_version?:          string;
    role_arn?:                  string;
    status?:                    string;
    tags?:                      string;
    version?:                   string;
}

export interface EksClusterAuth {
    name:   string;
    id?:    string;
    token?: string;
}

export interface EksClusters {
    id?:    string;
    names?: string;
}

export interface DataEksNodeGroup {
    cluster_name:     string;
    node_group_name:  string;
    id?:              string;
    ami_type?:        string;
    arn?:             string;
    capacity_type?:   string;
    disk_size?:       string;
    instance_types?:  string;
    labels?:          string;
    node_role_arn?:   string;
    release_version?: string;
    status?:          string;
    subnet_ids?:      string;
    tags?:            string;
    version?:         string;
}

export interface EksNodeGroups {
    cluster_name: string;
    id?:          string;
    names?:       string;
}

export interface ElasticBeanstalkApplication {
    name:                   string;
    id?:                    string;
    arn?:                   string;
    description?:           string;
    service_role?:          string;
    max_count?:             string;
    max_age_in_days?:       string;
    delete_source_from_s3?: string;
    tags?:                  string;
    tags_all?:              string;
}

export interface ElasticBeanstalkSolutionStack {
    most_recent?: string;
    name?:        string;
}

export interface DataElasticacheCluster {
    cluster_id:                  string;
    node_type?:                  string;
    num_cache_nodes?:            string;
    engine?:                     string;
    engine_version?:             string;
    ip_discovery?:               string;
    network_type?:               string;
    subnet_group_name?:          string;
    security_group_ids?:         string;
    parameter_group_name?:       string;
    replication_group_id?:       string;
    log_delivery_configuration?: string;
    maintenance_window?:         string;
    snapshot_window?:            string;
    snapshot_retention_limit?:   string;
    availability_zone?:          string;
    notification_topic_arn?:     string;
    port?:                       string;
    configuration_endpoint?:     string;
    cluster_address?:            string;
    preferred_outpost_arn?:      string;
    cache_nodes?:                string;
    tags?:                       string;
}

export interface DataElasticacheReplicationGroup {
    replication_group_id:            string;
    description?:                    string;
    arn?:                            string;
    auth_token_enabled?:             string;
    automatic_failover_enabled?:     string;
    node_type?:                      string;
    num_cache_clusters?:             string;
    num_node_groups?:                string;
    member_clusters?:                string;
    multi_az_enabled?:               string;
    replicas_per_node_group?:        string;
    log_delivery_configuration?:     string;
    snapshot_window?:                string;
    snapshot_retention_limit?:       string;
    port?:                           string;
    configuration_endpoint_address?: string;
    primary_endpoint_address?:       string;
    reader_endpoint_address?:        string;
}

export interface ElasticacheSubnetGroup {
    name?:             string;
    id?:               string;
    arn?:              string;
    description?:      string;
    subnet_ids?:       string;
    tags?:             string;
    family?:           string;
    vpc_id?:           string;
    http_name?:        string;
    tags_all?:         string;
    asset_type?:       string;
    network_services?: string;
    volume_id?:        string;
    registry_name?:    string;
    channel_id?:       string;
    parent_id?:        string;
    content?:          string;
    type?:             string;
    source_arn?:       string;
    auth_type?:        string;
}

export interface DataElasticacheUser {
    user_id:        string;
    user_name?:     string;
    access_string?: string;
}

export interface SearchDomain {
    domain_name:            string;
    access_policies?:       string;
    advanced_options?:      string;
    arn?:                   string;
    created?:               string;
    deleted?:               string;
    domain_id?:             string;
    elasticsearch_version?: string;
    endpoint?:              string;
    kibana_endpoint?:       string;
    processing?:            string;
    tags?:                  string;
    engine_version?:        string;
    dashboard_endpoint?:    string;
}

export interface EmrReleaseLabels {
    filters?:        string;
    application?:    string;
    prefix?:         string;
    release_labels?: string;
}

export interface DataEmrcontainersVirtualCluster {
    virtual_cluster_id: string;
    id?:                string;
    name?:              string;
    arn?:               string;
    created_at?:        string;
    state?:             string;
    tags?:              string;
}

export interface DataFsxOntapStorageVirtualMachine {
    filter?: Ec2ClientVPNEndpointFilter;
    id?:     string;
}

export interface FsxOntapStorageVirtualMachines {
    filter?: Ec2ClientVPNEndpointFilter;
}

export interface FsxOpenzfsSnapshot {
    most_recent?:   string;
    snapshot_ids?:  string;
    filter?:        string;
    arn?:           string;
    creation_time?: string;
    id?:            string;
    name?:          string;
    snapshot_id?:   string;
    tags?:          string;
    volume_id?:     string;
}

export interface DataFsxWindowsFileSystem {
    id:                                 string;
    active_directory_id?:               string;
    aliases?:                           string;
    arn?:                               string;
    audit_log_configuration?:           string;
    automatic_backup_retention_days?:   string;
    copy_tags_to_backups?:              string;
    daily_automatic_backup_start_time?: string;
    deployment_type?:                   string;
    disk_iops_configuration?:           string;
    dns_name?:                          string;
    kms_key_id?:                        string;
    owner_id?:                          string;
    preferred_subnet_id?:               string;
    preferred_file_server_ip?:          string;
    storage_capacity?:                  string;
    storage_type?:                      string;
    subnet_ids?:                        string;
    tags?:                              string;
    throughput_capacity?:               string;
    vpc_id?:                            string;
    weekly_maintenance_start_time?:     string;
}

export interface GlobalacceleratorAccelerator {
    arn?: string;
}

export interface GlueCatalogTable {
    name?:                    string;
    database_name?:           string;
    catalog_id?:              string;
    transaction_id?:          string;
    id?:                      string;
    arn?:                     string;
    description?:             string;
    owner?:                   string;
    partition_index?:         PartitionIndex;
    partition_keys?:          PartitionKeys;
    retention?:               string;
    storage_descriptor?:      StorageDescriptor;
    table_type?:              string;
    target_table?:            Table;
    view_expanded_text?:      string;
    view_original_text?:      string;
    keys?:                    string;
    skewed_column_values?:    string;
    metadata_operation?:      string;
    open_table_format_input?: OpenTableFormatInput;
}

export interface OpenTableFormatInput {
    iceberg_input: string;
}

export interface PartitionIndex {
    index_name: string;
    keys:       string;
}

export interface PartitionKeys {
    comment: string;
    name:    string;
    type:    string;
}

export interface StorageDescriptor {
    bucket_columns:                    string;
    columns:                           string;
    compressed:                        string;
    input_format:                      string;
    location:                          string;
    number_of_buckets:                 string;
    output_format:                     string;
    parameters:                        string;
    schema_reference:                  string;
    ser_de_info:                       string;
    skewed_info:                       string;
    sort_columns:                      string;
    stored_as_sub_directories:         string;
    comment:                           string;
    name:                              string;
    type:                              string;
    schema_id:                         string;
    schema_version_id:                 string;
    schema_version_number:             string;
    registry_name:                     string;
    schema_arn:                        string;
    schema_name:                       string;
    serialization_library:             string;
    column:                            string;
    sort_order:                        string;
    skewed_column_names:               string;
    skewed_column_value_location_maps: string;
    skewed_column_values:              string;
}

export interface Table {
    catalog_id:    string;
    database_name: string;
    name:          string;
    wildcard?:     string;
}

export interface DataGlueConnection {
    id:                                string;
    arn?:                              string;
    catalog_id?:                       string;
    connection_type?:                  string;
    description?:                      string;
    match_criteria?:                   string;
    name?:                             string;
    physical_connection_requirements?: string;
    tags?:                             string;
}

export interface GlueDataCatalogEncryptionSettings {
    catalog_id?:                       string;
    data_catalog_encryption_settings?: DataCatalogEncryptionSettings;
    id?:                               string;
    connection_password_encryption?:   ConnectionPasswordEncryption;
    encryption_at_rest?:               EncryptionAtREST;
    aws_kms_key_id?:                   string;
}

export interface ConnectionPasswordEncryption {
    return_connection_password_encrypted: string;
    aws_kms_key_id?:                      string;
}

export interface DataCatalogEncryptionSettings {
    connection_password_encryption: string;
    encryption_at_rest:             string;
}

export interface EncryptionAtREST {
    catalog_encryption_mode: string;
    sse_aws_kms_key_id?:     string;
}

export interface GlueScript {
    dag_edge:          string;
    dag_node:          string;
    source:            string;
    target:            string;
    args:              string;
    id:                string;
    node_type:         string;
    name:              string;
    value:             string;
    language?:         string;
    target_parameter?: string;
    line_number?:      string;
    param?:            string;
    python_script?:    string;
    scala_code?:       string;
}

export interface DataGrafanaWorkspace {
    workspace_id:               string;
    account_access_type?:       string;
    authentication_providers?:  string;
    arn?:                       string;
    created_date?:              string;
    data_sources?:              string;
    description?:               string;
    endpoint?:                  string;
    grafana_version?:           string;
    last_updated_date?:         string;
    name?:                      string;
    notification_destinations?: string;
    organization_role_name?:    string;
    organizational_units?:      string;
    permission_type?:           string;
    role_arn?:                  string;
    stack_set_name?:            string;
    status?:                    string;
    tags?:                      string;
}

export interface DataGuarddutyDetector {
    id?:                           string;
    finding_publishing_frequency?: string;
    service_role_arn?:             string;
    status?:                       string;
}

export interface GuarddutyFindingIDS {
    detector_id:   string;
    has_findings?: string;
    finding_ids?:  string;
}

export interface IamAccessKeys {
    user:           string;
    access_keys?:   string;
    access_key_id?: string;
    create_date?:   string;
    status?:        string;
}

export interface DataIamAccountAlias {
    account_alias?: string;
    id?:            string;
}

export interface DataIamGroup {
    group_name: string;
    arn?:       string;
    group_id?:  string;
    path?:      string;
    users?:     string;
    user_id?:   string;
    user_name?: string;
}

export interface DataIamInstanceProfile {
    name:         string;
    arn?:         string;
    create_date?: string;
    path?:        string;
    role_arn?:    string;
    role_id?:     string;
    role_name?:   string;
}

export interface IamInstanceProfiles {
    role_name: string;
    arns?:     string;
    names?:    string;
    paths?:    string;
}

export interface IamOpenidConnectProvider {
    arn?:             string;
    url?:             string;
    client_id_list?:  string;
    thumbprint_list?: string;
    tags?:            string;
    tags_all?:        string;
}

export interface DataIamPolicy {
    arn?:         string;
    name?:        string;
    path_prefix?: string;
    path?:        string;
    description?: string;
    policy?:      string;
    policy_id?:   string;
    tags?:        string;
}

export interface IamPolicyDocument {
    override_policy_documents?: string;
    policy_id?:                 string;
    source_policy_documents?:   string;
    statement?:                 string;
    version?:                   string;
    condition?:                 string;
    effect?:                    string;
    principals?:                string;
    resources?:                 string;
    json?:                      string;
}

export interface IamPrincipalPolicySimulation {
    action_names:                        string;
    policy_source_arn:                   string;
    key:                                 string;
    type:                                string;
    values:                              string;
    caller_arn?:                         string;
    context?:                            string;
    additional_policies_json?:           string;
    permissions_boundary_policies_json?: string;
    resource_arns?:                      string;
    resource_handling_option?:           string;
    resource_owner_account_id?:          string;
    resource_policy_json?:               string;
    all_allowed?:                        string;
}

export interface DataIamRole {
    name:                  string;
    id?:                   string;
    arn?:                  string;
    assume_role_policy?:   string;
    create_date?:          string;
    description?:          string;
    max_session_duration?: string;
    path?:                 string;
    permissions_boundary?: string;
    role_last_used?:       RoleLastUsed;
    unique_id?:            string;
    tags?:                 string;
}

export interface RoleLastUsed {
    region:         string;
    last_used_date: string;
}

export interface Iam {
    name_regex?:  string;
    path_prefix?: string;
    arns?:        string;
    names?:       string;
}

export interface IamSamlProvider {
    arn?:                    string;
    create_date?:            string;
    name?:                   string;
    saml_metadata_document?: string;
    tags?:                   string;
    valid_until?:            string;
    tags_all?:               string;
}

export interface DataIamServerCertificate {
    name_prefix?: string;
    path_prefix?: string;
    name?:        string;
    latest?:      string;
}

export interface IamSessionContext {
    arn:           string;
    issuer_arn?:   string;
    issuer_id?:    string;
    issuer_name?:  string;
    session_name?: string;
}

export interface DataIamUser {
    user_name:             string;
    arn?:                  string;
    path?:                 string;
    permissions_boundary?: string;
    user_id?:              string;
    tags?:                 string;
}

export interface IamUserSSHKey {
    encoding:           string;
    ssh_public_key_id?: string;
    username:           string;
    fingerprint?:       string;
    public_key?:        string;
    status?:            string;
}

export interface DataIdentitystoreGroup {
    identity_store_id: string;
    id:                string;
    issuer:            string;
    attribute_path:    string;
    attribute_value:   string;
    group_id?:         string;
    external_id?:      string;
    unique_attribute?: string;
    description?:      string;
    display_name?:     string;
}

export interface DataIdentitystoreUser {
    identity_store_id:   string;
    id:                  string;
    issuer:              string;
    attribute_path:      string;
    attribute_value:     string;
    user_id?:            string;
    external_id?:        string;
    unique_attribute?:   string;
    display_name?:       string;
    locale?:             string;
    nickname?:           string;
    preferred_language?: string;
    profile_url?:        string;
    timezone?:           string;
    title?:              string;
    user_name?:          string;
    user_type?:          string;
}

export interface ImagebuilderComponent {
    arn?:                   string;
    change_description?:    string;
    data?:                  string;
    date_created?:          string;
    description?:           string;
    encrypted?:             string;
    kms_key_id?:            string;
    name?:                  string;
    owner?:                 string;
    platform?:              string;
    supported_os_versions?: string;
    tags?:                  string;
    type?:                  string;
    version?:               string;
    skip_destroy?:          string;
    tags_all?:              string;
}

export interface Imagebuilder {
    name:    string;
    values:  string;
    owner?:  string;
    filter?: string;
    arns?:   string;
    names?:  string;
}

export interface DataImagebuilderContainerRecipe {
    arn:                       string;
    container_type?:           string;
    date_created?:             string;
    description?:              string;
    dockerfile_template_data?: string;
    encrypted?:                string;
    kms_key_id?:               string;
    name?:                     string;
    owner?:                    string;
    parent_image?:             string;
    platform?:                 string;
    tags?:                     string;
    version?:                  string;
    working_directory?:        string;
}

export interface DataImagebuilderDistributionConfiguration {
    arn:           string;
    date_created?: string;
    date_updated?: string;
    description?:  string;
    name?:         string;
    tags?:         string;
}

export interface ImagebuilderDistributionConfigurations {
    filter?: string;
    arns?:   string;
    names?:  string;
}

export interface ImagebuilderImage {
    arn?:                              string;
    build_version_arn?:                string;
    container_recipe_arn?:             string;
    date_created?:                     string;
    distribution_configuration_arn?:   string;
    enhanced_image_metadata_enabled?:  string;
    image_recipe_arn?:                 string;
    infrastructure_configuration_arn?: string;
    name?:                             string;
    platform?:                         string;
    os_version?:                       string;
    tags?:                             string;
    version?:                          string;
    image_tests_configuration?:        ImageTestsConfiguration;
    tags_all?:                         string;
}

export interface ImageTestsConfiguration {
    image_tests_enabled: string;
    timeout_minutes:     string;
}

export interface DataImagebuilderImagePipeline {
    arn:                               string;
    container_recipe_arn?:             string;
    date_created?:                     string;
    date_last_run?:                    string;
    date_next_run?:                    string;
    date_updated?:                     string;
    description?:                      string;
    distribution_configuration_arn?:   string;
    enhanced_image_metadata_enabled?:  string;
    image_recipe_arn?:                 string;
    infrastructure_configuration_arn?: string;
    name?:                             string;
    platform?:                         string;
    status?:                           string;
    tags?:                             string;
}

export interface DataImagebuilderImageRecipe {
    arn:                string;
    date_created?:      string;
    description?:       string;
    name?:              string;
    owner?:             string;
    parent_image?:      string;
    platform?:          string;
    tags?:              string;
    user_data_base64?:  string;
    version?:           string;
    working_directory?: string;
}

export interface DataImagebuilderInfrastructureConfiguration {
    arn:                            string;
    date_created?:                  string;
    description?:                   string;
    instance_profile_name?:         string;
    instance_types?:                string;
    key_pair?:                      string;
    name?:                          string;
    resource_tags?:                 string;
    security_group_ids?:            string;
    sns_topic_arn?:                 string;
    subnet_id?:                     string;
    tags?:                          string;
    terminate_instance_on_failure?: string;
}

export interface InspectorRulesPackages {
    id?:   string;
    arns?: string;
}

export interface DataInstance {
    instance_id?:                 string;
    instance_tags?:               string;
    filter?:                      string;
    get_password_data?:           string;
    ami?:                         string;
    arn?:                         string;
    associate_public_ip_address?: string;
    availability_zone?:           string;
    credit_specification?:        string;
    disable_api_stop?:            string;
    disable_api_termination?:     string;
    ebs_optimized?:               string;
    host_id?:                     string;
    host_resource_group_arn?:     string;
    iam_instance_profile?:        string;
    instance_state?:              string;
    instance_type?:               string;
    key_name?:                    string;
    monitoring?:                  string;
    network_interface_id?:        string;
    outpost_arn?:                 string;
    password_data?:               string;
    placement_group?:             string;
    placement_partition_number?:  string;
    private_dns?:                 string;
    private_ip?:                  string;
    public_dns?:                  string;
    secondary_private_ips?:       string;
    security_groups?:             string;
    source_dest_check?:           string;
    subnet_id?:                   string;
    tags?:                        string;
    tenancy?:                     string;
    user_data?:                   string;
    user_data_base64?:            string;
    vpc_security_group_ids?:      string;
}

export interface Instances {
    instance_tags?:        string;
    instance_state_names?: string;
    filter?:               string;
    id?:                   string;
    ids?:                  string;
    private_ips?:          string;
    public_ips?:           string;
    ipv6_addresses?:       string;
}

export interface InternetGateway {
    name:                 string;
    values:               string;
    internet_gateway_id?: string;
    tags?:                string;
    filter?:              string;
    arn?:                 string;
    owner_id?:            string;
    state?:               string;
    vpc_id?:              string;
}

export interface IotEndpoint {
    endpoint_type?: string;
}

export interface IPRanges {
    regions?:          string;
    url?:              string;
    cidr_blocks?:      string;
    ipv6_cidr_blocks?: string;
    create_date?:      string;
    sync_token?:       string;
}

export interface IvsStreamKey {
    channel_arn: string;
    arn?:        string;
    tags?:       string;
    value?:      string;
}

export interface DataKendraExperience {
    experience_id:                 string;
    index_id:                      string;
    arn?:                          string;
    configuration?:                string;
    created_at?:                   string;
    description?:                  string;
    endpoints?:                    string;
    error_message?:                string;
    id?:                           string;
    name?:                         string;
    role_arn?:                     string;
    status?:                       string;
    updated_at?:                   string;
    content_source_configuration?: string;
    user_identity_configuration?:  string;
    data_source_ids?:              string;
    direct_put_content?:           string;
    faq_ids?:                      string;
    identity_attribute_name?:      string;
    endpoint?:                     string;
    endpoint_type?:                string;
}

export interface KendraFAQClass {
    faq_id?:                          string;
    index_id?:                        string;
    arn?:                             string;
    created_at?:                      string;
    description?:                     string;
    error_message?:                   string;
    file_format?:                     string;
    id?:                              string;
    language_code?:                   string;
    name?:                            string;
    role_arn?:                        string;
    s3_path?:                         string;
    status?:                          string;
    updated_at?:                      string;
    tags?:                            string;
    bucket?:                          string;
    key?:                             string;
    query_suggestions_block_list_id?: string;
    file_size_bytes?:                 string;
    item_count?:                      string;
    source_s3_path?:                  string;
    thesaurus_id?:                    string;
    synonym_rule_count?:              string;
    term_count?:                      string;
    tags_all?:                        string;
}

export interface KendraIndex {
    id?:                                      string;
    arn?:                                     string;
    capacity_units?:                          string;
    created_at?:                              string;
    description?:                             string;
    document_metadata_configuration_updates?: string;
    edition?:                                 string;
    error_message?:                           string;
    index_statistics?:                        string;
    name?:                                    string;
    role_arn?:                                string;
    server_side_encryption_configuration?:    string;
    status?:                                  string;
    updated_at?:                              string;
    user_context_policy?:                     string;
    user_group_resolution_configuration?:     string;
    user_token_configurations?:               string;
    tags?:                                    string;
    query_capacity_units?:                    string;
    storage_capacity_units?:                  string;
    relevance?:                               string;
    search?:                                  string;
    type?:                                    string;
    duration?:                                string;
    freshness?:                               string;
    importance?:                              string;
    rank_order?:                              string;
    values_importance_map?:                   string;
    displayable?:                             string;
    facetable?:                               string;
    searchable?:                              string;
    sortable?:                                string;
    faq_statistics?:                          string;
    text_document_statistics?:                string;
    indexed_question_answers_count?:          string;
    indexed_text_bytes?:                      string;
    indexed_text_documents_count?:            string;
    kms_key_id?:                              string;
    user_group_resolution_mode?:              string;
    json_token_type_configuration?:           string;
    jwt_token_type_configuration?:            string;
    group_attribute_field?:                   string;
    user_name_attribute_field?:               string;
    claim_regex?:                             string;
    issuer?:                                  string;
    key_location?:                            string;
    secrets_manager_arn?:                     string;
    url?:                                     string;
    tags_all?:                                string;
}

export interface DataKeyPair {
    name:                string;
    values:              string;
    key_pair_id?:        string;
    key_name?:           string;
    include_public_key?: string;
    filter?:             string;
    id?:                 string;
    arn?:                string;
    create_time?:        string;
    fingerprint?:        string;
    key_type?:           string;
    public_key?:         string;
    tags?:               string;
}

export interface DataKinesisStream {
    name:                 string;
    arn?:                 string;
    creation_timestamp?:  string;
    status?:              string;
    retention_period?:    string;
    open_shards?:         string;
    closed_shards?:       string;
    shard_level_metrics?: string;
    stream_mode_details?: string;
    tags?:                string;
    stream_mode?:         string;
}

export interface KinesisStreamConsumer {
    stream_arn?:         string;
    arn?:                string;
    name?:               string;
    creation_timestamp?: string;
    id?:                 string;
    status?:             string;
}

export interface KmsAlias {
    name?:           string;
    arn?:            string;
    id?:             string;
    target_key_id?:  string;
    target_key_arn?: string;
    name_prefix?:    string;
}

export interface KmsCiphertext {
    plaintext:        string;
    key_id:           string;
    context?:         string;
    id?:              string;
    ciphertext_blob?: string;
}

export interface DataKmsCustomKeyStore {
    custom_key_store_id?:      string;
    custom_key_store_name?:    string;
    id?:                       string;
    cloudhsm_cluster_id?:      string;
    connection_state?:         string;
    creation_date?:            string;
    trust_anchor_certificate?: string;
}

export interface DataKmsKey {
    grant_tokens?: string;
}

export interface KmsPublicKey {
    grant_tokens?:             string;
    arn?:                      string;
    customer_master_key_spec?: string;
    encryption_algorithms?:    string;
    id?:                       string;
    key_usage?:                string;
    public_key?:               string;
    public_key_pem?:           string;
    signing_algorithms?:       string;
}

export interface KmsSecrets {
    secret:                string;
    name:                  string;
    payload:               string;
    context?:              string;
    encryption_algorithm?: string;
    plaintext?:            string;
}

export interface LakeformationDataLakeSettings {
    catalog_id?:                          string;
    admins?:                              string;
    read_only_admins?:                    string;
    create_database_default_permissions?: CreateEDefaultPermissions;
    create_table_default_permissions?:    CreateEDefaultPermissions;
    trusted_resource_owners?:             string;
    allow_external_data_filtering?:       string;
    external_data_filtering_allow_list?:  string;
    authorized_session_tag_value_list?:   string;
}

export interface CreateEDefaultPermissions {
    permissions: string;
    principal:   string;
}

export interface DataLakeformationPermissions {
    principal:                      string;
    values:                         string;
    catalog_resource?:              string;
    data_location?:                 DataLocation;
    database?:                      LakeformationPermissionsDatabase;
    lf_tag?:                        LakeformationLFTagClass;
    lf_tag_policy?:                 LFTagPolicy;
    table?:                         Table;
    table_with_columns?:            TableWithColumns;
    wildcard?:                      string;
    permissions?:                   string;
    permissions_with_grant_option?: string;
}

export interface DataLocation {
    arn:        string;
    catalog_id: string;
}

export interface LakeformationPermissionsDatabase {
    name:       string;
    catalog_id: string;
}

export interface LakeformationLFTagClass {
    key:         string;
    values:      string;
    catalog_id?: string;
    id?:         string;
}

export interface LFTagPolicy {
    resource_type: string;
    expression:    string;
    catalog_id:    string;
    key:           string;
    values:        string;
}

export interface TableWithColumns {
    database_name:         string;
    name:                  string;
    catalog_id:            string;
    column_names:          string;
    excluded_column_names: string;
    wildcard?:             string;
}

export interface DataLakeformationResource {
    arn:            string;
    last_modified?: string;
    role_arn?:      string;
}

export interface LambdaAlias {
    function_name:               string;
    name:                        string;
    arn?:                        string;
    description?:                string;
    function_version?:           string;
    invoke_arn?:                 string;
    routing_config?:             string;
    additional_version_weights?: string;
}

export interface LambdaCodeSigningConfig {
    arn?:                              string;
    allowed_publishers?:               string;
    config_id?:                        string;
    description?:                      string;
    last_modified?:                    string;
    policies?:                         string;
    signing_profile_version_arns?:     string;
    untrusted_artifact_on_deployment?: string;
}

export interface DataLambdaFunction {
    function_name:                   string;
    qualifier?:                      string;
    architectures?:                  string;
    arn?:                            string;
    code_signing_config_arn?:        string;
    description?:                    string;
    environment?:                    string;
    ephemeral_storage?:              string;
    file_system_config?:             string;
    handler?:                        string;
    image_uri?:                      string;
    kms_key_arn?:                    string;
    last_modified?:                  string;
    layers?:                         string;
    memory_size?:                    string;
    qualified_arn?:                  string;
    qualified_invoke_arn?:           string;
    reserved_concurrent_executions?: string;
    role?:                           string;
    runtime?:                        string;
    signing_job_arn?:                string;
    signing_profile_version_arn?:    string;
    source_code_hash?:               string;
    source_code_size?:               string;
    timeout?:                        string;
    tracing_config?:                 string;
    version?:                        string;
    vpc_config?:                     string;
}

export interface DataLambdaFunctionURL {
    function_name:       string;
    qualifier?:          string;
    authorization_type?: string;
    cors?:               string;
    creation_time?:      string;
    function_arn?:       string;
    function_url?:       string;
    invoke_mode?:        string;
    last_modified_time?: string;
    url_id?:             string;
}

export interface LambdaFunctions {
    function_names?: string;
    function_arns?:  string;
}

export interface DataLambdaInvocation {
    function_name: string;
    input:         string;
    qualifier?:    string;
    result?:       string;
}

export interface LambdaLayerVersion {
    layer_name:                   string;
    version?:                     string;
    description?:                 string;
    license_info?:                string;
    compatible_runtimes?:         string;
    compatible_architectures?:    string;
    arn?:                         string;
    layer_arn?:                   string;
    created_date?:                string;
    signing_job_arn?:             string;
    signing_profile_version_arn?: string;
    source_code_hash?:            string;
    source_code_size?:            string;
    s3_bucket?:                   string;
    s3_key?:                      string;
    s3_object_version?:           string;
    skip_destroy?:                string;
}

export interface DataLaunchConfiguration {
    name:                         string;
    id?:                          string;
    arn?:                         string;
    image_id?:                    string;
    instance_type?:               string;
    iam_instance_profile?:        string;
    key_name?:                    string;
    security_groups?:             string;
    associate_public_ip_address?: string;
    user_data?:                   string;
    enable_monitoring?:           string;
    ebs_optimized?:               string;
    root_block_device?:           string;
    ebs_block_device?:            string;
    ephemeral_block_device?:      string;
    spot_price?:                  string;
    placement_tenancy?:           string;
    delete_on_termination?:       string;
    encrypted?:                   string;
    iops?:                        string;
    throughput?:                  string;
    volume_size?:                 string;
    volume_type?:                 string;
    device_name?:                 string;
    no_device?:                   string;
    snapshot_id?:                 string;
    virtual_name?:                string;
}

export interface LBHostedZoneID {
    region?:             string;
    load_balancer_type?: string;
    id?:                 string;
}

export interface DataLBListener {
    arn?:               string;
    load_balancer_arn?: string;
    port?:              string;
}

export interface Lbs {
    tags?: string;
    arns?: string;
}

export interface DataLexBot {
    name:                             string;
    version?:                         string;
    arn?:                             string;
    checksum?:                        string;
    child_directed?:                  string;
    created_date?:                    string;
    description?:                     string;
    detect_sentiment?:                string;
    enable_model_improvements?:       string;
    failure_reason?:                  string;
    idle_session_ttl_in_seconds?:     string;
    last_updated_date?:               string;
    locale?:                          string;
    nlu_intent_confidence_threshold?: string;
    status?:                          string;
    voice_id?:                        string;
}

export interface Lex {
    bot_name?:                 string;
    name:                      string;
    arn?:                      string;
    bot_version?:              string;
    checksum?:                 string;
    created_date?:             string;
    description?:              string;
    last_updated_date?:        string;
    version?:                  string;
    parent_intent_signature?:  string;
    enumeration_value?:        string;
    value_selection_strategy?: string;
    conversation_logs?:        ConversationLogs;
    log_settings?:             LogSettings;
}

export interface ConversationLogs {
    iam_role_arn: string;
    log_settings: string;
}

export interface LogSettings {
    destination:     string;
    kms_key_arn:     string;
    log_type:        string;
    resource_arn:    string;
    resource_prefix: string;
}

export interface LicensemanagerReceivedLicense {
    license_arn:                  string;
    id?:                          string;
    beneficiary?:                 string;
    consumption_configuration?:   ConsumptionConfiguration;
    create_time?:                 string;
    entitlements?:                Entitlements;
    home_region?:                 string;
    issuer?:                      Issuer;
    license_name?:                string;
    product_name?:                string;
    "product_sku "?:              string;
    received_metadata?:           ReceivedMetadata;
    status?:                      string;
    validity?:                    Validity;
    version?:                     string;
    max_time_to_live_in_minutes?: string;
    name?:                        string;
    value?:                       string;
    sign_key?:                    string;
    received_status_reason?:      string;
}

export interface ConsumptionConfiguration {
    borrow_configuration:        string;
    provisional_configuration:   string;
    renewal_frequency:           string;
    allow_early_check_in:        string;
    max_time_to_live_in_minutes: string;
}

export interface Entitlements {
    allow_check_in: string;
    max_count:      string;
    name:           string;
    overage:        string;
    unit:           string;
    value:          string;
}

export interface Issuer {
    key_fingerprint: string;
    name:            string;
    sign_key:        string;
}

export interface ReceivedMetadata {
    allowed_operations:     string;
    received_status:        string;
    received_status_reason: string;
}

export interface Validity {
    begin: string;
    end:   string;
}

export interface LocationGeofenceCollection {
    collection_name: string;
    collection_arn?: string;
    create_time?:    string;
    description?:    string;
    kms_key_id?:     string;
    tags?:           string;
    update_time?:    string;
}

export interface LocationMap {
    map_name:       string;
    create_time?:   string;
    description?:   string;
    map_arn?:       string;
    tags?:          string;
    update_time?:   string;
    configuration?: LocationMapConfiguration;
    tags_all?:      string;
}

export interface LocationMapConfiguration {
    style: string;
}

export interface DataLocationPlaceIndex {
    index_name:                 string;
    create_time?:               string;
    data_source?:               string;
    data_source_configuration?: string;
    description?:               string;
    index_arn?:                 string;
    tags?:                      string;
    update_time?:               string;
}

export interface LocationRouteCalculator {
    calculator_name: string;
    calculator_arn?: string;
    create_time?:    string;
    data_source?:    string;
    description?:    string;
    tags?:           string;
    update_time?:    string;
    tags_all?:       string;
}

export interface LocationTracker {
    tracker_name:        string;
    create_time?:        string;
    description?:        string;
    kms_key_id?:         string;
    position_filtering?: string;
    tags?:               string;
    tracker_arn?:        string;
    update_time?:        string;
    tags_all?:           string;
}

export interface LocationTrackerAssociation {
    consumer_arn: string;
    tracker_name: string;
}

export interface LocationTrackerAssociations {
    tracker_name:   string;
    consumer_arns?: string;
}

export interface MemorydbACL {
    name?:                                        string;
    id?:                                          string;
    arn?:                                         string;
    minimum_engine_version?:                      string;
    tags?:                                        string;
    user_names?:                                  string;
    name_prefix?:                                 string;
    tags_all?:                                    string;
    description?:                                 string;
    workflow_execution_retention_period_in_days?: string;
}

export interface MemorydbCluster {
    name?:                       string;
    id?:                         string;
    arn?:                        string;
    acl_name?:                   string;
    auto_minor_version_upgrade?: string;
    data_tiering?:               string;
    description?:                string;
    engine_patch_version?:       string;
    engine_version?:             string;
    final_snapshot_name?:        string;
    kms_key_arn?:                string;
    maintenance_window?:         string;
    node_type?:                  string;
    num_replicas_per_shard?:     string;
    num_shards?:                 string;
    parameter_group_name?:       string;
    port?:                       string;
    security_group_ids?:         string;
    snapshot_retention_limit?:   string;
    snapshot_window?:            string;
    sns_topic_arn?:              string;
    tls_enabled?:                string;
    tags?:                       string;
    name_prefix?:                string;
    snapshot_arns?:              string;
    snapshot_name?:              string;
    subnet_group_name?:          string;
    tags_all?:                   string;
}

export interface MemorydbSnapshot {
    name?:         string;
    id?:           string;
    arn?:          string;
    cluster_name?: string;
    kms_key_arn?:  string;
    source?:       string;
    tags?:         string;
    name_prefix?:  string;
    tags_all?:     string;
}

export interface DataMemorydbUser {
    user_name:               string;
    id?:                     string;
    access_string?:          string;
    arn?:                    string;
    minimum_engine_version?: string;
    tags?:                   string;
}

export interface DataMqBroker {
    broker_id?:   string;
    broker_name?: string;
}

export interface MqBrokerInstanceTypeOfferings {
    engine_type?:                string;
    host_instance_type?:         string;
    storage_type?:               string;
    broker_instance_options?:    string;
    availability_zones?:         string;
    supported_deployment_modes?: string;
    supported_engine_versions?:  string;
    name?:                       string;
}

export interface MskBrokerNodes {
    cluster_arn:            string;
    attached_eni_id?:       string;
    broker_id?:             string;
    client_subnet?:         string;
    client_vpc_ip_address?: string;
    endpoints?:             string;
    node_arn?:              string;
}

export interface DataMskCluster {
    cluster_name:                         string;
    arn?:                                 string;
    bootstrap_brokers?:                   string;
    bootstrap_brokers_public_sasl_iam?:   string;
    bootstrap_brokers_public_sasl_scram?: string;
    bootstrap_brokers_public_tls?:        string;
    bootstrap_brokers_sasl_iam?:          string;
    bootstrap_brokers_sasl_scram?:        string;
    bootstrap_brokers_tls?:               string;
    kafka_version?:                       string;
    number_of_broker_nodes?:              string;
    tags?:                                string;
    zookeeper_connect_string?:            string;
    zookeeper_connect_string_tls?:        string;
}

export interface MskConfiguration {
    name:               string;
    arn?:               string;
    latest_revision?:   string;
    description?:       string;
    kafka_versions?:    string;
    server_properties?: string;
}

export interface MskKafkaVersion {
    preferred_versions?: string;
    version?:            string;
    status?:             string;
}

export interface MskVpcConnection {
    arn?:                string;
    authentication?:     string;
    client_subnets?:     string;
    security_groups?:    string;
    tags?:               string;
    target_cluster_arn?: string;
    vpc_id?:             string;
    tags_all?:           string;
}

export interface ChimesdkvoiceVoiceProfileDomainClass {
    name:                   string;
    arn?:                   string;
    description?:           string;
    version?:               string;
    id?:                    string;
    identifier?:            string;
    regex_pattern_strings?: string;
    xss_match_tuples?:      string;
}

export interface Mskconnect {
    name:                     string;
    arn?:                     string;
    description?:             string;
    latest_revision?:         string;
    state?:                   string;
    properties_file_content?: string;
}

export interface DataNatGateway {
    name:                                string;
    values:                              string;
    id?:                                 string;
    subnet_id?:                          string;
    vpc_id?:                             string;
    state?:                              string;
    tags?:                               string;
    filter?:                             string;
    allocation_id?:                      string;
    association_id?:                     string;
    connectivity_type?:                  string;
    network_interface_id?:               string;
    private_ip?:                         string;
    public_ip?:                          string;
    secondary_allocation_ids?:           string;
    secondary_private_ip_address_count?: string;
    secondary_private_ip_addresses?:     string;
}

export interface NeptuneOrderableDBInstance {
    engine?:                               string;
    engine_version?:                       string;
    instance_class?:                       string;
    license_model?:                        string;
    preferred_instance_classes?:           string;
    vpc?:                                  string;
    availability_zones?:                   string;
    max_iops_per_db_instance?:             string;
    max_iops_per_gib?:                     string;
    max_storage_size?:                     string;
    min_iops_per_db_instance?:             string;
    min_iops_per_gib?:                     string;
    min_storage_size?:                     string;
    multi_az_capable?:                     string;
    read_replica_capable?:                 string;
    storage_type?:                         string;
    supports_enhanced_monitoring?:         string;
    supports_iam_database_authentication?: string;
    supports_iops?:                        string;
    supports_performance_insights?:        string;
    supports_storage_encryption?:          string;
}

export interface DataNetworkInterface {
    id?:                string;
    filter?:            string;
    arn?:               string;
    association?:       string;
    availability_zone?: string;
    description?:       string;
    interface_type?:    string;
    ipv6_addresses?:    string;
    mac_address?:       string;
    owner_id?:          string;
    private_dns_name?:  string;
    private_ip?:        string;
    private_ips?:       string;
    requester_id?:      string;
    security_groups?:   string;
    subnet_id?:         string;
    outpost_arn?:       string;
    tags?:              string;
    vpc_id?:            string;
    allocation_id?:     string;
    association_id?:    string;
    carrier_ip?:        string;
    customer_owned_ip?: string;
    ip_owner_id?:       string;
    public_dns_name?:   string;
    public_ip?:         string;
}

export interface DataNetworkfirewallFirewall {
    arn?:                               string;
    name?:                              string;
    delete_protection?:                 string;
    description?:                       string;
    firewall_policy_arn?:               string;
    firewall_policy_change_protection?: string;
    id?:                                string;
    subnet_change_protection?:          string;
    tags?:                              string;
    update_token?:                      string;
    vpc_id?:                            string;
}

export interface DataNetworkfirewallFirewallPolicy {
    arn?:             string;
    name?:            string;
    description?:     string;
    firewall_policy?: string;
    tags?:            string;
    update_token?:    string;
}

export interface ResourcePolicy {
    resource_arn: string;
    id?:          string;
    policy?:      string;
}

export interface NetworkmanagerConnection {
    global_network_id:    string;
    connection_id?:       string;
    arn?:                 string;
    connected_device_id?: string;
    connected_link_id?:   string;
    description?:         string;
    device_id?:           string;
    link_id?:             string;
    tags?:                string;
    tags_all?:            string;
}

export interface Networkmanager {
    global_network_id: string;
    device_id?:        string;
    tags?:             string;
    ids?:              string;
    site_id?:          string;
}

export interface NetworkmanagerCoreNetworkPolicyDocument {
    core_network_configuration: string;
    segments:                   string;
    action:                     string;
    conditions:                 string;
    rule_number:                string;
    association_method:         string;
    type:                       string;
    asn_ranges:                 string;
    edge_locations:             string;
    locations:                  string;
    name:                       string;
    attachment_policies?:       string;
    segment_actions?:           string;
    condition_logic?:           string;
    description?:               string;
    segment?:                   string;
    tag_value_of_key?:          string;
    require_acceptance?:        string;
    operator?:                  string;
    key?:                       string;
    value?:                     string;
    inside_cidr_blocks?:        string;
    vpn_ecmp_support?:          string;
    asn?:                       string;
    allow_filter?:              string;
    deny_filter?:               string;
    isolate_attachments?:       string;
    destination_cidr_blocks?:   string;
    destinations?:              string;
    mode?:                      string;
    share_with_except?:         string;
    json?:                      string;
}

export interface NetworkmanagerDevice {
    device_id?:        string;
    global_network_id: string;
    arn?:              string;
    aws_location?:     string;
    description?:      string;
    location?:         string;
    model?:            string;
    serial_number?:    string;
    site_id?:          string;
    tags?:             string;
    type?:             string;
    vendor?:           string;
    subnet_arn?:       string;
    zone?:             string;
    address?:          string;
    latitude?:         string;
    longitude?:        string;
    tags_all?:         string;
}

export interface NetworkmanagerGlobalNetwork {
    global_network_id?: string;
    arn?:               string;
    description?:       string;
    tags?:              string;
    tags_all?:          string;
    type?:              string;
}

export interface NetworkmanagerGlobalNetworks {
    tags?: string;
    ids?:  string;
}

export interface NetworkmanagerLink {
    global_network_id: string;
    link_id?:          string;
    arn?:              string;
    bandwidth?:        string;
    description?:      string;
    provider_name?:    string;
    site_id?:          string;
    tags?:             string;
    type?:             string;
    download_speed?:   string;
    upload_speed?:     string;
    tags_all?:         string;
}

export interface NetworkmanagerLinks {
    global_network_id: string;
    provider_name?:    string;
    site_id?:          string;
    tags?:             string;
    type?:             string;
    ids?:              string;
}

export interface NetworkmanagerSite {
    global_network_id: string;
    site_id?:          string;
    arn?:              string;
    description?:      string;
    location?:         string;
    tags?:             string;
    address?:          string;
    latitude?:         string;
    longitude?:        string;
    tags_all?:         string;
}

export interface OamLink {
    link_identifier?: string;
    arn?:             string;
    label?:           string;
    label_template?:  string;
    link_id?:         string;
    resource_types?:  string;
    sink_arn?:        string;
    sink_identifier?: string;
    tags?:            string;
}

export interface OamInks {
    arns?: string;
}

export interface OamSink {
    sink_identifier?: string;
    arn?:             string;
    name?:            string;
    sink_id?:         string;
    tags?:            string;
}

export interface OpensearchserverlessPolicy {
    name:            string;
    type:            string;
    description?:    string;
    policy?:         string;
    policy_version?: string;
}

export interface OpensearchserverlessCollection {
    id?:                  string;
    name:                 string;
    arn?:                 string;
    collection_endpoint?: string;
    created_date?:        string;
    dashboard_endpoint?:  string;
    description?:         string;
    kms_key_arn?:         string;
    last_modified_date?:  string;
    tags?:                string;
    type?:                string;
}

export interface DataOpensearchserverlessSecurityConfig {
    id:                  string;
    config_version?:     string;
    created_date?:       string;
    description?:        string;
    last_modified_date?: string;
    saml_options?:       OpensearchserverlessSecurityConfigSamlOptions;
    type?:               string;
}

export interface OpensearchserverlessSecurityConfigSamlOptions {
    group_attribute?: string;
    metadata:         string;
    session_timeout?: string;
    user_attribute?:  string;
}

export interface OpensearchserverlessSecurityPolicy {
    name:                string;
    type:                string;
    created_date?:       string;
    description?:        string;
    last_modified_date?: string;
    policy?:             string;
    policy_version?:     string;
}

export interface OpensearchserverlessVpcEndpoint {
    vpc_endpoint_id:     string;
    created_date?:       string;
    name?:               string;
    security_group_ids?: string;
    subnet_ids?:         string;
    vpc_id?:             string;
}

export interface OrganizationsDelegatedAdministrators {
    service_principal?: string;
}

export interface OrganizationsDelegatedServices {
    account_id: string;
}

export interface OrganizationsOrganization {
    arn?:                           string;
    feature_set?:                   string;
    id?:                            string;
    master_account_arn?:            string;
    master_account_email?:          string;
    master_account_id?:             string;
    aws_service_access_principals?: string;
    enabled_policy_types?:          string;
}

export interface OrganizationsOrganizationalUnitClass {
    parent_id?:            string;
    name?:                 string;
    arn?:                  string;
    id?:                   string;
    creation_date?:        string;
    version?:              string;
    geo_match_constraint?: string;
    ip_set_descriptors?:   string;
    size_constraints?:     string;
    ip_set_descriptor?:    string;
}

export interface OrganizationsOrganizationalUnitChildAccountsClass {
    parent_id: string;
    id?:       string;
}

export interface OrganizationsPolicies {
    filter: string;
    ids?:   string;
}

export interface OrganizationsPoliciesForTarget {
    target_id: string;
    filter:    string;
    ids?:      string;
}

export interface OrganizationsPolicy {
    policy_id:    string;
    arn?:         string;
    aws_managed?: string;
    content?:     string;
    description?: string;
    name?:        string;
    type?:        string;
}

export interface OrganizationsResourceTags {
    resource_id: string;
    tags?:       string;
}

export interface OutpostsAsset {
    arn:             string;
    asset_id:        string;
    asset_type?:     string;
    host_id?:        string;
    rack_elevation?: string;
    rack_id?:        string;
}

export interface OutpostsAssets {
    arn:               string;
    host_id_filter?:   string;
    status_id_filter?: string;
    asset_ids?:        string;
}

export interface OutpostsOutpost {
    id?:                      string;
    name?:                    string;
    arn?:                     string;
    owner_id?:                string;
    availability_zone?:       string;
    availability_zone_id?:    string;
    description?:             string;
    lifecycle_status?:        string;
    site_arn?:                string;
    site_id?:                 string;
    supported_hardware_type?: string;
    tags?:                    string;
}

export interface OutpostsOutpostInstanceType {
    arn:                       string;
    instance_type?:            string;
    preferred_instance_types?: string;
    id?:                       string;
}

export interface OutpostsOutpostInstanceTypes {
    arn:             string;
    instance_types?: string;
}

export interface OutpostsOutposts {
    availability_zone?:    string;
    availability_zone_id?: string;
    site_id?:              string;
    owner_id?:             string;
    arns?:                 string;
    id?:                   string;
    ids?:                  string;
}

export interface OutpostsSite {
    id?:          string;
    name?:        string;
    account_id?:  string;
    description?: string;
    parameters?:  string;
}

export interface OutpostsSites {
    id?:  string;
    ids?: string;
}

export interface Partition {
    dns_suffix?:         string;
    id?:                 string;
    partition?:          string;
    reverse_dns_prefix?: string;
}

export interface PrefixList {
    name:            string;
    values:          string;
    prefix_list_id?: string;
    filter?:         string;
    id?:             string;
    cidr_blocks?:    string;
}

export interface PricingProduct {
    service_code: string;
    filters:      string;
    result?:      string;
}

export interface DataPrometheusWorkspace {
    workspace_id:         string;
    arn?:                 string;
    created_date?:        string;
    prometheus_endpoint?: string;
    alias?:               string;
    status?:              string;
    tags?:                string;
}

export interface PrometheusWorkspaces {
    alias_prefix?:  string;
    aliases?:       string;
    arns?:          string;
    workspace_ids?: string;
}

export interface DataQuicksightDataSet {
    data_set_id:     string;
    aws_account_id?: string;
}

export interface QuicksightGroup {
    group_name:      string;
    aws_account_id?: string;
    namespace?:      string;
    arn?:            string;
    description?:    string;
    principal_id?:   string;
}

export interface QuicksightTheme {
    theme_id?:            string;
    aws_account_id?:      string;
    arn?:                 string;
    base_theme_id?:       string;
    configuration?:       QuicksightThemeConfiguration;
    created_time?:        string;
    id?:                  string;
    last_updated_time?:   string;
    name?:                string;
    permissions?:         Permissions;
    status?:              string;
    tags?:                string;
    version_description?: string;
    version_number?:      string;
    principal?:           string;
    data_color_palette?:  DataColorPalette;
    sheet?:               Sheet;
    typography?:          Typography;
    ui_color_palette?:    UIColorPalette;
    min_max_gradient?:    string;
    tile?:                Tile;
    tile_layout?:         TileLayout;
    border?:              Border;
    show?:                string;
    gutter?:              Border;
    margin?:              Border;
    font_families?:       FontFamilies;
    font_family?:         string;
    tags_all?:            string;
}

export interface Border {
    show: string;
}

export interface QuicksightThemeConfiguration {
    data_color_palette: string;
    sheet:              string;
    typography:         string;
    ui_color_palette:   string;
}

export interface DataColorPalette {
    colors:           string;
    empty_fill_color: string;
    min_max_gradient: string;
}

export interface FontFamilies {
    font_family: string;
}

export interface Permissions {
    actions:   string;
    principal: string;
}

export interface Sheet {
    tile:        string;
    tile_layout: string;
}

export interface Tile {
    border: string;
}

export interface TileLayout {
    gutter: string;
    margin: string;
}

export interface Typography {
    font_families: string;
}

export interface UIColorPalette {
    accent:               string;
    accent_foreground:    string;
    danger:               string;
    danger_foreground:    string;
    dimension:            string;
    dimension_foreground: string;
    measure:              string;
    measure_foreground:   string;
    primary_background:   string;
    primary_foreground:   string;
    secondary_background: string;
    secondary_foreground: string;
    success:              string;
    success_foreground:   string;
    warning:              string;
    warning_foreground:   string;
}

export interface DataQuicksightUser {
    user_name:       string;
    aws_account_id?: string;
    namespace?:      string;
    active?:         string;
    arn?:            string;
    email?:          string;
    identity_type?:  string;
    principal_id?:   string;
    user_role?:      string;
}

export interface DataRAMResourceShare {
    name:               string;
    arn?:               string;
    id?:                string;
    owning_account_id?: string;
    resource_arns?:     string;
    status?:            string;
    tags?:              string;
}

export interface RDSCertificate {
    id?:                           string;
    latest_valid_till?:            string;
    arn?:                          string;
    certificate_type?:             string;
    customer_override?:            string;
    customer_override_valid_till?: string;
    thumbprint?:                   string;
    valid_from?:                   string;
    valid_till?:                   string;
}

export interface DataRDSCluster {
    cluster_identifier: string;
    tags?:              string;
}

export interface RDSClusters {
    name:                 string;
    values:               string;
    filter?:              string;
    cluster_arns?:        string;
    cluster_identifiers?: string;
}

export interface RDSEngineVersion {
    engine:                              string;
    default_only?:                       string;
    filter?:                             string;
    include_all?:                        string;
    parameter_group_family?:             string;
    preferred_versions?:                 string;
    version?:                            string;
    default_character_set?:              string;
    engine_description?:                 string;
    exportable_log_types?:               string;
    status?:                             string;
    supported_character_sets?:           string;
    supported_feature_names?:            string;
    supported_modes?:                    string;
    supported_timezones?:                string;
    supports_global_databases?:          string;
    supports_log_exports_to_cloudwatch?: string;
    supports_parallel_query?:            string;
    supports_read_replica?:              string;
    valid_upgrade_targets?:              string;
    version_description?:                string;
}

export interface RDSOrderableDBInstance {
    engine:                                string;
    availability_zone_group?:              string;
    engine_version?:                       string;
    instance_class?:                       string;
    license_model?:                        string;
    preferred_instance_classes?:           string;
    preferred_engine_versions?:            string;
    storage_type?:                         string;
    supports_enhanced_monitoring?:         string;
    supports_global_databases?:            string;
    supports_iam_database_authentication?: string;
    supports_iops?:                        string;
    supports_kerberos_authentication?:     string;
    supports_performance_insights?:        string;
    supports_storage_autoscaling?:         string;
    supports_storage_encryption?:          string;
    vpc?:                                  string;
    availability_zones?:                   string;
    max_iops_per_db_instance?:             string;
    max_iops_per_gib?:                     string;
    max_storage_size?:                     string;
    min_iops_per_db_instance?:             string;
    min_iops_per_gib?:                     string;
    min_storage_size?:                     string;
    multi_az_capable?:                     string;
    outpost_capable?:                      string;
    read_replica_capable?:                 string;
    supported_engine_modes?:               string;
    supported_network_types?:              string;
}

export interface RDSReservedInstanceOffering {
    db_instance_class:   string;
    duration:            string;
    multi_az:            string;
    offering_type:       string;
    product_description: string;
    id?:                 string;
    currency_code?:      string;
    fixed_price?:        string;
    offering_id?:        string;
}

export interface DataRedshiftCluster {
    cluster_identifier:                    string;
    arn?:                                  string;
    allow_version_upgrade?:                string;
    automated_snapshot_retention_period?:  string;
    aqua_configuration_status?:            string;
    availability_zone?:                    string;
    availability_zone_relocation_enabled?: string;
    bucket_name?:                          string;
    cluster_nodes?:                        string;
    cluster_parameter_group_name?:         string;
    cluster_public_key?:                   string;
    cluster_revision_number?:              string;
    cluster_subnet_group_name?:            string;
    cluster_type?:                         string;
    cluster_namespace_arn?:                string;
    database_name?:                        string;
    default_iam_role_arn?:                 string;
    elastic_ip?:                           string;
    enable_logging?:                       string;
    encrypted?:                            string;
    endpoint?:                             string;
    enhanced_vpc_routing?:                 string;
    iam_roles?:                            string;
    kms_key_id?:                           string;
    master_username?:                      string;
    node_type?:                            string;
    number_of_nodes?:                      string;
    maintenance_track_name?:               string;
    manual_snapshot_retention_period?:     string;
    port?:                                 string;
    preferred_maintenance_window?:         string;
    publicly_accessible?:                  string;
    s3_key_prefix?:                        string;
    log_destination_type?:                 string;
    log_exports?:                          string;
    tags?:                                 string;
    vpc_id?:                               string;
    vpc_security_group_ids?:               string;
    node_role?:                            string;
    private_ip_address?:                   string;
    public_ip_address?:                    string;
}

export interface RedshiftClusterCredentials {
    cluster_identifier: string;
    db_user:            string;
    auto_create?:       string;
    db_name?:           string;
    db_groups?:         string;
    duration_seconds?:  string;
    db_password?:       string;
    expiration?:        string;
}

export interface RedshiftOrderableCluster {
    cluster_type?:         string;
    cluster_version?:      string;
    node_type?:            string;
    preferred_node_types?: string;
    availability_zones?:   string;
}

export interface RedshiftserverlessCredentials {
    workgroup_name:    string;
    db_name?:          string;
    duration_seconds?: string;
    db_password?:      string;
    db_user?:          string;
    expiration?:       string;
}

export interface DataRedshiftserverlessNamespace {
    namespace_name:        string;
    admin_username?:       string;
    arn?:                  string;
    db_name?:              string;
    default_iam_role_arn?: string;
    iam_roles?:            string;
    kms_key_id?:           string;
    log_exports?:          string;
    namespace_id?:         string;
}

export interface DataRedshiftserverlessWorkgroup {
    workgroup_name:        string;
    arn?:                  string;
    id?:                   string;
    endpoint?:             string;
    enhanced_vpc_routing?: string;
    publicly_accessible?:  string;
    security_group_ids?:   string;
    subnet_ids?:           string;
    workgroup_id?:         string;
    address?:              string;
    port?:                 string;
    vpc_endpoint?:         string;
    vpc_endpoint_id?:      string;
    vpc_id?:               string;
    network_interface?:    string;
    availability_zone?:    string;
    network_interface_id?: string;
    private_ip_address?:   string;
    subnet_id?:            string;
}

export interface Region {
    name?:        string;
    endpoint?:    string;
    description?: string;
}

export interface DataRegions {
    name:         string;
    values:       string;
    all_regions?: string;
    filter?:      string;
    id?:          string;
    names?:       string;
}

export interface ResourcegroupstaggingapiResources {
    key:                          string;
    exclude_compliant_resources?: string;
    include_compliance_details?:  string;
    tag_filter?:                  string;
    resource_type_filters?:       string;
    resource_arn_list?:           string;
    values?:                      string;
}

export interface RoutesClass {
    route_table_id?:              string;
    carrier_gateway_id?:          string;
    core_network_arn?:            string;
    destination_cidr_block?:      string;
    destination_ipv6_cidr_block?: string;
    destination_prefix_list_id?:  string;
    egress_only_gateway_id?:      string;
    gateway_id?:                  string;
    instance_id?:                 string;
    local_gateway_id?:            string;
    nat_gateway_id?:              string;
    network_interface_id?:        string;
    transit_gateway_id?:          string;
    vpc_peering_connection_id?:   string;
    cidr_block?:                  string;
    ipv6_cidr_block?:             string;
    vpc_endpoint_id?:             string;
}

export interface Route53DelegationSet {
    id?:               string;
    arn?:              string;
    caller_reference?: string;
    name_servers?:     string;
    reference_name?:   string;
}

export interface DataRoute53ResolverEndpoint {
    resolver_endpoint_id?: string;
    filter?:               string;
    arn?:                  string;
    direction?:            string;
    ip_addresses?:         string;
    status?:               string;
    vpc_id?:               string;
}

export interface Route53ResolverConfig {
    resource_id:               string;
    firewall_fail_open?:       string;
    id?:                       string;
    owner_id?:                 string;
    autodefined_reverse_flag?: string;
}

export interface Route53ResolverFirewallDomainList {
    firewall_domain_list_id: string;
    arn?:                    string;
    creation_time?:          string;
    creator_request_id?:     string;
    domain_count?:           string;
    name?:                   string;
    managed_owner_name?:     string;
    modification_time?:      string;
    status?:                 string;
    status_message?:         string;
}

export interface Route53ResolverFirewallRuleGroup {
    firewall_rule_group_id: string;
    arn?:                   string;
    creation_time?:         string;
    creator_request_id?:    string;
    name?:                  string;
    modification_time?:     string;
    owner_id?:              string;
    rule_count?:            string;
    share_status?:          string;
    status?:                string;
    status_message?:        string;
}

export interface DataRoute53ResolverFirewallRuleGroupAssociation {
    firewall_rule_group_association_id: string;
    arn?:                               string;
    creation_time?:                     string;
    creator_request_id?:                string;
    firewall_rule_group_id?:            string;
    managed_owner_name?:                string;
    modification_time?:                 string;
    mutation_protection?:               string;
    name?:                              string;
    priority?:                          string;
    status?:                            string;
    status_message?:                    string;
    vpc_id?:                            string;
}

export interface Route53ResolverFirewallRules {
    firewall_rule_group_id:   string;
    action?:                  string;
    priority?:                string;
    firewall_rules?:          string;
    block_override_dns_type?: string;
    block_override_domain?:   string;
    block_override_ttl?:      string;
    block_response?:          string;
    creation_time?:           string;
    creator_request_id?:      string;
    firewall_domain_list_id?: string;
    modification_time?:       string;
    name?:                    string;
}

export interface Route53ResolverQueryLogConfig {
    resolver_query_log_config_id?: string;
    filter?:                       string;
    id?:                           string;
    arn?:                          string;
    destination_arn?:              string;
    name?:                         string;
    owner_id?:                     string;
    share_status?:                 string;
    tags?:                         string;
    tags_all?:                     string;
}

export interface Route53Resolver {
    domain_name?:  string;
    name?:         string;
    rule_type?:    string;
    id?:           string;
    arn?:          string;
    owner_id?:     string;
    share_status?: string;
    tags?:         string;
    tags_all?:     string;
}

export interface Route53ResolverRules {
    name_regex?:        string;
    id?:                string;
    resolver_rule_ids?: string;
}

export interface Route53TrafficPolicyDocument {
    id:                      string;
    endpoint?:               string;
    record_type?:            string;
    rule?:                   string;
    start_endpoint?:         string;
    start_rule?:             string;
    version?:                string;
    type?:                   string;
    region?:                 string;
    value?:                  string;
    primary?:                string;
    secondary?:              string;
    location?:               string;
    geo_proximity_location?: string;
    regions?:                string;
    items?:                  string;
    endpoint_reference?:     string;
    evaluate_target_health?: string;
    health_check?:           string;
    rule_reference?:         string;
    continent?:              string;
    country?:                string;
    is_default?:             string;
    subdivision?:            string;
    bias?:                   string;
    latitude?:               string;
    longitude?:              string;
    json?:                   string;
}

export interface DataRoute53Zone {
    zone_id?:                    string;
    name?:                       string;
    private_zone?:               string;
    vpc_id?:                     string;
    tags?:                       string;
    arn?:                        string;
    caller_reference?:           string;
    comment?:                    string;
    name_servers?:               string;
    primary_name_server?:        string;
    resource_record_set_count?:  string;
    linked_service_principal?:   string;
    linked_service_description?: string;
}

export interface DataRouteTable {
    filter?:                    Ec2ClientVPNEndpointFilter;
    gateway_id?:                string;
    route_table_id?:            string;
    subnet_id?:                 string;
    tags?:                      string;
    vpc_id?:                    string;
    arn?:                       string;
    associations?:              Associations;
    owner_id?:                  string;
    routes?:                    RoutesClass;
    vpc_peering_connection_id?: string;
}

export interface Associations {
    gateway_id:                 string;
    main:                       string;
    route_table_association_id: string;
    route_table_id:             string;
    subnet_id:                  string;
}

export interface S3AccountPublicAccessBlock {
    account_id?:              string;
    id?:                      string;
    block_public_acls?:       string;
    block_public_policy?:     string;
    ignore_public_acls?:      string;
    restrict_public_buckets?: string;
}

export interface DataS3Bucket {
    bucket:                       string;
    id?:                          string;
    arn?:                         string;
    bucket_domain_name?:          string;
    bucket_regional_domain_name?: string;
    hosted_zone_id?:              string;
    region?:                      string;
    website_endpoint?:            string;
    website_domain?:              string;
}

export interface DataS3BucketObject {
    bucket:                         string;
    key:                            string;
    version_id?:                    string;
    bucket_key_enabled?:            string;
    cache_control?:                 string;
    content_disposition?:           string;
    content_encoding?:              string;
    content_language?:              string;
    content_length?:                string;
    content_type?:                  string;
    etag?:                          string;
    expiration?:                    string;
    expires?:                       string;
    last_modified?:                 string;
    metadata?:                      string;
    object_lock_legal_hold_status?: string;
    object_lock_mode?:              string;
    object_lock_retain_until_date?: string;
    server_side_encryption?:        string;
    sse_kms_key_id?:                string;
    storage_class?:                 string;
    website_redirect_location?:     string;
    checksum_mode?:                 string;
    checksum_crc32?:                string;
    checksum_crc32c?:               string;
    checksum_sha1?:                 string;
    checksum_sha256?:               string;
}

export interface S3Objects {
    bucket:           string;
    prefix?:          string;
    delimiter?:       string;
    encoding_type?:   string;
    max_keys?:        string;
    start_after?:     string;
    fetch_owner?:     string;
    keys?:            string;
    common_prefixes?: string;
    id?:              string;
    owners?:          string;
    request_payer?:   string;
    request_charged?: string;
}

export interface S3BucketPolicy {
    bucket:  string;
    policy?: string;
}

export interface DataS3ControlMultiRegionAccessPoint {
    name:                 string;
    account_id?:          string;
    alias?:               string;
    arn?:                 string;
    created_at?:          string;
    domain_name?:         string;
    public_access_block?: string;
    regions?:             S3ControlMultiRegionAccessPointRegions;
    status?:              string;
}

export interface S3ControlMultiRegionAccessPointRegions {
    bucket:            string;
    bucket_account_id: string;
    region:            string;
}

export interface SagemakerPrebuiltEcrImage {
    repository_name: string;
    dns_suffix?:     string;
    image_tag?:      string;
    region?:         string;
    registry_id?:    string;
    registry_path?:  string;
}

export interface SecretsmanagerRandomPassword {
    exclude_characters?:         string;
    exclude_lowercase?:          string;
    exclude_numbers?:            string;
    exclude_uppercase?:          string;
    include_space?:              string;
    password_length?:            string;
    require_each_included_type?: string;
    random_password?:            string;
}

export interface DataSecretsmanagerSecret {
    arn?:         string;
    name?:        string;
    description?: string;
    kms_key_id?:  string;
    id?:          string;
    tags?:        string;
    policy?:      string;
}

export interface DataSecretsmanagerSecretRotation {
    secret_id:            string;
    rotation_enabled?:    string;
    rotation_lambda_arn?: string;
    rotation_rules?:      string;
}

export interface SecretsmanagerSecretVersion {
    secret_id:      string;
    version_id?:    string;
    version_stage?: string;
    arn?:           string;
    id?:            string;
    secret_string?: string;
    secret_binary?: string;
}

export interface SecurityGroups {
    tags?:   string;
    filter?: string;
    arns?:   string;
    id?:     string;
    ids?:    string;
}

export interface ServerlessapplicationrepositoryApplication {
    application_id:         string;
    semantic_version?:      string;
    name?:                  string;
    required_capabilities?: string;
    source_code_url?:       string;
    template_url?:          string;
}

export interface DataService {
    dns_name?:           string;
    partition?:          string;
    region?:             string;
    reverse_dns_name?:   string;
    reverse_dns_prefix?: string;
    service_id?:         string;
    supported?:          string;
}

export interface ServiceDiscoveryDNSNamespace {
    name:         string;
    type?:        string;
    arn?:         string;
    description?: string;
    id?:          string;
    hosted_zone?: string;
    tags?:        string;
    vpc?:         string;
    tags_all?:    string;
}

export interface ServiceDiscoveryService {
    name?:                       string;
    namespace_id?:               string;
    id?:                         string;
    arn?:                        string;
    description?:                string;
    dns_config?:                 DNSConfig;
    health_check_config?:        HealthCheckConfig;
    health_check_custom_config?: HealthCheckCustomConfig;
    tags?:                       string;
    type?:                       string;
    force_destroy?:              string;
    tags_all?:                   string;
}

export interface DNSConfig {
    namespace_id:   string;
    dns_records:    string;
    routing_policy: string;
    ttl:            string;
    type:           string;
}

export interface HealthCheckConfig {
    failure_threshold: string;
    resource_path:     string;
    type:              string;
}

export interface HealthCheckCustomConfig {
    failure_threshold: string;
}

export interface ServicecatalogConstraint {
    id?:              string;
    accept_language?: string;
    description?:     string;
    owner?:           string;
    parameters?:      string;
    portfolio_id?:    string;
    product_id?:      string;
    status?:          string;
    type?:            string;
}

export interface ServicecatalogLaunchPaths {
    product_id:            string;
    accept_language?:      string;
    summaries?:            Summaries;
    constraint_summaries?: ConstraintSummaries;
    tags?:                 string;
}

export interface ConstraintSummaries {
    description: string;
    type:        string;
}

export interface Summaries {
    constraint_summaries: string;
    path_id:              string;
    name:                 string;
    tags:                 string;
}

export interface ServicecatalogPortfolio {
    id:               string;
    accept_language?: string;
    arn?:             string;
    created_time?:    string;
    description?:     string;
    name?:            string;
    provider_name?:   string;
    tags?:            string;
}

export interface ServicecatalogPortfolioConstraints {
    portfolio_id:     string;
    accept_language?: string;
    product_id?:      string;
    details?:         Details;
}

export interface Details {
    constraint_id: string;
    description:   string;
    portfolio_id:  string;
    product_id:    string;
    type:          string;
}

export interface ServicecatalogProduct {
    id?:                               string;
    accept_language?:                  string;
    arn?:                              string;
    created_time?:                     string;
    description?:                      string;
    distributor?:                      string;
    has_default_path?:                 string;
    name?:                             string;
    owner?:                            string;
    status?:                           string;
    support_description?:              string;
    support_email?:                    string;
    support_url?:                      string;
    tags?:                             string;
    type?:                             string;
    provisioning_artifact_parameters?: ProvisioningArtifactParameters;
    tags_all?:                         string;
}

export interface ProvisioningArtifactParameters {
    description:                 string;
    disable_template_validation: string;
    name:                        string;
    template_physical_id:        string;
    template_url:                string;
    type:                        string;
}

export interface ServicecatalogProvisioningArtifacts {
    product_id:                     string;
    accept_language?:               string;
    provisioning_artifact_details?: ProvisioningArtifactDetails;
}

export interface ProvisioningArtifactDetails {
    active:       string;
    created_time: string;
    description:  string;
    guidance:     string;
    id:           string;
    name:         string;
    type:         string;
}

export interface ServicequotasService {
    service_name:  string;
    id?:           string;
    service_code?: string;
}

export interface ServicequotasServiceQuota {
    service_code:   string;
    quota_code?:    string;
    quota_name?:    string;
    adjustable?:    string;
    arn?:           string;
    default_value?: string;
    global_quota?:  string;
    id?:            string;
    service_name?:  string;
    value?:         string;
}

export interface SesActiveReceiptRuleSet {
    arn?:           string;
    rule_set_name?: string;
}

export interface SesDomainIdentity {
    arn?:                string;
    domain?:             string;
    verification_token?: string;
}

export interface SesEmailIdentity {
    arn?:   string;
    email?: string;
}

export interface DataSesv2ConfigurationSet {
    configuration_set_name: string;
    tags?:                  string;
}

export interface Sesv2DedicatedIPPool {
    pool_name:      string;
    arn?:           string;
    dedicated_ips?: DedicatedIPS;
    scaling_mode?:  string;
    tags?:          string;
}

export interface DedicatedIPS {
    ip:                string;
    warmup_percentage: string;
    warmup_status:     string;
}

export interface DataSesv2EmailIdentity {
    email_identity:               string;
    arn?:                         string;
    identity_type?:               string;
    tags?:                        string;
    verified_for_sending_status?: string;
}

export interface Sesv2EmailIdentityMailFromAttributes {
    email_identity:          string;
    behavior_on_mx_failure?: string;
    mail_from_domain?:       string;
}

export interface DataSfnAlias {
    name:                   string;
    statemachine_arn:       string;
    arn?:                   string;
    creation_date?:         string;
    description?:           string;
    routing_configuration?: string;
}

export interface DataSfnStateMachine {
    name:           string;
    id?:            string;
    arn?:           string;
    role_arn?:      string;
    definition?:    string;
    creation_date?: string;
    revision_id?:   string;
    status?:        string;
}

export interface SfnStateMachineVersions {
    statemachine_arn:       string;
    statemachine_versions?: string;
}

export interface DataSignerSigningJob {
    job_id:                 string;
    completed_at?:          string;
    created_at?:            string;
    job_invoker?:           string;
    job_owner?:             string;
    platform_display_name?: string;
    platform_id?:           string;
    profile_name?:          string;
    profile_version?:       string;
    requested_by?:          string;
    revocation_record?:     string;
    signature_expires_at?:  string;
    signed_object?:         string;
    source?:                string;
    status?:                string;
    status_reason?:         string;
}

export interface SignerSigningProfile {
    name?:                      string;
    arn?:                       string;
    platform_display_name?:     string;
    platform_id?:               string;
    revocation_record?:         string;
    signature_validity_period?: string;
    status?:                    string;
    tags?:                      string;
    version?:                   string;
    version_arn?:               string;
    name_prefix?:               string;
    tags_all?:                  string;
}

export interface CloudwatchEventBusClass {
    name?:                        string;
    arn?:                         string;
    url?:                         string;
    tags?:                        string;
    tags_all?:                    string;
    default_job_timeout_minutes?: string;
    deprecated?:                  string;
    endpoint?:                    string;
    monitoring_schedule_config?:  MonitoringScheduleConfig;
    group_id?:                    string;
}

export interface MonitoringScheduleConfig {
    monitoring_job_definition_name: string;
    monitoring_type:                string;
    schedule_config?:               string;
}

export interface SqsQueues {
    queue_name_prefix?: string;
    queue_urls?:        string;
}

export interface DataSsmDocument {
    name:              string;
    document_format?:  string;
    document_version?: string;
    arn?:              string;
    content?:          string;
    document_type?:    string;
}

export interface DataSsmParameter {
    name:             string;
    with_decryption?: string;
    arn?:             string;
    type?:            string;
    value?:           string;
    version?:         string;
}

export interface SsmParametersByPath {
    path:             string;
    with_decryption?: string;
    recursive?:       string;
    arns?:            string;
    names?:           string;
    types?:           string;
    values?:          string;
}

export interface DataSsmPatchBaseline {
    owner:                                 string;
    name_prefix?:                          string;
    default_baseline?:                     string;
    operating_system?:                     string;
    approved_patches?:                     string;
    approved_patches_compliance_level?:    string;
    approved_patches_enable_non_security?: string;
    id?:                                   string;
    name?:                                 string;
    description?:                          string;
    rejected_patches?:                     string;
    rejected_patches_action?:              string;
}

export interface SsmcontactsContact {
    arn:           string;
    alias?:        string;
    type?:         string;
    display_name?: string;
    tags?:         string;
}

export interface SsmcontactsPlan {
    contact_id: string;
    stage?:     string;
}

export interface DataSsmincidentsReplicationSet {
    arn?:                string;
    tags?:               string;
    created_by?:         string;
    deletion_protected?: string;
    last_modified_by?:   string;
    name?:               string;
    kms_key_arn?:        string;
    status_message?:     string;
}

export interface SsmincidentsResponsePlan {
    arn?:           string;
    name?:          string;
    tags?:          string;
    display_name?:  string;
    chat_channel?:  string;
    engagements?:   string;
    title?:         string;
    dedupe_string?: string;
    incident_tags?: string;
    summary?:       string;
    tags_all?:      string;
}

export interface SsoadminInstances {
    arns?:               string;
    id?:                 string;
    identity_store_ids?: string;
}

export interface SsoadminPermissionSet {
    instance_arn?:     string;
    arn?:              string;
    name?:             string;
    id?:               string;
    description?:      string;
    relay_state?:      string;
    session_duration?: string;
    tags?:             string;
    created_date?:     string;
    tags_all?:         string;
}

export interface StoragegatewayLocalDiskClass {
    gateway_arn: string;
    disk_node?:  string;
    disk_path?:  string;
    disk_id?:    string;
    id?:         string;
}

export interface Subnet {
    availability_zone?:                              string;
    availability_zone_id?:                           string;
    cidr_block?:                                     string;
    default_for_az?:                                 string;
    filter?:                                         Ec2ClientVPNEndpointFilter;
    id?:                                             string;
    ipv6_cidr_block?:                                string;
    state?:                                          string;
    tags?:                                           string;
    vpc_id?:                                         string;
    arn?:                                            string;
    assign_ipv6_address_on_creation?:                string;
    available_ip_address_count?:                     string;
    customer_owned_ipv4_pool?:                       string;
    enable_dns64?:                                   string;
    enable_lni_at_device_index?:                     string;
    enable_resource_name_dns_aaaa_record_on_launch?: string;
    enable_resource_name_dns_a_record_on_launch?:    string;
    ipv6_cidr_block_association_id?:                 string;
    ipv6_native?:                                    string;
    map_customer_owned_ip_on_launch?:                string;
    map_public_ip_on_launch?:                        string;
    outpost_arn?:                                    string;
    owner_id?:                                       string;
    private_dns_hostname_type_on_launch?:            string;
    tags_all?:                                       string;
}

export interface DataTransferServer {
    server_id:                    string;
    arn?:                         string;
    certificate?:                 string;
    domain?:                      string;
    endpoint?:                    string;
    endpoint_type?:               string;
    identity_provider_type?:      string;
    invocation_role?:             string;
    logging_role?:                string;
    protocols?:                   string;
    security_policy_name?:        string;
    structured_log_destinations?: string;
    url?:                         string;
}

export interface DataVpc {
    name:                                  string;
    values:                                string;
    cidr_block?:                           string;
    dhcp_options_id?:                      string;
    default?:                              string;
    filter?:                               string;
    id?:                                   string;
    state?:                                string;
    tags?:                                 string;
    arn?:                                  string;
    enable_dns_support?:                   string;
    enable_network_address_usage_metrics?: string;
    enable_dns_hostnames?:                 string;
    instance_tenancy?:                     string;
    ipv6_association_id?:                  string;
    ipv6_cidr_block?:                      string;
    main_route_table_id?:                  string;
    owner_id?:                             string;
    association_id?:                       string;
}

export interface VpcDHCPOptions {
    dhcp_options_id?:      string;
    filter?:               Ec2ClientVPNEndpointFilter;
    arn?:                  string;
    domain_name?:          string;
    domain_name_servers?:  string;
    id?:                   string;
    netbios_name_servers?: string;
    netbios_node_type?:    string;
    ntp_servers?:          string;
    tags?:                 string;
    owner_id?:             string;
    tags_all?:             string;
}

export interface DataVpcEndpoint {
    name:                                            string;
    values:                                          string;
    filter?:                                         string;
    id?:                                             string;
    service_name?:                                   string;
    state?:                                          string;
    tags?:                                           string;
    vpc_id?:                                         string;
    arn?:                                            string;
    cidr_blocks?:                                    string;
    dns_entry?:                                      string;
    dns_options?:                                    string;
    network_interface_ids?:                          string;
    owner_id?:                                       string;
    policy?:                                         string;
    prefix_list_id?:                                 string;
    private_dns_enabled?:                            string;
    requester_managed?:                              string;
    route_table_ids?:                                string;
    security_group_ids?:                             string;
    subnet_ids?:                                     string;
    vpc_endpoint_type?:                              string;
    dns_name?:                                       string;
    hosted_zone_id?:                                 string;
    dns_record_ip_type?:                             string;
    private_dns_only_for_inbound_resolver_endpoint?: string;
}

export interface DataVpcEndpointService {
    name:                           string;
    values:                         string;
    filter?:                        string;
    service?:                       string;
    service_name?:                  string;
    service_type?:                  string;
    acceptance_required?:           string;
    arn?:                           string;
    availability_zones?:            string;
    base_endpoint_dns_names?:       string;
    manages_vpc_endpoints?:         string;
    owner?:                         string;
    private_dns_name?:              string;
    service_id?:                    string;
    supported_ip_address_types?:    string;
    tags?:                          string;
    vpc_endpoint_policy_supported?: string;
}

export interface VpcIPAMPool {
    ipam_pool_id?:                      string;
    filter?:                            Ec2ClientVPNEndpointFilter;
    address_family?:                    string;
    allocation_default_netmask_length?: string;
    allocation_max_netmask_length?:     string;
    allocation_min_netmask_length?:     string;
    allocation_resource_tags?:          string;
    arn?:                               string;
    auto_import?:                       string;
    aws_service?:                       string;
    description?:                       string;
    id?:                                string;
    ipam_scope_id?:                     string;
    locale?:                            string;
    publicly_advertisable?:             string;
    source_ipam_pool_id?:               string;
    tags?:                              string;
    public_ip_source?:                  string;
    state?:                             string;
    tags_all?:                          string;
}

export interface VpcIPAMPoolCidrs {
    ipam_pool_id?:    string;
    filter?:          string;
    ipam_pool_cidrs?: IPAMPoolCidrs;
}

export interface IPAMPoolCidrs {
    cidr:  string;
    state: string;
}

export interface VpcIPAMPools {
    filter:      Ec2ClientVPNEndpointFilter;
    ipam_pools?: VpcIPAMPool;
}

export interface VpcIPAMPreviewNextCIDR {
    ipam_pool_id:      string;
    disallowed_cidrs?: string;
    netmask_length?:   string;
    cidr?:             string;
    id?:               string;
}

export interface DataVpcPeeringConnection {
    name:                             string;
    values:                           string;
    id?:                              string;
    status?:                          string;
    vpc_id?:                          string;
    owner_id?:                        string;
    cidr_block?:                      string;
    region?:                          string;
    peer_vpc_id?:                     string;
    peer_owner_id?:                   string;
    peer_cidr_block?:                 string;
    peer_region?:                     string;
    filter?:                          string;
    tags?:                            string;
    accepter?:                        string;
    cidr_block_set?:                  string;
    peer_cidr_block_set?:             string;
    requester?:                       string;
    allow_remote_vpc_dns_resolution?: string;
}

export interface VpcSecurityGroupRule {
    name?:                         string;
    values?:                       string;
    security_group_rule_id?:       string;
    filter?:                       string;
    arn?:                          string;
    cidr_ipv4?:                    string;
    cidr_ipv6?:                    string;
    description?:                  string;
    from_port?:                    string;
    is_egress?:                    string;
    ip_protocol?:                  string;
    prefix_list_id?:               string;
    referenced_security_group_id?: string;
    security_group_id?:            string;
    tags?:                         string;
    to_port?:                      string;
    tags_all?:                     string;
}

export interface VpclatticeAuthPolicy {
    resource_identifier: string;
    policy?:             string;
    state?:              string;
}

export interface DataVpclatticeListener {
    service_identifier:  string;
    listener_identifier: string;
    arn?:                string;
    created_at?:         string;
    default_action?:     string;
    last_updated_at?:    string;
    listener_id?:        string;
    name?:               string;
    port?:               string;
    protocol?:           string;
    service_arn?:        string;
    service_id?:         string;
    tags?:               string;
}

export interface VpclatticeResourcePolicyClass {
    resource_arn: string;
    policy?:      string;
}

export interface VpclatticeService {
    name?:               string;
    service_identifier?: string;
    arn?:                string;
    auth_type?:          string;
    certificate_arn?:    string;
    custom_domain_name?: string;
    dns_entry?:          string;
    id?:                 string;
    status?:             string;
    tags?:               string;
    tags_all?:           string;
}

export interface VpclatticeServiceNetwork {
    service_network_identifier:     string;
    arn?:                           string;
    auth_type?:                     string;
    created_at?:                    string;
    id?:                            string;
    last_updated_at?:               string;
    name?:                          string;
    number_of_associated_services?: string;
    number_of_associated_vpcs?:     string;
}

export interface DataVPNGateway {
    name:               string;
    values:             string;
    id?:                string;
    state?:             string;
    availability_zone?: string;
    attached_vpc_id?:   string;
    filter?:            string;
    tags?:              string;
    amazon_side_asn?:   string;
}

export interface WafIpset {
    name?: string;
    id?:   string;
}

export interface WafSubscribedRuleGroup {
    name?:        string;
    metric_name?: string;
    id?:          string;
}

export interface Wafv2Set {
    name:                string;
    scope:               string;
    addresses?:          string;
    arn?:                string;
    description?:        string;
    id?:                 string;
    ip_address_version?: string;
    tags?:               string;
    tags_all?:           string;
    regex_string?:       string;
    regular_expression?: string;
}

export interface Wafv2RegexPatternSet {
    name:                string;
    scope:               string;
    arn?:                string;
    description?:        string;
    id?:                 string;
    regular_expression?: string;
    regex_string?:       string;
}

export interface DataWafv2RuleGroup {
    name:         string;
    scope:        string;
    arn?:         string;
    description?: string;
    id?:          string;
}

export interface WorkspacesBundle {
    bundle_id?:    string;
    owner?:        string;
    name?:         string;
    description?:  string;
    compute_type?: string;
    root_storage?: string;
    user_storage?: string;
    capacity?:     string;
}

export interface WorkspacesDirectory {
    directory_id:                   string;
    id?:                            string;
    alias?:                         string;
    customer_user_name?:            string;
    directory_name?:                string;
    directory_type?:                string;
    dns_ip_addresses?:              string;
    iam_role_id?:                   string;
    ip_group_ids?:                  string;
    registration_code?:             string;
    self_service_permissions?:      SelfServicePermissions;
    subnet_ids?:                    string;
    tags?:                          string;
    workspace_creation_properties?: WorkspaceCreationProperties;
    workspace_access_properties?:   WorkspaceAccessProperties;
    workspace_security_group_id?:   string;
    switch_running_mode?:           string;
    device_type_zeroclient?:        string;
    tags_all?:                      string;
}

export interface SelfServicePermissions {
    change_compute_type:  string;
    increase_volume_size: string;
    rebuild_workspace:    string;
    restart_workspace:    string;
    switch_running_mode:  string;
}

export interface WorkspaceAccessProperties {
    device_type_android:    string;
    device_type_chromeos:   string;
    device_type_ios:        string;
    device_type_linux:      string;
    device_type_osx:        string;
    device_type_web:        string;
    device_type_windows:    string;
    device_type_zeroclient: string;
}

export interface WorkspaceCreationProperties {
    custom_security_group_id:            string;
    default_ou:                          string;
    enable_internet_access:              string;
    enable_maintenance_mode:             string;
    user_enabled_as_local_administrator: string;
}

export interface WorkspacesImage {
    image_id:          string;
    name?:             string;
    description?:      string;
    os?:               string;
    required_tenancy?: string;
    state?:            string;
}

export interface WorkspacesWorkspace {
    bundle_id?:                                 string;
    directory_id?:                              string;
    root_volume_encryption_enabled?:            string;
    tags?:                                      string;
    user_name?:                                 string;
    user_volume_encryption_enabled?:            string;
    volume_encryption_key?:                     string;
    workspace_id?:                              string;
    workspace_properties?:                      string;
    compute_type_name?:                         string;
    root_volume_size_gib?:                      string;
    running_mode?:                              string;
    running_mode_auto_stop_timeout_in_minutes?: string;
    user_volume_size_gib?:                      string;
    id?:                                        string;
    ip_address?:                                string;
    computer_name?:                             string;
    state?:                                     string;
    tags_all?:                                  string;
}

export interface Resource {
    s3_bucket_request_payment_configuration?:                      S3Bucket;
    transfer_agreement?:                                           TransferAgreement;
    vpc_ipam_organization_admin_account?:                          VpcIPAMOrganizationAdminAccount;
    api_gateway_gateway_response?:                                 APIGatewayGatewayResponse;
    fsx_lustre_file_system?:                                       FsxLustreFileSystem;
    mq_broker?:                                                    ResourceMqBroker;
    s3control_object_lambda_access_point_policy?:                  S3ControlObjectLambdaAccessPointPolicy;
    controltower_control?:                                         ControltowerControl;
    appautoscaling_target?:                                        AppautoscalingTarget;
    vpc_endpoint_policy?:                                          VpcEndpointPolicy;
    cloudhsm_v2_cluster?:                                          ResourceCloudhsmV2Cluster;
    ec2_client_vpn_network_association?:                           Ec2ClientVPNNetworkAssociation;
    fsx_backup?:                                                   FsxBackup;
    lightsail_certificate?:                                        LightsailCertificate;
    api_gateway_client_certificate?:                               APIGatewayClientCertificate;
    apigatewayv2_integration?:                                     Apigatewayv2Integration;
    appflow_connector_profile?:                                    AppflowConnectorProfile;
    opensearch_domain_saml_options?:                               SearchDomainSamlOptions;
    workspaces_workspace?:                                         WorkspacesWorkspace;
    iot_logging_options?:                                          IotLoggingOptions;
    opsworks_custom_layer?:                                        OpsworksCustomLayer;
    organizations_organization?:                                   OrganizationsOrganization;
    sagemaker_servicecatalog_portfolio_status?:                    SagemakerServicecatalogPortfolioStatus;
    api_gateway_integration_response?:                             APIGatewayIntegrationResponse;
    dataexchange_revision?:                                        DataexchangeRevision;
    wafregional_rate_based_rule?:                                  Waf;
    route53recoveryreadiness_resource_set?:                        Route53RecoveryreadinessResourceSet;
    sagemaker_app_image_config?:                                   SagemakerAppImageConfig;
    appmesh_mesh?:                                                 AppmeshMesh;
    connect_instance_storage_config?:                              ConnectInstanceStorageConfig;
    lightsail_lb?:                                                 LightsailLB;
    wafregional_web_acl?:                                          WafWebACL;
    route53_query_log?:                                            Route53QueryLog;
    gamelift_game_server_group?:                                   GameliftGameServerGroup;
    datasync_location_object_storage?:                             DatasyncLocationObjectStorage;
    glue_schema?:                                                  GlueSchema;
    macie2_invitation_accepter?:                                   Macie2InvitationAccepter;
    network_acl_association?:                                      NetworkACLAssociation;
    lakeformation_data_lake_settings?:                             LakeformationDataLakeSettings;
    lightsail_key_pair?:                                           LightsailKeyPair;
    lambda_code_signing_config?:                                   LambdaCodeSigningConfig;
    ses_receipt_filter?:                                           SesReceiptFilter;
    imagebuilder_image_recipe?:                                    ResourceImagebuilderImageRecipe;
    dynamodb_kinesis_streaming_destination?:                       DynamodbKinesisStreamingDestination;
    fsx_openzfs_volume?:                                           FsxOpenzfsVolume;
    identitystore_group_membership?:                               IdentitystoreGroupMembership;
    ec2_network_insights_analysis?:                                ResourceEc2NetworkInsightsAnalysis;
    cleanrooms_collaboration?:                                     CleanroomsCollaboration;
    cloudfront_response_headers_policy?:                           CloudfrontResponseHeadersPolicy;
    ec2_transit_gateway_connect_peer?:                             ResourceEc2TransitGatewayConnectPeer;
    db_event_subscription?:                                        DBEventSubscriptionClass;
    ssmcontacts_contact_channel?:                                  KmsSecretClass;
    appmesh_route?:                                                AppmeshRoute;
    dynamodb_contributor_insights?:                                DynamodbContributorInsights;
    vpc_endpoint_service?:                                         ResourceVpcEndpointService;
    db_instance?:                                                  ResourceDBInstance;
    msk_cluster?:                                                  ResourceMskCluster;
    networkmanager_transit_gateway_registration?:                  NetworkmanagerTransitGatewayRegistration;
    ec2_transit_gateway_peering_attachment_accepter?:              Ec2TransitGatewayPeeringAttachmentAccepterClass;
    lightsail_lb_attachment?:                                      LightsailLBAttachment;
    route53_resolver_query_log_config?:                            Route53ResolverQueryLogConfig;
    cognito_user_pool_ui_customization?:                           CognitoUserPoolUICustomization;
    mskconnect_worker_configuration?:                              Mskconnect;
    worklink_website_certificate_authority_association?:           WorklinkWebsiteCertificateAuthorityAssociation;
    quicksight_folder?:                                            QuicksightFolder;
    route53_traffic_policy_instance?:                              Route53TrafficPolicyInstance;
    ssoadmin_managed_policy_attachment?:                           SsoadminManagedPolicyAttachment;
    vpc_endpoint?:                                                 ResourceVpcEndpoint;
    cloudwatch_metric_stream?:                                     CloudwatchMetricStream;
    macie2_custom_data_identifier?:                                Macie2CustomDataIdentifier;
    securityhub_standards_control?:                                SecurityhubStandardsControl;
    wafv2_rule_group?:                                             ResourceWafv2RuleGroup;
    evidently_project?:                                            EvidentlyProject;
    gamelift_build?:                                               Gamelift;
    service_discovery_public_dns_namespace?:                       ServiceDiscoveryDNSNamespace;
    ssoadmin_permission_set_inline_policy?:                        SsoadminPermissionSetInlinePolicy;
    ecs_task_definition?:                                          ResourceEcsTaskDefinition;
    glue_data_quality_ruleset?:                                    GlueDataQualityRuleset;
    kendra_thesaurus?:                                             PurpleKendra;
    cloudwatch_log_metric_filter?:                                 CloudwatchLogMetricFilter;
    ec2_transit_gateway_route?:                                    Ec2TransitGatewayPrefixListReferenceClass;
    lightsail_domain_entry?:                                       LightsailDomainEntry;
    opsworks_static_web_layer?:                                    OpsworksLayer;
    route53_delegation_set?:                                       Route53DelegationSet;
    ssm_default_patch_baseline?:                                   SsmDefaultPatchBaseline;
    codestarconnections_connection?:                               CodestarconnectionsConnection;
    ec2_local_gateway_route?:                                      Ec2LocalGatewayRoute;
    location_route_calculator?:                                    LocationRouteCalculator;
    opensearchserverless_security_config?:                         ResourceOpensearchserverlessSecurityConfig;
    apigatewayv2_api_mapping?:                                     Apigatewayv2APIMapping;
    gamelift_fleet?:                                               GameliftFleet;
    lightsail_static_ip_attachment?:                               LightsailStaticIPAttachment;
    mq_configuration?:                                             MqConfiguration;
    keyspaces_keyspace?:                                           DatapipelinePipelineClass;
    directory_service_shared_directory_accepter?:                  DirectoryServiceSharedDirectoryAccepter;
    finspace_kx_cluster?:                                          FinspaceKxCluster;
    iam_role_policy?:                                              IamPolicy;
    rum_metrics_destination?:                                      RumMetricsDestination;
    lightsail_container_service?:                                  LightsailContainerService;
    ec2_availability_zone_group?:                                  Ec2AvailabilityZoneGroup;
    iam_account_alias?:                                            ResourceIamAccountAlias;
    lightsail_lb_stickiness_policy?:                               LightsailLBPolicy;
    appstream_fleet_stack_association?:                            AppstreamFleetStackAssociation;
    dms_replication_task?:                                         DmsReplicationTask;
    resourcegroups_resource?:                                      ResourcegroupsResource;
    mwaa_environment?:                                             MwaaEnvironment;
    appsync_datasource?:                                           AppsyncDatasource;
    ec2_tag?:                                                      Tag;
    lakeformation_lf_tag?:                                         LakeformationLFTagClass;
    route53_cidr_location?:                                        Route53CIDRLocation;
    s3_object_copy?:                                               S3ObjectCopy;
    apigatewayv2_stage?:                                           Apigatewayv2Stage;
    oam_sink_policy?:                                              OamSinkPolicy;
    eks_identity_provider_config?:                                 EksIdentityProviderConfig;
    emr_cluster?:                                                  EmrCluster;
    codepipeline?:                                                 Codepipeline;
    pinpoint_gcm_channel?:                                         PinpointChannel;
    dx_hosted_transit_virtual_interface?:                          DxVirtualInterface;
    storagegateway_working_storage?:                               StoragegatewayCacheClass;
    autoscaling_group?:                                            KmsSecretClass;
    internetmonitor_monitor?:                                      InternetmonitorMonitor;
    codebuild_resource_policy?:                                    ResourcePolicy;
    dms_event_subscription?:                                       DmsEventSubscriptionClass;
    service_discovery_instance?:                                   ServiceDiscoveryInstance;
    route53_zone_association?:                                     Route53Ation;
    ssm_resource_data_sync?:                                       SsmResourceDataSync;
    api_gateway_method_response?:                                  APIGatewayMethodResponse;
    db_parameter_group?:                                           ParameterGroup;
    kms_alias?:                                                    KmsAlias;
    rds_cluster?:                                                  ResourceRDSCluster;
    budgets_budget_action?:                                        BudgetsBudgetAction;
    connect_contact_flow_module?:                                  ConnectContactFlowModuleClass;
    kinesis_analytics_application?:                                KinesisAnalyticsApplication;
    waf_size_constraint_set?:                                      OrganizationsOrganizationalUnitClass;
    api_gateway_documentation_part?:                               APIGatewayDocumentationPart;
    elasticache_user_group?:                                       ElasticacheUserGroup;
    cloud9_environment_ec2?:                                       Cloud9EnvironmentEc2;
    ecr_registry_policy?:                                          EcrRegistryPolicy;
    vpc_endpoint_security_group_association?:                      VpcEndpointSecurityGroupAssociation;
    ec2_subnet_cidr_reservation?:                                  Ec2SubnetCIDRReservation;
    ec2_transit_gateway_route_table_association?:                  Ec2TransitGatewayRouteTableAtion;
    iot_thing_group_membership?:                                   IotThingGroupMembership;
    apprunner_connection?:                                         ApprunnerConnection;
    backup_region_settings?:                                       BackupRegionSettings;
    autoscaling_group_tag?:                                        AutoscalingGroupTag;
    glue_crawler?:                                                 GlueCrawler;
    connect_user_hierarchy_group?:                                 ConnectUserHierarchyGroup;
    ses_receipt_rule_set?:                                         SesReceiptRuleSet;
    emrserverless_application?:                                    EmrserverlessApplication;
    codestarconnections_host?:                                     CodestarconnectionsHost;
    efs_mount_target?:                                             EFSMountTarget;
    db_proxy_target?:                                              DBProxyTarget;
    dx_gateway_association?:                                       DxGatewayAssociation;
    dx_hosted_private_virtual_interface?:                          DxVirtualInterface;
    flow_log?:                                                     FlowLog;
    appautoscaling_scheduled_action?:                              AppautoscalingScheduledAction;
    appconfig_configuration_profile?:                              ResourceAppconfigConfigurationProfile;
    connect_security_profile?:                                     ConnectSecurityProfile;
    redshift_cluster_iam_roles?:                                   RedshiftClusterIamRoles;
    pinpoint_apns_voip_sandbox_channel?:                           PinpointApnsChannel;
    config_configuration_recorder_status?:                         ConfigConfigurationRecorderStatus;
    db_proxy_endpoint?:                                            DBProxyEndpoint;
    opsworks_rails_app_layer?:                                     OpsworksLayer;
    ram_sharing_with_organization?:                                CanonicalUserID;
    ec2_transit_gateway_prefix_list_reference?:                    Ec2TransitGatewayPrefixListReferenceClass;
    cloudwatch_event_bus_policy?:                                  CloudwatchEventBusPolicy;
    cloudwatch_log_destination_policy?:                            CloudwatchLogDestinationPolicy;
    dx_gateway?:                                                   DxGateway;
    docdb_event_subscription?:                                     DBEventSubscriptionClass;
    iam_user_login_profile?:                                       IamUserLoginProfile;
    redshift_cluster_snapshot?:                                    RedshiftClusterSnapshot;
    networkmanager_device?:                                        NetworkmanagerDevice;
    cloudfront_origin_request_policy?:                             CloudfrontOriginRequestPolicy;
    cloudwatch_dashboard?:                                         CloudwatchDashboard;
    vpc_dhcp_options_association?:                                 VpcDHCPOptionsAssociation;
    iam_user?:                                                     ResourceIamUser;
    kms_custom_key_store?:                                         ResourceKmsCustomKeyStore;
    networkmanager_connect_attachment?:                            KmsSecretClass;
    nat_gateway?:                                                  ResourceNatGateway;
    networkmanager_site_to_site_vpn_attachment?:                   KmsSecretClass;
    route53_vpc_association_authorization?:                        Route53Ation;
    redshift_event_subscription?:                                  DmsEventSubscriptionClass;
    chime_voice_connector_origination?:                            ChimeVoiceConnectorOrigination;
    chime_voice_connector_termination_credentials?:                ChimeVoiceConnectorTerminationCredentials;
    globalaccelerator_accelerator?:                                ResourceGlobalacceleratorAccelerator;
    schemas_discoverer?:                                           ElasticacheSubnetGroup;
    wafregional_geo_match_set?:                                    OrganizationsOrganizationalUnitClass;
    iam_group_membership?:                                         IamGroupMembership;
    msk_scram_secret_association?:                                 MskScramSecretAssociation;
    quicksight_group?:                                             QuicksightGroup;
    rds_cluster_endpoint?:                                         ClusterEndpoint;
    elastictranscoder_preset?:                                     ElastictranscoderPreset;
    spot_fleet_request?:                                           SpotFleetRequest;
    backup_vault?:                                                 ResourceBackupVault;
    macie2_classification_export_configuration?:                   Macie2ClassificationExportConfiguration;
    iot_thing_type?:                                               CloudwatchEventBusClass;
    route53recoveryreadiness_recovery_group?:                      Route53RecoveryreadinessRecoveryGroup;
    service_discovery_http_namespace?:                             Apigatewayv2VpcLink;
    chimesdkmediapipelines_media_insights_pipeline_configuration?: ChimesdkmediapipelinesMediaInsightsPipelineConfiguration;
    verifiedaccess_trust_provider?:                                VerifiedaccessTrustProvider;
    db_option_group?:                                              DBOptionGroup;
    network_acl_rule?:                                             NetworkACLRule;
    ami_copy?:                                                     AmiCopy;
    appsync_api_cache?:                                            AppsyncAPICache;
    acm_certificate?:                                              ResourceACMCertificate;
    rds_cluster_parameter_group?:                                  ParameterGroup;
    load_balancer_policy?:                                         LoadBalancerPolicy;
    default_subnet?:                                               DefaultSubnet;
    ec2_traffic_mirror_filter_rule?:                               Ec2TrafficMirrorFilterRule;
    iam_user_policy?:                                              IamPolicy;
    lakeformation_resource?:                                       ResourceLakeformationResource;
    cognito_resource_server?:                                      CognitoResourceServer;
    docdb_cluster?:                                                DocdbCluster;
    iam_account_password_policy?:                                  IamAccountPasswordPolicy;
    secretsmanager_secret_version?:                                SecretsmanagerSecretVersion;
    ecr_lifecycle_policy?:                                         EcrPolicy;
    storagegateway_cached_iscsi_volume?:                           StoragegatewayEdIscsiVolume;
    api_gateway_documentation_version?:                            APIGatewayDocumentationVersion;
    directory_service_region?:                                     DirectoryServiceRegion;
    cognito_user_in_group?:                                        CognitoUserInGroup;
    eip?:                                                          ResourceEip;
    macie2_organization_admin_account?:                            OrganizationAdminAccount;
    athena_workgroup?:                                             AthenaWorkgroup;
    cloudformation_stack_set?:                                     CloudformationStackSet;
    apigatewayv2_authorizer?:                                      Apigatewayv2Authorizer;
    placement_group?:                                              PlacementGroup;
    ce_anomaly_monitor?:                                           CeAnomalyMonitor;
    cloudsearch_domain_service_access_policy?:                     CloudsearchDomainServiceAccessPolicy;
    connect_vocabulary?:                                           ConnectVocabulary;
    sagemaker_model_package_group?:                                SagemakerModelPackageGroup;
    iam_policy_attachment?:                                        WafIpset;
    sagemaker_device?:                                             SagemakerDevice;
    ebs_snapshot_copy?:                                            EbsSnapshotCopyClass;
    glue_catalog_database?:                                        GlueCatalogDatabase;
    cloudfront_realtime_log_config?:                               CloudfrontRealtimeLogConfig;
    ec2_transit_gateway_policy_table?:                             Ec2TransitGatewayPolicyTable;
    iot_policy?:                                                   IotPolicy;
    ce_cost_category?:                                             CeCostCategory;
    ecs_cluster_capacity_providers?:                               EcsClusterCapacityProviders;
    appconfig_environment?:                                        ResourceAppconfigEnvironment;
    dynamodb_table_replica?:                                       DynamodbTableReplica;
    networkfirewall_firewall_policy?:                              ResourceNetworkfirewallFirewallPolicy;
    scheduler_schedule_group?:                                     SchedulerScheduleGroup;
    pinpoint_apns_voip_channel?:                                   PinpointApnsChannel;
    securityhub_invite_accepter?:                                  SecurityhubInviteAccepter;
    appsync_function?:                                             AppsyncFunction;
    db_instance_automated_backups_replication?:                    DBInstanceAutomatedBackupsReplication;
    route53_resolver_firewall_rule_group_association?:             ResourceRoute53ResolverFirewallRuleGroupAssociation;
    servicecatalog_constraint?:                                    ServicecatalogConstraint;
    cloudwatch_log_group?:                                         ResourceCloudwatchLogGroup;
    route53recoverycontrolconfig_control_panel?:                   Route53RecoverycontrolconfigControlPanel;
    vpc_dhcp_options?:                                             VpcDHCPOptions;
    fsx_ontap_volume?:                                             FsxOntapVolume;
    scheduler_schedule?:                                           SchedulerSchedule;
    cloudwatch_log_resource_policy?:                               CloudwatchLogResourcePolicy;
    ec2_transit_gateway_vpc_attachment_accepter?:                  Ec2TransitGatewayVpcAttachment;
    resourceexplorer2_index?:                                      NetworkmanagerGlobalNetwork;
    dx_connection_confirmation?:                                   CanonicalUserID;
    ivschat_logging_configuration?:                                IvsRecordingConfiguration;
    licensemanager_association?:                                   LicensemanagerAssociation;
    redshift_endpoint_authorization?:                              RedshiftEndpointAuthorization;
    wafregional_size_constraint_set?:                              OrganizationsOrganizationalUnitClass;
    lexv2models_bot?:                                              Lexv2ModelsBot;
    quicksight_iam_policy_assignment?:                             QuicksightIamPolicyAssignment;
    transfer_user?:                                                Transfer;
    redshift_parameter_group?:                                     ParameterGroup;
    synthetics_canary?:                                            SyntheticsCanary;
    fsx_openzfs_file_system?:                                      FsxOpenzfsFileSystem;
    kms_replica_key?:                                              KmsReplicaKey;
    lb_listener?:                                                  ResourceLBListener;
    rds_reserved_instance?:                                        RDSReservedInstance;
    comprehend_entity_recognizer?:                                 Comprehend;
    networkmanager_attachment_accepter?:                           KmsSecretClass;
    shield_drt_access_log_bucket_association?:                     ShieldDrtAccessLogBucketAssociation;
    ec2_managed_prefix_list_entry?:                                Ec2ManagedPrefixListEntry;
    imagebuilder_image_pipeline?:                                  ResourceImagebuilderImagePipeline;
    route53_resolver_rule_association?:                            Route53ResolverRuleAssociation;
    memorydb_snapshot?:                                            MemorydbSnapshot;
    quicksight_data_set?:                                          ResourceQuicksightDataSet;
    redshift_scheduled_action?:                                    RedshiftScheduledAction;
    vpc_peering_connection_options?:                               VpcPeeringConnectionOptions;
    opsworks_ecs_cluster_layer?:                                   OpsworksLayer;
    route_table?:                                                  ResourceRouteTable;
    appstream_fleet?:                                              AppstreamFleet;
    cloudwatch_log_data_protection_policy?:                        CloudwatchLogDataProtectionPolicy;
    cur_report_definition?:                                        CurReportDefinition;
    opensearchserverless_security_policy?:                         OpensearchserverlessPolicy;
    route?:                                                        ResourceRoute;
    apigatewayv2_domain_name?:                                     Apigatewayv2DomainName;
    appsync_api_key?:                                              AppsyncAPIKey;
    auditmanager_assessment_report?:                               AuditmanagerAssessmentReport;
    ssm_maintenance_window_target?:                                SsmMaintenanceWindowTarget;
    worklink_fleet?:                                               WorklinkFleet;
    amplify_app?:                                                  AmplifyApp;
    chime_voice_connector?:                                        ChimeVoiceConnector;
    iam_virtual_mfa_device?:                                       IamVirtualMfaDevice;
    servicecatalog_provisioning_artifact?:                         ServicecatalogProvisioningArtifact;
    mskconnect_connector?:                                         PurpleMskconnectConnector;
    networkmanager_core_network?:                                  NetworkmanagerCoreNetwork;
    api_gateway_method_settings?:                                  APIGatewayMethodSettings;
    networkmanager_transit_gateway_connect_peer_association?:      NetworkmanagerAssociation;
    securityhub_standards_subscription?:                           SecurityhubStandardsSubscription;
    api_gateway_rest_api?:                                         ResourceAPIGatewayRESTAPI;
    redshiftserverless_usage_limit?:                               RedshiftserverlessUsageLimit;
    sagemaker_notebook_instance?:                                  SagemakerNotebookInstance;
    ec2_transit_gateway_policy_table_association?:                 Ec2TransitGatewayPolicyTableAssociation;
    budgets_budget?:                                               BudgetsBudget;
    ec2_transit_gateway_multicast_group_source?:                   Ec2TransitGatewayMulticastGroup;
    iam_service_linked_role?:                                      IamServiceLinkedRole;
    neptune_cluster_instance?:                                     ClusterInstance;
    pinpoint_email_channel?:                                       PinpointEmailChannel;
    route_table_association?:                                      RouteTableAssociation;
    amplify_branch?:                                               AmplifyBranch;
    ivs_playback_key_pair?:                                        IvsPlaybackKeyPair;
    route53recoveryreadiness_cell?:                                Route53RecoveryreadinessCell;
    athena_database?:                                              AthenaDatabase;
    cloudhsm_v2_hsm?:                                              CloudhsmV2HSM;
    ses_configuration_set?:                                        SesConfigurationSet;
    vpc_security_group_egress_rule?:                               VpcSecurityGroupRule;
    apigatewayv2_api?:                                             ResourceApigatewayv2API;
    appstream_user?:                                               AppstreamUser;
    codeartifact_domain?:                                          CodeartifactDomain;
    redshift_usage_limit?:                                         RedshiftUsageLimit;
    s3_bucket_analytics_configuration?:                            S3BucketAnalyticsConfiguration;
    athena_data_catalog?:                                          KmsSecretClass;
    kms_replica_external_key?:                                     KmsExternalKey;
    devicefarm_instance_profile?:                                  DevicefarmInstanceProfile;
    pinpoint_apns_sandbox_channel?:                                PinpointApnsChannel;
    vpclattice_listener?:                                          ResourceVpclatticeListener;
    auditmanager_framework_share?:                                 AuditmanagerFrameworkShare;
    detective_member?:                                             DetectiveMember;
    apigatewayv2_deployment?:                                      Apigatewayv2Deployment;
    sagemaker_endpoint_configuration?:                             SagemakerEndpointConfiguration;
    medialive_input?:                                              MedialiveInput;
    networkmanager_global_network?:                                NetworkmanagerGlobalNetwork;
    volume_attachment?:                                            VolumeAttachment;
    cloudwatch_event_connection?:                                  ResourceCloudwatchEventConnection;
    cloudwatch_log_stream?:                                        CloudwatchLogStream;
    evidently_segment?:                                            EvidentlySegment;
    imagebuilder_image?:                                           ImagebuilderImage;
    lambda_event_source_mapping?:                                  LambdaEventSourceMapping;
    pinpoint_baidu_channel?:                                       PinpointChannel;
    docdb_global_cluster?:                                         GlobalCluster;
    workspaces_connection_alias?:                                  WorkspacesConnectionAlias;
    ec2_instance_state?:                                           Ec2InstanceState;
    vpc_ipv6_cidr_block_association?:                              VpcIpv6CIDRBlockAssociation;
    ami_from_instance?:                                            AmiFromInstance;
    quicksight_namespace?:                                         QuicksightNamespace;
    ssmcontacts_plan?:                                             SsmcontactsPlan;
    inspector_assessment_template?:                                InspectorAssessmentTemplate;
    lambda_alias?:                                                 LambdaAlias;
    pinpoint_app?:                                                 PinpointApp;
    proxy_protocol_policy?:                                        ProxyProtocolPolicy;
    redshift_hsm_configuration?:                                   RedshiftHSMConfiguration;
    sesv2_contact_list?:                                           Sesv2ContactList;
    snapshot_create_volume_permission?:                            SnapshotCreateVolumePermission;
    emrcontainers_job_template?:                                   EmrcontainersJobTemplate;
    glue_ml_transform?:                                            GlueMlTransform;
    neptune_cluster_endpoint?:                                     ClusterEndpoint;
    glue_partition?:                                               GluePartition;
    imagebuilder_component?:                                       ImagebuilderComponent;
    db_proxy?:                                                     ResourceDBProxy;
    msk_cluster_policy?:                                           MskClusterPolicy;
    appsync_graphql_api?:                                          AppsyncGraphqlAPI;
    datasync_location_fsx_openzfs_file_system?:                    DatasyncLocationFsxFileSystem;
    identitystore_user?:                                           ResourceIdentitystoreUser;
    sagemaker_model_package_group_policy?:                         SagemakerModelPackageGroupPolicy;
    kms_key_policy?:                                               KmsKeyPolicy;
    transfer_workflow?:                                            TransferWorkflow;
    cloudwatch_event_permission?:                                  CloudwatchEventPermission;
    sagemaker_workteam?:                                           SagemakerWorkteam;
    iot_provisioning_template?:                                    IotProvisioningTemplate;
    opsworks_stack?:                                               OpsworksStack;
    sesv2_configuration_set_event_destination?:                    Sesv2ConfigurationSetEventDestination;
    connect_queue?:                                                ConnectQueue;
    eks_cluster?:                                                  ResourceEksCluster;
    iam_openid_connect_provider?:                                  IamOpenidConnectProvider;
    appmesh_virtual_gateway?:                                      AppmeshVirtualGateway;
    shield_application_layer_automatic_response?:                  ShieldApplicationLayerAutomaticResponse;
    guardduty_threatintelset?:                                     GuarddutySet;
    cloudfront_continuous_deployment_policy?:                      CloudfrontContinuousDeploymentPolicy;
    cloudfront_field_level_encryption_profile?:                    CloudfrontFieldLevelEncryptionProfile;
    glue_connection?:                                              ResourceGlueConnection;
    guardduty_ipset?:                                              GuarddutySet;
    dx_hosted_transit_virtual_interface_accepter?:                 DxHostedVirtualInterfaceAccepter;
    iot_policy_attachment?:                                        IotPolicyAttachment;
    networkmanager_site?:                                          NetworkmanagerSite;
    config_organization_managed_rule?:                             ConfigOrganizationRule;
    finspace_kx_environment?:                                      FinspaceKxEnvironment;
    vpc_ipam_preview_next_cidr?:                                   VpcIPAMPreviewNextCIDR;
    iam_group_policy_attachment?:                                  KmsSecretClass;
    identitystore_group?:                                          ResourceIdentitystoreGroup;
    networkmanager_transit_gateway_peering?:                       NetworkmanagerTransitGatewayPeering;
    vpn_connection?:                                               VPNConnection;
    media_store_container_policy?:                                 MediaStoreContainerPolicy;
    quicksight_refresh_schedule?:                                  QuicksightRefreshSchedule;
    rum_app_monitor?:                                              RumAppMonitor;
    ssm_patch_group?:                                              SsmPatchGroup;
    api_gateway_model?:                                            APIModel;
    cloudcontrolapi_resource?:                                     ResourceCloudcontrolapiResource;
    instance?:                                                     ResourceInstance;
    media_convert_queue?:                                          MediaConvertQueue;
    redshift_subnet_group?:                                        Apigatewayv2VpcLink;
    grafana_workspace_saml_configuration?:                         GrafanaWorkspaceSamlConfiguration;
    sagemaker_code_repository?:                                    SagemakerCodeRepository;
    auditmanager_control?:                                         ResourceAuditmanagerControl;
    macie2_findings_filter?:                                       Macie2FindingsFilter;
    dms_replication_instance?:                                     DmsReplicationInstance;
    ec2_managed_prefix_list?:                                      ResourceEc2ManagedPrefixList;
    inspector_resource_group?:                                     InspectorResourceGroup;
    quicksight_ingestion?:                                         QuicksightIngestion;
    account_primary_contact?:                                      AccountPrimaryContact;
    ec2_traffic_mirror_target?:                                    Ec2TrafficMirrorTarget;
    sns_topic_policy?:                                             SnsTopicPolicy;
    vpc_network_performance_metric_subscription?:                  VpcNetworkPerformanceMetricSubscription;
    dx_hosted_connection?:                                         DxHostedConnection;
    waf_sql_injection_match_set?:                                  WafSQLInjectionMatchSet;
    iam_role?:                                                     ResourceIamRole;
    cloudfront_function?:                                          CloudfrontFunction;
    eks_fargate_profile?:                                          EksFargateProfile;
    ami_launch_permission?:                                        AmiLaunchPermission;
    lightsail_bucket_access_key?:                                  LightsailBucketAccessKey;
    opensearch_domain?:                                            OpensearchDomain;
    sns_topic_data_protection_policy?:                             SnsTopicDataProtectionPolicy;
    s3_bucket?:                                                    ResourceS3Bucket;
    ses_active_receipt_rule_set?:                                  SesReceiptRuleSet;
    cloudwatch_log_destination?:                                   CloudwatchLogDestination;
    appmesh_gateway_route?:                                        AppmeshGatewayRoute;
    config_aggregate_authorization?:                               ConfigAggregateAuthorization;
    lb_cookie_stickiness_policy?:                                  AppCookieStickinessPolicyClass;
    kinesis_firehose_delivery_stream?:                             KinesisFirehoseDeliveryStream;
    auditmanager_framework?:                                       AuditmanagerFramework;
    datapipeline_pipeline_definition?:                             DatapipelinePipelineDefinition;
    organizations_resource_policy?:                                DatapipelinePipelineClass;
    appconfig_application?:                                        ElasticacheSubnetGroup;
    connect_phone_number?:                                         ConnectPhoneNumber;
    ec2_transit_gateway_multicast_domain?:                         ResourceEc2TransitGatewayMulticastDomain;
    iam_group?:                                                    ResourceIamGroup;
    quicksight_folder_membership?:                                 QuicksightFolderMembership;
    wafregional_web_acl_association?:                              WafregionalWebACLAssociation;
    networkmanager_connection?:                                    NetworkmanagerConnection;
    sagemaker_human_task_ui?:                                      SagemakerHumanTaskUI;
    codecommit_approval_rule_template?:                            CodecommitApprovalRuleTemplate;
    glue_job?:                                                     GlueJob;
    storagegateway_smb_file_share?:                                StoragegatewaySMBFileShare;
    redshift_cluster?:                                             ResourceRedshiftCluster;
    api_gateway_integration?:                                      APIGatewayIntegration;
    autoscaling_lifecycle_hook?:                                   AutoscalingLifecycleHook;
    msk_serverless_cluster?:                                       MskServerlessCluster;
    api_gateway_domain_name?:                                      ResourceAPIGatewayDomainName;
    cloudtrail_event_data_store?:                                  KmsSecretClass;
    network_acl?:                                                  NetworkACL;
    appsync_resolver?:                                             AppsyncResolver;
    ecr_replication_configuration?:                                EcrReplicationConfiguration;
    gamelift_alias?:                                               GameliftAlias;
    lex_bot_alias?:                                                Lex;
    sagemaker_image?:                                              SagemakerImage;
    gamelift_game_session_queue?:                                  GameliftGameSessionQueue;
    codedeploy_deployment_config?:                                 CodedeployDeploymentConfig;
    ebs_default_kms_key?:                                          ResourceEbsDefaultKmsKey;
    iam_security_token_service_preferences?:                       IamSecurityTokenServicePreferences;
    media_package_channel?:                                        ElasticacheSubnetGroup;
    sagemaker_space?:                                              SagemakerSpace;
    shield_protection_health_check_association?:                   ShieldProtectionHealthCheckAssociation;
    batch_job_definition?:                                         BatchJobDefinition;
    rds_cluster_instance?:                                         RDSClusterInstance;
    synthetics_group_association?:                                 SyntheticsGroupAssociation;
    waf_rule?:                                                     Waf;
    appstream_image_builder?:                                      AppstreamImageBuilder;
    connect_contact_flow?:                                         ConnectContactFlowModuleClass;
    sagemaker_image_version?:                                      SagemakerImageVersion;
    launch_configuration?:                                         ResourceLaunchConfiguration;
    iam_server_certificate?:                                       ResourceIamServerCertificate;
    sagemaker_workforce?:                                          SagemakerWorkforce;
    swf_domain?:                                                   MemorydbACL;
    vpc_peering_connection?:                                       VpcPeeringConnectionAccepterClass;
    quicksight_theme?:                                             QuicksightTheme;
    vpc_ipam_scope?:                                               VpcIPAMScope;
    app_cookie_stickiness_policy?:                                 AppCookieStickinessPolicyClass;
    globalaccelerator_listener?:                                   GlobalacceleratorListener;
    iot_indexing_configuration?:                                   IotIndexingConfiguration;
    ec2_transit_gateway_vpc_attachment?:                           Ec2TransitGatewayVpcAttachment;
    ecr_repository?:                                               ResourceEcrRepository;
    servicecatalog_principal_portfolio_association?:               ServicecatalogPrincipalPortfolioAssociation;
    xray_sampling_rule?:                                           XraySamplingRule;
    default_network_acl?:                                          NetworkACL;
    gamelift_script?:                                              Gamelift;
    rds_cluster_activity_stream?:                                  RDSClusterActivityStream;
    datasync_location_s3?:                                         DatasyncLocationS3;
    ec2_transit_gateway?:                                          Ec2TransitGateway;
    lightsail_instance_public_ports?:                              LightsailInstancePublicPorts;
    efs_backup_policy?:                                            EFSBackupPolicy;
    globalaccelerator_custom_routing_accelerator?:                 ResourceGlobalacceleratorAccelerator;
    ssoadmin_instance_access_control_attributes?:                  SsoadminInstanceAccessControlAttributes;
    vpc_endpoint_service_allowed_principal?:                       VpcEndpointServiceAllowedPrincipal;
    db_cluster_snapshot?:                                          ClusterSnapshot;
    appstream_directory_config?:                                   AppstreamDirectoryConfig;
    config_conformance_pack?:                                      ConfigConformancePack;
    apigatewayv2_model?:                                           APIModel;
    lb_ssl_negotiation_policy?:                                    AppCookieStickinessPolicyClass;
    spot_datafeed_subscription?:                                   SpotDatafeedSubscription;
    opensearch_inbound_connection_accepter?:                       OpensearchInboundConnectionAccepter;
    cloudformation_stack?:                                         ResourceCloudformationStack;
    directory_service_conditional_forwarder?:                      DirectoryServiceConditionalForwarder;
    dlm_lifecycle_policy?:                                         DlmLifecyclePolicy;
    security_group_rule?:                                          SecurityGroupRule;
    acm_certificate_validation?:                                   ACMCertificateValidation;
    apigatewayv2_route_response?:                                  Apigatewayv2RouteResponse;
    iam_instance_profile?:                                         ResourceIamInstanceProfile;
    codecatalyst_source_repository?:                               Codecatalyst;
    glacier_vault?:                                                GlacierVault;
    securityhub_action_target?:                                    ChimesdkvoiceVoiceProfileDomainClass;
    backup_vault_notifications?:                                   BackupVaultNotifications;
    resourcegroups_group?:                                         ResourcegroupsGroup;
    datasync_location_nfs?:                                        DatasyncLocationNFS;
    location_map?:                                                 LocationMap;
    spot_instance_request?:                                        SpotInstanceRequest;
    route53_cidr_collection?:                                      OrganizationsOrganizationalUnitClass;
    servicecatalog_portfolio_share?:                               ServicecatalogPortfolioShare;
    dax_cluster?:                                                  DaxCluster;
    security_group?:                                               SecurityGroup;
    chimesdkvoice_global_settings?:                                ChimesdkvoiceGlobalSettings;
    elastic_beanstalk_application_version?:                        ElasticBeanstalkApplicationVersion;
    licensemanager_grant?:                                         LicensemanagerGrant;
    sagemaker_app?:                                                SagemakerApp;
    cognito_identity_pool_provider_principal_tag?:                 CognitoIdentityPoolProviderPrincipalTag;
    glue_workflow?:                                                Apigatewayv2VpcLink;
    cloudwatch_metric_alarm?:                                      CloudwatchMetricAlarm;
    guardduty_publishing_destination?:                             GuarddutyPublishingDestination;
    sagemaker_feature_group?:                                      SagemakerFeatureGroup;
    vpc_ipam?:                                                     VpcIPAM;
    wafregional_rule_group?:                                       Waf;
    lambda_function_event_invoke_config?:                          LambdaFunctionEventInvokeConfig;
    rolesanywhere_profile?:                                        RolesanywhereProfile;
    autoscaling_notification?:                                     AutoscalingNotification;
    devicefarm_upload?:                                            DevicefarmUpload;
    location_tracker?:                                             LocationTracker;
    transcribe_vocabulary?:                                        TranscribeVocabulary;
    verifiedaccess_instance?:                                      VerifiedaccessInstance;
    ec2_traffic_mirror_filter?:                                    ElasticacheSubnetGroup;
    dx_connection?:                                                ResourceDxConnection;
    dx_hosted_public_virtual_interface_accepter?:                  DxHostedPublicVirtualInterfaceAccepter;
    apprunner_observability_configuration?:                        ApprunnerObservabilityConfiguration;
    emr_managed_scaling_policy?:                                   EmrManagedScalingPolicy;
    network_interface_attachment?:                                 NetworkInterfaceAttachment;
    egress_only_internet_gateway?:                                 Ec2LocalGatewayRouteTableVpcAssociation;
    memorydb_parameter_group?:                                     ParameterGroup;
    networkmanager_link_association?:                              NetworkmanagerAssociation;
    glue_data_catalog_encryption_settings?:                        GlueDataCatalogEncryptionSettings;
    iot_authorizer?:                                               IotAuthorizer;
    applicationinsights_application?:                              ApplicationinsightsApplication;
    cloudwatch_event_target?:                                      CloudwatchEventTarget;
    ec2_transit_gateway_connect?:                                  ResourceEc2TransitGatewayConnect;
    secretsmanager_secret_rotation?:                               ResourceSecretsmanagerSecretRotation;
    launch_template?:                                              ResourceLaunchTemplate;
    networkmanager_connect_peer?:                                  KmsSecretClass;
    pipes_pipe?:                                                   PipesPipe;
    lambda_layer_version_permission?:                              LambdaLayerVersionPermission;
    amplify_backend_environment?:                                  AmplifyBackendEnvironment;
    ecs_account_setting_default?:                                  EcsAccountSettingDefault;
    globalaccelerator_custom_routing_endpoint_group?:              GlobalacceleratorCustomRoutingEndpointGroup;
    lakeformation_resource_lf_tags?:                               LakeformationResourceLFTags;
    backup_selection?:                                             ResourceBackupSelection;
    directory_service_shared_directory?:                           DirectoryServiceSharedDirectory;
    appconfig_extension_association?:                              AppconfigExtensionAssociation;
    config_organization_custom_rule?:                              ConfigOrganizationRule;
    ec2_transit_gateway_route_table_propagation?:                  Ec2TransitGatewayRouteTableAtion;
    vpc_endpoint_subnet_association?:                              VpcEndpointSubnetAssociation;
    vpn_connection_route?:                                         VPNConnectionRoute;
    route53_resolver_config?:                                      Route53ResolverConfig;
    timestreamwrite_database?:                                     TimestreamwriteDatabase;
    emrcontainers_virtual_cluster?:                                ResourceEmrcontainersVirtualCluster;
    imagebuilder_infrastructure_configuration?:                    ResourceImagebuilderInfrastructureConfiguration;
    opsworks_ganglia_layer?:                                       OpsworksLayer;
    dx_lag?:                                                       DxLag;
    s3_bucket_policy?:                                             S3BucketPolicy;
    schemas_registry_policy?:                                      SchemasRegistryPolicy;
    ses_domain_identity_verification?:                             SesDomainIdentityVerification;
    memorydb_acl?:                                                 MemorydbACL;
    vpn_gateway_attachment?:                                       VPNGatewayAttachment;
    codegurureviewer_repository_association?:                      CodegurureviewerRepositoryAssociation;
    inspector2_enabler?:                                           Inspector2Enabler;
    ssm_parameter?:                                                ResourceSsmParameter;
    iot_thing_principal_attachment?:                               IotThingPrincipalAttachment;
    route53_resolver_firewall_rule?:                               Route53ResolverFirewallRule;
    ses_template?:                                                 SesTemplate;
    cognito_user_pool_domain?:                                     CognitoUserPoolDomain;
    internet_gateway?:                                             Gateway;
    appsync_domain_name_api_association?:                          AppsyncDomainNameAPIAssociation;
    lb_target_group?:                                              LBTargetGroup;
    ec2_network_insights_path?:                                    ResourceEc2NetworkInsightsPath;
    fsx_ontap_file_system?:                                        FsxOntapFileSystem;
    qldb_stream?:                                                  QldbStream;
    s3control_bucket_lifecycle_configuration?:                     S3;
    sns_platform_application?:                                     SnsPlatformApplication;
    ssmincidents_replication_set?:                                 ResourceSsmincidentsReplicationSet;
    s3_bucket_cors_configuration?:                                 S3Bucket;
    s3control_storage_lens_configuration?:                         S3ControlStorageLensConfiguration;
    appintegrations_event_integration?:                            AppintegrationsEventIntegration;
    route53_resolver_firewall_config?:                             Route53ResolverConfig;
    s3_bucket_versioning?:                                         S3Bucket;
    wafregional_xss_match_set?:                                    WafMatchSet;
    api_gateway_deployment?:                                       APIGatewayDeployment;
    db_snapshot?:                                                  ResourceDBSnapshot;
    iam_user_policy_attachment?:                                   KmsSecretClass;
    load_balancer_backend_server_policy?:                          LoadBalancerBackendServerPolicy;
    ssoadmin_permission_set?:                                      SsoadminPermissionSet;
    macie2_classification_job?:                                    Macie2ClassificationJob;
    xray_group?:                                                   XrayGroup;
    ses_identity_notification_topic?:                              SesIdentityNotificationTopic;
    fsx_windows_file_system?:                                      ResourceFsxWindowsFileSystem;
    keyspaces_table?:                                              KeyspacesTable;
    licensemanager_grant_accepter?:                                LicensemanagerGrant;
    cloudtrail?:                                                   Cloudtrail;
    route53domains_registered_domain?:                             Route53DomainsRegisteredDomain;
    securityhub_member?:                                           SecurityhubMember;
    ses_event_destination?:                                        SesEventDestination;
    appconfig_extension?:                                          AppconfigExtension;
    iam_service_specific_credential?:                              IamServiceSpecificCredential;
    cloud9_environment_membership?:                                Cloud9EnvironmentMembership;
    emr_instance_fleet?:                                           EmrInstanceFleet;
    chime_voice_connector_termination?:                            ChimeVoiceConnectorTermination;
    schemas_registry?:                                             ElasticacheSubnetGroup;
    glue_dev_endpoint?:                                            GlueDevEndpoint;
    lightsail_bucket?:                                             LightsailBucket;
    organizations_delegated_administrator?:                        OrganizationsDelegatedAdministrator;
    route53recoverycontrolconfig_cluster?:                         Route53RecoverycontrolconfigCluster;
    fsx_ontap_storage_virtual_machine?:                            ResourceFsxOntapStorageVirtualMachine;
    emr_instance_group?:                                           EmrInstanceGroup;
    lightsail_container_service_deployment_version?:               LightsailContainerServiceDeploymentVersion;
    acmpca_certificate_authority_certificate?:                     AcmpcaCertificateCertificate;
    ecs_task_set?:                                                 EcsTaskSet;
    datasync_task?:                                                DatasyncTask;
    devicefarm_network_profile?:                                   DevicefarmNetworkProfile;
    devicefarm_test_grid_project?:                                 DevicefarmTestGridProject;
    redshiftserverless_resource_policy?:                           ResourcePolicy;
    route53_resolver_firewall_rule_group?:                         Route53Resolver;
    service_discovery_service?:                                    ServiceDiscoveryService;
    vpc_ipam_pool_cidr_allocation?:                                VpcIPAMPoolCIDRAllocation;
    cognito_user_pool?:                                            CognitoUserPool;
    ec2_transit_gateway_multicast_domain_association?:             Ec2TransitGatewayMulticastDomainAssociation;
    s3_bucket_object?:                                             ResourceS3BucketObject;
    organizations_organizational_unit?:                            ElasticacheSubnetGroup;
    pinpoint_apns_channel?:                                        PinpointApnsChannel;
    servicecatalog_organizations_access?:                          ServicecatalogOrganizationsAccessClass;
    servicecatalog_provisioned_product?:                           ServicecatalogProvisionedProduct;
    wafregional_regex_match_set?:                                  WafMatchSet;
    cognito_risk_configuration?:                                   CognitoRiskConfiguration;
    lex_bot?:                                                      ResourceLexBot;
    quicksight_template?:                                          QuicksightTemplate;
    ivs_channel?:                                                  IvsChannel;
    lightsail_domain?:                                             LightsailDomain;
    dynamodb_tag?:                                                 Tag;
    ssm_maintenance_window?:                                       SsmMaintenanceWindow;
    api_gateway_authorizer?:                                       APIGatewayAuthorizer;
    transfer_ssh_key?:                                             TransferSSHKey;
    codedeploy_app?:                                               CodedeployApp;
    docdb_cluster_instance?:                                       ClusterInstance;
    neptune_global_cluster?:                                       NeptuneGlobalCluster;
    cloudformation_type?:                                          CloudformationType;
    kendra_index?:                                                 KendraIndex;
    s3outposts_endpoint?:                                          S3OutpostsEndpoint;
    networkmanager_transit_gateway_route_table_attachment?:        NetworkmanagerAttachment;
    wafregional_ipset?:                                            OrganizationsOrganizationalUnitClass;
    config_configuration_aggregator?:                              ConfigConfigurationAggregator;
    dx_bgp_peer?:                                                  DxBGPPeer;
    elastictranscoder_pipeline?:                                   ElastictranscoderPipeline;
    securityhub_organization_configuration?:                       SecurityhubOrganizationConfiguration;
    chime_voice_connector_streaming?:                              ChimeVoiceConnectorStreaming;
    cloudfront_origin_access_control?:                             CloudfrontOriginAccessControl;
    efs_file_system_policy?:                                       EFSFileSystemPolicy;
    appconfig_deployment_strategy?:                                AppconfigDeploymentStrategy;
    appmesh_virtual_router?:                                       AppmeshVirtualRouter;
    dx_public_virtual_interface?:                                  DxVirtualInterface;
    cloudwatch_event_rule?:                                        CloudwatchEventRule;
    prometheus_rule_group_namespace?:                              PrometheusRuleGroupNamespace;
    apprunner_custom_domain_association?:                          ApprunnerCustomDomainAssociation;
    lambda_invocation?:                                            ResourceLambdaInvocation;
    networkmanager_link?:                                          NetworkmanagerLink;
    shield_protection?:                                            IvsRecordingConfiguration;
    securityhub_finding_aggregator?:                               KmsSecretClass;
    guardduty_organization_admin_account?:                         OrganizationAdminAccount;
    transfer_connector?:                                           TransferConnector;
    finspace_kx_user?:                                             FinspaceKxUser;
    waf_regex_match_set?:                                          WafMatchSet;
    api_gateway_stage?:                                            APIGatewayStage;
    elasticache_replication_group?:                                ResourceElasticacheReplicationGroup;
    securityhub_account?:                                          SecurityhubAccount;
    kinesis_video_stream?:                                         KinesisVideoStream;
    networkfirewall_firewall?:                                     ResourceNetworkfirewallFirewall;
    s3_bucket_intelligent_tiering_configuration?:                  S3BucketIntelligentTieringConfiguration;
    vpn_gateway_route_propagation?:                                VPNGatewayRoutePropagation;
    api_gateway_rest_api_policy?:                                  APIGatewayRESTAPIPolicy;
    appintegrations_data_integration?:                             AppintegrationsDataIntegration;
    apprunner_auto_scaling_configuration_version?:                 ApprunnerAutoScalingConfigurationVersion;
    guardduty_organization_configuration?:                         GuarddutyOrganizationConfiguration;
    quicksight_template_alias?:                                    QuicksightTemplateAlias;
    ram_resource_share?:                                           ResourceRAMResourceShare;
    sqs_queue_policy?:                                             SqsQueuePolicy;
    lightsail_lb_certificate_attachment?:                          LightsailLBCertificateAttachment;
    neptune_event_subscription?:                                   DBEventSubscriptionClass;
    quicksight_account_subscription?:                              QuicksightAccountSubscription;
    cognito_user_pool_client?:                                     CognitoUserPoolClient;
    ecrpublic_repository?:                                         EcrpublicRepository;
    vpc_ipam_resource_discovery?:                                  VpcIPAMResourceDiscovery;
    ec2_local_gateway_route_table_vpc_association?:                Ec2LocalGatewayRouteTableVpcAssociation;
    macie2_member?:                                                Macie2Member;
    elasticache_global_replication_group?:                         ElasticacheGlobalReplicationGroup;
    location_geofence_collection?:                                 LocationGeofenceCollection;
    memorydb_subnet_group?:                                        MemorydbSubnetGroupClass;
    cloudfront_key_group?:                                         CloudfrontKeyGroup;
    cognito_user_group?:                                           CognitoUserGroup;
    ssm_document?:                                                 ResourceSsmDocument;
    vpc_peering_connection_accepter?:                              VpcPeeringConnectionAccepterClass;
    location_tracker_association?:                                 LocationTrackerAssociation;
    s3_bucket_inventory?:                                          S3BucketInventory;
    dx_transit_virtual_interface?:                                 DxVirtualInterface;
    wafregional_sql_injection_match_set?:                          WafMatchSet;
    s3_bucket_accelerate_configuration?:                           S3Bucket;
    connect_bot_association?:                                      ResourceConnectBotAssociation;
    lambda_permission?:                                            LambdaPermission;
    redshift_snapshot_schedule?:                                   RedshiftSnapshotSchedule;
    secretsmanager_secret_policy?:                                 SecretsmanagerSecretPolicy;
    default_route_table?:                                          DefaultRouteTable;
    ecs_tag?:                                                      Tag;
    s3_access_point?:                                              S3AccessPoint;
    wafv2_web_acl_association?:                                    Wafv2WebACLAssociation;
    memorydb_user?:                                                ResourceMemorydbUser;
    s3_bucket_ownership_controls?:                                 S3BucketOwnershipControls;
    signer_signing_profile?:                                       SignerSigningProfile;
    detective_graph?:                                              DetectiveGraph;
    ec2_carrier_gateway?:                                          Gateway;
    elasticsearch_domain_saml_options?:                            SearchDomainSamlOptions;
    inspector2_organization_configuration?:                        Inspector2OrganizationConfiguration;
    lb?:                                                           LB;
    schemas_schema?:                                               SchemasSchema;
    batch_compute_environment?:                                    ResourceBatchComputeEnvironment;
    docdb_cluster_parameter_group?:                                ParameterGroup;
    ecs_service?:                                                  ResourceEcsService;
    vpclattice_service_network?:                                   ElasticacheSubnetGroup;
    elb_attachment?:                                               ElbAttachment;
    networkmanager_core_network_policy_attachment?:                NetworkmanagerCoreNetworkPolicyAttachment;
    s3control_multi_region_access_point?:                          ResourceS3ControlMultiRegionAccessPoint;
    transfer_profile?:                                             TransferProfile;
    internet_gateway_attachment?:                                  InternetGatewayAttachment;
    vpclattice_service_network_service_association?:               VpclatticeServiceNetworkAssociation;
    vpc_ipv4_cidr_block_association?:                              VpcIpv4CIDRBlockAssociation;
    lightsail_bucket_resource_access?:                             LightsailBucketResourceAccess;
    api_gateway_base_path_mapping?:                                APIGatewayBasePathMapping;
    api_gateway_usage_plan_key?:                                   APIGatewayUsagePlanKey;
    apprunner_vpc_connector?:                                      ApprunnerVpcConnector;
    globalaccelerator_custom_routing_listener?:                    GlobalacceleratorCustomRoutingListener;
    redshift_endpoint_access?:                                     RedshiftEndpointAccess;
    sfn_alias?:                                                    ResourceSfnAlias;
    default_security_group?:                                       DefaultSecurityGroup;
    signer_signing_profile_permission?:                            SignerSigningProfilePermission;
    apigatewayv2_integration_response?:                            Apigatewayv2IntegrationResponse;
    appautoscaling_policy?:                                        AppautoscalingPolicy;
    cloudwatch_event_archive?:                                     CloudwatchEventArchive;
    autoscaling_attachment?:                                       AutoscalingAttachment;
    ebs_encryption_by_default?:                                    SoftwareTokenMfaConfigurationClass;
    msk_vpc_connection?:                                           MskVpcConnection;
    redshiftserverless_workgroup?:                                 ResourceRedshiftserverlessWorkgroup;
    db_proxy_default_target_group?:                                DBProxyDefaultTargetGroup;
    transcribe_vocabulary_filter?:                                 TranscribeVocabularyFilter;
    eks_addon?:                                                    ResourceEksAddon;
    kendra_experience?:                                            ResourceKendraExperience;
    neptune_parameter_group?:                                      ParameterGroup;
    s3control_multi_region_access_point_policy?:                   S3ControlMultiRegionAccessPointPolicy;
    apprunner_vpc_ingress_connection?:                             ApprunnerVpcIngressConnection;
    iam_group_policy?:                                             IamPolicy;
    storagegateway_cache?:                                         StoragegatewayCacheClass;
    emr_studio?:                                                   EmrStudio;
    sesv2_dedicated_ip_pool?:                                      Sesv2DedicatedIPPool;
    codecatalyst_project?:                                         Codecatalyst;
    grafana_license_association?:                                  GrafanaLicenseAssociation;
    lambda_provisioned_concurrency_config?:                        LambdaProvisionedConcurrencyConfig;
    vpc_security_group_ingress_rule?:                              VpcSecurityGroupRule;
    lambda_layer_version?:                                         LambdaLayerVersion;
    redshift_partner?:                                             RedshiftPartner;
    s3_bucket_logging?:                                            S3BucketLogging;
    neptune_cluster_parameter_group?:                              ParameterGroup;
    rds_cluster_role_association?:                                 RoleAssociation;
    sagemaker_studio_lifecycle_config?:                            SagemakerStudioLifecycleConfig;
    apprunner_service?:                                            ApprunnerService;
    devicefarm_project?:                                           CloudwatchEventBusClass;
    fms_policy?:                                                   FmsPolicy;
    vpclattice_access_log_subscription?:                           VpclatticeAccessLogSubscription;
    cognito_identity_pool_roles_attachment?:                       CognitoIdentityPoolRolesAttachment;
    cognito_identity_provider?:                                    CognitoIdentityProvider;
    datapipeline_pipeline?:                                        DatapipelinePipelineClass;
    kinesisanalyticsv2_application_snapshot?:                      Kinesisanalyticsv2ApplicationSnapshot;
    acmpca_policy?:                                                VpclatticeResourcePolicyClass;
    ce_anomaly_subscription?:                                      CeAnomalySubscription;
    connect_quick_connect?:                                        ConnectQuickConnect;
    quicksight_analysis?:                                          QuicksightAnalysis;
    codepipeline_webhook?:                                         CodepipelineWebhook;
    ec2_transit_gateway_route_table?:                              ResourceEc2TransitGatewayRouteTable;
    storagegateway_upload_buffer?:                                 StoragegatewayLocalDiskClass;
    ebs_volume?:                                                   ResourceEbsVolume;
    pinpoint_event_stream?:                                        PinpointEventStream;
    storagegateway_file_system_association?:                       StoragegatewayFileSystemAssociation;
    cloudfront_origin_access_identity?:                            CloudfrontOriginAccessIdentity;
    inspector2_delegated_admin_account?:                           Inspector2DelegatedAdminAccount;
    service_discovery_private_dns_namespace?:                      ServiceDiscoveryDNSNamespace;
    glue_partition_index?:                                         GluePartitionIndex;
    kms_external_key?:                                             KmsExternalKey;
    route53_resolver_rule?:                                        Route53ResolverRule;
    lb_target_group_attachment?:                                   LBTargetGroupAttachment;
    evidently_launch?:                                             EvidentlyLaunch;
    efs_replication_configuration?:                                EFSReplicationConfiguration;
    opsworks_permission?:                                          OpsworksPermission;
    sagemaker_notebook_instance_lifecycle_configuration?:          SagemakerNotebookInstanceLifecycleConfiguration;
    kendra_data_source?:                                           KendraDataSource;
    neptune_cluster_snapshot?:                                     ClusterSnapshot;
    sns_topic?:                                                    SnsTopic;
    networkfirewall_logging_configuration?:                        NetworkfirewallLoggingConfiguration;
    cloudfront_field_level_encryption_config?:                     CloudfrontFieldLevelEncryptionConfig;
    s3_account_public_access_block?:                               FmsAdminAccount;
    ssm_association?:                                              SsmAssociation;
    storagegateway_stored_iscsi_volume?:                           StoragegatewayEdIscsiVolume;
    ecr_repository_policy?:                                        EcrPolicy;
    ses_domain_mail_from?:                                         SesDomainMailFrom;
    apigatewayv2_route?:                                           Apigatewayv2Route;
    storagegateway_gateway?:                                       StoragegatewayGateway;
    storagegateway_tape_pool?:                                     StoragegatewayTapePool;
    sesv2_configuration_set?:                                      ResourceSesv2ConfigurationSet;
    ssmincidents_response_plan?:                                   SsmincidentsResponsePlan;
    autoscalingplans_scaling_plan?:                                AutoscalingplansScalingPlan;
    efs_file_system?:                                              ResourceEFSFileSystem;
    licensemanager_license_configuration?:                         LicensemanagerLicenseConfiguration;
    sagemaker_flow_definition?:                                    SagemakerFlowDefinition;
    codecommit_trigger?:                                           CodecommitTrigger;
    iam_role_policy_attachment?:                                   IamRolePolicyAttachment;
    kinesis_stream_consumer?:                                      KinesisStreamConsumer;
    waf_xss_match_set?:                                            ChimesdkvoiceVoiceProfileDomainClass;
    ebs_snapshot?:                                                 EbsSnapshotCopyClass;
    redshiftserverless_snapshot?:                                  RedshiftserverlessSnapshot;
    iam_user_ssh_key?:                                             IamUserSSHKey;
    iot_role_alias?:                                               IotRoleAlias;
    route53_traffic_policy?:                                       Route53TrafficPolicy;
    dms_s3_endpoint?:                                              DmsS3Endpoint;
    eip_association?:                                              EipAssociation;
    s3_bucket_server_side_encryption_configuration?:               S3BucketServerSideEncryptionConfiguration;
    s3_object?:                                                    ResourceS3BucketObject;
    signer_signing_job?:                                           ResourceSignerSigningJob;
    waf_web_acl?:                                                  WafWebACL;
    resourceexplorer2_view?:                                       Resourceexplorer2View;
    servicecatalog_product_portfolio_association?:                 ServicecatalogProductPortfolioAssociation;
    ec2_client_vpn_authorization_rule?:                            Ec2ClientVPNAuthorizationRule;
    servicecatalog_tag_option_resource_association?:               ServicecatalogTagOptionResourceAssociation;
    glue_resource_policy?:                                         GlueResourcePolicy;
    sagemaker_pipeline?:                                           SagemakerPipeline;
    iam_signing_certificate?:                                      IamSigningCertificate;
    servicecatalog_product?:                                       ServicecatalogProduct;
    cleanrooms_configured_table?:                                  CleanroomsConfiguredTable;
    opensearch_domain_policy?:                                     SearchDomainPolicy;
    amplify_webhook?:                                              AmplifyWebhook;
    grafana_workspace?:                                            ResourceGrafanaWorkspace;
    medialive_multiplex?:                                          MedialiveMultiplex;
    ses_email_identity?:                                           SesEmailIdentity;
    ec2_client_vpn_route?:                                         Ec2ClientVPNRoute;
    guardduty_member?:                                             GuarddutyMember;
    redshift_snapshot_schedule_association?:                       RedshiftSnapshotScheduleAssociation;
    backup_report_plan?:                                           BackupReportPlan;
    dms_replication_subnet_group?:                                 ResourceDmsReplicationSubnetGroup;
    datasync_agent?:                                               DatasyncAgent;
    elastic_beanstalk_configuration_template?:                     ElasticBeanstalkConfigurationTemplate;
    inspector2_member_association?:                                Inspector2MemberAssociation;
    main_route_table_association?:                                 MainRouteTableAssociation;
    quicksight_group_membership?:                                  QuicksightGroupMembership;
    quicksight_user?:                                              ResourceQuicksightUser;
    db_subnet_group?:                                              MemorydbSubnetGroupClass;
    fms_admin_account?:                                            FmsAdminAccount;
    lightsail_disk?:                                               LightsailDisk;
    wafv2_web_acl_logging_configuration?:                          Wafv2WebACLLoggingConfiguration;
    appstream_user_stack_association?:                             AppstreamUserStackAssociation;
    emr_block_public_access_configuration?:                        EmrBlockPublicAccessConfiguration;
    kinesisanalyticsv2_application?:                               Kinesisanalyticsv2Application;
    cognito_identity_pool?:                                        ResourceCognitoIdentityPool;
    wafregional_rule?:                                             Waf;
    api_gateway_usage_plan?:                                       APIGatewayUsagePlan;
    codebuild_source_credential?:                                  CodebuildSourceCredential;
    waf_rule_group?:                                               Waf;
    codedeploy_deployment_group?:                                  CodedeployDeploymentGroup;
    comprehend_document_classifier?:                               Comprehend;
    glue_security_configuration?:                                  GlueSecurityConfiguration;
    appsync_type?:                                                 AppsyncType;
    medialive_multiplex_program?:                                  MedialiveMultiplexProgram;
    redshift_snapshot_copy_grant?:                                 RedshiftSnapshotCopyGrant;
    codepipeline_custom_action_type?:                              CodepipelineCustomActionType;
    efs_access_point?:                                             ResourceEFSAccessPoint;
    servicecatalog_service_action?:                                ServicecatalogServiceAction;
    sesv2_dedicated_ip_assignment?:                                Sesv2DedicatedIPAssignment;
    appconfig_deployment?:                                         AppconfigDeployment;
    batch_job_queue?:                                              BatchJobQueue;
    cloudfront_monitoring_subscription?:                           CloudfrontMonitoringSubscription;
    elasticache_user_group_association?:                           ElasticacheUserGroupAssociation;
    opsworks_instance?:                                            OpsworksInstance;
    accessanalyzer_archive_rule?:                                  AccessanalyzerArchiveRule;
    imagebuilder_distribution_configuration?:                      ResourceImagebuilderDistributionConfiguration;
    iot_topic_rule_destination?:                                   IotTopicRuleDestination;
    mskconnect_custom_plugin?:                                     MskconnectCustomPlugin;
    opensearchserverless_collection?:                              OpensearchserverlessCollection;
    dynamodb_table_item?:                                          ResourceDynamodbTableItem;
    backup_vault_policy?:                                          BackupVaultPolicy;
    lb_listener_certificate?:                                      LBListenerCertificate;
    networkfirewall_rule_group?:                                   NetworkfirewallRuleGroup;
    vpclattice_resource_policy?:                                   VpclatticeResourcePolicyClass;
    cloudwatch_query_definition?:                                  CloudwatchQueryDefinition;
    config_delivery_channel?:                                      ConfigDeliveryChannel;
    route53recoveryreadiness_readiness_check?:                     Route53RecoveryreadinessReadinessCheck;
    wafv2_ip_set?:                                                 Wafv2Set;
    ses_domain_dkim?:                                              SesDomainDKIM;
    kms_key?:                                                      ResourceKmsKey;
    opensearch_vpc_endpoint?:                                      OpensearchVpcEndpoint;
    opsworks_java_app_layer?:                                      OpsworksLayer;
    amplify_domain_association?:                                   AmplifyDomainAssociation;
    glue_user_defined_function?:                                   GlueUserDefinedFunction;
    dx_gateway_association_proposal?:                              DxGatewayAssociation;
    grafana_role_association?:                                     GrafanaRoleAssociation;
    iam_policy?:                                                   ResourceIamPolicy;
    ssm_patch_baseline?:                                           ResourceSsmPatchBaseline;
    chimesdkvoice_sip_media_application?:                          ChimesdkvoiceSIPMediaApplication;
    cloudsearch_domain?:                                           CloudsearchDomain;
    appmesh_virtual_node?:                                         AppmeshVirtualNode;
    codecommit_repository?:                                        ResourceCodecommitRepository;
    xray_encryption_config?:                                       XrayEncryptionConfig;
    connect_routing_profile?:                                      ConnectRoutingProfile;
    kendra_faq?:                                                   KendraFAQClass;
    s3_bucket_lifecycle_configuration?:                            S3BucketLifecycleConfiguration;
    fsx_openzfs_snapshot?:                                         ElasticacheSubnetGroup;
    sagemaker_user_profile?:                                       SagemakerUserProfile;
    shield_protection_group?:                                      ShieldProtectionGroup;
    apigatewayv2_vpc_link?:                                        Apigatewayv2VpcLink;
    backup_framework?:                                             BackupFramework;
    batch_scheduling_policy?:                                      BatchSchedulingPolicy;
    codeartifact_repository?:                                      CodeartifactRepository;
    redshiftdata_statement?:                                       RedshiftdataStatement;
    s3_bucket_notification?:                                       S3BucketNotification;
    ec2_transit_gateway_multicast_group_member?:                   Ec2TransitGatewayMulticastGroup;
    opsworks_nodejs_app_layer?:                                    OpsworksLayer;
    ce_cost_allocation_tag?:                                       CeCostAllocationTag;
    transfer_tag?:                                                 Tag;
    redshift_hsm_client_certificate?:                              RedshiftHSMClientCertificate;
    datasync_location_smb?:                                        DatasyncLocationSMB;
    directory_service_log_subscription?:                           DirectoryServiceLogSubscription;
    ram_principal_association?:                                    RAMPrincipalAssociation;
    sagemaker_domain?:                                             SagemakerDomain;
    organizations_policy_attachment?:                              OrganizationsPolicyAttachment;
    networkmanager_vpc_attachment?:                                NetworkmanagerAttachment;
    accessanalyzer_analyzer?:                                      AccessanalyzerAnalyzer;
    elastic_beanstalk_environment?:                                ElasticBeanstalkEnvironment;
    rds_export_task?:                                              RDSExportTask;
    s3_bucket_acl?:                                                S3BucketACL;
    vpclattice_target_group?:                                      VpclatticeTargetGroup;
    prometheus_alert_manager_definition?:                          PrometheusAlertManagerDefinition;
    redshift_authentication_profile?:                              RedshiftAuthenticationProfile;
    sesv2_email_identity_mail_from_attributes?:                    Sesv2EmailIdentityMailFromAttributes;
    chimesdkvoice_sip_rule?:                                       ChimesdkvoiceSIPRule;
    lambda_function?:                                              ResourceLambdaFunction;
    customer_gateway?:                                             CustomerGateway;
    ec2_capacity_reservation?:                                     Ec2CapacityReservation;
    lex_intent?:                                                   LexIntent;
    route53_hosted_zone_dnssec?:                                   Route53HostedZoneDnssec;
    workspaces_directory?:                                         WorkspacesDirectory;
    chimesdkvoice_voice_profile_domain?:                           ChimesdkvoiceVoiceProfileDomainClass;
    fsx_file_cache?:                                               FsxFileCache;
    auditmanager_assessment?:                                      AuditmanagerAssessment;
    cloudwatch_log_subscription_filter?:                           CloudwatchLogSubscriptionFilter;
    db_instance_role_association?:                                 RoleAssociation;
    dx_macsec_key_association?:                                    DxMacsecKeyAssociation;
    emr_security_configuration?:                                   EmrSecurityConfiguration;
    dx_hosted_public_virtual_interface?:                           DxVirtualInterface;
    elasticache_parameter_group?:                                  ParameterGroup;
    opsworks_user_profile?:                                        OpsworksUserProfile;
    ec2_client_vpn_endpoint?:                                      ResourceEc2ClientVPNEndpoint;
    oam_link?:                                                     OamLink;
    sagemaker_endpoint?:                                           SagemakerEndpoint;
    oam_sink?:                                                     OamSink;
    pinpoint_adm_channel?:                                         PinpointAdmChannel;
    vpc_endpoint_connection_notification?:                         VpcEndpointConnectionNotification;
    dx_private_virtual_interface?:                                 DxPrivateVirtualInterface;
    key_pair?:                                                     ResourceKeyPair;
    cloudwatch_event_endpoint?:                                    CloudwatchEventEndpoint;
    connect_hours_of_operation?:                                   ConnectHoursOfOperation;
    synthetics_group?:                                             CloudwatchEventBusClass;
    autoscaling_schedule?:                                         AutoscalingSchedule;
    memorydb_cluster?:                                             MemorydbCluster;
    config_config_rule?:                                           ConfigConfigRule;
    ecr_pull_through_cache_rule?:                                  PurpleEcrPullThroughCacheRule;
    rolesanywhere_trust_anchor?:                                   RolesanywhereTrustAnchor;
    cognito_user?:                                                 CognitoUser;
    wafregional_byte_match_set?:                                   WafregionalByteMatchSet;
    secretsmanager_secret?:                                        ResourceSecretsmanagerSecret;
    subnet?:                                                       Subnet;
    codecatalyst_dev_environment?:                                 ResourceCodecatalystDevEnvironment;
    ecs_cluster?:                                                  ResourceEcsCluster;
    api_gateway_request_validator?:                                APIGatewayRequestValidator;
    s3control_bucket_policy?:                                      S3ControlBucketPolicy;
    sqs_queue_redrive_policy?:                                     SqsQueueRedrivePolicy;
    cloudfront_public_key?:                                        CloudfrontPublicKey;
    ebs_snapshot_import?:                                          EbsSnapshotImport;
    backup_global_settings?:                                       BackupGlobalSettings;
    ecr_registry_scanning_configuration?:                          EcrRegistryScanningConfiguration;
    s3_bucket_public_access_block?:                                S3;
    ssm_service_setting?:                                          SsmServiceSetting;
    lightsail_lb_certificate?:                                     LightsailCertificate;
    serverlessapplicationrepository_cloudformation_stack?:         ServerlessapplicationrepositoryCloudformationStack;
    redshiftserverless_namespace?:                                 ResourceRedshiftserverlessNamespace;
    vpc_ipam_resource_discovery_association?:                      VpcIPAMResourceDiscoveryAssociation;
    vpclattice_service_network_vpc_association?:                   VpclatticeServiceNetworkAssociation;
    datasync_location_hdfs?:                                       DatasyncLocationHdfs;
    elasticsearch_domain?:                                         ElasticsearchDomain;
    route53_key_signing_key?:                                      Route53KeySigningKey;
    ssoadmin_account_assignment?:                                  SsoadminAccountAssignment;
    config_organization_custom_policy_rule?:                       ConfigOrganizationRule;
    datasync_location_efs?:                                        DatasyncLocationEFS;
    codecommit_approval_rule_template_association?:                CodecommitApprovalRuleTemplateAssociation;
    datasync_location_fsx_windows_file_system?:                    DatasyncLocationFsxFileSystem;
    s3control_bucket?:                                             S3ControlBucket;
    db_snapshot_copy?:                                             DBSnapshotCopy;
    dax_subnet_group?:                                             DaxSubnetGroup;
    sqs_queue?:                                                    PurpleSqsQueue;
    backup_plan?:                                                  ResourceBackupPlan;
    account_alternate_contact?:                                    AccountAlternateContact;
    securityhub_insight?:                                          SecurityhubInsight;
    route53_zone?:                                                 ResourceRoute53Zone;
    waf_ipset?:                                                    OrganizationsOrganizationalUnitClass;
    guardduty_filter?:                                             GuarddutyFilter;
    wafv2_regex_pattern_set?:                                      Wafv2Set;
    dataexchange_data_set?:                                        ElasticacheSubnetGroup;
    sesv2_email_identity?:                                         ResourceSesv2EmailIdentity;
    storagegateway_nfs_file_share?:                                StoragegatewayNFSFileShare;
    msk_configuration?:                                            MskConfiguration;
    location_place_index?:                                         ResourceLocationPlaceIndex;
    vpc_ipam_pool_cidr?:                                           VpcIPAMPoolCIDR;
    iot_certificate?:                                              IotCertificate;
    lightsail_disk_attachment?:                                    LightsailDiskAttachment;
    sagemaker_project?:                                            SagemakerProject;
    cognito_managed_user_pool_client?:                             CognitoManagedUserPoolClient;
    appsync_domain_name?:                                          AppsyncDomainName;
    cloudwatch_event_bus?:                                         CloudwatchEventBusClass;
    datasync_location_fsx_lustre_file_system?:                     DatasyncLocationFsxFileSystem;
    lakeformation_permissions?:                                    ResourceLakeformationPermissions;
    glacier_vault_lock?:                                           GlacierVaultLock;
    iam_access_key?:                                               IamAccessKey;
    acmpca_certificate_authority?:                                 ResourceAcmpcaCertificateAuthority;
    codebuild_webhook?:                                            CodebuildWebhook;
    dx_hosted_private_virtual_interface_accepter?:                 DxHostedVirtualInterfaceAccepter;
    waf_rate_based_rule?:                                          Waf;
    qldb_ledger?:                                                  QldbLedger;
    wafregional_regex_pattern_set?:                                ChimesdkvoiceVoiceProfileDomainClass;
    codebuild_report_group?:                                       CodebuildReportGroup;
    iam_user_group_membership?:                                    IamUserGroupMembership;
    opensearch_outbound_connection?:                               OpensearchOutboundConnection;
    iot_thing?:                                                    IotThing;
    lightsail_static_ip?:                                          LightsailStaticIP;
    athena_named_query?:                                           AthenaNamedQuery;
    ec2_host?:                                                     ResourceEc2Host;
    guardduty_invite_accepter?:                                    GuarddutyInviteAccepter;
    route53_record?:                                               Route53Record;
    vpclattice_service?:                                           VpclatticeService;
    opensearchserverless_access_policy?:                           OpensearchserverlessPolicy;
    route53_resolver_dnssec_config?:                               Route53ResolverDnssecConfig;
    dms_endpoint?:                                                 ResourceDmsEndpoint;
    lightsail_database?:                                           LightsailDatabase;
    vpc_ipam_pool?:                                                VpcIPAMPool;
    ecs_capacity_provider?:                                        EcsCapacityProvider;
    glue_catalog_table?:                                           GlueCatalogTable;
    ivs_recording_configuration?:                                  IvsRecordingConfiguration;
    dx_connection_association?:                                    DxConnectionAssociation;
    servicecatalog_tag_option?:                                    ServicecatalogTagOption;
    transfer_certificate?:                                         TransferCertificate;
    s3_bucket_object_lock_configuration?:                          S3BucketObjectLockConfiguration;
    auditmanager_organization_admin_account_registration?:         AuditmanagerOrganizationAdminAccountRegistration;
    autoscaling_traffic_source_attachment?:                        KmsSecretClass;
    eks_node_group?:                                               ResourceEksNodeGroup;
    networkmanager_customer_gateway_association?:                  NetworkmanagerAssociation;
    codebuild_project?:                                            CodebuildProject;
    connect_user?:                                                 ConnectUser;
    elb?:                                                          Elb;
    ami?:                                                          ResourceAmi;
    ivschat_room?:                                                 IvschatRoom;
    kms_grant?:                                                    KmsGrant;
    api_gateway_account?:                                          APIGatewayAccount;
    cloudwatch_event_api_destination?:                             CloudwatchEventAPIDestination;
    dms_certificate?:                                              ResourceDmsCertificate;
    dynamodb_table?:                                               ResourceDynamodbTable;
    elastic_beanstalk_application?:                                ElasticBeanstalkApplication;
    inspector_assessment_target?:                                  CloudwatchEventBus;
    codeartifact_domain_permissions_policy?:                       CodeartifactPermissionsPolicy;
    ssmcontacts_contact?:                                          KmsSecretClass;
    auditmanager_assessment_delegation?:                           AuditmanagerAssessmentDelegation;
    s3control_access_point_policy?:                                S3ControlAccessPointPolicy;
    ssoadmin_permissions_boundary_attachment?:                     SsoadminYAttachment;
    vpc_endpoint_connection_accepter?:                             VpcEndpointConnectionAccepter;
    sagemaker_device_fleet?:                                       SagemakerDeviceFleet;
    timestreamwrite_table?:                                        TimestreamwriteTable;
    appflow_flow?:                                                 AppflowFlow;
    route53recoverycontrolconfig_safety_rule?:                     Route53RecoverycontrolconfigSafetyRule;
    transcribe_medical_vocabulary?:                                TranscribeVocabulary;
    rbin_rule?:                                                    RbinRule;
    lex_slot_type?:                                                LexSlotType;
    opensearch_package?:                                           OpensearchPackage;
    codestarnotifications_notification_rule?:                      CodestarnotificationsNotificationRule;
    vpclattice_listener_rule?:                                     VpclatticeListenerRule;
    ssm_maintenance_window_task?:                                  SsmMaintenanceWindowTask;
    waf_regex_pattern_set?:                                        ChimesdkvoiceVoiceProfileDomainClass;
    route53_resolver_firewall_domain_list?:                        IvsRecordingConfiguration;
    vpclattice_target_group_attachment?:                           KmsSecretClass;
    globalaccelerator_endpoint_group?:                             GlobalacceleratorEndpointGroup;
    lambda_function_url?:                                          ResourceLambdaFunctionURL;
    organizations_policy?:                                         ElasticacheSubnetGroup;
    pinpoint_sms_channel?:                                         PinpointSMSChannel;
    lightsail_distribution?:                                       LightsailDistribution;
    datasync_location_azure_blob?:                                 DatasyncLocationAzureBlob;
    redshiftserverless_endpoint_access?:                           RedshiftEndpointAccess;
    opensearch_package_association?:                               OpensearchPackageAssociation;
    rds_global_cluster?:                                           GlobalCluster;
    servicecatalog_budget_resource_association?:                   ServicecatalogBudgetResourceAssociation;
    dynamodb_global_table?:                                        DynamodbGlobalTable;
    ec2_serial_console_access?:                                    SoftwareTokenMfaConfigurationClass;
    ecrpublic_repository_policy?:                                  EcrpublicRepositoryPolicy;
    transfer_server?:                                              ResourceTransferServer;
    lb_listener_rule?:                                             LBListenerRule;
    transfer_access?:                                              Transfer;
    directory_service_directory?:                                  ResourceDirectoryServiceDirectory;
    medialive_channel?:                                            MedialiveChannel;
    shield_drt_access_role_arn_association?:                       ShieldDrtAccessRoleArnAssociation;
    ssoadmin_customer_managed_policy_attachment?:                  SsoadminYAttachment;
    cloudformation_stack_set_instance?:                            CloudformationStackSetInstance;
    dax_parameter_group?:                                          OutpostsSite;
    securityhub_organization_admin_account?:                       OrganizationAdminAccount;
    vpc_endpoint_route_table_association?:                         VpcEndpointRouteTableAssociation;
    cloudfront_cache_policy?:                                      CloudfrontCachePolicy;
    route53recoverycontrolconfig_routing_control?:                 Route53RecoverycontrolconfigRoutingControl;
    acmpca_permission?:                                            AcmpcaPermission;
    api_gateway_vpc_link?:                                         DatapipelinePipelineClass;
    securityhub_product_subscription?:                             SecurityhubProductSubscription;
    connect_user_hierarchy_structure?:                             ConnectUserHierarchyStructure;
    detective_invitation_accepter?:                                DetectiveInvitationAccepter;
    ec2_fleet?:                                                    Ec2Fleet;
    ec2_traffic_mirror_session?:                                   Ec2TrafficMirrorSession;
    ses_identity_policy?:                                          SesIdentityPolicy;
    ses_receipt_rule?:                                             SesReceiptRule;
    media_store_container?:                                        CloudwatchEventBusClass;
    quicksight_vpc_connection?:                                    QuicksightVpcConnection;
    sfn_state_machine?:                                            ResourceSfnStateMachine;
    vpc?:                                                          ResourceVpc;
    appmesh_virtual_service?:                                      AppmeshVirtualService;
    kinesis_stream?:                                               ResourceKinesisStream;
    transcribe_language_model?:                                    TranscribeLanguageModel;
    opsworks_application?:                                         OpsworksApplication;
    opsworks_mysql_layer?:                                         OpsworksLayer;
    cloudfront_distribution?:                                      ResourceCloudfrontDistribution;
    directory_service_radius_settings?:                            DirectoryServiceRadiusSettings;
    iot_topic_rule?:                                               IotTopicRule;
    quicksight_data_source?:                                       QuicksightDataSource;
    fis_experiment_template?:                                      FisExperimentTemplate;
    lightsail_lb_https_redirection_policy?:                        LightsailLBPolicy;
    guardduty_detector?:                                           ResourceGuarddutyDetector;
    docdb_subnet_group?:                                           Apigatewayv2VpcLink;
    ram_resource_share_accepter?:                                  RAMResourceShareAccepter;
    api_gateway_resource?:                                         APIGatewayResource;
    vpclattice_auth_policy?:                                       VpclatticeAuthPolicy;
    workspaces_ip_group?:                                          DatapipelinePipelineClass;
    network_interface?:                                            ResourceNetworkInterface;
    ram_resource_association?:                                     RAMResourceAssociation;
    sns_topic_subscription?:                                       SnsTopicSubscription;
    s3_bucket_website_configuration?:                              S3BucketWebsiteConfiguration;
    route53_resolver_endpoint?:                                    ResourceRoute53ResolverEndpoint;
    route53_resolver_query_log_config_association?:                Route53ResolverQueryLogConfigAssociation;
    auditmanager_account_registration?:                            AuditmanagerAccountRegistration;
    docdb_cluster_snapshot?:                                       ClusterSnapshot;
    sesv2_email_identity_feedback_attributes?:                     Sesv2EmailIdentityFeedbackAttributes;
    glue_registry?:                                                ElasticacheSubnetGroup;
    devicefarm_device_pool?:                                       DevicefarmDevicePool;
    config_configuration_recorder?:                                ConfigConfigurationRecorder;
    opsworks_memcached_layer?:                                     OpsworksLayer;
    rds_custom_db_engine_version?:                                 RDSCustomDBEngineVersion;
    ses_domain_identity?:                                          SesDomainIdentity;
    finspace_kx_database?:                                         FinspaceKxDatabase;
    lightsail_instance?:                                           LightsailInstance;
    medialive_input_security_group?:                               MedialiveInputSecurityGroup;
    network_interface_sg_attachment?:                              NetworkInterfaceSgAttachment;
    codeartifact_repository_permissions_policy?:                   CodeartifactPermissionsPolicy;
    servicecatalog_portfolio?:                                     DatapipelinePipelineClass;
    config_organization_conformance_pack?:                         ConfigConformancePack;
    waf_geo_match_set?:                                            OrganizationsOrganizationalUnitClass;
    kms_ciphertext?:                                               KmsCiphertext;
    s3control_object_lambda_access_point?:                         S3ControlObjectLambdaAccessPoint;
    waf_byte_match_set?:                                           WafByteMatchSet;
    autoscaling_policy?:                                           AutoscalingPolicy;
    dms_replication_config?:                                       DmsReplicationConfig;
    iam_saml_provider?:                                            IamSamlProvider;
    route53_health_check?:                                         Route53HealthCheck;
    neptune_subnet_group?:                                         Apigatewayv2VpcLink;
    sagemaker_monitoring_schedule?:                                CloudwatchEventBusClass;
    chime_voice_connector_logging?:                                ChimeVoiceConnectorLogging;
    connect_instance?:                                             ResourceConnectInstance;
    opsworks_haproxy_layer?:                                       OpsworksLayer;
    quicksight_dashboard?:                                         QuicksightDashboard;
    s3_bucket_replication_configuration?:                          S3BucketReplicationConfiguration;
    elasticache_cluster?:                                          ResourceElasticacheCluster;
    emr_studio_session_mapping?:                                   EmrStudioSessionMapping;
    networkfirewall_resource_policy?:                              NetworkfirewallResourcePolicy;
    organizations_account?:                                        OrganizationsAccount;
    ssm_activation?:                                               SsmActivation;
    ec2_transit_gateway_peering_attachment?:                       Ec2TransitGatewayPeeringAttachmentAccepterClass;
    glue_trigger?:                                                 GlueTrigger;
    neptune_cluster?:                                              NeptuneCluster;
    prometheus_workspace?:                                         ResourcePrometheusWorkspace;
    appstream_stack?:                                              AppstreamStack;
    chime_voice_connector_group?:                                  ChimeVoiceConnectorGroup;
    cloudwatch_composite_alarm?:                                   CloudwatchCompositeAlarm;
    grafana_workspace_api_key?:                                    GrafanaWorkspaceAPIKey;
    api_gateway_method?:                                           APIGatewayMethod;
    iot_thing_group?:                                              IotThingGroup;
    sagemaker_data_quality_job_definition?:                        SagemakerDataQualityJobDefinition;
    api_gateway_api_key?:                                          APIGatewayAPIKey;
    config_remediation_configuration?:                             ConfigRemediationConfiguration;
    sfn_activity?:                                                 DatapipelinePipelineClass;
    acmpca_certificate?:                                           AcmpcaCertificate;
    appconfig_hosted_configuration_version?:                       AppconfigHostedConfigurationVersion;
    connect_lambda_function_association?:                          ConnectLambdaFunctionAssociation;
    imagebuilder_container_recipe?:                                ResourceImagebuilderContainerRecipe;
    default_vpc?:                                                  DefaultVpc;
    opensearchserverless_vpc_endpoint?:                            DaxSubnetGroup;
    evidently_feature?:                                            EvidentlyFeature;
    macie2_account?:                                               Macie2Account;
    opsworks_php_app_layer?:                                       OpsworksLayer;
    s3_bucket_metric?:                                             S3BucketMetric;
    elasticache_user?:                                             ResourceElasticacheUser;
    sagemaker_model?:                                              SagemakerModel;
    load_balancer_listener_policy?:                                LoadBalancerListenerPolicy;
    directory_service_trust?:                                      DirectoryServiceTrust;
    fsx_data_repository_association?:                              FsxDataRepositoryAssociation;
    sqs_queue_redrive_allow_policy?:                               SqsQueueRedriveAllowPolicy;
    vpn_gateway?:                                                  ResourceVPNGateway;
    wafv2_web_acl?:                                                ResourceWafv2RuleGroup;
    servicequotas_service_quota?:                                  ServicequotasServiceQuota;
    simpledb_domain?:                                              WafIpset;
    ec2_instance_connect_endpoint?:                                Ec2InstanceConnectEndpoint;
    elasticache_subnet_group?:                                     DatapipelinePipelineClass;
    kendra_query_suggestions_block_list?:                          PurpleKendra;
    glue_classifier?:                                              GlueClassifier;
    opsworks_rds_db_instance?:                                     OpsworksRDSDBInstance;
    backup_vault_lock_configuration?:                              BackupVaultLockConfiguration;
    datasync_location_fsx_ontap_file_system?:                      DatasyncLocationFsxOntapFileSystem;
    default_vpc_dhcp_options?:                                     DefaultVpcDHCPOptions;
    sns_sms_preferences?:                                          SnsSMSPreferences;
    elasticsearch_domain_policy?:                                  SearchDomainPolicy;
}

export interface AccessanalyzerAnalyzer {
    analyzer_name: string;
    tags?:         string;
    type?:         string;
    arn?:          string;
    id?:           string;
    tags_all?:     string;
}

export interface AccessanalyzerArchiveRule {
    analyzer_name: string;
    filter:        string;
    rule_name:     string;
    criteria:      string;
    contains?:     string;
    eq?:           string;
    exists?:       string;
    neq?:          string;
    id?:           string;
}

export interface AccountAlternateContact {
    alternate_contact_type: string;
    email_address:          string;
    name:                   string;
    phone_number:           string;
    title:                  string;
    account_id?:            string;
}

export interface AccountPrimaryContact {
    address_line_1:      string;
    city:                string;
    country_code:        string;
    full_name:           string;
    phone_number:        string;
    postal_code:         string;
    account_id?:         string;
    address_line_2?:     string;
    address_line_3?:     string;
    company_name?:       string;
    district_or_county?: string;
    state_or_region?:    string;
    website_url?:        string;
}

export interface ResourceACMCertificate {
    subject_alternative_names?: string;
    tags?:                      string;
    id?:                        string;
    arn?:                       string;
    domain_name?:               string;
    domain_validation_options?: string;
    not_after?:                 string;
    not_before?:                string;
    pending_renewal?:           string;
    renewal_eligibility?:       string;
    renewal_summary?:           string;
    status?:                    string;
    type?:                      string;
    tags_all?:                  string;
    validation_emails?:         string;
    resource_record_name?:      string;
    resource_record_type?:      string;
    resource_record_value?:     string;
    renewal_status?:            string;
    renewal_status_reason?:     string;
}

export interface ACMCertificateValidation {
    certificate_arn:          string;
    validation_record_fqdns?: string;
    id?:                      string;
}

export interface AcmpcaCertificate {
    certificate_authority_arn:   string;
    certificate_signing_request: string;
    signing_algorithm:           string;
    validity:                    string;
    type:                        string;
    value:                       string;
    template_arn?:               string;
    api_passthrough?:            string;
    arn?:                        string;
    certificate?:                string;
    certificate_chain?:          string;
}

export interface ResourceAcmpcaCertificateAuthority {
    certificate_authority_configuration: CertificateAuthorityConfiguration;
    revocation_configuration?:           RevocationConfiguration;
    usage_mode?:                         string;
    tags?:                               string;
    type?:                               string;
    key_storage_security_standard?:      string;
    permanent_deletion_time_in_days?:    string;
    title?:                              string;
    id?:                                 string;
    arn?:                                string;
    certificate?:                        string;
    certificate_chain?:                  string;
    certificate_signing_request?:        string;
    not_after?:                          string;
    not_before?:                         string;
    serial?:                             string;
    tags_all?:                           string;
}

export interface CertificateAuthorityConfiguration {
    key_algorithm:                 string;
    signing_algorithm:             string;
    subject:                       string;
    common_name?:                  string;
    country?:                      string;
    distinguished_name_qualifier?: string;
    generation_qualifier?:         string;
    given_name?:                   string;
    initials?:                     string;
    locality?:                     string;
    organization?:                 string;
    organizational_unit?:          string;
    pseudonym?:                    string;
    state?:                        string;
    surname?:                      string;
    title?:                        string;
}

export interface RevocationConfiguration {
    crl_configuration:  string;
    ocsp_configuration: string;
    custom_cname:       string;
    enabled:            string;
    expiration_in_days: string;
    s3_bucket_name:     string;
    s3_object_acl:      string;
    ocsp_custom_cname:  string;
}

export interface AcmpcaPermission {
    certificate_authority_arn: string;
    actions:                   string;
    principal:                 string;
    source_account?:           string;
    policy?:                   string;
}

export interface ResourceAmi {
    name:                    string;
    image_location:          string;
    kernel_id:               string;
    device_name:             string;
    boot_mode?:              string;
    deprecation_time?:       string;
    description?:            string;
    ena_support?:            string;
    root_device_name?:       string;
    virtualization_type?:    string;
    architecture?:           string;
    ebs_block_device?:       string;
    ephemeral_block_device?: string;
    tags?:                   string;
    tpm_support?:            string;
    imds_support?:           string;
    ramdisk_id?:             string;
    sriov_net_support?:      string;
    delete_on_termination?:  string;
    encrypted?:              string;
    iops?:                   string;
    snapshot_id?:            string;
    throughput?:             string;
    volume_size?:            string;
    volume_type?:            string;
    arn?:                    string;
    id?:                     string;
    owner_id?:               string;
    root_snapshot_id?:       string;
    usage_operation?:        string;
    platform_details?:       string;
    image_owner_alias?:      string;
    image_type?:             string;
    hypervisor?:             string;
    platform?:               string;
    public?:                 string;
    tags_all?:               string;
}

export interface AmiCopy {
    name:                     string;
    source_ami_id:            string;
    source_ami_region:        string;
    destination_outpost_arn?: string;
    encrypted?:               string;
    kms_key_id?:              string;
    tags?:                    string;
    arn?:                     string;
    id?:                      string;
}

export interface AmiFromInstance {
    name:                     string;
    source_instance_id:       string;
    snapshot_without_reboot?: string;
    tags?:                    string;
    arn?:                     string;
    id?:                      string;
}

export interface AmiLaunchPermission {
    image_id:                 string;
    account_id?:              string;
    group?:                   string;
    organization_arn?:        string;
    organizational_unit_arn?: string;
    id?:                      string;
}

export interface AmplifyApp {
    name:                           string;
    source:                         string;
    target:                         string;
    access_token?:                  string;
    auto_branch_creation_config?:   string;
    auto_branch_creation_patterns?: string;
    basic_auth_credentials?:        string;
    build_spec?:                    string;
    custom_rule?:                   string;
    description?:                   string;
    enable_auto_branch_creation?:   string;
    enable_basic_auth?:             string;
    enable_branch_auto_build?:      string;
    enable_branch_auto_deletion?:   string;
    environment_variables?:         string;
    iam_service_role_arn?:          string;
    oauth_token?:                   string;
    platform?:                      string;
    repository?:                    string;
    tags?:                          string;
    enable_auto_build?:             string;
    enable_performance_mode?:       string;
    enable_pull_request_preview?:   string;
    framework?:                     string;
    pull_request_environment_name?: string;
    stage?:                         string;
    condition?:                     string;
    status?:                        string;
    arn?:                           string;
    default_domain?:                string;
    id?:                            string;
    production_branch?:             string;
    tags_all?:                      string;
    branch_name?:                   string;
    last_deploy_time?:              string;
    thumbnail_url?:                 string;
}

export interface AmplifyBackendEnvironment {
    app_id:                string;
    environment_name:      string;
    deployment_artifacts?: string;
    stack_name?:           string;
    arn?:                  string;
    id?:                   string;
}

export interface AmplifyBranch {
    app_id:                         string;
    branch_name:                    string;
    backend_environment_arn?:       string;
    basic_auth_credentials?:        string;
    description?:                   string;
    display_name?:                  string;
    enable_auto_build?:             string;
    enable_basic_auth?:             string;
    enable_notification?:           string;
    enable_performance_mode?:       string;
    enable_pull_request_preview?:   string;
    environment_variables?:         string;
    framework?:                     string;
    pull_request_environment_name?: string;
    stage?:                         string;
    tags?:                          string;
    ttl?:                           string;
    arn?:                           string;
    associated_resources?:          string;
    custom_domains?:                string;
    destination_branch?:            string;
    source_branch?:                 string;
    tags_all?:                      string;
}

export interface AmplifyDomainAssociation {
    app_id:                               string;
    domain_name:                          string;
    sub_domain:                           string;
    branch_name:                          string;
    prefix:                               string;
    enable_auto_sub_domain?:              string;
    wait_for_verification?:               string;
    arn?:                                 string;
    certificate_verification_dns_record?: string;
    dns_record?:                          string;
    verified?:                            string;
}

export interface AmplifyWebhook {
    app_id:       string;
    branch_name:  string;
    description?: string;
    arn?:         string;
    url?:         string;
}

export interface APIGatewayAccount {
    cloudwatch_role_arn?: string;
    api_key_version?:     string;
    throttle_settings?:   string;
    features?:            string;
    burst_limit?:         string;
    rate_limit?:          string;
}

export interface APIGatewayBasePathMapping {
    domain_name: string;
    api_id:      string;
    stage_name?: string;
    base_path?:  string;
}

export interface APIGatewayClientCertificate {
    description?:             string;
    tags?:                    string;
    id?:                      string;
    created_date?:            string;
    expiration_date?:         string;
    pem_encoded_certificate?: string;
    arn?:                     string;
    tags_all?:                string;
}

export interface APIGatewayDeployment {
    rest_api_id:        string;
    description?:       string;
    stage_name?:        string;
    stage_description?: string;
    triggers?:          string;
    variables?:         string;
    id?:                string;
    invoke_url?:        string;
    execution_arn?:     string;
    created_date?:      string;
}

export interface APIGatewayDocumentationPart {
    location:    string;
    properties:  string;
    rest_api_id: string;
    type:        string;
    name?:       string;
    path?:       string;
    id?:         string;
}

export interface APIGatewayDocumentationVersion {
    version:      string;
    rest_api_id:  string;
    description?: string;
}

export interface ResourceAPIGatewayDomainName {
    domain_name:                             string;
    types:                                   string;
    endpoint_configuration?:                 EndpointConfiguration;
    mutual_tls_authentication?:              MutualTLSAuthentication;
    ownership_verification_certificate_arn?: string;
    security_policy?:                        string;
    tags?:                                   string;
    certificate_arn?:                        string;
    regional_certificate_arn?:               string;
    certificate_body?:                       string;
    certificate_chain?:                      string;
    certificate_name?:                       string;
    certificate_private_key?:                string;
    regional_certificate_name?:              string;
    arn?:                                    string;
    certificate_upload_date?:                string;
    cloudfront_domain_name?:                 string;
    cloudfront_zone_id?:                     string;
    id?:                                     string;
    regional_domain_name?:                   string;
    regional_zone_id?:                       string;
    tags_all?:                               string;
}

export interface EndpointConfiguration {
    types: string;
}

export interface MutualTLSAuthentication {
    truststore_uri:     string;
    truststore_version: string;
}

export interface APIGatewayGatewayResponse {
    rest_api_id:          string;
    response_type:        string;
    status_code?:         string;
    response_templates?:  string;
    response_parameters?: string;
}

export interface APIGatewayIntegration {
    rest_api_id:                 string;
    resource_id:                 string;
    http_method:                 string;
    type:                        string;
    connection_type?:            string;
    request_templates?:          string;
    request_parameters?:         string;
    cache_key_parameters?:       string;
    cache_namespace?:            string;
    content_handling?:           string;
    timeout_milliseconds?:       string;
    tls_config?:                 string;
    insecure_skip_verification?: string;
}

export interface APIGatewayIntegrationResponse {
    http_method:          string;
    resource_id:          string;
    rest_api_id:          string;
    status_code:          string;
    content_handling?:    string;
    response_parameters?: string;
    response_templates?:  string;
    selection_pattern?:   string;
}

export interface APIGatewayMethod {
    rest_api_id:           string;
    resource_id:           string;
    http_method:           string;
    authorization:         string;
    authorizer_id?:        string;
    authorization_scopes?: string;
    api_key_required?:     string;
    operation_name?:       string;
    request_models?:       string;
    request_validator_id?: string;
    request_parameters?:   string;
}

export interface APIGatewayMethodResponse {
    rest_api_id:          string;
    resource_id:          string;
    http_method:          string;
    status_code:          string;
    response_models?:     string;
    response_parameters?: string;
}

export interface APIGatewayMethodSettings {
    rest_api_id:                                 string;
    stage_name:                                  string;
    settings:                                    string;
    metrics_enabled?:                            string;
    logging_level?:                              string;
    data_trace_enabled?:                         string;
    throttling_burst_limit?:                     string;
    throttling_rate_limit?:                      string;
    caching_enabled?:                            string;
    cache_ttl_in_seconds?:                       string;
    cache_data_encrypted?:                       string;
    require_authorization_for_cache_control?:    string;
    unauthorized_cache_control_header_strategy?: string;
}

export interface APIModel {
    rest_api_id?: string;
    name:         string;
    content_type: string;
    schema:       string;
    description?: string;
    id?:          string;
    api_id?:      string;
}

export interface APIGatewayRequestValidator {
    name:                         string;
    rest_api_id:                  string;
    validate_request_body?:       string;
    validate_request_parameters?: string;
    id?:                          string;
}

export interface ResourceAPIGatewayRESTAPI {
    name:                          string;
    api_key_source?:               string;
    binary_media_types?:           string;
    body?:                         string;
    description?:                  string;
    disable_execute_api_endpoint?: string;
    endpoint_configuration?:       EndpointConfiguration;
    minimum_compression_size?:     string;
    fail_on_warnings?:             string;
    parameters?:                   string;
    policy?:                       string;
    put_rest_api_mode?:            string;
    tags?:                         string;
    arn?:                          string;
    created_date?:                 string;
    execution_arn?:                string;
    id?:                           string;
    root_resource_id?:             string;
    tags_all?:                     string;
}

export interface APIGatewayRESTAPIPolicy {
    rest_api_id: string;
    policy:      string;
    id?:         string;
}

export interface APIGatewayStage {
    rest_api_id:               string;
    stage_name:                string;
    deployment_id:             string;
    format:                    string;
    access_log_settings?:      string;
    cache_cluster_enabled?:    string;
    cache_cluster_size?:       string;
    canary_settings?:          string;
    client_certificate_id?:    string;
    description?:              string;
    documentation_version?:    string;
    variables?:                string;
    tags?:                     string;
    xray_tracing_enabled?:     string;
    percent_traffic?:          string;
    stage_variable_overrides?: string;
    use_stage_cache?:          string;
    arn?:                      string;
    id?:                       string;
    invoke_url?:               string;
    execution_arn?:            string;
    tags_all?:                 string;
    web_acl_arn?:              string;
}

export interface APIGatewayUsagePlan {
    name:               string;
    api_id:             string;
    stage:              string;
    path:               string;
    description?:       string;
    api_stages?:        string;
    quota_settings?:    string;
    throttle_settings?: string;
    product_code?:      string;
    tags?:              string;
    throttle?:          string;
    burst_limit?:       string;
    rate_limit?:        string;
    limit?:             string;
    offset?:            string;
    period?:            string;
    id?:                string;
    arn?:               string;
    tags_all?:          string;
}

export interface APIGatewayUsagePlanKey {
    key_id:        string;
    key_type:      string;
    usage_plan_id: string;
    id?:           string;
    name?:         string;
    value?:        string;
}

export interface DatapipelinePipelineClass {
    name?:          string;
    description?:   string;
    target_arns?:   string;
    tags?:          string;
    id?:            string;
    tags_all?:      string;
    subnet_ids?:    string;
    arn?:           string;
    content?:       string;
    provider_name?: string;
    creation_date?: string;
    rules?:         string;
}

export interface ResourceApigatewayv2API {
    name:                          string;
    protocol_type:                 string;
    api_key_selection_expression?: string;
    cors_configuration?:           string;
    credentials_arn?:              string;
    description?:                  string;
    disable_execute_api_endpoint?: string;
    route_key?:                    string;
    route_selection_expression?:   string;
    tags?:                         string;
    target?:                       string;
    body?:                         string;
    version?:                      string;
    fail_on_warnings?:             string;
    allow_credentials?:            string;
    allow_headers?:                string;
    allow_methods?:                string;
    allow_origins?:                string;
    expose_headers?:               string;
    max_age?:                      string;
    id?:                           string;
    api_endpoint?:                 string;
    arn?:                          string;
    execution_arn?:                string;
    tags_all?:                     string;
}

export interface Apigatewayv2APIMapping {
    api_id:           string;
    domain_name:      string;
    stage:            string;
    api_mapping_key?: string;
    id?:              string;
}

export interface Apigatewayv2Authorizer {
    api_id:                             string;
    authorizer_type:                    string;
    name:                               string;
    authorizer_credentials_arn?:        string;
    authorizer_payload_format_version?: string;
    authorizer_result_ttl_in_seconds?:  string;
    authorizer_uri?:                    string;
    enable_simple_responses?:           string;
    identity_sources?:                  string;
    jwt_configuration?:                 string;
    audience?:                          string;
    issuer?:                            string;
    id?:                                string;
}

export interface Apigatewayv2Deployment {
    api_id:         string;
    description?:   string;
    triggers?:      string;
    id?:            string;
    auto_deployed?: string;
}

export interface Apigatewayv2DomainName {
    domain_name:                             string;
    domain_name_configuration:               string;
    certificate_arn:                         string;
    endpoint_type:                           string;
    security_policy:                         string;
    truststore_uri:                          string;
    mutual_tls_authentication?:              string;
    tags?:                                   string;
    hosted_zone_id?:                         string;
    ownership_verification_certificate_arn?: string;
    target_domain_name?:                     string;
    truststore_version?:                     string;
    api_mapping_selection_expression?:       string;
    arn?:                                    string;
    id?:                                     string;
    tags_all?:                               string;
}

export interface Apigatewayv2Integration {
    api_id:                                     string;
    integration_type:                           string;
    status_code:                                string;
    mappings:                                   string;
    connection_id?:                             string;
    connection_type?:                           string;
    content_handling_strategy?:                 string;
    credentials_arn?:                           string;
    description?:                               string;
    integration_method?:                        string;
    integration_subtype?:                       string;
    integration_uri?:                           string;
    passthrough_behavior?:                      string;
    payload_format_version?:                    string;
    request_parameters?:                        string;
    request_templates?:                         string;
    response_parameters?:                       string;
    template_selection_expression?:             string;
    timeout_milliseconds?:                      string;
    tls_config?:                                string;
    server_name_to_verify?:                     string;
    id?:                                        string;
    integration_response_selection_expression?: string;
}

export interface Apigatewayv2IntegrationResponse {
    api_id:                         string;
    integration_id:                 string;
    integration_response_key:       string;
    content_handling_strategy?:     string;
    response_templates?:            string;
    template_selection_expression?: string;
    id?:                            string;
}

export interface Apigatewayv2Route {
    api_id:                               string;
    route_key:                            string;
    request_parameter_key:                string;
    required:                             string;
    api_key_required?:                    string;
    authorization_scopes?:                string;
    authorization_type?:                  string;
    authorizer_id?:                       string;
    model_selection_expression?:          string;
    operation_name?:                      string;
    request_models?:                      string;
    request_parameter?:                   string;
    route_response_selection_expression?: string;
    id?:                                  string;
}

export interface Apigatewayv2RouteResponse {
    api_id:                      string;
    route_id:                    string;
    route_response_key:          string;
    model_selection_expression?: string;
    response_models?:            string;
    id?:                         string;
}

export interface Apigatewayv2Stage {
    api_id:                  string;
    name:                    string;
    format:                  string;
    access_log_settings?:    AccessLogSettings;
    auto_deploy?:            string;
    client_certificate_id?:  string;
    default_route_settings?: RouteSettings;
    deployment_id?:          string;
    description?:            string;
    route_settings?:         RouteSettings;
    stage_variables?:        string;
    tags?:                   string;
    id?:                     string;
    arn?:                    string;
    execution_arn?:          string;
    invoke_url?:             string;
    tags_all?:               string;
}

export interface AccessLogSettings {
    format: string;
}

export interface RouteSettings {
    data_trace_enabled:       string;
    detailed_metrics_enabled: string;
    logging_level:            string;
    throttling_burst_limit:   string;
    throttling_rate_limit:    string;
    route_key?:               string;
}

export interface Apigatewayv2VpcLink {
    name?:                   string;
    security_group_ids?:     string;
    subnet_ids?:             string;
    tags?:                   string;
    id?:                     string;
    arn?:                    string;
    tags_all?:               string;
    name_prefix?:            string;
    description?:            string;
    default_run_properties?: string;
    max_concurrent_runs?:    string;
    http_name?:              string;
}

export interface AppCookieStickinessPolicyClass {
    name:                      string;
    load_balancer:             string;
    lb_port:                   string;
    cookie_name?:              string;
    id?:                       string;
    cookie_expiration_period?: string;
    attribute?:                string;
}

export interface AppautoscalingPolicy {
    name:                                          string;
    resource_id:                                   string;
    scalable_dimension:                            string;
    service_namespace:                             string;
    scaling_adjustment:                            string;
    value:                                         string;
    id:                                            string;
    metric:                                        string;
    stat:                                          string;
    metric_name:                                   string;
    namespace:                                     string;
    predefined_metric_type:                        string;
    policy_type?:                                  string;
    step_scaling_policy_configuration?:            StepScalingPolicyConfiguration;
    target_tracking_scaling_policy_configuration?: TargetTrackingScalingPolicyConfiguration;
    predefined_metric_specification?:              string;
    dimensions?:                                   string;
    statistic?:                                    string;
    unit?:                                         string;
    metrics?:                                      string;
    expression?:                                   string;
    label?:                                        string;
    metric_stat?:                                  string;
    return_data?:                                  string;
    resource_label?:                               string;
    alarm_arns?:                                   string;
    arn?:                                          string;
}

export interface StepScalingPolicyConfiguration {
    adjustment_type:             string;
    cooldown:                    string;
    metric_aggregation_type:     string;
    min_adjustment_magnitude:    string;
    step_adjustment:             string;
    metric_interval_lower_bound: string;
    metric_interval_upper_bound: string;
    scaling_adjustment:          string;
}

export interface TargetTrackingScalingPolicyConfiguration {
    target_value:                    string;
    disable_scale_in:                string;
    scale_in_cooldown:               string;
    scale_out_cooldown:              string;
    customized_metric_specification: string;
    predefined_metric_specification: string;
}

export interface AppautoscalingScheduledAction {
    name:                   string;
    service_namespace:      string;
    resource_id:            string;
    scalable_dimension:     string;
    scalable_target_action: string;
    schedule:               string;
    start_time?:            string;
    end_time?:              string;
    timezone?:              string;
    max_capacity?:          string;
    min_capacity?:          string;
    arn?:                   string;
}

export interface AppautoscalingTarget {
    max_capacity:       string;
    min_capacity:       string;
    resource_id:        string;
    scalable_dimension: string;
    service_namespace:  string;
    role_arn?:          string;
    tags?:              string;
    arn?:               string;
    tags_all?:          string;
}

export interface ResourceAppconfigConfigurationProfile {
    name:                      string;
    application_id?:           string;
    location_uri?:             string;
    description?:              string;
    retrieval_role_arn?:       string;
    tags?:                     string;
    type?:                     string;
    validator?:                string;
    content?:                  string;
    arn?:                      string;
    configuration_profile_id?: string;
    id?:                       string;
    tags_all?:                 string;
}

export interface AppconfigDeployment {
    application_id?:           string;
    configuration_profile_id?: string;
    configuration_version?:    string;
    deployment_strategy_id?:   string;
    description?:              string;
    environment_id?:           string;
    tags?:                     string;
    id?:                       string;
    arn?:                      string;
    deployment_number?:        string;
    state?:                    string;
    tags_all?:                 string;
}

export interface AppconfigDeploymentStrategy {
    deployment_duration_in_minutes: string;
    growth_factor:                  string;
    name?:                          string;
    replicate_to?:                  string;
    description?:                   string;
    final_bake_time_in_minutes?:    string;
    growth_type?:                   string;
    tags?:                          string;
    id?:                            string;
    arn?:                           string;
    tags_all?:                      string;
}

export interface ResourceAppconfigEnvironment {
    name:            string;
    alarm_arn:       string;
    application_id?: string;
    description?:    string;
    monitor?:        string;
    tags?:           string;
    alarm_role_arn?: string;
    arn?:            string;
    environment_id?: string;
    state?:          string;
    tags_all?:       string;
}

export interface AppconfigExtension {
    name:         string;
    action_point: string;
    point:        string;
    action:       string;
    role_arn:     string;
    uri:          string;
    required:     string;
    description?: string;
    parameter?:   string;
    tags?:        string;
    arn?:         string;
    id?:          string;
    version?:     string;
}

export interface AppconfigExtensionAssociation {
    extension_arn:      string;
    resource_arn?:      string;
    parameters?:        string;
    arn?:               string;
    id?:                string;
    extension_version?: string;
}

export interface AppconfigHostedConfigurationVersion {
    application_id?:           string;
    configuration_profile_id?: string;
    content?:                  string;
    content_type?:             string;
    description?:              string;
    arn?:                      string;
    id?:                       string;
    version_number?:           string;
}

export interface AppflowConnectorProfile {
    "name ":                       string;
    connection_mode:               string;
    connector_profile_config:      string;
    connector_type:                string;
    connector_profile_credentials: string;
    connector_profile_properties:  string;
    api_key:                       string;
    secret_key:                    string;
    authentication_type:           string;
    application_key:               string;
    api_token:                     string;
    client_id:                     string;
    client_secret:                 string;
    access_key_id:                 string;
    datakey:                       string;
    secret_access_key:             string;
    user_id:                       string;
    password:                      string;
    username:                      string;
    api_secret_key:                string;
    instance_url:                  string;
    bucket_name:                   string;
    database_url:                  string;
    role_arn:                      string;
    application_host_url:          string;
    application_service_path:      string;
    client_number:                 string;
    port_number:                   string;
    stage:                         string;
    warehouse:                     string;
    connector_label?:              string;
    kms_arn?:                      string;
    amplitude?:                    string;
    custom_connector?:             string;
    datadog?:                      string;
    dynatrace?:                    string;
    google_analytics?:             string;
    honeycode?:                    string;
    infor_nexus?:                  string;
    marketo?:                      string;
    redshift?:                     string;
    salesforce?:                   string;
    sapo_data?:                    string;
    service_now?:                  string;
    singular?:                     string;
    slack?:                        string;
    snowflake?:                    string;
    trendmicro?:                   string;
    veeva?:                        string;
    zendesk?:                      string;
    access_token?:                 string;
    oauth_request?:                string;
    refresh_token?:                string;
    client_credentials_arn?:       string;
    auth_code?:                    string;
    redirect_uri?:                 string;
    profile_properties?:           string;
    bucket_prefix?:                string;
    cluster_identifier?:           string;
    database_name?:                string;
    data_api_role_arn?:            string;
    is_sandbox_environment?:       string;
    logon_language?:               string;
    private_link_service_name?:    string;
    account_name?:                 string;
    region?:                       string;
    arn?:                          string;
    credentials_arn?:              string;
}

export interface AppflowFlow {
    name:                              string;
    destination_flow_config:           string;
    source_flow_config:                string;
    task:                              string;
    trigger_config:                    string;
    connector_type:                    string;
    destination_connector_properties:  string;
    object:                            string;
    entity_name:                       string;
    domain_name:                       string;
    intermediate_bucket_name:          string;
    bucket_name:                       string;
    object_path:                       string;
    source_connector_properties:       string;
    source_fields:                     string;
    task_type:                         string;
    trigger_type:                      string;
    schedule_expression:               string;
    description?:                      string;
    kms_arn?:                          string;
    tags?:                             string;
    tags_all?:                         string;
    api_version?:                      string;
    connector_profile_name?:           string;
    custom_connector?:                 string;
    customer_profiles?:                string;
    event_bridge?:                     string;
    honeycode?:                        string;
    marketo?:                          string;
    redshift?:                         string;
    s3?:                               string;
    salesforce?:                       string;
    sapo_data?:                        string;
    snowflake?:                        string;
    upsolver?:                         string;
    zendesk?:                          string;
    error_handling_config?:            string;
    custom_properties?:                string;
    id_field_names?:                   string;
    write_operation_type?:             string;
    object_type_name?:                 string;
    bucket_prefix?:                    string;
    s3_output_format_config?:          string;
    aggregation_config?:               string;
    file_type?:                        string;
    prefix_config?:                    string;
    preserve_source_data_typing?:      string;
    success_response_handling_config?: string;
    write_operation?:                  string;
    aggregation_type?:                 string;
    prefix_format?:                    string;
    prefix_type?:                      string;
    fail_on_first_destination_error?:  string;
    incremental_pull_config?:          string;
    amplitude?:                        string;
    datadog?:                          string;
    dynratrace?:                       string;
    infor_nexus?:                      string;
    service_now?:                      string;
    singular?:                         string;
    slack?:                            string;
    trend_micro?:                      string;
    veeva?:                            string;
    s3_input_format_config?:           string;
    s3_input_file_type?:               string;
    enable_dynamic_field_update?:      string;
    include_deleted_records?:          string;
    document_type?:                    string;
    include_all_versions?:             string;
    include_renditions?:               string;
    include_source_files?:             string;
    datetime_type_field_name?:         string;
    connector_operator?:               string;
    destination_field?:                string;
    task_properties?:                  string;
    dynatrace?:                        string;
    google_analytics?:                 string;
    trendmicro?:                       string;
    trigger_properties?:               string;
    data_pull_mode?:                   string;
    first_execution_from?:             string;
    schedule_end_time?:                string;
    schedule_offset?:                  string;
    schedule_start_time?:              string;
    timezone?:                         string;
    arn?:                              string;
}

export interface AppintegrationsDataIntegration {
    kms_key:              string;
    name:                 string;
    schedule_config:      string;
    source_uri:           string;
    first_execution_from: string;
    object:               string;
    schedule_expression:  string;
    description?:         string;
    tags?:                string;
    arn?:                 string;
    id?:                  string;
    tags_all?:            string;
}

export interface ApplicationinsightsApplication {
    resource_group_name:     string;
    auto_config_enabled?:    string;
    auto_create?:            string;
    cwe_monitor_enabled?:    string;
    grouping_type?:          string;
    ops_center_enabled?:     string;
    ops_item_sns_topic_arn?: string;
    tags?:                   string;
    arn?:                    string;
    id?:                     string;
    tags_all?:               string;
}

export interface AppmeshGatewayRoute {
    name:                    string;
    mesh_name:               string;
    virtual_gateway_name:    string;
    spec:                    string;
    action:                  string;
    match:                   string;
    target:                  string;
    virtual_service:         string;
    virtual_service_name:    string;
    default_target_hostname: string;
    exact:                   string;
    service_name:            string;
    end:                     string;
    mesh_owner?:             string;
    tags?:                   string;
    grpc_route?:             string;
    http_route?:             string;
    http2_route?:            string;
    priority?:               string;
    port?:                   string;
    rewrite?:                string;
    hostname?:               string;
    path?:                   string;
    prefix?:                 string;
    default_prefix?:         string;
    value?:                  string;
    header?:                 string;
    query_parameter?:        string;
    invert?:                 string;
    regex?:                  string;
    suffix?:                 string;
    start?:                  string;
    id?:                     string;
    arn?:                    string;
    created_date?:           string;
    last_updated_date?:      string;
    resource_owner?:         string;
    tags_all?:               string;
}

export interface AppmeshMesh {
    name:               string;
    spec?:              string;
    tags?:              string;
    type?:              string;
    id?:                string;
    arn?:               string;
    created_date?:      string;
    last_updated_date?: string;
    mesh_owner?:        string;
    resource_owner?:    string;
    tags_all?:          string;
}

export interface AppmeshRoute {
    name:                string;
    mesh_name:           string;
    virtual_router_name: string;
    spec:                string;
    action:              string;
    match:               string;
    weighted_target:     string;
    unit:                string;
    value:               string;
    max_retries:         string;
    per_retry_timeout:   string;
    virtual_node:        string;
    weight:              string;
    end:                 string;
    mesh_owner?:         string;
    tags?:               string;
    grpc_route?:         string;
    http2_route?:        string;
    http_route?:         string;
    priority?:           string;
    tcp_route?:          string;
    retry_policy?:       string;
    timeout?:            string;
    idle?:               string;
    metadata?:           string;
    method_name?:        string;
    service_name?:       string;
    invert?:             string;
    exact?:              string;
    prefix?:             string;
    regex?:              string;
    suffix?:             string;
    grpc_retry_events?:  string;
    http_retry_events?:  string;
    tcp_retry_events?:   string;
    per_request?:        string;
    header?:             string;
    method?:             string;
    path?:               string;
    query_parameter?:    string;
    scheme?:             string;
    port?:               string;
    start?:              string;
    id?:                 string;
    arn?:                string;
    created_date?:       string;
    last_updated_date?:  string;
    resource_owner?:     string;
    tags_all?:           string;
}

export interface AppmeshVirtualGateway {
    name:                       string;
    mesh_name:                  string;
    spec:                       string;
    listener:                   string;
    validation:                 string;
    certificate_chain:          string;
    private_key:                string;
    secret_name:                string;
    trust:                      string;
    match:                      string;
    exact:                      string;
    certificate_authority_arns: string;
    port_mapping:               string;
    path:                       string;
    key:                        string;
    value:                      string;
    port:                       string;
    protocol:                   string;
    max_requests:               string;
    max_connections:            string;
    healthy_threshold:          string;
    timeout_millis:             string;
    unhealthy_threshold:        string;
    certificate:                string;
    certificate_arn:            string;
    mesh_owner?:                string;
    tags?:                      string;
    backend_defaults?:          string;
    logging?:                   string;
    client_policy?:             string;
    tls?:                       string;
    enforce?:                   string;
    ports?:                     string;
    file?:                      string;
    sds?:                       string;
    subject_alternative_names?: string;
    acm?:                       string;
    connection_pool?:           string;
    health_check?:              string;
    access_log?:                string;
    format?:                    string;
    json?:                      string;
    text?:                      string;
    grpc?:                      string;
    http?:                      string;
    http2?:                     string;
    max_pending_requests?:      string;
    id?:                        string;
    arn?:                       string;
    created_date?:              string;
    last_updated_date?:         string;
    resource_owner?:            string;
    tags_all?:                  string;
}

export interface AppmeshVirtualNode {
    name:                       string;
    mesh_name:                  string;
    spec:                       string;
    virtual_service:            string;
    virtual_service_name:       string;
    validation:                 string;
    certificate_chain:          string;
    private_key:                string;
    secret_name:                string;
    trust:                      string;
    match:                      string;
    exact:                      string;
    certificate_authority_arns: string;
    port_mapping:               string;
    path:                       string;
    key:                        string;
    value:                      string;
    namespace_name:             string;
    service_name:               string;
    hostname:                   string;
    port:                       string;
    protocol:                   string;
    max_requests:               string;
    max_connections:            string;
    healthy_threshold:          string;
    timeout_millis:             string;
    unhealthy_threshold:        string;
    base_ejection_duration:     string;
    interval:                   string;
    max_ejection_percent:       string;
    max_server_errors:          string;
    unit:                       string;
    certificate:                string;
    certificate_arn:            string;
    mesh_owner?:                string;
    tags?:                      string;
    backend?:                   string;
    backend_defaults?:          string;
    listener?:                  string;
    logging?:                   string;
    service_discovery?:         string;
    client_policy?:             string;
    tls?:                       string;
    enforce?:                   string;
    ports?:                     string;
    file?:                      string;
    sds?:                       string;
    subject_alternative_names?: string;
    acm?:                       string;
    connection_pool?:           string;
    health_check?:              string;
    outlier_detection?:         string;
    timeout?:                   string;
    access_log?:                string;
    format?:                    string;
    json?:                      string;
    text?:                      string;
    aws_cloud_map?:             string;
    dns?:                       string;
    attributes?:                string;
    ip_preference?:             string;
    response_type?:             string;
    grpc?:                      string;
    http?:                      string;
    http2?:                     string;
    tcp?:                       string;
    max_pending_requests?:      string;
    idle?:                      string;
    per_request?:               string;
    id?:                        string;
    arn?:                       string;
    created_date?:              string;
    last_updated_date?:         string;
    resource_owner?:            string;
    tags_all?:                  string;
}

export interface AppmeshVirtualRouter {
    name:               string;
    mesh_name:          string;
    spec:               string;
    port_mapping:       string;
    port:               string;
    protocol:           string;
    mesh_owner?:        string;
    tags?:              string;
    listener?:          string;
    id?:                string;
    arn?:               string;
    created_date?:      string;
    last_updated_date?: string;
    resource_owner?:    string;
    tags_all?:          string;
}

export interface AppmeshVirtualService {
    name:                string;
    mesh_name:           string;
    spec:                string;
    virtual_node_name:   string;
    virtual_router_name: string;
    mesh_owner?:         string;
    tags?:               string;
    virtual_node?:       string;
    virtual_router?:     string;
    id?:                 string;
    arn?:                string;
    created_date?:       string;
    last_updated_date?:  string;
    resource_owner?:     string;
    tags_all?:           string;
}

export interface ApprunnerAutoScalingConfigurationVersion {
    auto_scaling_configuration_name?:     string;
    max_concurrency?:                     string;
    max_size?:                            string;
    min_size?:                            string;
    tags?:                                string;
    arn?:                                 string;
    auto_scaling_configuration_revision?: string;
    latest?:                              string;
    status?:                              string;
    tags_all?:                            string;
}

export interface ApprunnerConnection {
    connection_name: string;
    provider_type:   string;
    tags?:           string;
    arn?:            string;
    status?:         string;
    tags_all?:       string;
}

export interface ApprunnerCustomDomainAssociation {
    domain_name:                     string;
    service_arn:                     string;
    id?:                             string;
    certificate_validation_records?: string;
    dns_target?:                     string;
    name?:                           string;
    status?:                         string;
    type?:                           string;
    value?:                          string;
}

export interface ApprunnerObservabilityConfiguration {
    vendor:                                string;
    observability_configuration_name?:     string;
    trace_configuration?:                  string;
    tags?:                                 string;
    arn?:                                  string;
    observability_configuration_revision?: string;
    latest?:                               string;
    status?:                               string;
    tags_all?:                             string;
}

export interface ApprunnerService {
    kms_key:                          string;
    is_publicly_accessible:           string;
    observability_enabled:            string;
    repository_url:                   string;
    source_code_version:              string;
    image_identifier:                 string;
    image_repository_type:            string;
    runtime:                          string;
    type:                             string;
    service_name?:                    string;
    source_configuration?:            string;
    auto_scaling_configuration_arn?:  string;
    encryption_configuration?:        string;
    health_check_configuration?:      string;
    instance_configuration?:          string;
    network_configuration?:           string;
    observability_configuration?:     string;
    tags?:                            string;
    healthy_threshold?:               string;
    interval?:                        string;
    path?:                            string;
    protocol?:                        string;
    timeout?:                         string;
    unhealthy_threshold?:             string;
    cpu?:                             string;
    instance_role_arn?:               string;
    authentication_configuration?:    string;
    auto_deployments_enabled?:        string;
    code_repository?:                 string;
    image_repository?:                string;
    access_role_arn?:                 string;
    connection_arn?:                  string;
    ingress_configuration?:           string;
    egress_configuration?:            string;
    egress_type?:                     string;
    vpc_connector_arn?:               string;
    observability_configuration_arn?: string;
    code_configuration?:              string;
    image_configuration?:             string;
    code_configuration_values?:       string;
    build_command?:                   string;
    port?:                            string;
    runtime_environment_secrets?:     string;
    runtime_environment_variables?:   string;
    start_command?:                   string;
    arn?:                             string;
    service_id?:                      string;
    service_url?:                     string;
    status?:                          string;
    tags_all?:                        string;
}

export interface ApprunnerVpcConnector {
    vpc_connector_name:      string;
    security_groups?:        string;
    tags?:                   string;
    arn?:                    string;
    status?:                 string;
    vpc_connector_revision?: string;
    tags_all?:               string;
}

export interface ApprunnerVpcIngressConnection {
    name:                      string;
    service_arn:               string;
    ingress_vpc_configuration: string;
    vpc_id:                    string;
    vpc_endpoint_id:           string;
    tags?:                     string;
    arn?:                      string;
    domain_name?:              string;
    status?:                   string;
    tags_all?:                 string;
}

export interface AppstreamDirectoryConfig {
    directory_name:                          string;
    organizational_unit_distinguished_names: string;
    service_account_credentials:             string;
    account_name:                            string;
    account_password:                        string;
    id?:                                     string;
    created_time?:                           string;
}

export interface AppstreamFleet {
    compute_capacity:                        string;
    instance_type:                           string;
    name:                                    string;
    desired_instances:                       string;
    description?:                            string;
    disconnect_timeout_in_seconds?:          string;
    display_name?:                           string;
    domain_join_info?:                       string;
    enable_default_internet_access?:         string;
    fleet_type?:                             string;
    iam_role_arn?:                           string;
    idle_disconnect_timeout_in_seconds?:     string;
    image_name?:                             string;
    image_arn?:                              string;
    stream_view?:                            string;
    max_user_duration_in_seconds?:           string;
    vpc_config?:                             string;
    tags?:                                   string;
    directory_name?:                         string;
    organizational_unit_distinguished_name?: string;
    security_group_ids?:                     string;
    subnet_ids?:                             string;
    id?:                                     string;
    arn?:                                    string;
    state?:                                  string;
    created_time?:                           string;
    available?:                              string;
    in_use?:                                 string;
    running?:                                string;
}

export interface AppstreamFleetStackAssociation {
    fleet_name: string;
    id?:        string;
}

export interface AppstreamImageBuilder {
    instance_type:                           string;
    name:                                    string;
    endpoint_type:                           string;
    access_endpoint?:                        string;
    appstream_agent_version?:                string;
    description?:                            string;
    display_name?:                           string;
    domain_join_info?:                       string;
    enable_default_internet_access?:         string;
    iam_role_arn?:                           string;
    image_arn?:                              string;
    image_name?:                             string;
    vpc_config?:                             string;
    tags?:                                   string;
    vpce_id?:                                string;
    directory_name?:                         string;
    organizational_unit_distinguished_name?: string;
    security_group_ids?:                     string;
    subnet_ids?:                             string;
    arn?:                                    string;
    created_time?:                           string;
    id?:                                     string;
    state?:                                  string;
    tags_all?:                               string;
}

export interface AppstreamStack {
    name:                           string;
    endpoint_type:                  string;
    enabled:                        string;
    connector_type:                 string;
    action:                         string;
    permission:                     string;
    access_endpoints?:              string;
    application_settings?:          string;
    description?:                   string;
    display_name?:                  string;
    embed_host_domains?:            string;
    feedback_url?:                  string;
    redirect_url?:                  string;
    storage_connectors?:            string;
    user_settings?:                 string;
    streaming_experience_settings?: string;
    tags?:                          string;
    vpce_id?:                       string;
    settings_group?:                string;
    domains?:                       string;
    resource_identifier?:           string;
    preferred_protocol?:            string;
    arn?:                           string;
    created_time?:                  string;
    id?:                            string;
}

export interface AppstreamUser {
    authentication_type:      string;
    user_name:                string;
    enabled?:                 string;
    first_name?:              string;
    last_name?:               string;
    send_email_notification?: string;
    arn?:                     string;
    created_time?:            string;
    id?:                      string;
    status?:                  string;
}

export interface AppstreamUserStackAssociation {
    authentication_type:      string;
    send_email_notification?: string;
    id?:                      string;
}

export interface AppsyncAPICache {
    api_id:                      string;
    api_caching_behavior:        string;
    type:                        string;
    ttl:                         string;
    at_rest_encryption_enabled?: string;
    transit_encryption_enabled?: string;
    id?:                         string;
}

export interface AppsyncAPIKey {
    api_id:       string;
    description?: string;
    expires?:     string;
    id?:          string;
    key?:         string;
}

export interface AppsyncDatasource {
    api_id:                    string;
    name:                      string;
    type:                      string;
    table_name:                string;
    delta_sync_table_name:     string;
    endpoint:                  string;
    event_bus_arn:             string;
    function_arn:              string;
    http_endpoint_config:      string;
    db_cluster_identifier:     string;
    aws_secret_store_arn:      string;
    description?:              string;
    dynamodb_config?:          string;
    elasticsearch_config?:     string;
    event_bridge_config?:      string;
    http_config?:              string;
    lambda_config?:            string;
    opensearchservice_config?: string;
    service_role_arn?:         string;
    region?:                   string;
    use_caller_credentials?:   string;
    delta_sync_config?:        string;
    versioned?:                string;
    base_table_ttl?:           string;
    delta_sync_table_ttl?:     string;
    authorization_config?:     string;
    authorization_type?:       string;
    aws_iam_config?:           string;
    signing_region?:           string;
    source_type?:              string;
    database_name?:            string;
    schema?:                   string;
    arn?:                      string;
}

export interface AppsyncDomainName {
    certificate_arn:      string;
    domain_name:          string;
    description?:         string;
    id?:                  string;
    appsync_domain_name?: string;
    hosted_zone_id?:      string;
}

export interface AppsyncDomainNameAPIAssociation {
    api_id:      string;
    domain_name: string;
    id?:         string;
}

export interface AppsyncFunction {
    api_id:                          string;
    data_source:                     string;
    name:                            string;
    code?:                           string;
    max_batch_size?:                 string;
    request_mapping_template?:       string;
    response_mapping_template?:      string;
    description?:                    string;
    runtime?:                        string;
    sync_config?:                    string;
    function_version?:               string;
    runtime_version?:                string;
    conflict_detection?:             string;
    conflict_handler?:               string;
    lambda_conflict_handler_config?: string;
    lambda_conflict_handler_arn?:    string;
    id?:                             string;
    arn?:                            string;
    function_id?:                    string;
}

export interface AppsyncGraphqlAPI {
    name:                                string;
    log_config?:                         LogConfig;
    openid_connect_config?:              OpenidConnectConfig;
    user_pool_config?:                   UserPoolConfig;
    lambda_authorizer_config?:           LambdaAuthorizerConfig;
    schema?:                             string;
    additional_authentication_provider?: AdditionalAuthenticationProvider;
    tags?:                               string;
    xray_enabled?:                       string;
    visibility?:                         string;
    exclude_verbose_content?:            string;
    iat_ttl?:                            string;
    aws_region?:                         string;
    id?:                                 string;
    arn?:                                string;
    tags_all?:                           string;
    uris?:                               string;
}

export interface AdditionalAuthenticationProvider {
    authentication_type:   string;
    openid_connect_config: string;
    user_pool_config:      string;
}

export interface LambdaAuthorizerConfig {
    authorizer_uri:                   string;
    authorizer_result_ttl_in_seconds: string;
    identity_validation_expression:   string;
}

export interface LogConfig {
    cloudwatch_logs_role_arn: string;
    field_log_level:          string;
    exclude_verbose_content:  string;
}

export interface OpenidConnectConfig {
    issuer:    string;
    auth_ttl:  string;
    client_id: string;
    iat_ttl:   string;
}

export interface UserPoolConfig {
    default_action:      string;
    user_pool_id:        string;
    app_id_client_regex: string;
    aws_region:          string;
}

export interface AppsyncResolver {
    api_id:                          string;
    type:                            string;
    field:                           string;
    code?:                           string;
    request_template?:               string;
    response_template?:              string;
    data_source?:                    string;
    max_batch_size?:                 string;
    sync_config?:                    string;
    pipeline_config?:                string;
    caching_config?:                 string;
    runtime?:                        string;
    caching_keys?:                   string;
    ttl?:                            string;
    functions?:                      string;
    conflict_detection?:             string;
    conflict_handler?:               string;
    lambda_conflict_handler_config?: string;
    lambda_conflict_handler_arn?:    string;
    name?:                           string;
    runtime_version?:                string;
    arn?:                            string;
}

export interface AppsyncType {
    api_id:       string;
    format:       string;
    definition:   string;
    arn?:         string;
    description?: string;
    id?:          string;
    name?:        string;
}

export interface AthenaDatabase {
    bucket:                    string;
    name:                      string;
    encryption_option:         string;
    acl_configuration?:        string;
    comment?:                  string;
    encryption_configuration?: string;
    expected_bucket_owner?:    string;
    properties?:               string;
    kms_key?:                  string;
    id?:                       string;
}

export interface AthenaNamedQuery {
    name:         string;
    database:     string;
    query:        string;
    workgroup?:   string;
    description?: string;
    id?:          string;
}

export interface AthenaWorkgroup {
    name:                                string;
    s3_acl_option:                       string;
    encryption_option:                   string;
    configuration?:                      string;
    description?:                        string;
    state?:                              string;
    tags?:                               string;
    force_destroy?:                      string;
    bytes_scanned_cutoff_per_query?:     string;
    enforce_workgroup_configuration?:    string;
    engine_version?:                     string;
    execution_role?:                     string;
    publish_cloudwatch_metrics_enabled?: string;
    result_configuration?:               string;
    requester_pays_enabled?:             string;
    selected_engine_version?:            string;
    encryption_configuration?:           string;
    acl_configuration?:                  string;
    expected_bucket_owner?:              string;
    output_location?:                    string;
    kms_key_arn?:                        string;
    arn?:                                string;
    id?:                                 string;
    tags_all?:                           string;
}

export interface AuditmanagerAccountRegistration {
    delegated_admin_account?: string;
    deregister_on_destroy?:   string;
    kms_key?:                 string;
    id?:                      string;
    status?:                  string;
}

export interface AuditmanagerAssessment {
    name:                           string;
    assessment_reports_destination: AssessmentReportsDestination;
    framework_id:                   string;
    roles:                          Roles;
    destination_type:               string;
    role_type:                      string;
    id:                             string;
    scope?:                         Scope;
    description?:                   string;
    tags?:                          string;
    aws_accounts?:                  CanonicalUserID;
    aws_services?:                  AwsServices;
    arn?:                           string;
    roles_all?:                     string;
    status?:                        string;
}

export interface AssessmentReportsDestination {
    destination:      string;
    destination_type: string;
}

export interface AwsServices {
    service_name: string;
}

export interface Roles {
    role_arn:  string;
    role_type: string;
}

export interface Scope {
    aws_accounts: string;
    aws_services: string;
}

export interface AuditmanagerAssessmentDelegation {
    assessment_id:  string;
    control_set_id: string;
    role_arn:       string;
    role_type:      string;
    comment?:       string;
    delegation_id?: string;
    id?:            string;
    status?:        string;
}

export interface AuditmanagerAssessmentReport {
    name:          string;
    assessment_id: string;
    description?:  string;
    author?:       string;
    id?:           string;
    status?:       string;
}

export interface ResourceAuditmanagerControl {
    name:                                   string;
    control_mapping_sources:                ControlMappingSources;
    action_plan_instructions?:              string;
    action_plan_title?:                     string;
    description?:                           string;
    tags?:                                  string;
    testing_information?:                   string;
    source_keyword?:                        SourceKeyword;
    troubleshooting_text?:                  string;
    arn?:                                   string;
    "control_mapping_sources.*.source_id"?: string;
    id?:                                    string;
    type?:                                  string;
}

export interface ControlMappingSources {
    source_name:           string;
    source_set_up_option:  string;
    source_type:           string;
    source_description?:   string;
    source_frequency?:     string;
    source_keyword?:       string;
    troubleshooting_text?: string;
}

export interface SourceKeyword {
    keyword_input_type: string;
    keyword_value:      string;
}

export interface AuditmanagerFramework {
    control_sets:          ControlSets;
    controls:              CanonicalUserID;
    compliance_type?:      string;
    description?:          string;
    tags?:                 string;
    arn?:                  string;
    "control_sets[*].id"?: string;
    id?:                   string;
    framework_type?:       string;
}

export interface ControlSets {
    name:     string;
    controls: string;
}

export interface AuditmanagerFrameworkShare {
    destination_account: string;
    destination_region:  string;
    framework_id:        string;
    comment?:            string;
    id?:                 string;
    status?:             string;
}

export interface AuditmanagerOrganizationAdminAccountRegistration {
    admin_account_id: string;
    id?:              string;
    organization_id?: string;
}

export interface AutoscalingAttachment {
    autoscaling_group_name: string;
    elb?:                   string;
    lb_target_group_arn?:   string;
}

export interface AutoscalingGroupTag {
    autoscaling_group_name: string;
    tag:                    string;
    key:                    string;
    value:                  string;
    propagate_at_launch:    string;
    id?:                    string;
}

export interface AutoscalingLifecycleHook {
    name:                     string;
    autoscaling_group_name:   string;
    lifecycle_transition:     string;
    default_result?:          string;
    heartbeat_timeout?:       string;
    notification_metadata?:   string;
    notification_target_arn?: string;
    role_arn?:                string;
}

export interface AutoscalingNotification {
    group_names:   string;
    notifications: string;
    topic_arn:     string;
}

export interface AutoscalingPolicy {
    autoscaling_group_name:            string;
    scaling_adjustment:                string;
    target_value:                      string;
    adjustment_type?:                  string;
    policy_type?:                      string;
    predictive_scaling_configuration?: PredictiveScalingConfiguration;
    estimated_instance_warmup?:        string;
    enabled?:                          string;
    min_adjustment_magnitude?:         string;
    cooldown?:                         string;
    metric_aggregation_type?:          string;
    step_adjustment?:                  string;
    metric_interval_lower_bound?:      string;
    target_tracking_configuration?:    string;
    predefined_metric_specification?:  PredefinedMetricSpecification;
    customized_metric_specification?:  CustomizedMetricSpecification;
    disable_scale_in?:                 string;
    resource_label?:                   string;
    arn?:                              string;
    name?:                             string;
}

export interface CustomizedMetricSpecification {
    metric_dimension: string;
    metric_name:      string;
    namespace:        string;
    statistic:        string;
    unit:             string;
    metrics:          string;
    name:             string;
    value:            string;
    expression:       string;
    id:               string;
    label:            string;
    metric_stat:      string;
    return_data:      string;
    metric:           string;
    stat:             string;
    dimensions:       string;
}

export interface PredefinedMetricSpecification {
    predefined_metric_type: string;
    resource_label:         string;
}

export interface PredictiveScalingConfiguration {
    max_capacity_breach_behavior:             string;
    max_capacity_buffer:                      string;
    metric_specification:                     string;
    mode:                                     string;
    scheduling_buffer_time:                   string;
    customized_capacity_metric_specification: string;
    customized_load_metric_specification:     string;
    customized_scaling_metric_specification:  string;
    predefined_load_metric_specification:     string;
    predefined_metric_pair_specification:     string;
    predefined_scaling_metric_specification:  string;
    predefined_metric_type:                   string;
    resource_label:                           string;
    metric_data_queries:                      string;
    expression:                               string;
    id:                                       string;
    label:                                    string;
    metric_stat:                              string;
    return_data:                              string;
    metric:                                   string;
    stat:                                     string;
    unit:                                     string;
    dimensions:                               string;
    metric_name:                              string;
    namespace:                                string;
    name:                                     string;
    value:                                    string;
}

export interface AutoscalingSchedule {
    autoscaling_group_name: string;
    scheduled_action_name:  string;
    desired_capacity?:      string;
    end_time?:              string;
    max_size?:              string;
    min_size?:              string;
    recurrence?:            string;
    start_time?:            string;
    arn?:                   string;
}

export interface AutoscalingplansScalingPlan {
    name:                                     string;
    application_source:                       string;
    scaling_instruction:                      string;
    key:                                      string;
    max_capacity:                             string;
    min_capacity:                             string;
    resource_id:                              string;
    scalable_dimension:                       string;
    service_namespace:                        string;
    target_tracking_configuration:            string;
    metric_name:                              string;
    namespace:                                string;
    statistic:                                string;
    predefined_load_metric_type:              string;
    target_value:                             string;
    predefined_scaling_metric_type:           string;
    cloudformation_stack_arn?:                string;
    tag_filter?:                              string;
    values?:                                  string;
    customized_load_metric_specification?:    string;
    disable_dynamic_scaling?:                 string;
    predefined_load_metric_specification?:    string;
    predictive_scaling_max_capacity_buffer?:  string;
    predictive_scaling_mode?:                 string;
    scaling_policy_update_behavior?:          string;
    scheduled_action_buffer_time?:            string;
    dimensions?:                              string;
    unit?:                                    string;
    resource_label?:                          string;
    customized_scaling_metric_specification?: string;
    disable_scale_in?:                        string;
    predefined_scaling_metric_specification?: string;
    estimated_instance_warmup?:               string;
    scale_in_cooldown?:                       string;
    scale_out_cooldown?:                      string;
    id?:                                      string;
    scaling_plan_version?:                    string;
}

export interface BackupGlobalSettings {
    global_settings: string;
    id?:             string;
}

export interface ResourceBackupPlan {
    name:                      string;
    rule:                      string;
    rule_name:                 string;
    target_vault_name:         string;
    destination_vault_arn:     string;
    backup_options:            string;
    resource_type:             string;
    advanced_backup_setting?:  string;
    tags?:                     string;
    schedule?:                 string;
    enable_continuous_backup?: string;
    start_window?:             string;
    completion_window?:        string;
    lifecycle?:                string;
    recovery_point_tags?:      string;
    copy_action?:              string;
    cold_storage_after?:       string;
    delete_after?:             string;
    id?:                       string;
    arn?:                      string;
    tags_all?:                 string;
    version?:                  string;
}

export interface BackupRegionSettings {
    resource_type_opt_in_preference:      string;
    resource_type_management_preference?: string;
    id?:                                  string;
}

export interface ResourceBackupSelection {
    name:           string;
    plan_id:        string;
    iam_role_arn:   string;
    type:           string;
    key:            string;
    value:          string;
    selection_tag?: string;
    condition?:     string;
    resources?:     string;
    not_resources?: string;
    id?:            string;
}

export interface ResourceBackupVault {
    name:             string;
    force_destroy?:   string;
    kms_key_arn?:     string;
    tags?:            string;
    id?:              string;
    arn?:             string;
    recovery_points?: string;
    tags_all?:        string;
}

export interface BackupVaultLockConfiguration {
    backup_vault_name:    string;
    changeable_for_days?: string;
    max_retention_days?:  string;
    min_retention_days?:  string;
    backup_vault_arn?:    string;
}

export interface BackupVaultNotifications {
    backup_vault_name:   string;
    sns_topic_arn:       string;
    backup_vault_events: string;
    id?:                 string;
    backup_vault_arn?:   string;
}

export interface BackupVaultPolicy {
    backup_vault_name: string;
    policy:            string;
    id?:               string;
    backup_vault_arn?: string;
}

export interface ResourceBatchComputeEnvironment {
    service_role:                     string;
    type:                             string;
    compute_environment_name?:        string;
    compute_environment_name_prefix?: string;
    compute_resources?:               ComputeResources;
    eks_configuration?:               EksConfiguration;
    state?:                           string;
    ec2_configuration?:               Ec2Configuration;
    launch_template?:                 BatchComputeEnvironmentLaunchTemplate;
    image_type?:                      string;
    version?:                         string;
    arn?:                             string;
    ecs_cluster_arn?:                 string;
    status?:                          string;
    status_reason?:                   string;
    tags_all?:                        string;
}

export interface ComputeResources {
    allocation_strategy: string;
    bid_percentage:      string;
    desired_vcpus:       string;
    ec2_configuration:   string;
    ec2_key_pair:        string;
    image_id:            string;
    instance_role:       string;
    instance_type:       string;
    launch_template:     string;
    max_vcpus:           string;
    min_vcpus:           string;
    placement_group:     string;
    security_group_ids:  string;
    spot_iam_fleet_role: string;
    subnets:             string;
    tags:                string;
    type:                string;
}

export interface Ec2Configuration {
    image_id_override: string;
    image_type:        string;
}

export interface EksConfiguration {
    eks_cluster_arn:      string;
    kubernetes_namespace: string;
}

export interface BatchComputeEnvironmentLaunchTemplate {
    launch_template_id:   string;
    launch_template_name: string;
    version:              string;
}

export interface BatchJobDefinition {
    name:                   string;
    type:                   string;
    container_properties?:  string;
    parameters?:            string;
    platform_capabilities?: string;
    propagate_tags?:        string;
    retry_strategy?:        RetryStrategy;
    tags?:                  string;
    timeout?:               string;
    arn?:                   string;
    revision?:              string;
    tags_all?:              string;
}

export interface RetryStrategy {
    attempts:                 string;
    evaluate_on_exit:         string;
    action:                   string;
    on_exit_code:             string;
    on_reason:                string;
    on_status_reason:         string;
    attempt_duration_seconds: string;
}

export interface BudgetsBudgetAction {
    budget_name:            string;
    action_threshold:       string;
    action_type:            string;
    approval_model:         string;
    definition:             string;
    execution_role_arn:     string;
    notification_type:      string;
    subscriber:             string;
    action_threshold_type:  string;
    action_threshold_value: string;
    address:                string;
    subscription_type:      string;
    policy_arn:             string;
    policy_id:              string;
    action_sub_type:        string;
    instance_ids:           string;
    region:                 string;
    account_id?:            string;
    iam_action_definition?: string;
    ssm_action_definition?: string;
    scp_action_definition?: string;
    groups?:                string;
    roles?:                 string;
    users?:                 string;
    target_ids?:            string;
    action_id?:             string;
    id?:                    string;
    arn?:                   string;
    status?:                string;
}

export interface CeAnomalyMonitor {
    name:                   string;
    monitor_type:           string;
    monitor_dimension?:     string;
    monitor_specification?: string;
    tags?:                  string;
    arn?:                   string;
    id?:                    string;
    tags_all?:              string;
}

export interface CeAnomalySubscription {
    frequency:             string;
    monitor_arn_list:      string;
    name:                  string;
    account_id?:           string;
    threshold?:            string;
    threshold_expression?: string;
    tags?:                 string;
    and?:                  string;
    cost_category?:        string;
    dimension?:            string;
    not?:                  string;
    or?:                   string;
    key?:                  string;
    match_options?:        string;
    values?:               string;
    arn?:                  string;
    id?:                   string;
    tags_all?:             string;
}

export interface CeCostAllocationTag {
    tag_key: string;
    status:  string;
    id?:     string;
    type?:   string;
}

export interface ChimeVoiceConnector {
    name:                string;
    require_encryption:  string;
    aws_region?:         string;
    tags?:               string;
    arn?:                string;
    outbound_host_name?: string;
    tags_all?:           string;
}

export interface ChimeVoiceConnectorGroup {
    name:               string;
    voice_connector_id: string;
    priority:           string;
    connector?:         string;
    id?:                string;
}

export interface ChimeVoiceConnectorLogging {
    voice_connector_id:        string;
    enable_sip_logs?:          string;
    enable_media_metric_logs?: string;
    id?:                       string;
}

export interface ChimeVoiceConnectorOrigination {
    voice_connector_id: string;
    route:              string;
    host:               string;
    port:               string;
    priority:           string;
    protocol:           string;
    weight:             string;
    disabled?:          string;
    id?:                string;
}

export interface ChimeVoiceConnectorStreaming {
    voice_connector_id:              string;
    streaming_notification_targets?: string;
    media_insights_configuration?:   MediaInsightsConfiguration;
    id?:                             string;
}

export interface MediaInsightsConfiguration {
    disabled:          string;
    configuration_arn: string;
}

export interface ChimeVoiceConnectorTermination {
    voice_connector_id:    string;
    cidr_allow_list:       string;
    calling_regions:       string;
    disabled?:             string;
    default_phone_number?: string;
    cps_limit?:            string;
    id?:                   string;
}

export interface ChimeVoiceConnectorTerminationCredentials {
    voice_connector_id: string;
    credentials:        string;
    username:           string;
    password:           string;
    id?:                string;
}

export interface ChimesdkmediapipelinesMediaInsightsPipelineConfiguration {
    name:                           string;
    resource_access_role_arn:       string;
    elements:                       string;
    type:                           string;
    real_time_alert_configuration?: string;
    tags?:                          string;
    disabled?:                      string;
    arn?:                           string;
    id?:                            string;
}

export interface ChimesdkvoiceGlobalSettings {
    voice_connector: string;
    cdr_bucket?:     string;
    id?:             string;
}

export interface ChimesdkvoiceSIPMediaApplication {
    aws_region: string;
    endpoints:  string;
    name:       string;
    lambda_arn: string;
    tags?:      string;
    arn?:       string;
    id?:        string;
    tags_all?:  string;
}

export interface ChimesdkvoiceSIPRule {
    name:                     string;
    target_applications:      string;
    trigger_type:             string;
    trigger_value:            string;
    aws_region:               string;
    priority:                 string;
    sip_media_application_id: string;
    disabled?:                string;
    id?:                      string;
}

export interface CleanroomsCollaboration {
    name:                                                                    string;
    description:                                                             string;
    creator_member_abilities?:                                               string;
    creator_display_name?:                                                   string;
    query_log_status?:                                                       string;
    data_encryption_metadata?:                                               string;
    "data_encryption_metadata.allow_clear_text"?:                            string;
    "data_encryption_metadata.allow_duplicates"?:                            string;
    "data_encryption_metadata.allow_joins_on_columns_with_different_names"?: string;
    "data_encryption_metadata.preserve_nulls"?:                              string;
    member?:                                                                 string;
    "member.account_id"?:                                                    string;
    "member.display_name"?:                                                  string;
    "member.member_abilities"?:                                              string;
    tags?:                                                                   string;
    arn?:                                                                    string;
    id?:                                                                     string;
    create_time?:                                                            string;
    "member status"?:                                                        string;
    updated_time?:                                                           string;
}

export interface CleanroomsConfiguredTable {
    name:                             string;
    analysis_method:                  string;
    description?:                     string;
    allowed_columns?:                 string;
    table_reference?:                 string;
    "table_reference.database_name"?: string;
    "table_reference.table_name"?:    string;
    tags?:                            string;
    arn?:                             string;
    id?:                              string;
    create_time?:                     string;
    update_time?:                     string;
}

export interface Cloud9EnvironmentEc2 {
    name:                         string;
    instance_type:                string;
    automatic_stop_time_minutes?: string;
    connection_type?:             string;
    description?:                 string;
    owner_arn?:                   string;
    subnet_id?:                   string;
    tags?:                        string;
    id?:                          string;
    arn?:                         string;
    tags_all?:                    string;
    type?:                        string;
}

export interface Cloud9EnvironmentMembership {
    environment_id: string;
    permissions:    string;
    user_arn:       string;
    id?:            string;
    user_id?:       string;
}

export interface ResourceCloudcontrolapiResource {
    desired_state:    string;
    type_name:        string;
    role_arn?:        string;
    schema?:          string;
    type_version_id?: string;
    properties?:      string;
}

export interface ResourceCloudformationStack {
    name:                string;
    template_body?:      string;
    template_url?:       string;
    capabilities?:       string;
    disable_rollback?:   string;
    notification_arns?:  string;
    on_failure?:         string;
    parameters?:         string;
    policy_body?:        string;
    policy_url?:         string;
    tags?:               string;
    iam_role_arn?:       string;
    timeout_in_minutes?: string;
    id?:                 string;
    outputs?:            string;
    tags_all?:           string;
}

export interface CloudformationStackSet {
    name:                          string;
    administration_role_arn?:      string;
    capabilities?:                 string;
    operation_preferences?:        string;
    description?:                  string;
    execution_role_name?:          string;
    parameters?:                   string;
    permission_model?:             string;
    call_as?:                      string;
    tags?:                         string;
    template_body?:                string;
    template_url?:                 string;
    failure_tolerance_count?:      string;
    failure_tolerance_percentage?: string;
    max_concurrent_count?:         string;
    max_concurrent_percentage?:    string;
    region_concurrency_type?:      string;
    region_order?:                 string;
    arn?:                          string;
    id?:                           string;
    stack_set_id?:                 string;
    tags_all?:                     string;
}

export interface CloudformationStackSetInstance {
    stack_set_name:                string;
    account_id?:                   string;
    deployment_targets?:           string;
    parameter_overrides?:          string;
    region?:                       string;
    retain_stack?:                 string;
    call_as?:                      string;
    operation_preferences?:        string;
    organizational_unit_ids?:      string;
    failure_tolerance_count?:      string;
    failure_tolerance_percentage?: string;
    max_concurrent_count?:         string;
    max_concurrent_percentage?:    string;
    region_concurrency_type?:      string;
    region_order?:                 string;
    id?:                           string;
    organizational_unit_id?:       string;
    stack_id?:                     string;
    stack_instance_summaries?:     string;
}

export interface CloudfrontContinuousDeploymentPolicy {
    enabled:                        string;
    staging_distribution_dns_names: string;
    traffic_config:                 string;
    items:                          string;
    quantity:                       string;
    type:                           string;
    header:                         string;
    value:                          string;
    weight:                         string;
    idle_ttl:                       string;
    maximum_ttl:                    string;
    single_header_config?:          string;
    single_weight_config?:          string;
    session_stickiness_config?:     string;
    etag?:                          string;
    id?:                            string;
    last_modified_time?:            string;
}

export interface ResourceCloudfrontDistribution {
    default_cache_behavior:           string;
    enabled:                          string;
    origin:                           string;
    restrictions:                     string;
    viewer_certificate:               string;
    allowed_methods:                  string;
    cached_methods:                   string;
    target_origin_id:                 string;
    viewer_protocol_policy:           string;
    cookies:                          string;
    query_string:                     string;
    event_type:                       string;
    lambda_arn:                       string;
    function_arn:                     string;
    forward:                          string;
    error_code:                       string;
    bucket:                           string;
    domain_name:                      string;
    origin_id:                        string;
    http_port:                        string;
    https_port:                       string;
    origin_protocol_policy:           string;
    origin_ssl_protocols:             string;
    origin_access_identity:           string;
    failover_criteria:                string;
    member:                           string;
    status_codes:                     string;
    locations:                        string;
    restriction_type:                 string;
    aliases?:                         string;
    comment?:                         string;
    continuous_deployment_policy_id?: string;
    custom_error_response?:           string;
    default_root_object?:             string;
    is_ipv6_enabled?:                 string;
    http_version?:                    string;
    logging_config?:                  string;
    ordered_cache_behavior?:          string;
    origin_group?:                    string;
    price_class?:                     string;
    staging?:                         string;
    tags?:                            string;
    web_acl_id?:                      string;
    retain_on_delete?:                string;
    cache_policy_id?:                 string;
    compress?:                        string;
    default_ttl?:                     string;
    field_level_encryption_id?:       string;
    lambda_function_association?:     string;
    function_association?:            string;
    max_ttl?:                         string;
    min_ttl?:                         string;
    origin_request_policy_id?:        string;
    realtime_log_config_arn?:         string;
    response_headers_policy_id?:      string;
    smooth_streaming?:                string;
    trusted_key_groups?:              string;
    trusted_signers?:                 string;
    query_string_cache_keys?:         string;
    include_body?:                    string;
    whitelisted_names?:               string;
    error_caching_min_ttl?:           string;
    response_code?:                   string;
    response_page_path?:              string;
    include_cookies?:                 string;
    prefix?:                          string;
    connection_attempts?:             string;
    connection_timeout?:              string;
    custom_origin_config?:            string;
    custom_header?:                   string;
    origin_access_control_id?:        string;
    origin_path?:                     string;
    origin_shield?:                   string;
    s3_origin_config?:                string;
    origin_keepalive_timeout?:        string;
    origin_read_timeout?:             string;
    origin_shield_region?:            string;
    acm_certificate_arn?:             string;
    cloudfront_default_certificate?:  string;
    iam_certificate_id?:              string;
    id?:                              string;
    arn?:                             string;
    caller_reference?:                string;
    status?:                          string;
    tags_all?:                        string;
    last_modified_time?:              string;
    in_progress_validation_batches?:  string;
    etag?:                            string;
    hosted_zone_id?:                  string;
}

export interface CloudfrontFieldLevelEncryptionConfig {
    content_type_profile_config:               string;
    query_arg_profile_config:                  string;
    forward_when_content_type_is_unknown:      string;
    content_type_profiles:                     string;
    content_type:                              string;
    format:                                    string;
    forward_when_query_arg_profile_is_unknown: string;
    profile_id:                                string;
    query_arg:                                 string;
    comment?:                                  string;
    query_arg_profiles?:                       string;
    caller_reference?:                         string;
    etag?:                                     string;
    id?:                                       string;
}

export interface CloudfrontFieldLevelEncryptionProfile {
    name:                string;
    encryption_entities: string;
    public_key_id:       string;
    provider_id:         string;
    field_patterns:      string;
    comment?:            string;
    caller_reference?:   string;
    etag?:               string;
    id?:                 string;
}

export interface CloudfrontKeyGroup {
    items:    string;
    name:     string;
    comment?: string;
    etag?:    string;
    id?:      string;
}

export interface CloudfrontMonitoringSubscription {
    distribution_id:                      string;
    monitoring_subscription:              MonitoringSubscription;
    realtime_metrics_subscription_config: RealtimeMetricsSubscriptionConfig;
    id?:                                  string;
}

export interface MonitoringSubscription {
    realtime_metrics_subscription_config: string;
}

export interface RealtimeMetricsSubscriptionConfig {
    realtime_metrics_subscription_status: string;
}

export interface CloudfrontOriginAccessControl {
    name:                              string;
    origin_access_control_origin_type: string;
    signing_behavior:                  string;
    signing_protocol:                  string;
    description?:                      string;
    id?:                               string;
    etag?:                             string;
}

export interface CloudfrontPublicKey {
    encoded_key:       string;
    comment?:          string;
    name?:             string;
    name_prefix?:      string;
    caller_reference?: string;
    etag?:             string;
    id?:               string;
}

export interface ResourceCloudhsmV2Cluster {
    hsm_type:                  string;
    subnet_ids:                string;
    source_backup_identifier?: string;
    tags?:                     string;
    cluster_id?:               string;
    cluster_state?:            string;
    vpc_id?:                   string;
    security_group_id?:        string;
    tags_all?:                 string;
}

export interface CloudhsmV2HSM {
    cluster_id:         string;
    subnet_id?:         string;
    availability_zone?: string;
    ip_address?:        string;
    hsm_id?:            string;
    hsm_state?:         string;
    hsm_eni_id?:        string;
}

export interface CloudsearchDomain {
    endpoint_options?:          EndpointOptions;
    index_field?:               IndexField;
    multi_az?:                  string;
    scaling_parameters?:        ScalingParameters;
    tls_security_policy?:       string;
    desired_replication_count?: string;
    search?:                    string;
    arn?:                       string;
    document_service_endpoint?: string;
    domain_id?:                 string;
    search_service_endpoint?:   string;
}

export interface EndpointOptions {
    enforce_https:       string;
    tls_security_policy: string;
}

export interface IndexField {
    name:            string;
    type:            string;
    analysis_scheme: string;
    default_value:   string;
    facet:           string;
    highlight:       string;
    return:          string;
    sort:            string;
    source_fields:   string;
}

export interface ScalingParameters {
    desired_instance_type:     string;
    desired_partition_count:   string;
    desired_replication_count: string;
}

export interface CloudsearchDomainServiceAccessPolicy {
    access_policy: string;
    domain_name:   string;
}

export interface Cloudtrail {
    name:                           string;
    s3_bucket_name:                 string;
    values:                         string;
    field_selector:                 string;
    field:                          string;
    advanced_event_selector?:       string;
    cloud_watch_logs_group_arn?:    string;
    cloud_watch_logs_role_arn?:     string;
    enable_log_file_validation?:    string;
    enable_logging?:                string;
    event_selector?:                EventSelector;
    include_global_service_events?: string;
    insight_selector?:              InsightSelector;
    is_multi_region_trail?:         string;
    is_organization_trail?:         string;
    kms_key_id?:                    string;
    s3_key_prefix?:                 string;
    sns_topic_name?:                string;
    tags?:                          string;
    insight_type?:                  string;
    ends_with?:                     string;
    equals?:                        string;
    not_ends_with?:                 string;
    not_equals?:                    string;
    not_starts_with?:               string;
    starts_with?:                   string;
    arn?:                           string;
    home_region?:                   string;
    id?:                            string;
    tags_all?:                      string;
}

export interface EventSelector {
    data_resource:                    string;
    exclude_management_event_sources: string;
    include_management_events:        string;
    read_write_type:                  string;
    type:                             string;
    values:                           string;
}

export interface InsightSelector {
    insight_type: string;
}

export interface CloudwatchCompositeAlarm {
    alarm_name:                 string;
    alarm_rule:                 string;
    actions_enabled?:           string;
    alarm_actions?:             string;
    alarm_description?:         string;
    insufficient_data_actions?: string;
    ok_actions?:                string;
    tags?:                      string;
    arn?:                       string;
    id?:                        string;
    tags_all?:                  string;
}

export interface CloudwatchDashboard {
    dashboard_name: string;
    dashboard_body: string;
    dashboard_arn?: string;
}

export interface CloudwatchEventAPIDestination {
    name:                              string;
    http_method:                       string;
    connection_arn:                    string;
    description?:                      string;
    invocation_rate_limit_per_second?: string;
    arn?:                              string;
}

export interface CloudwatchEventArchive {
    name:             string;
    event_source_arn: string;
    description?:     string;
    event_pattern?:   string;
    retention_days?:  string;
    arn?:             string;
}

export interface CloudwatchEventBusPolicy {
    policy:          string;
    event_bus_name?: string;
    id?:             string;
}

export interface ResourceCloudwatchEventConnection {
    name:                        string;
    authorization_type:          string;
    auth_parameters:             string;
    key:                         string;
    value:                       string;
    username:                    string;
    password:                    string;
    authorization_endpoint:      string;
    http_method:                 string;
    oauth_http_parameters:       string;
    description?:                string;
    invocation_http_parameters?: string;
    api_key?:                    string;
    basic?:                      string;
    oauth?:                      string;
    arn?:                        string;
    secret_arn?:                 string;
}

export interface CloudwatchEventEndpoint {
    event_bus:           string;
    name:                string;
    routing_config:      string;
    event_bus_arn:       string;
    failover_config:     string;
    primary:             string;
    secondary:           string;
    health_check:        string;
    route:               string;
    description?:        string;
    replication_config?: string;
    role_arn?:           string;
    state?:              string;
    arn?:                string;
    endpoint_url?:       string;
}

export interface CloudwatchEventPermission {
    statement_id:    string;
    action?:         string;
    condition?:      CloudwatchEventPermissionCondition;
    event_bus_name?: string;
    id?:             string;
}

export interface CloudwatchEventPermissionCondition {
    key:   string;
    type:  string;
    value: string;
}

export interface CloudwatchEventRule {
    name?:           string;
    event_bus_name?: string;
    event_pattern?:  string;
    description?:    string;
    role_arn?:       string;
    is_enabled?:     string;
    tags?:           string;
    id?:             string;
    arn?:            string;
    tags_all?:       string;
}

export interface CloudwatchEventTarget {
    arn:                         string;
    rule:                        string;
    values:                      string;
    batch_target?:               BatchTarget;
    dead_letter_config?:         GlobalacceleratorAccelerator;
    ecs_target?:                 EcsTarget;
    event_bus_name?:             string;
    http_target?:                HTTPTarget;
    input?:                      string;
    input_path?:                 string;
    input_transformer?:          InputTransformer;
    kinesis_target?:             KinesisTarget;
    role_arn?:                   string;
    run_command_targets?:        RunCommandTargets;
    redshift_target?:            RedshiftTarget;
    retry_policy?:               RetryPolicy;
    sagemaker_pipeline_target?:  SagemakerPipelineTarget;
    sqs_target?:                 SqsTarget;
    target_id?:                  string;
    job_attempts?:               string;
    base?:                       string;
    capacity_provider_strategy?: CapacityProviderStrategy;
    network_configuration?:      NetworkConfiguration;
    ordered_placement_strategy?: PlacementStrategy;
    placement_constraint?:       PlacementConstraint;
    tags?:                       string;
    query_string_parameters?:    string;
    partition_key_path?:         string;
    assign_public_ip?:           string;
    field?:                      string;
    expression?:                 string;
    with_event?:                 string;
    maximum_retry_attempts?:     string;
    message_group_id?:           string;
}

export interface BatchTarget {
    job_definition: string;
    job_name:       string;
    array_size:     string;
    job_attempts:   string;
}

export interface EcsTarget {
    task_definition_arn:        string;
    capacity_provider_strategy: string;
    enable_ecs_managed_tags:    string;
    enable_execute_command:     string;
    group:                      string;
    launch_type:                string;
    network_configuration:      string;
    ordered_placement_strategy: string;
    placement_constraint:       string;
    platform_version:           string;
    propagate_tags:             string;
    task_count:                 string;
    tags:                       string;
}

export interface HTTPTarget {
    header_parameters:       string;
    query_string_parameters: string;
}

export interface InputTransformer {
    input_template: string;
}

export interface KinesisTarget {
    partition_key_path: string;
}

export interface RedshiftTarget {
    database:            string;
    db_user:             string;
    secrets_manager_arn: string;
    sql:                 string;
    statement_name:      string;
    with_event:          string;
}

export interface RetryPolicy {
    maximum_event_age_in_seconds: string;
    maximum_retry_attempts:       string;
}

export interface RunCommandTargets {
    key:    string;
    values: string;
}

export interface SagemakerPipelineTarget {
    pipeline_parameter_list: string;
    name:                    string;
    value:                   string;
}

export interface SqsTarget {
    message_group_id: string;
}

export interface CloudwatchLogDataProtectionPolicy {
    log_group_name:  string;
    policy_document: string;
}

export interface CloudwatchLogDestination {
    name:       string;
    role_arn:   string;
    target_arn: string;
    tags?:      string;
    arn?:       string;
    tags_all?:  string;
}

export interface CloudwatchLogDestinationPolicy {
    destination_name: string;
    access_policy:    string;
    force_update?:    string;
}

export interface ResourceCloudwatchLogGroup {
    name?:              string;
    name_prefix?:       string;
    skip_destroy?:      string;
    retention_in_days?: string;
    kms_key_id?:        string;
    tags?:              string;
    tags_all?:          string;
}

export interface CloudwatchLogMetricFilter {
    name:                  string;
    pattern:               string;
    log_group_name:        string;
    metric_transformation: string;
    namespace:             string;
    value:                 string;
    default_value?:        string;
    dimensions?:           string;
    unit?:                 string;
    id?:                   string;
}

export interface CloudwatchLogResourcePolicy {
    policy_document: string;
    policy_name:     string;
    id?:             string;
}

export interface CloudwatchLogStream {
    name:           string;
    log_group_name: string;
    arn?:           string;
}

export interface CloudwatchLogSubscriptionFilter {
    name:            string;
    destination_arn: string;
    filter_pattern:  string;
    log_group_name:  string;
    role_arn?:       string;
    distribution?:   string;
}

export interface CloudwatchMetricAlarm {
    alarm_name:                             string;
    comparison_operator:                    string;
    evaluation_periods:                     string;
    id:                                     string;
    metric_name:                            string;
    namespace:                              string;
    period:                                 string;
    stat:                                   string;
    statistic?:                             string;
    threshold?:                             string;
    threshold_metric_id?:                   string;
    actions_enabled?:                       string;
    alarm_actions?:                         string;
    alarm_description?:                     string;
    datapoints_to_alarm?:                   string;
    dimensions?:                            string;
    insufficient_data_actions?:             string;
    ok_actions?:                            string;
    unit?:                                  string;
    extended_statistic?:                    string;
    treat_missing_data?:                    string;
    evaluate_low_sample_count_percentiles?: string;
    account_id?:                            string;
    expression?:                            string;
    label?:                                 string;
    metric?:                                string;
    arn?:                                   string;
    tags_all?:                              string;
}

export interface CloudwatchMetricStream {
    firehose_arn:              string;
    role_arn:                  string;
    output_format:             string;
    namespace:                 string;
    additional_statistics:     string;
    include_metric:            string;
    metric_name:               string;
    exclude_filter?:           string;
    include_filter?:           string;
    name?:                     string;
    name_prefix?:              string;
    tags?:                     string;
    statistics_configuration?: string;
    metric_names?:             string;
    arn?:                      string;
    creation_date?:            string;
    last_update_date?:         string;
    state?:                    string;
    tags_all?:                 string;
}

export interface CloudwatchQueryDefinition {
    name:                 string;
    query_string:         string;
    log_group_names?:     string;
    query_definition_id?: string;
}

export interface CodeartifactDomain {
    domain:            string;
    encryption_key?:   string;
    tags?:             string;
    id?:               string;
    arn?:              string;
    owner?:            string;
    repository_count?: string;
    created_time?:     string;
    asset_size_bytes?: string;
    tags_all?:         string;
}

export interface CodeartifactPermissionsPolicy {
    domain:           string;
    policy_document:  string;
    domain_owner?:    string;
    policy_revision?: string;
    id?:              string;
    resource_arn?:    string;
    repository?:      string;
}

export interface CodeartifactRepository {
    domain:                   string;
    repository:               string;
    repository_name:          string;
    external_connection_name: string;
    domain_owner?:            string;
    description?:             string;
    upstream?:                string;
    external_connections?:    string;
    tags?:                    string;
    id?:                      string;
    arn?:                     string;
    administrator_account?:   string;
    tags_all?:                string;
}

export interface CodebuildProject {
    artifacts:                 Artifacts;
    environment:               CodebuildProjectEnvironment;
    source:                    SecondarySources;
    credential_provider:       string;
    source_version:            string;
    badge_enabled?:            string;
    build_batch_config?:       BuildBatchConfig;
    build_timeout?:            string;
    cache?:                    Cache;
    concurrent_build_limit?:   string;
    description?:              string;
    file_system_locations?:    FileSystemLocations;
    encryption_key?:           string;
    logs_config?:              LogsConfig;
    project_visibility?:       string;
    resource_access_role?:     string;
    queued_timeout?:           string;
    secondary_artifacts?:      Artifacts;
    secondary_sources?:        SecondarySources;
    secondary_source_version?: SecondarySourceVersion;
    tags?:                     string;
    vpc_config?:               VpcConfig;
    maximum_builds_allowed?:   string;
    type?:                     string;
    target_url?:               string;
    arn?:                      string;
    badge_url?:                string;
    id?:                       string;
    public_project_alias?:     string;
    tags_all?:                 string;
}

export interface Artifacts {
    type:                 string;
    artifact_identifier?: string;
    bucket_owner_access?: string;
    encryption_disabled?: string;
    location?:            string;
    name?:                string;
    namespace_type?:      string;
    packaging?:           string;
    path?:                string;
}

export interface BuildBatchConfig {
    combine_artifacts:      string;
    restrictions:           string;
    service_role:           string;
    timeout_in_mins:        string;
    compute_types_allowed:  string;
    maximum_builds_allowed: string;
}

export interface Cache {
    location: string;
    modes:    string;
    type:     string;
}

export interface CodebuildProjectEnvironment {
    compute_type:                 string;
    image:                        string;
    type:                         string;
    name:                         string;
    value:                        string;
    credential:                   string;
    credential_provider:          string;
    certificate?:                 string;
    environment_variable?:        string;
    image_pull_credentials_type?: string;
    privileged_mode?:             string;
    registry_credential?:         string;
}

export interface FileSystemLocations {
    identifier:    string;
    location:      string;
    mount_options: string;
    mount_point:   string;
    type:          string;
}

export interface LogsConfig {
    cloudwatch_logs:     string;
    s3_logs:             string;
    group_name:          string;
    status:              string;
    stream_name:         string;
    encryption_disabled: string;
    location:            string;
    bucket_owner_access: string;
}

export interface SecondarySourceVersion {
    source_identifier: string;
    source_version:    string;
}

export interface SecondarySources {
    buildspec?:             string;
    git_clone_depth?:       string;
    git_submodules_config?: string;
    insecure_ssl?:          string;
    location?:              string;
    report_build_status?:   string;
    build_status_config?:   string;
    source_identifier?:     string;
    type:                   string;
    fetch_submodules:       string;
    context?:               string;
    target_url?:            string;
}

export interface VpcConfig {
    security_group_ids: string;
    subnets:            string;
    vpc_id:             string;
}

export interface CodebuildReportGroup {
    name:            string;
    type:            string;
    export_config:   string;
    s3_destination:  string;
    encryption_key:  string;
    delete_reports?: string;
    tags?:           string;
    packaging?:      string;
    path?:           string;
    id?:             string;
    arn?:            string;
    created?:        string;
    tags_all?:       string;
}

export interface CodebuildSourceCredential {
    auth_type:   string;
    server_type: string;
    token:       string;
    user_name?:  string;
    id?:         string;
    arn?:        string;
}

export interface CodebuildWebhook {
    project_name:   string;
    filter:         string;
    type:           string;
    pattern:        string;
    build_type?:    string;
    branch_filter?: string;
    filter_group?:  string;
    id?:            string;
    payload_url?:   string;
    secret?:        string;
}

export interface ResourceCodecatalystDevEnvironment {
    space_name:                  string;
    project_name:                string;
    persistent_storage:          string;
    ides:                        string;
    instance_type:               string;
    name:                        string;
    runtime:                     string;
    repository_name:             string;
    size:                        string;
    inactivity_timeout_minutes?: string;
    repositories?:               string;
    branch_name?:                string;
    id?:                         string;
}

export interface Codecatalyst {
    space_name:    string;
    display_name?: string;
    description?:  string;
    name?:         string;
    project_name?: string;
}

export interface CodecommitApprovalRuleTemplateAssociation {
    approval_rule_template_name: string;
    repository_name:             string;
    id?:                         string;
}

export interface ResourceCodecommitRepository {
    repository_name: string;
    description?:    string;
    default_branch?: string;
    tags?:           string;
    repository_id?:  string;
    arn?:            string;
    clone_url_http?: string;
    clone_url_ssh?:  string;
    tags_all?:       string;
}

export interface CodecommitTrigger {
    repository_name:   string;
    name:              string;
    destination_arn:   string;
    events:            string;
    custom_data?:      string;
    branches?:         string;
    configuration_id?: string;
}

export interface CodedeployApp {
    name:                 string;
    compute_platform?:    string;
    tags?:                string;
    arn?:                 string;
    application_id?:      string;
    id?:                  string;
    github_account_name?: string;
    linked_to_github?:    string;
    tags_all?:            string;
}

export interface CodedeployDeploymentConfig {
    deployment_config_name:  string;
    type:                    string;
    value:                   string;
    compute_platform?:       string;
    minimum_healthy_hosts?:  string;
    traffic_routing_config?: string;
    time_based_canary?:      string;
    time_based_linear?:      string;
    interval?:               string;
    percentage?:             string;
    id?:                     string;
    deployment_config_id?:   string;
}

export interface CodedeployDeploymentGroup {
    app_name:                                        string;
    deployment_group_name:                           string;
    service_role_arn:                                string;
    cluster_name:                                    string;
    prod_traffic_route:                              string;
    target_group:                                    string;
    listener_arns:                                   string;
    name:                                            string;
    trigger_events:                                  string;
    trigger_name:                                    string;
    trigger_target_arn:                              string;
    alarm_configuration?:                            string;
    auto_rollback_configuration?:                    string;
    autoscaling_groups?:                             string;
    blue_green_deployment_config?:                   string;
    deployment_config_name?:                         string;
    deployment_style?:                               string;
    ec2_tag_filter?:                                 string;
    ec2_tag_set?:                                    string;
    ecs_service?:                                    string;
    load_balancer_info?:                             string;
    on_premises_instance_tag_filter?:                string;
    trigger_configuration?:                          string;
    alarms?:                                         string;
    enabled?:                                        string;
    events?:                                         string;
    deployment_ready_option?:                        string;
    green_fleet_provisioning_option?:                string;
    terminate_blue_instances_on_deployment_success?: string;
    wait_time_in_minutes?:                           string;
    termination_wait_time_in_minutes?:               string;
    deployment_option?:                              string;
    deployment_type?:                                string;
    key?:                                            string;
    type?:                                           string;
    value?:                                          string;
    elb_info?:                                       string;
    target_group_info?:                              string;
    target_group_pair_info?:                         string;
    test_traffic_route?:                             string;
    arn?:                                            string;
    id?:                                             string;
    compute_platform?:                               string;
    deployment_group_id?:                            string;
    tags_all?:                                       string;
}

export interface CodegurureviewerRepositoryAssociation {
    repository:       string;
    kms_key_details?: string;
    arn?:             string;
    association_id?:  string;
    connection_arn?:  string;
    id?:              string;
    name?:            string;
    owner?:           string;
    provider_type?:   string;
    state?:           string;
    state_reason?:    string;
}

export interface Codepipeline {
    name:              string;
    role_arn:          string;
    location:          string;
    type:              string;
    id:                string;
    action:            string;
    category:          string;
    owner:             string;
    provider:          string;
    version:           string;
    tags?:             string;
    encryption_key?:   string;
    region?:           string;
    configuration?:    string;
    input_artifacts?:  string;
    output_artifacts?: string;
    run_order?:        string;
    arn?:              string;
    tags_all?:         string;
}

export interface CodepipelineCustomActionType {
    category:                       string;
    key:                            string;
    name:                           string;
    required:                       string;
    input_artifact_details:         string;
    maximum_count:                  string;
    minimum_count:                  string;
    output_artifact_details:        string;
    provider_name:                  string;
    version:                        string;
    configuration_property?:        string;
    description?:                   string;
    queryable?:                     string;
    settings?:                      string;
    entity_url_template?:           string;
    execution_url_template?:        string;
    revision_url_template?:         string;
    third_party_configuration_url?: string;
    tags?:                          string;
    id?:                            string;
    arn?:                           string;
    owner?:                         string;
    tags_all?:                      string;
}

export interface CodepipelineWebhook {
    name:                          string;
    authentication:                string;
    target_action:                 string;
    target_pipeline:               string;
    json_path:                     string;
    match_equals:                  string;
    authentication_configuration?: string;
    tags?:                         string;
    secret_token?:                 string;
    allowed_ip_range?:             string;
    arn?:                          string;
    id?:                           string;
    tags_all?:                     string;
    url?:                          string;
}

export interface CodestarconnectionsHost {
    name:               string;
    provider_endpoint:  string;
    provider_type:      string;
    security_group_ids: string;
    subnet_ids:         string;
    vpc_id:             string;
    vpc_configuration?: string;
    tls_certificate?:   string;
    id?:                string;
    arn?:               string;
    status?:            string;
}

export interface CodestarnotificationsNotificationRule {
    detail_type:    string;
    event_type_ids: string;
    name:           string;
    resource:       string;
    address:        string;
    status?:        string;
    tags?:          string;
    target?:        string;
    type?:          string;
    id?:            string;
    arn?:           string;
    tags_all?:      string;
}

export interface ResourceCognitoIdentityPool {
    identity_pool_name:               string;
    allow_unauthenticated_identities: string;
    allow_classic_flow?:              string;
    developer_provider_name?:         string;
    cognito_identity_providers?:      string;
    openid_connect_provider_arns?:    string;
    saml_provider_arns?:              string;
    supported_login_providers?:       string;
    tags?:                            string;
    client_id?:                       string;
    provider_name?:                   string;
    server_side_token_check?:         string;
    id?:                              string;
    arn?:                             string;
    tags_all?:                        string;
}

export interface CognitoIdentityPoolProviderPrincipalTag {
    identity_pool_id:       string;
    identity_provider_name: string;
}

export interface CognitoIdentityPoolRolesAttachment {
    identity_pool_id:           string;
    roles:                      string;
    identity_provider:          string;
    type:                       string;
    claim:                      string;
    match_type:                 string;
    role_arn:                   string;
    value:                      string;
    role_mapping?:              string;
    ambiguous_role_resolution?: string;
    mapping_rule?:              string;
    id?:                        string;
}

export interface CognitoIdentityProvider {
    user_pool_id:       string;
    provider_name:      string;
    provider_type:      string;
    attribute_mapping?: string;
    idp_identifiers?:   string;
    provider_details?:  string;
}

export interface CognitoManagedUserPoolClient {
    user_pool_id:                                   string;
    name_pattern?:                                  string;
    name_prefix?:                                   string;
    access_token_validity?:                         string;
    allowed_oauth_flows_user_pool_client?:          string;
    allowed_oauth_flows?:                           string;
    allowed_oauth_scopes?:                          string;
    analytics_configuration?:                       AnalyticsConfiguration;
    auth_session_validity?:                         string;
    callback_urls?:                                 string;
    default_redirect_uri?:                          string;
    enable_token_revocation?:                       string;
    enable_propagate_additional_user_context_data?: string;
    explicit_auth_flows?:                           string;
    generate_secret?:                               string;
    id_token_validity?:                             string;
    logout_urls?:                                   string;
    prevent_user_existence_errors?:                 string;
    read_attributes?:                               string;
    refresh_token_validity?:                        string;
    supported_identity_providers?:                  string;
    token_validity_units?:                          TokenValidityUnits;
    write_attributes?:                              string;
    user_data_shared?:                              string;
    client_secret?:                                 string;
    id?:                                            string;
    name?:                                          string;
}

export interface CognitoResourceServer {
    identifier:         string;
    name:               string;
    scope_name:         string;
    scope_description:  string;
    scope?:             string;
    scope_identifiers?: string;
}

export interface CognitoRiskConfiguration {
    user_pool_id:                                string;
    notify:                                      string;
    client_id?:                                  string;
    account_takeover_risk_configuration?:        AccountTakeoverRiskConfiguration;
    compromised_credentials_risk_configuration?: CompromisedCredentialsRiskConfiguration;
    risk_exception_configuration?:               RiskExceptionConfiguration;
    event_action?:                               string;
    id?:                                         string;
}

export interface AccountTakeoverRiskConfiguration {
    notify_configuration: string;
    actions:              string;
    block_email:          string;
    mfa_email:            string;
    no_action_email:      string;
    from:                 string;
    reply_to:             string;
    source_arn:           string;
    html_body:            string;
    subject:              string;
    text_body:            string;
    high_action:          string;
    low_action:           string;
    medium_action:        string;
    event_action:         string;
    notify:               string;
}

export interface CompromisedCredentialsRiskConfiguration {
    event_filter: string;
    actions:      string;
    event_action: string;
}

export interface RiskExceptionConfiguration {
    blocked_ip_range_list: string;
    skipped_ip_range_list: string;
}

export interface CognitoUser {
    user_pool_id:              string;
    username:                  string;
    attributes?:               string;
    client_metadata?:          string;
    desired_delivery_mediums?: string;
    enabled?:                  string;
    force_alias_creation?:     string;
    message_action?:           string;
    password?:                 string;
    temporary_password?:       string;
    status?:                   string;
    sub?:                      string;
    mfa_preference?:           string;
}

export interface CognitoUserGroup {
    name:         string;
    user_pool_id: string;
    description?: string;
    precedence?:  string;
    role_arn?:    string;
}

export interface CognitoUserInGroup {
    user_pool_id: string;
    group_name:   string;
    username:     string;
}

export interface CognitoUserPool {
    lambda_version:                                string;
    enabled:                                       string;
    attributes_require_verification_before_update: string;
    advanced_security_mode:                        string;
    case_sensitive:                                string;
    account_recovery_setting?:                     string;
    admin_create_user_config?:                     AdminCreateUserConfig;
    alias_attributes?:                             string;
    auto_verified_attributes?:                     string;
    deletion_protection?:                          string;
    device_configuration?:                         DeviceConfiguration;
    email_configuration?:                          EmailConfiguration;
    email_verification_message?:                   string;
    email_verification_subject?:                   string;
    lambda_config?:                                LambdaConfig;
    mfa_configuration?:                            string;
    password_policy?:                              PasswordPolicy;
    schema?:                                       CognitoUserPoolSchema;
    sms_authentication_message?:                   string;
    sms_configuration?:                            SMSConfiguration;
    sms_verification_message?:                     string;
    software_token_mfa_configuration?:             SoftwareTokenMfaConfigurationClass;
    tags?:                                         string;
    user_attribute_update_settings?:               UserAttributeUpdateSettings;
    user_pool_add_ons?:                            UserPoolAddOns;
    username_attributes?:                          string;
    username_configuration?:                       UsernameConfiguration;
    verification_message_template?:                VerificationMessageTemplate;
    device_only_remembered_on_user_prompt?:        string;
    source_arn?:                                   string;
    min_length?:                                   string;
    sns_region?:                                   string;
}

export interface AdminCreateUserConfig {
    allow_admin_create_user_only: string;
    invite_message_template:      string;
    email_message:                string;
    email_subject:                string;
    sms_message:                  string;
}

export interface DeviceConfiguration {
    challenge_required_on_new_device:      string;
    device_only_remembered_on_user_prompt: string;
}

export interface EmailConfiguration {
    configuration_set:      string;
    email_sending_account:  string;
    from_email_address:     string;
    reply_to_email_address: string;
    source_arn:             string;
}

export interface LambdaConfig {
    create_auth_challenge:          string;
    custom_message:                 string;
    define_auth_challenge:          string;
    post_authentication:            string;
    post_confirmation:              string;
    pre_authentication:             string;
    pre_sign_up:                    string;
    pre_token_generation:           string;
    user_migration:                 string;
    verify_auth_challenge_response: string;
    kms_key_id:                     string;
    custom_email_sender:            string;
    custom_sms_sender:              string;
    lambda_arn:                     string;
    lambda_version:                 string;
}

export interface PasswordPolicy {
    minimum_length:                   string;
    require_lowercase:                string;
    require_numbers:                  string;
    require_symbols:                  string;
    require_uppercase:                string;
    temporary_password_validity_days: string;
}

export interface CognitoUserPoolSchema {
    attribute_data_type:          string;
    developer_only_attribute:     string;
    mutable:                      string;
    name:                         string;
    number_attribute_constraints: string;
    required:                     string;
    string_attribute_constraints: string;
    max_value:                    string;
    min_value:                    string;
    max_length:                   string;
    min_length:                   string;
}

export interface SMSConfiguration {
    external_id:    string;
    sns_caller_arn: string;
    sns_region:     string;
}

export interface SoftwareTokenMfaConfigurationClass {
    enabled?: string;
}

export interface UserAttributeUpdateSettings {
    attributes_require_verification_before_update: string;
}

export interface UserPoolAddOns {
    advanced_security_mode: string;
}

export interface UsernameConfiguration {
    case_sensitive: string;
}

export interface VerificationMessageTemplate {
    default_email_option:      string;
    email_message:             string;
    email_message_by_link:     string;
    email_subject:             string;
    email_subject_by_link:     string;
    sms_message:               string;
    arn:                       string;
    creation_date:             string;
    custom_domain:             string;
    domain:                    string;
    endpoint:                  string;
    estimated_number_of_users: string;
    id:                        string;
    last_modified_date:        string;
    tags_all:                  string;
}

export interface CognitoUserPoolDomain {
    domain:                           string;
    user_pool_id:                     string;
    certificate_arn?:                 string;
    aws_account_id?:                  string;
    cloudfront_distribution?:         string;
    cloudfront_distribution_arn?:     string;
    cloudfront_distribution_zone_id?: string;
    s3_bucket?:                       string;
    version?:                         string;
}

export interface CognitoUserPoolUICustomization {
    user_pool_id:        string;
    css?:                string;
    image_file?:         string;
    creation_date?:      string;
    css_version?:        string;
    image_url?:          string;
    last_modified_date?: string;
}

export interface Comprehend {
    data_access_role_arn:     string;
    input_data_config:        string;
    language_code:            string;
    name:                     string;
    attribute_names:          string;
    s3_uri:                   string;
    security_group_ids:       string;
    subnets:                  string;
    mode?:                    string;
    model_kms_key_id?:        string;
    output_data_config?:      string;
    tags?:                    string;
    version_name?:            string;
    version_name_prefix?:     string;
    volume_kms_key_id?:       string;
    vpc_config?:              string;
    augmented_manifests?:     string;
    data_format?:             string;
    test_s3uri?:              string;
    annotation_data_s3_uri?:  string;
    document_type?:           string;
    source_documents_s3_uri?: string;
    split?:                   string;
    kms_key_id?:              string;
    output_s3_uri?:           string;
    arn?:                     string;
    tags_all?:                string;
    entity_types?:            string;
    type?:                    string;
    annotations?:             string;
    documents?:               string;
    entity_list?:             string;
    input_format?:            string;
}

export interface ConfigAggregateAuthorization {
    account_id: string;
    region:     string;
    tags?:      string;
    arn?:       string;
    tags_all?:  string;
}

export interface ConfigConfigRule {
    name:                         string;
    source:                       string;
    owner:                        string;
    policy_runtime:               string;
    policy_text:                  string;
    description?:                 string;
    input_parameters?:            string;
    maximum_execution_frequency?: string;
    scope?:                       string;
    tags?:                        string;
    compliance_resource_id?:      string;
    compliance_resource_types?:   string;
    tag_key?:                     string;
    tag_value?:                   string;
    source_identifier?:           string;
    source_detail?:               string;
    custom_policy_details?:       string;
    event_source?:                string;
    enable_debug_log_delivery?:   string;
    arn?:                         string;
    rule_id?:                     string;
    tags_all?:                    string;
}

export interface ConfigConfigurationAggregator {
    name:                             string;
    account_ids:                      string;
    role_arn:                         string;
    account_aggregation_source?:      string;
    organization_aggregation_source?: string;
    tags?:                            string;
    all_regions?:                     string;
    regions?:                         string;
    arn?:                             string;
    tags_all?:                        string;
}

export interface ConfigConfigurationRecorder {
    role_arn:                       string;
    name?:                          string;
    recording_group?:               string;
    all_supported?:                 string;
    exclusion_by_resource_types?:   string;
    include_global_resource_types?: string;
    recording_strategy?:            string;
    resource_types?:                string;
    " use_only"?:                   string;
    id?:                            string;
}

export interface ConfigConfigurationRecorderStatus {
    name:       string;
    is_enabled: string;
}

export interface ConfigConformancePack {
    parameter_name:          string;
    parameter_value:         string;
    name?:                   string;
    delivery_s3_bucket?:     string;
    delivery_s3_key_prefix?: string;
    input_parameter?:        string;
    template_body?:          string;
    template_s3_uri?:        string;
    arn?:                    string;
    excluded_accounts?:      string;
    id?:                     string;
}

export interface ConfigDeliveryChannel {
    s3_bucket_name:                string;
    name?:                         string;
    s3_key_prefix?:                string;
    s3_kms_key_arn?:               string;
    sns_topic_arn?:                string;
    snapshot_delivery_properties?: string;
    delivery_frequency?:           string;
    id?:                           string;
}

export interface ConfigOrganizationRule {
    name:                         string;
    policy_text?:                 string;
    policy_runtime?:              string;
    trigger_types?:               string;
    description?:                 string;
    debug_log_delivery_accounts?: string;
    excluded_accounts?:           string;
    input_parameters?:            string;
    maximum_execution_frequency?: string;
    resource_id_scope?:           string;
    resource_types_scope?:        string;
    tag_key_scope?:               string;
    tag_value_scope?:             string;
    arn?:                         string;
    lambda_function_arn?:         string;
    rule_identifier?:             string;
}

export interface ConfigRemediationConfiguration {
    config_rule_name:                      string;
    target_id:                             string;
    target_type:                           string;
    ssm_controls:                          string;
    name:                                  string;
    automatic?:                            string;
    execution_controls?:                   string;
    maximum_automatic_attempts?:           string;
    parameter?:                            string;
    resource_type?:                        string;
    retry_attempt_seconds?:                string;
    target_version?:                       string;
    concurrent_execution_rate_percentage?: string;
    error_percentage?:                     string;
    resource_value?:                       string;
    static_value?:                         string;
    static_values?:                        string;
    arn?:                                  string;
}

export interface ResourceConnectBotAssociation {
    instance_id: string;
    lex_bot:     ConnectBotAssociationLexBot;
    id?:         string;
}

export interface ConnectContactFlowModuleClass {
    instance_id:             string;
    name:                    string;
    content?:                string;
    content_hash?:           string;
    description?:            string;
    filename?:               string;
    tags?:                   string;
    type?:                   string;
    arn?:                    string;
    id?:                     string;
    contact_flow_id?:        string;
    tags_all?:               string;
    contact_flow_module_id?: string;
}

export interface ResourceConnectInstance {
    identity_management_type:          string;
    inbound_calls_enabled:             string;
    auto_resolve_best_voices_enabled?: string;
    contact_flow_logs_enabled?:        string;
    contact_lens_enabled?:             string;
    directory_id?:                     string;
    early_media_enabled?:              string;
    instance_alias?:                   string;
    multi_party_conference_enabled?:   string;
    id?:                               string;
    arn?:                              string;
    created_time?:                     string;
    service_role?:                     string;
    status?:                           string;
}

export interface ConnectPhoneNumber {
    target_arn:    string;
    country_code?: string;
    description?:  string;
    prefix?:       string;
    tags?:         string;
    type?:         string;
    arn?:          string;
    phone_number?: string;
    id?:           string;
    status?:       string;
    tags_all?:     string;
    message?:      string;
}

export interface ControltowerControl {
    control_identifier: string;
    target_identifier:  string;
    id?:                string;
}

export interface DataexchangeRevision {
    data_set_id:  string;
    comment:      string;
    tags?:        string;
    id?:          string;
    revision_id?: string;
    arn?:         string;
    tags_all?:    string;
}

export interface DatasyncAgent {
    name:                   string;
    activation_key?:        string;
    ip_address?:            string;
    private_link_endpoint?: string;
    security_group_arns?:   string;
    subnet_arns?:           string;
    tags?:                  string;
    vpc_endpoint_id?:       string;
    id?:                    string;
    arn?:                   string;
    tags_all?:              string;
}

export interface DatasyncLocationAzureBlob {
    agent_arns:          string;
    authentication_type: string;
    container_url:       string;
    token:               string;
    access_tier?:        string;
    blob_type?:          string;
    sas_configuration?:  string;
    subdirectory?:       string;
    tags?:               string;
    arn?:                string;
    tags_all?:           string;
}

export interface DatasyncLocationEFS {
    ec2_config:                   string;
    efs_file_system_arn:          string;
    security_group_arns:          string;
    subnet_arn:                   string;
    access_point_arn?:            string;
    file_system_access_role_arn?: string;
    in_transit_encryption?:       string;
    subdirectory?:                string;
    tags?:                        string;
    id?:                          string;
    arn?:                         string;
    tags_all?:                    string;
}

export interface DatasyncLocationFsxFileSystem {
    fsx_filesystem_arn:   string;
    security_group_arns?: string;
    subdirectory?:        string;
    tags?:                string;
    id?:                  string;
    arn?:                 string;
    tags_all?:            string;
    uri?:                 string;
    creation_time?:       string;
    protocol?:            Protocol;
    nfs?:                 NFS;
    mount_options?:       MountOptions;
    password?:            string;
    user?:                string;
    domain?:              string;
}

export interface MountOptions {
    version: string;
}

export interface NFS {
    mount_options: string;
}

export interface Protocol {
    nfs: string;
}

export interface DatasyncLocationFsxOntapFileSystem {
    protocol:                    string;
    storage_virtual_machine_arn: string;
    mount_options:               string;
    subdirectory?:               string;
    tags?:                       string;
    nfs?:                        string;
    smb?:                        string;
    version?:                    string;
    domain?:                     string;
    password?:                   string;
    user?:                       string;
    arn?:                        string;
    fsx_filesystem_arn?:         string;
    uri?:                        string;
}

export interface DatasyncLocationHdfs {
    agent_arns:                string;
    authentication_type:       string;
    name_node:                 string;
    hostname:                  string;
    port:                      string;
    simple_user?:              string;
    block_size?:               string;
    replication_factor?:       string;
    kerberos_keytab?:          string;
    kerberos_krb5_conf?:       string;
    kerberos_principal?:       string;
    kms_key_provider_uri?:     string;
    qop_configuration?:        string;
    subdirectory?:             string;
    tags?:                     string;
    data_transfer_protection?: string;
    rpc_protection?:           string;
    arn?:                      string;
    tags_all?:                 string;
}

export interface DatasyncLocationNFS {
    on_prem_config:  string;
    server_hostname: string;
    subdirectory:    string;
    agent_arns:      string;
    mount_options?:  string;
    tags?:           string;
    version?:        string;
    id?:             string;
    arn?:            string;
    tags_all?:       string;
}

export interface DatasyncLocationObjectStorage {
    agent_arns:          string;
    bucket_name:         string;
    server_hostname:     string;
    access_key?:         string;
    secret_key?:         string;
    server_certificate?: string;
    server_protocol?:    string;
    server_port?:        string;
    subdirectory?:       string;
    tags?:               string;
    arn?:                string;
    tags_all?:           string;
    uri?:                string;
}

export interface DatasyncLocationS3 {
    s3_bucket_arn:          string;
    s3_config:              string;
    subdirectory:           string;
    bucket_access_role_arn: string;
    agent_arns?:            string;
    s3_storage_class?:      string;
    tags?:                  string;
    id?:                    string;
    arn?:                   string;
    tags_all?:              string;
}

export interface DatasyncLocationSMB {
    agent_arns:      string;
    password:        string;
    server_hostname: string;
    subdirectory:    string;
    user:            string;
    domain?:         string;
    mount_options?:  string;
    tags?:           string;
    version?:        string;
    arn?:            string;
    tags_all?:       string;
}

export interface DatasyncTask {
    destination_location_arn:        string;
    source_location_arn:             string;
    schedule_expression:             string;
    cloudwatch_log_group_arn?:       string;
    excludes?:                       string;
    includes?:                       string;
    name?:                           string;
    options?:                        string;
    schedule?:                       string;
    atime?:                          string;
    bytes_per_second?:               string;
    gid?:                            string;
    log_level?:                      string;
    mtime?:                          string;
    object_tags?:                    string;
    overwrite_mode?:                 string;
    posix_permissions?:              string;
    preserve_deleted_files?:         string;
    preserve_devices?:               string;
    security_descriptor_copy_flags?: string;
    task_queueing?:                  string;
    transfer_mode?:                  string;
    uid?:                            string;
    verify_mode?:                    string;
    filter_type?:                    string;
    value?:                          string;
    id?:                             string;
    arn?:                            string;
    tags_all?:                       string;
}

export interface DaxCluster {
    cluster_name:                      string;
    iam_role_arn:                      string;
    node_type:                         string;
    replication_factor:                string;
    cluster_endpoint_encryption_type?: string;
    availability_zones?:               string;
    description?:                      string;
    notification_topic_arn?:           string;
    parameter_group_name?:             string;
    maintenance_window?:               string;
    security_group_ids?:               string;
    server_side_encryption?:           string;
    subnet_group_name?:                string;
    tags?:                             string;
    enabled?:                          string;
    arn?:                              string;
    nodes?:                            string;
    configuration_endpoint?:           string;
    cluster_address?:                  string;
    port?:                             string;
    tags_all?:                         string;
}

export interface DaxSubnetGroup {
    name:                string;
    subnet_ids:          string;
    description?:        string;
    id?:                 string;
    vpc_id?:             string;
    security_group_ids?: string;
}

export interface ClusterSnapshot {
    db_cluster_identifier:                  string;
    db_cluster_snapshot_identifier:         string;
    tags?:                                  string;
    allocated_storage?:                     string;
    availability_zones?:                    string;
    db_cluster_snapshot_arn?:               string;
    engine?:                                string;
    engine_version?:                        string;
    kms_key_id?:                            string;
    license_model?:                         string;
    port?:                                  string;
    source_db_cluster_snapshot_identifier?: string;
    storage_encrypted?:                     string;
    status?:                                string;
    tags_all?:                              string;
    vpc_id?:                                string;
}

export interface DBEventSubscriptionClass {
    sns_topic?:        string;
    name?:             string;
    name_prefix?:      string;
    source_ids?:       string;
    source_type?:      string;
    event_categories?: string;
    enabled?:          string;
    tags?:             string;
    id?:               string;
    arn?:              string;
    customer_aws_id?:  string;
    tags_all?:         string;
    sns_topic_arn?:    string;
}

export interface ResourceDBInstance {
    instance_class:                            string;
    bucket_name:                               string;
    ingestion_role:                            string;
    allocated_storage?:                        string;
    allow_major_version_upgrade?:              string;
    apply_immediately?:                        string;
    auto_minor_version_upgrade?:               string;
    availability_zone?:                        string;
    backup_retention_period?:                  string;
    backup_target?:                            string;
    backup_window?:                            string;
    blue_green_update?:                        string;
    ca_cert_identifier?:                       string;
    character_set_name?:                       string;
    copy_tags_to_snapshot?:                    string;
    custom_iam_instance_profile?:              string;
    db_name?:                                  string;
    db_subnet_group_name?:                     string;
    delete_automated_backups?:                 string;
    deletion_protection?:                      string;
    domain?:                                   string;
    domain_iam_role_name?:                     string;
    enabled_cloudwatch_logs_exports?:          string;
    engine?:                                   string;
    engine_version?:                           string;
    final_snapshot_identifier?:                string;
    iam_database_authentication_enabled?:      string;
    identifier?:                               string;
    identifier_prefix?:                        string;
    iops?:                                     string;
    kms_key_id?:                               string;
    license_model?:                            string;
    maintenance_window?:                       string;
    manage_master_user_password?:              string;
    master_user_secret_kms_key_id?:            string;
    max_allocated_storage?:                    string;
    monitoring_interval?:                      string;
    monitoring_role_arn?:                      string;
    multi_az?:                                 string;
    nchar_character_set_name?:                 string;
    network_type?:                             string;
    option_group_name?:                        string;
    parameter_group_name?:                     string;
    password?:                                 string;
    performance_insights_enabled?:             string;
    performance_insights_kms_key_id?:          string;
    performance_insights_retention_period?:    string;
    port?:                                     string;
    publicly_accessible?:                      string;
    replica_mode?:                             string;
    replicate_source_db?:                      string;
    restore_to_point_in_time?:                 string;
    s3_import?:                                string;
    skip_final_snapshot?:                      string;
    snapshot_identifier?:                      string;
    storage_encrypted?:                        string;
    storage_type?:                             string;
    storage_throughput?:                       string;
    tags?:                                     string;
    timezone?:                                 string;
    username?:                                 string;
    vpc_security_group_ids?:                   string;
    restore_time?:                             string;
    source_db_instance_identifier?:            string;
    source_db_instance_automated_backups_arn?: string;
    source_dbi_resource_id?:                   string;
    use_latest_restorable_time?:               string;
    bucket_prefix?:                            string;
    source_engine?:                            string;
    source_engine_version?:                    string;
    address?:                                  string;
    arn?:                                      string;
    endpoint?:                                 string;
    engine_version_actual?:                    string;
    hosted_zone_id?:                           string;
    id?:                                       string;
    latest_restorable_time?:                   string;
    listener_endpoint?:                        string;
    master_user_secret?:                       MasterUserSecret;
    resource_id?:                              string;
    status?:                                   string;
    tags_all?:                                 string;
}

export interface DBInstanceAutomatedBackupsReplication {
    kms_key_id?:             string;
    pre_signed_url?:         string;
    retention_period?:       string;
    source_db_instance_arn?: string;
    id?:                     string;
}

export interface RoleAssociation {
    db_instance_identifier?: string;
    feature_name:            string;
    role_arn:                string;
    id?:                     string;
    db_cluster_identifier?:  string;
}

export interface DBOptionGroup {
    engine_name:                     string;
    major_engine_version:            string;
    option_name:                     string;
    name?:                           string;
    name_prefix?:                    string;
    option_group_description?:       string;
    option?:                         string;
    tags?:                           string;
    option_settings?:                string;
    port?:                           string;
    version?:                        string;
    db_security_group_memberships?:  string;
    vpc_security_group_memberships?: string;
    value?:                          string;
    id?:                             string;
    arn?:                            string;
    tags_all?:                       string;
}

export interface ParameterGroup {
    name?:         string;
    value:         string;
    name_prefix?:  string;
    family?:       string;
    description?:  string;
    parameter?:    string;
    tags?:         string;
    apply_method?: string;
    id?:           string;
    arn?:          string;
    tags_all?:     string;
}

export interface ResourceDBProxy {
    name:                       string;
    auth:                       string;
    role_arn:                   string;
    vpc_subnet_ids:             string;
    debug_logging?:             string;
    engine_family?:             string;
    idle_client_timeout?:       string;
    require_tls?:               string;
    vpc_security_group_ids?:    string;
    tags?:                      string;
    auth_scheme?:               string;
    client_password_auth_type?: string;
    description?:               string;
    iam_auth?:                  string;
    secret_arn?:                string;
    username?:                  string;
    id?:                        string;
    arn?:                       string;
    endpoint?:                  string;
    tags_all?:                  string;
}

export interface DBProxyDefaultTargetGroup {
    db_proxy_name:                 string;
    connection_pool_config?:       string;
    connection_borrow_timeout?:    string;
    init_query?:                   string;
    max_connections_percent?:      string;
    max_idle_connections_percent?: string;
    session_pinning_filters?:      string;
    id?:                           string;
    arn?:                          string;
    name?:                         string;
}

export interface DBProxyEndpoint {
    db_proxy_endpoint_name:  string;
    db_proxy_name:           string;
    vpc_subnet_ids:          string;
    vpc_security_group_ids?: string;
    target_role?:            string;
    tags?:                   string;
    id?:                     string;
    arn?:                    string;
    endpoint?:               string;
    is_default?:             string;
    vpc_id?:                 string;
}

export interface DBProxyTarget {
    db_proxy_name?:          string;
    target_group_name?:      string;
    db_instance_identifier?: string;
    db_cluster_identifier?:  string;
    endpoint?:               string;
    id?:                     string;
    port?:                   string;
    rds_resource_id?:        string;
    target_arn?:             string;
    tracked_cluster_id?:     string;
    type?:                   string;
}

export interface ResourceDBSnapshot {
    db_instance_identifier:         string;
    db_snapshot_identifier:         string;
    shared_accounts?:               string;
    tags?:                          string;
    allocated_storage?:             string;
    availability_zone?:             string;
    db_snapshot_arn?:               string;
    encrypted?:                     string;
    engine?:                        string;
    engine_version?:                string;
    iops?:                          string;
    kms_key_id?:                    string;
    license_model?:                 string;
    option_group_name?:             string;
    source_db_snapshot_identifier?: string;
    source_region?:                 string;
    status?:                        string;
    storage_type?:                  string;
    tags_all?:                      string;
    vpc_id?:                        string;
}

export interface DBSnapshotCopy {
    source_db_snapshot_identifier:    string;
    target_db_snapshot_identifier:    string;
    copy_tags?:                       string;
    destination_region?:              string;
    kms_key_id?:                      string;
    presigned_url?:                   string;
    target_custom_availability_zone?: string;
    tags?:                            string;
    id?:                              string;
    allocated_storage?:               string;
    availability_zone?:               string;
    db_snapshot_arn?:                 string;
    encrypted?:                       string;
    engine?:                          string;
    engine_version?:                  string;
    iops?:                            string;
    license_model?:                   string;
    option_group_name?:               string;
    source_region?:                   string;
    storage_type?:                    string;
    tags_all?:                        string;
    vpc_id?:                          string;
}

export interface MemorydbSubnetGroupClass {
    subnet_ids:               string;
    name?:                    string;
    name_prefix?:             string;
    description?:             string;
    tags?:                    string;
    id?:                      string;
    arn?:                     string;
    supported_network_types?: string;
    tags_all?:                string;
    vpc_id?:                  string;
}

export interface NetworkACL {
    default_network_acl_id?: string;
    action:                  string;
    from_port:               string;
    protocol:                string;
    rule_no:                 string;
    to_port:                 string;
    egress?:                 string;
    ingress?:                string;
    subnet_ids?:             string;
    tags?:                   string;
    cidr_block?:             string;
    icmp_code?:              string;
    icmp_type?:              string;
    ipv6_cidr_block?:        string;
    arn?:                    string;
    id?:                     string;
    owner_id?:               string;
    tags_all?:               string;
    vpc_id?:                 string;
}

export interface DefaultRouteTable {
    default_route_table_id: string;
    propagating_vgws?:      string;
    route?:                 RoutesClass;
    tags?:                  string;
    id?:                    string;
    arn?:                   string;
    owner_id?:              string;
    tags_all?:              string;
    vpc_id?:                string;
}

export interface DefaultSecurityGroup {
    from_port:         string;
    protocol:          string;
    to_port:           string;
    egress?:           string;
    ingress?:          string;
    tags?:             string;
    cidr_blocks?:      string;
    description?:      string;
    ipv6_cidr_blocks?: string;
    prefix_list_ids?:  string;
    security_groups?:  string;
    self?:             string;
    arn?:              string;
    id?:               string;
    name?:             string;
    owner_id?:         string;
    tags_all?:         string;
}

export interface DefaultSubnet {
    force_destroy?:        string;
    availability_zone_id?: string;
    cidr_block?:           string;
    vpc_id?:               string;
}

export interface DefaultVpc {
    force_destroy?:    string;
    cidr_block?:       string;
    instance_tenancy?: string;
}

export interface DefaultVpcDHCPOptions {
    netbios_name_servers?: string;
    netbios_node_type?:    string;
    owner_id?:             string;
    tags?:                 string;
    id?:                   string;
    arn?:                  string;
}

export interface DetectiveGraph {
    tags?:         string;
    id?:           string;
    graph_arn?:    string;
    created_time?: string;
}

export interface DetectiveInvitationAccepter {
    graph_arn: string;
    id?:       string;
}

export interface DetectiveMember {
    account_id:                  string;
    email_address:               string;
    graph_arn:                   string;
    message?:                    string;
    disable_email_notification?: string;
    id?:                         string;
    status?:                     string;
    administrator_id?:           string;
    volume_usage_in_bytes?:      string;
    invited_time?:               string;
    updated_time?:               string;
}

export interface DevicefarmDevicePool {
    name:         string;
    project_arn:  string;
    rule:         string;
    description?: string;
    max_devices?: string;
    tags?:        string;
    attribute?:   string;
    operator?:    string;
    value?:       string;
    arn?:         string;
    tags_all?:    string;
}

export interface DevicefarmInstanceProfile {
    name:                               string;
    description?:                       string;
    exclude_app_packages_from_cleanup?: string;
    package_cleanup?:                   string;
    reboot_after_use?:                  string;
    tags?:                              string;
    arn?:                               string;
    tags_all?:                          string;
}

export interface DevicefarmNetworkProfile {
    name:                     string;
    project_arn:              string;
    description?:             string;
    downlink_bandwidth_bits?: string;
    downlink_delay_ms?:       string;
    downlink_jitter_ms?:      string;
    downlink_loss_percent?:   string;
    uplink_bandwidth_bits?:   string;
    uplink_delay_ms?:         string;
    uplink_jitter_ms?:        string;
    uplink_loss_percent?:     string;
    type?:                    string;
    tags?:                    string;
    arn?:                     string;
    tags_all?:                string;
}

export interface DevicefarmTestGridProject {
    name:               string;
    vpc_config:         string;
    security_group_ids: string;
    subnet_ids:         string;
    vpc_id:             string;
    description?:       string;
    tags?:              string;
    arn?:               string;
    tags_all?:          string;
}

export interface DevicefarmUpload {
    name:          string;
    project_arn:   string;
    type:          string;
    content_type?: string;
    arn?:          string;
    url?:          string;
    category?:     string;
    metadata?:     string;
}

export interface DirectoryServiceConditionalForwarder {
    directory_id:       string;
    dns_ips:            string;
    remote_domain_name: string;
}

export interface ResourceDirectoryServiceDirectory {
    name:                                  string;
    password:                              string;
    subnet_ids:                            string;
    vpc_id:                                string;
    customer_username:                     string;
    customer_dns_ips:                      string;
    size?:                                 string;
    vpc_settings?:                         string;
    connect_settings?:                     string;
    alias?:                                string;
    description?:                          string;
    desired_number_of_domain_controllers?: string;
    short_name?:                           string;
    enable_sso?:                           string;
    type?:                                 string;
    edition?:                              string;
    tags?:                                 string;
    id?:                                   string;
    access_url?:                           string;
    dns_ip_addresses?:                     string;
    security_group_id?:                    string;
    tags_all?:                             string;
    connect_ips?:                          string;
}

export interface DirectoryServiceLogSubscription {
    directory_id:   string;
    log_group_name: string;
}

export interface DirectoryServiceRadiusSettings {
    directory_id:             string;
    display_label:            string;
    radius_port:              string;
    radius_retries:           string;
    radius_servers:           string;
    radius_timeout:           string;
    shared_secret:            string;
    authentication_protocol?: string;
    use_same_username?:       string;
    id?:                      string;
}

export interface DirectoryServiceRegion {
    directory_id:                          string;
    region_name:                           string;
    vpc_settings:                          string;
    subnet_ids:                            string;
    desired_number_of_domain_controllers?: string;
    tags?:                                 string;
    vpc_id?:                               string;
    tags_all?:                             string;
}

export interface DirectoryServiceSharedDirectory {
    directory_id:         string;
    target:               string;
    id:                   string;
    method?:              string;
    notes?:               string;
    type?:                string;
    shared_directory_id?: string;
}

export interface DirectoryServiceSharedDirectoryAccepter {
    shared_directory_id: string;
    id?:                 string;
    method?:             string;
    notes?:              string;
    owner_account_id?:   string;
    owner_directory_id?: string;
}

export interface DirectoryServiceTrust {
    directory_id:                             string;
    remote_domain_name:                       string;
    trust_direction:                          string;
    trust_password:                           string;
    conditional_forwarder_ip_addrs?:          string;
    delete_associated_conditional_forwarder?: string;
    selective_auth?:                          string;
    trust_type?:                              string;
    created_date_time?:                       string;
    id?:                                      string;
    last_updated_date_time?:                  string;
    state_last_updated_date_time?:            string;
    trust_state?:                             string;
    trust_state_reason?:                      string;
}

export interface DlmLifecyclePolicy {
    description:              string;
    execution_role_arn:       string;
    policy_details:           string;
    encryption_configuration: string;
    retain_rule:              string;
    target:                   string;
    encrypted:                string;
    parameters:               string;
    type:                     string;
    description_regex:        string;
    event_type:               string;
    snapshot_owner:           string;
    create_rule:              string;
    name:                     string;
    deprecate_rule:           string;
    fast_restore_rule:        string;
    share_rule:               string;
    availability_zones:       string;
    target_accounts:          string;
    interval:                 string;
    interval_unit:            string;
    state?:                   string;
    tags?:                    string;
    action?:                  string;
    event_source?:            string;
    resource_types?:          string;
    resource_locations?:      string;
    policy_type?:             string;
    schedule?:                string;
    cross_region_copy?:       string;
    cmk_arn?:                 string;
    exclude_boot_volume?:     string;
    no_reboot?:               string;
    copy_tags?:               string;
    cross_region_copy_rule?:  string;
    tags_to_add?:             string;
    variable_tags?:           string;
    cron_expression?:         string;
    location?:                string;
    times?:                   string;
    count?:                   string;
    arn?:                     string;
    id?:                      string;
    tags_all?:                string;
}

export interface ResourceDmsCertificate {
    certificate_id:      string;
    certificate_pem?:    string;
    certificate_wallet?: string;
    tags?:               string;
    certificate_arn?:    string;
    tags_all?:           string;
}

export interface ResourceDmsEndpoint {
    endpoint_id:                                  string;
    endpoint_type:                                string;
    engine_name:                                  string;
    service_access_role_arn:                      string;
    auth_type:                                    string;
    server_name:                                  string;
    port:                                         string;
    kms_key_arn?:                                 string;
    certificate_arn?:                             string;
    database_name?:                               string;
    elasticsearch_settings?:                      ElasticsearchSettings;
    extra_connection_attributes?:                 string;
    kafka_settings?:                              KafkaSettings;
    kinesis_settings?:                            KinesisSettings;
    mongodb_settings?:                            MongodbSettings;
    password?:                                    string;
    redshift_settings?:                           RedshiftSettings;
    secrets_manager_access_role_arn?:             string;
    secrets_manager_arn?:                         string;
    service_access_role?:                         string;
    ssl_mode?:                                    string;
    tags?:                                        string;
    username?:                                    string;
    ssl_ca_certificate_arn?:                      string;
    topic?:                                       string;
    stream_arn?:                                  string;
    nesting_level?:                               string;
    auth_password?:                               string;
    auth_user_name?:                              string;
    bucket_folder?:                               string;
    bucket_name?:                                 string;
    encryption_mode?:                             string;
    add_column_name?:                             string;
    canned_acl_for_objects?:                      string;
    cdc_inserts_and_updates?:                     string;
    cdc_inserts_only?:                            string;
    cdc_max_batch_interval?:                      string;
    cdc_path?:                                    string;
    compression_type?:                            string;
    csv_delimiter?:                               string;
    csv_no_sup_value?:                            string;
    csv_null_value?:                              string;
    csv_row_delimiter?:                           string;
    data_format?:                                 string;
    data_page_size?:                              string;
    date_partition_delimiter?:                    string;
    date_partition_enabled?:                      string;
    date_partition_sequence?:                     string;
    dict_page_size_limit?:                        string;
    enable_statistics?:                           string;
    encoding_type?:                               string;
    external_table_definition?:                   string;
    ignore_header_rows?:                          string;
    include_op_for_full_load?:                    string;
    max_file_size?:                               string;
    parquet_timestamp_in_millisecond?:            string;
    parquet_version?:                             string;
    preserve_transactions?:                       string;
    rfc_4180?:                                    string;
    row_group_length?:                            string;
    timestamp_column_name?:                       string;
    use_csv_no_sup_value?:                        string;
    use_task_start_time_for_full_load_timestamp?: string;
    endpoint_arn?:                                string;
    tags_all?:                                    string;
}

export interface ElasticsearchSettings {
    endpoint_uri:               string;
    error_retry_duration:       string;
    full_load_error_percentage: string;
    service_access_role_arn:    string;
}

export interface KafkaSettings {
    broker:                         string;
    include_control_details:        string;
    include_null_and_empty:         string;
    include_partition_value:        string;
    include_table_alter_operations: string;
    include_transaction_details:    string;
    message_format:                 string;
    message_max_bytes:              string;
    no_hex_prefix:                  string;
    partition_include_schema_table: string;
    sasl_password:                  string;
    sasl_username:                  string;
    security_protocol:              string;
    ssl_ca_certificate_arn:         string;
    ssl_client_certificate_arn:     string;
    ssl_client_key_arn:             string;
    ssl_client_key_password:        string;
    topic:                          string;
}

export interface KinesisSettings {
    include_control_details:        string;
    include_null_and_empty:         string;
    include_partition_value:        string;
    include_table_alter_operations: string;
    include_transaction_details:    string;
    message_format:                 string;
    partition_include_schema_table: string;
    service_access_role_arn:        string;
    stream_arn:                     string;
}

export interface MongodbSettings {
    auth_mechanism:      string;
    auth_source:         string;
    auth_type:           string;
    docs_to_investigate: string;
    extract_doc_id:      string;
    nesting_level:       string;
}

export interface RedshiftSettings {
    bucket_folder:                     string;
    bucket_name:                       string;
    encryption_mode:                   string;
    server_side_encryption_kms_key_id: string;
    service_access_role_arn:           string;
}

export interface DmsEventSubscriptionClass {
    name:              string;
    source_ids?:       string;
    sns_topic_arn:     string;
    enabled?:          string;
    event_categories?: string;
    source_type?:      string;
    tags?:             string;
    arn?:              string;
    tags_all?:         string;
    severity?:         string;
    id?:               string;
    customer_aws_id?:  string;
}

export interface DmsReplicationConfig {
    compute_config:                string;
    replication_config_identifier: string;
    replication_type:              string;
    source_endpoint_arn:           string;
    table_mappings:                string;
    target_endpoint_arn:           string;
    max_capacity_units:            string;
    start_replication?:            string;
    replication_settings?:         string;
    resource_identifier?:          string;
    supplemental_settings?:        string;
    tags?:                         string;
    availability_zone?:            string;
    dns_name_servers?:             string;
    kms_key_id?:                   string;
    min_capacity_units?:           string;
    multi_az?:                     string;
    preferred_maintenance_window?: string;
    replication_subnet_group_id?:  string;
    vpc_security_group_ids?:       string;
    arn?:                          string;
    tags_all?:                     string;
}

export interface ResourceDmsReplicationSubnetGroup {
    replication_subnet_group_description: string;
    replication_subnet_group_id:          string;
    subnet_ids:                           string;
    tags?:                                string;
    tags_all?:                            string;
    vpc_id?:                              string;
}

export interface DmsS3Endpoint {
    bucket_name:                                  string;
    endpoint_id:                                  string;
    endpoint_type:                                string;
    service_access_role_arn:                      string;
    cdc_path?:                                    string;
    external_table_definition?:                   string;
    add_column_name?:                             string;
    add_trailing_padding_character?:              string;
    bucket_folder?:                               string;
    canned_acl_for_objects?:                      string;
    cdc_inserts_and_updates?:                     string;
    cdc_inserts_only?:                            string;
    cdc_max_batch_interval?:                      string;
    cdc_min_file_size?:                           string;
    certificate_arn?:                             string;
    compression_type?:                            string;
    csv_delimiter?:                               string;
    csv_no_sup_value?:                            string;
    csv_null_value?:                              string;
    csv_row_delimiter?:                           string;
    data_format?:                                 string;
    data_page_size?:                              string;
    date_partition_delimiter?:                    string;
    date_partition_enabled?:                      string;
    date_partition_sequence?:                     string;
    date_partition_timezone?:                     string;
    detach_target_on_lob_lookup_failure_parquet?: string;
    dict_page_size_limit?:                        string;
    enable_statistics?:                           string;
    encoding_type?:                               string;
    encryption_mode?:                             string;
    expected_bucket_owner?:                       string;
    ignore_header_rows?:                          string;
    include_op_for_full_load?:                    string;
    kms_key_arn?:                                 string;
    max_file_size?:                               string;
    parquet_timestamp_in_millisecond?:            string;
    parquet_version?:                             string;
    preserve_transactions?:                       string;
    rfc_4180?:                                    string;
    row_group_length?:                            string;
    server_side_encryption_kms_key_id?:           string;
    ssl_mode?:                                    string;
    tags?:                                        string;
    timestamp_column_name?:                       string;
    use_csv_no_sup_value?:                        string;
    use_task_start_time_for_full_load_timestamp?: string;
    endpoint_arn?:                                string;
    engine_display_name?:                         string;
    external_id?:                                 string;
    status?:                                      string;
    tags_all?:                                    string;
}

export interface DocdbCluster {
    apply_immediately?:               string;
    availability_zones?:              string;
    backup_retention_period?:         string;
    cluster_identifier_prefix?:       string;
    cluster_identifier?:              string;
    db_subnet_group_name?:            string;
    db_cluster_parameter_group_name?: string;
    deletion_protection?:             string;
    enabled_cloudwatch_logs_exports?: string;
    engine_version?:                  string;
    engine?:                          string;
    final_snapshot_identifier?:       string;
    global_cluster_identifier?:       string;
    kms_key_id?:                      string;
    master_password?:                 string;
    master_username?:                 string;
    port?:                            string;
    preferred_backup_window?:         string;
    preferred_maintenance_window?:    string;
    skip_final_snapshot?:             string;
    storage_encrypted?:               string;
    tags?:                            string;
    vpc_security_group_ids?:          string;
    arn?:                             string;
    cluster_members?:                 string;
    cluster_resource_id?:             string;
    endpoint?:                        string;
    hosted_zone_id?:                  string;
    id?:                              string;
    reader_endpoint?:                 string;
    tags_all?:                        string;
}

export interface ClusterInstance {
    cluster_identifier:               string;
    instance_class:                   string;
    apply_immediately?:               string;
    auto_minor_version_upgrade?:      string;
    availability_zone?:               string;
    enable_performance_insights?:     string;
    engine?:                          string;
    identifier?:                      string;
    identifier_prefix?:               string;
    performance_insights_kms_key_id?: string;
    preferred_maintenance_window?:    string;
    promotion_tier?:                  string;
    tags?:                            string;
    arn?:                             string;
    db_subnet_group_name?:            string;
    dbi_resource_id?:                 string;
    endpoint?:                        string;
    engine_version?:                  string;
    kms_key_id?:                      string;
    port?:                            string;
    preferred_backup_window?:         string;
    storage_encrypted?:               string;
    tags_all?:                        string;
    writer?:                          string;
    ca_cert_identifier?:              string;
    neptune_parameter_group_name?:    string;
    publicly_accessible?:             string;
    address?:                         string;
    id?:                              string;
    kms_key_arn?:                     string;
}

export interface GlobalCluster {
    global_cluster_identifier?:    string;
    database_name?:                string;
    deletion_protection?:          string;
    engine?:                       string;
    source_db_cluster_identifier?: string;
    storage_encrypted?:            string;
    arn?:                          string;
    global_cluster_resource_id?:   string;
    id?:                           string;
    force_destroy?:                string;
}

export interface DxBGPPeer {
    address_family:       string;
    bgp_asn:              string;
    virtual_interface_id: string;
    amazon_address?:      string;
    bgp_auth_key?:        string;
    customer_address?:    string;
    id?:                  string;
    bgp_status?:          string;
    bgp_peer_id?:         string;
    aws_device?:          string;
}

export interface ResourceDxConnection {
    bandwidth:               string;
    location:                string;
    name:                    string;
    encryption_mode?:        string;
    provider_name?:          string;
    skip_destroy?:           string;
    tags?:                   string;
    arn?:                    string;
    aws_device?:             string;
    has_logical_redundancy?: string;
    id?:                     string;
    jumbo_frame_capable?:    string;
    macsec_capable?:         string;
    owner_account_id?:       string;
    partner_name?:           string;
    port_encryption_status?: string;
    tags_all?:               string;
    vlan_id?:                string;
}

export interface DxConnectionAssociation {
    connection_id: string;
    lag_id:        string;
}

export interface DxGatewayAssociation {
    dx_gateway_id:                        string;
    associated_gateway_id?:               string;
    associated_gateway_owner_account_id?: string;
    proposal_id?:                         string;
    allowed_prefixes?:                    string;
    id?:                                  string;
    associated_gateway_type?:             string;
    dx_gateway_association_id?:           string;
    dx_gateway_owner_account_id?:         string;
}

export interface DxHostedConnection {
    name:                    string;
    bandwidth:               string;
    connection_id:           string;
    owner_account_id:        string;
    vlan:                    string;
    id?:                     string;
    jumbo_frame_capable?:    string;
    has_logical_redundancy?: string;
    aws_device?:             string;
    state?:                  string;
    lag_id?:                 string;
    loa_issue_time?:         string;
    location?:               string;
    partner_name?:           string;
    provider_name?:          string;
    region?:                 string;
}

export interface DxVirtualInterface {
    address_family:         string;
    bgp_asn:                string;
    connection_id:          string;
    name:                   string;
    owner_account_id?:      string;
    vlan:                   string;
    amazon_address?:        string;
    bgp_auth_key?:          string;
    customer_address?:      string;
    mtu?:                   string;
    id?:                    string;
    arn?:                   string;
    aws_device?:            string;
    jumbo_frame_capable?:   string;
    route_filter_prefixes?: string;
    tags?:                  string;
    tags_all?:              string;
    dx_gateway_id?:         string;
    sitelink_enabled?:      string;
}

export interface DxHostedVirtualInterfaceAccepter {
    virtual_interface_id: string;
    dx_gateway_id?:       string;
    tags?:                string;
    id?:                  string;
    arn?:                 string;
    tags_all?:            string;
}

export interface DxHostedPublicVirtualInterfaceAccepter {
    virtual_interface_id: string;
    id?:                  string;
    arn?:                 string;
    tags_all?:            string;
}

export interface DxLag {
    name:                    string;
    connections_bandwidth:   string;
    location:                string;
    connection_id?:          string;
    provider_name?:          string;
    tags?:                   string;
    arn?:                    string;
    has_logical_redundancy?: string;
    id?:                     string;
    owner_account_id?:       string;
    tags_all?:               string;
}

export interface DxMacsecKeyAssociation {
    connection_id: string;
    cak?:          string;
    ckn?:          string;
    id?:           string;
    start_on?:     string;
    state?:        string;
}

export interface DxPrivateVirtualInterface {
    address_family:       string;
    bgp_asn:              string;
    connection_id:        string;
    name:                 string;
    vlan:                 string;
    amazon_address?:      string;
    bgp_auth_key?:        string;
    customer_address?:    string;
    dx_gateway_id?:       string;
    mtu?:                 string;
    sitelink_enabled?:    string;
    tags?:                string;
    vpn_gateway_id?:      string;
    id?:                  string;
    arn?:                 string;
    aws_device?:          string;
    jumbo_frame_capable?: string;
    tags_all?:            string;
}

export interface DynamodbContributorInsights {
    table_name:  string;
    index_name?: string;
}

export interface DynamodbGlobalTable {
    name:        string;
    replica:     string;
    region_name: string;
    id?:         string;
    arn?:        string;
}

export interface DynamodbKinesisStreamingDestination {
    stream_arn: string;
    table_name: string;
    id?:        string;
}

export interface ResourceDynamodbTable {
    attribute:                    string;
    name:                         string;
    type:                         string;
    hash_key:                     string;
    projection_type:              string;
    range_key:                    string;
    enabled:                      string;
    region_name:                  string;
    attribute_name:               string;
    billing_mode?:                string;
    deletion_protection_enabled?: string;
    global_secondary_index?:      string;
    local_secondary_index?:       string;
    point_in_time_recovery?:      string;
    read_capacity?:               string;
    replica?:                     string;
    restore_date_time?:           string;
    restore_source_name?:         string;
    restore_to_latest_time?:      string;
    server_side_encryption?:      string;
    stream_enabled?:              string;
    stream_view_type?:            string;
    table_class?:                 string;
    tags?:                        string;
    ttl?:                         string;
    write_capacity?:              string;
    non_key_attributes?:          string;
    propagate_tags?:              string;
    arn?:                         string;
    id?:                          string;
    "replica.*.arn"?:             string;
    "replica.*.stream_arn"?:      string;
    "replica.*.stream_label"?:    string;
    stream_arn?:                  string;
    stream_label?:                string;
    tags_all?:                    string;
}

export interface ResourceDynamodbTableItem {
    hash_key:   string;
    item:       string;
    table_name: string;
    range_key?: string;
}

export interface DynamodbTableReplica {
    global_table_arn:        string;
    point_in_time_recovery?: string;
    table_class_override?:   string;
    tags?:                   string;
    arn?:                    string;
    id?:                     string;
    tags_all?:               string;
}

export interface Tag {
    resource_arn?: string;
    key:           string;
    value:         string;
    id?:           string;
    resource_id?:  string;
}

export interface ResourceEbsDefaultKmsKey {
    key_arn?: string;
}

export interface EbsSnapshotCopyClass {
    volume_id?:              string;
    description?:            string;
    outpost_arn?:            string;
    storage_tier?:           string;
    permanent_restore?:      string;
    temporary_restore_days?: string;
    tags?:                   string;
    arn?:                    string;
    id?:                     string;
    owner_id?:               string;
    owner_alias?:            string;
    encrypted?:              string;
    volume_size?:            string;
    kms_key_id?:             string;
    data_encryption_key_id?: string;
    tags_all?:               string;
}

export interface EbsSnapshotImport {
    disk_container:          string;
    format:                  string;
    client_data?:            string;
    description?:            string;
    encrypted?:              string;
    kms_key_id?:             string;
    storage_tier?:           string;
    permanent_restore?:      string;
    temporary_restore_days?: string;
    role_name?:              string;
    tags?:                   string;
    comment?:                string;
    upload_start?:           string;
    upload_end?:             string;
    upload_size?:            string;
    url?:                    string;
    user_bucket?:            string;
    s3_bucket?:              string;
    s3_key?:                 string;
    arn?:                    string;
    id?:                     string;
    owner_id?:               string;
    owner_alias?:            string;
    volume_size?:            string;
    data_encryption_key_id?: string;
    tags_all?:               string;
}

export interface ResourceEbsVolume {
    availability_zone:     string;
    encrypted?:            string;
    final_snapshot?:       string;
    iops?:                 string;
    multi_attach_enabled?: string;
    size?:                 string;
    outpost_arn?:          string;
    type?:                 string;
    kms_key_id?:           string;
    tags?:                 string;
    id?:                   string;
    arn?:                  string;
    tags_all?:             string;
}

export interface Ec2AvailabilityZoneGroup {
    group_name:    string;
    opt_in_status: string;
    id?:           string;
}

export interface Ec2CapacityReservation {
    availability_zone:        string;
    instance_count:           string;
    instance_platform:        string;
    instance_type:            string;
    ebs_optimized?:           string;
    end_date?:                string;
    end_date_type?:           string;
    ephemeral_storage?:       string;
    instance_match_criteria?: string;
    outpost_arn?:             string;
    placement_group_arn?:     string;
    tags?:                    string;
    tenancy?:                 string;
    id?:                      string;
    owner_id?:                string;
    arn?:                     string;
    tags_all?:                string;
}

export interface Gateway {
    vpc_id?:   string;
    tags?:     string;
    arn?:      string;
    id?:       string;
    owner_id?: string;
    tags_all?: string;
}

export interface Ec2ClientVPNAuthorizationRule {
    client_vpn_endpoint_id: string;
    target_network_cidr:    string;
    access_group_id?:       string;
    authorize_all_groups?:  string;
    description?:           string;
}

export interface ResourceEc2ClientVPNEndpoint {
    authentication_options:          string;
    client_cidr_block:               string;
    connection_log_options:          string;
    server_certificate_arn:          string;
    type:                            string;
    enabled:                         string;
    client_connect_options?:         string;
    client_login_banner_options?:    string;
    description?:                    string;
    dns_servers?:                    string;
    security_group_ids?:             string;
    self_service_portal?:            string;
    session_timeout_hours?:          string;
    split_tunnel?:                   string;
    tags?:                           string;
    transport_protocol?:             string;
    vpc_id?:                         string;
    vpn_port?:                       string;
    active_directory_id?:            string;
    root_certificate_chain_arn?:     string;
    saml_provider_arn?:              string;
    self_service_saml_provider_arn?: string;
    lambda_function_arn?:            string;
    banner_text?:                    string;
    cloudwatch_log_group?:           string;
    cloudwatch_log_stream?:          string;
    arn?:                            string;
    dns_name?:                       string;
    id?:                             string;
    tags_all?:                       string;
}

export interface Ec2ClientVPNNetworkAssociation {
    client_vpn_endpoint_id: string;
    subnet_id:              string;
    id?:                    string;
    association_id?:        string;
    vpc_id?:                string;
}

export interface Ec2ClientVPNRoute {
    client_vpn_endpoint_id: string;
    destination_cidr_block: string;
    target_vpc_subnet_id:   string;
    description?:           string;
    id?:                    string;
    origin?:                string;
    type?:                  string;
}

export interface Ec2Fleet {
    launch_template_config:               LaunchTemplateConfig;
    target_capacity_specification:        TargetCapacitySpecification;
    context?:                             string;
    excess_capacity_termination_policy?:  string;
    on_demand_options?:                   OnDemandOptions;
    replace_unhealthy_instances?:         string;
    spot_options?:                        SpotOptions;
    tags?:                                string;
    terminate_instances?:                 string;
    terminate_instances_with_expiration?: string;
    type?:                                string;
    valid_from?:                          string;
    valid_until?:                         string;
    single_instance_type?:                string;
    maintenance_strategies?:              MaintenanceStrategies;
    capacity_rebalance?:                  CapacityRebalance;
    replacement_strategy?:                string;
    id?:                                  string;
    arn?:                                 string;
    fleet_state?:                         string;
    fulfilled_capacity?:                  string;
    fulfilled_on_demand_capacity?:        string;
    tags_all?:                            string;
}

export interface CapacityRebalance {
    replacement_strategy: string;
}

export interface LaunchTemplateConfig {
    version:                                           string;
    launch_template_specification?:                    string;
    override?:                                         string;
    launch_template_id?:                               string;
    launch_template_name?:                             string;
    availability_zone?:                                string;
    instance_requirements?:                            string;
    instance_type?:                                    string;
    max_price?:                                        string;
    priority?:                                         string;
    subnet_id?:                                        string;
    accelerator_manufacturers?:                        string;
    accelerator_names?:                                string;
    accelerator_types?:                                string;
    bare_metal?:                                       string;
    burstable_performance?:                            string;
    instance_generations?:                             string;
    local_storage?:                                    string;
    local_storage_types?:                              string;
    on_demand_max_price_percentage_over_lowest_price?: string;
    require_hibernate_support?:                        string;
    spot_max_price_percentage_over_lowest_price?:      string;
}

export interface MaintenanceStrategies {
    capacity_rebalance: string;
}

export interface OnDemandOptions {
    allocation_strategy:      string;
    max_total_price:          string;
    min_target_capacity:      string;
    single_availability_zone: string;
    single_instance_type:     string;
}

export interface SpotOptions {
    allocation_strategy:            string;
    instance_interruption_behavior: string;
    instance_pools_to_use_count:    string;
    maintenance_strategies:         string;
    max_total_price:                string;
    min_target_capacity:            string;
    single_availability_zone:       string;
    single_instance_type:           string;
}

export interface TargetCapacitySpecification {
    default_target_capacity_type: string;
    total_target_capacity:        string;
    on_demand_target_capacity?:   string;
    spot_target_capacity?:        string;
    target_capacity_unit_type?:   string;
}

export interface ResourceEc2Host {
    availability_zone: string;
    asset_id?:         string;
    auto_placement?:   string;
    host_recovery?:    string;
    instance_family?:  string;
    instance_type?:    string;
    outpost_arn?:      string;
    tags?:             string;
    id?:               string;
    arn?:              string;
    owner_id?:         string;
    tags_all?:         string;
}

export interface Ec2InstanceConnectEndpoint {
    subnet_id:              string;
    preserve_client_ip?:    string;
    security_group_ids?:    string;
    tags?:                  string;
    arn?:                   string;
    availability_zone?:     string;
    dns_name?:              string;
    fips_dns_name?:         string;
    network_interface_ids?: string;
    owner_id?:              string;
    tags_all?:              string;
    vpc_id?:                string;
}

export interface Ec2InstanceState {
    instance_id: string;
    state:       string;
    force?:      string;
    id?:         string;
}

export interface Ec2LocalGatewayRoute {
    destination_cidr_block:                   string;
    local_gateway_route_table_id:             string;
    local_gateway_virtual_interface_group_id: string;
    id?:                                      string;
}

export interface Ec2LocalGatewayRouteTableVpcAssociation {
    local_gateway_route_table_id?: string;
    vpc_id:                        string;
    tags?:                         string;
    id?:                           string;
    tags_all?:                     string;
}

export interface ResourceEc2ManagedPrefixList {
    max_entries:     string;
    name:            string;
    cidr:            string;
    address_family?: string;
    entry?:          string;
    tags?:           string;
    description?:    string;
    arn?:            string;
    id?:             string;
    owner_id?:       string;
    tags_all?:       string;
    version?:        string;
}

export interface Ec2ManagedPrefixListEntry {
    cidr:           string;
    prefix_list_id: string;
    description?:   string;
    id?:            string;
}

export interface ResourceEc2NetworkInsightsAnalysis {
    network_insights_path_id: string;
    filter_in_arns?:          string;
    wait_for_completion?:     string;
    tags?:                    string;
    alternate_path_hints?:    string;
    arn?:                     string;
    explanations?:            string;
    forward_path_components?: string;
    id?:                      string;
    path_found?:              string;
    return_path_components?:  string;
    start_date?:              string;
    status?:                  string;
    status_message?:          string;
    tags_all?:                string;
    warning_message?:         string;
    component_arn?:           string;
    component_id?:            string;
}

export interface ResourceEc2NetworkInsightsPath {
    source:            string;
    destination:       string;
    protocol:          string;
    source_ip?:        string;
    destination_ip?:   string;
    destination_port?: string;
    tags?:             string;
    arn?:              string;
    destination_arn?:  string;
    id?:               string;
    source_arn?:       string;
    tags_all?:         string;
}

export interface Ec2SubnetCIDRReservation {
    cidr_block:       string;
    reservation_type: string;
    subnet_id:        string;
    description?:     string;
    id?:              string;
    owner_id?:        string;
}

export interface Ec2TrafficMirrorFilterRule {
    destination_cidr_block:  string;
    rule_action:             string;
    rule_number:             string;
    source_cidr_block:       string;
    traffic_direction:       string;
    description?:            string;
    destination_port_range?: string;
    protocol?:               string;
    source_port_range?:      string;
    from_port?:              string;
    to_port?:                string;
    arn?:                    string;
    id?:                     string;
}

export interface Ec2TrafficMirrorSession {
    traffic_mirror_target_id: string;
    session_number:           string;
    description?:             string;
    network_interface_id?:    string;
    packet_length?:           string;
    virtual_network_id?:      string;
    tags?:                    string;
    arn?:                     string;
    id?:                      string;
    tags_all?:                string;
    owner_id?:                string;
}

export interface Ec2TrafficMirrorTarget {
    description?:                       string;
    network_interface_id?:              string;
    network_load_balancer_arn?:         string;
    gateway_load_balancer_endpoint_id?: string;
    tags?:                              string;
    id?:                                string;
    tags_all?:                          string;
    arn?:                               string;
    owner_id?:                          string;
}

export interface ResourceEc2TransitGatewayConnect {
    transit_gateway_id:                               string;
    transport_attachment_id:                          string;
    protocol?:                                        string;
    tags?:                                            string;
    transit_gateway_default_route_table_association?: string;
    transit_gateway_default_route_table_propagation?: string;
    id?:                                              string;
    tags_all?:                                        string;
}

export interface ResourceEc2TransitGatewayConnectPeer {
    inside_cidr_blocks:             string;
    peer_address:                   string;
    transit_gateway_attachment_id:  string;
    bgp_asn?:                       string;
    tags?:                          string;
    transit_gateway_address?:       string;
    id?:                            string;
    arn?:                           string;
    bgp_peer_address?:              string;
    bgp_transit_gateway_addresses?: string;
    tags_all?:                      string;
}

export interface ResourceEc2TransitGatewayMulticastDomain {
    transit_gateway_id:               string;
    auto_accept_shared_associations?: string;
    igmpv2_support?:                  string;
    static_sources_support?:          string;
    tags?:                            string;
    id?:                              string;
    arn?:                             string;
    owner_id?:                        string;
    tags_all?:                        string;
}

export interface Ec2TransitGatewayMulticastDomainAssociation {
    subnet_id:                           string;
    transit_gateway_attachment_id:       string;
    transit_gateway_multicast_domain_id: string;
    id?:                                 string;
}

export interface Ec2TransitGatewayMulticastGroup {
    group_ip_address:                    string;
    network_interface_id:                string;
    transit_gateway_multicast_domain_id: string;
    id?:                                 string;
}

export interface Ec2TransitGatewayPeeringAttachmentAccepterClass {
    peer_region?:                   string;
    peer_transit_gateway_id?:       string;
    transit_gateway_id?:            string;
    peer_account_id?:               string;
    tags?:                          string;
    id?:                            string;
    tags_all?:                      string;
    transit_gateway_attachment_id?: string;
}

export interface Ec2TransitGatewayPolicyTable {
    transit_gateway_id: string;
    tags?:              string;
    arn?:               string;
    id?:                string;
    state?:             string;
    tags_all?:          string;
}

export interface Ec2TransitGatewayPolicyTableAssociation {
    transit_gateway_attachment_id:   string;
    transit_gateway_policy_table_id: string;
    id?:                             string;
    resource_id?:                    string;
    resource_type?:                  string;
}

export interface Ec2TransitGatewayPrefixListReferenceClass {
    prefix_list_id?:                string;
    transit_gateway_route_table_id: string;
    blackhole?:                     string;
    transit_gateway_attachment_id?: string;
    id?:                            string;
    destination_cidr_block?:        string;
}

export interface ResourceEc2TransitGatewayRouteTable {
    transit_gateway_id:               string;
    tags?:                            string;
    arn?:                             string;
    default_association_route_table?: string;
    default_propagation_route_table?: string;
    id?:                              string;
    tags_all?:                        string;
}

export interface Ec2TransitGatewayRouteTableAtion {
    transit_gateway_attachment_id:  string;
    transit_gateway_route_table_id: string;
    replace_existing_association?:  string;
    id?:                            string;
    resource_id?:                   string;
    resource_type?:                 string;
}

export interface EcrPolicy {
    repository:   string;
    policy:       string;
    registry_id?: string;
}

export interface PurpleEcrPullThroughCacheRule {
    ecr_repository_prefix?: string;
    upstream_registry_url?: string;
    registry_id?:           string;
}

export interface EcrRegistryPolicy {
    policy:       string;
    registry_id?: string;
}

export interface EcrRegistryScanningConfiguration {
    registry_id?: string;
}

export interface EcrReplicationConfiguration {
    replication_configuration: string;
    rule:                      string;
    destination:               string;
    region:                    string;
    registry_id:               string;
    filter:                    string;
    filter_type:               string;
    repository_filter?:        string;
}

export interface ResourceEcrRepository {
    name:                      string;
    encryption_configuration?: EcrRepositoryEncryptionConfiguration;
    force_delete?:             string;
    image_tag_mutability?:     string;
    tags?:                     string;
    arn?:                      string;
    registry_id?:              string;
    repository_url?:           string;
    tags_all?:                 string;
}

export interface EcrRepositoryEncryptionConfiguration {
    encryption_type: string;
    kms_key:         string;
}

export interface EcrpublicRepository {
    repository_name: string;
    catalog_data?:   CatalogData;
    tags?:           string;
    arn?:            string;
    id?:             string;
    registry_id?:    string;
    repository_uri?: string;
    tags_all?:       string;
}

export interface CatalogData {
    about_text:        string;
    architectures:     string;
    description:       string;
    logo_image_blob:   string;
    operating_systems: string;
    usage_text:        string;
}

export interface EcrpublicRepositoryPolicy {
    repository_name: string;
    policy:          string;
    registry_id?:    string;
}

export interface EcsAccountSettingDefault {
    name:           string;
    value:          string;
    id?:            string;
    prinicpal_arn?: string;
}

export interface EcsCapacityProvider {
    auto_scaling_group_provider:     string;
    name:                            string;
    auto_scaling_group_arn:          string;
    tags?:                           string;
    managed_scaling?:                string;
    managed_termination_protection?: string;
    instance_warmup_period?:         string;
    maximum_scaling_step_size?:      string;
    minimum_scaling_step_size?:      string;
    status?:                         string;
    target_capacity?:                string;
    arn?:                            string;
    id?:                             string;
    tags_all?:                       string;
}

export interface ResourceEcsCluster {
    name:                            string;
    value:                           string;
    namespace:                       string;
    configuration?:                  string;
    service_connect_defaults?:       string;
    setting?:                        string;
    tags?:                           string;
    execute_command_configuration?:  string;
    kms_key_id?:                     string;
    log_configuration?:              string;
    logging?:                        string;
    cloud_watch_encryption_enabled?: string;
    cloud_watch_log_group_name?:     string;
    s3_bucket_name?:                 string;
    s3_bucket_encryption_enabled?:   string;
    s3_key_prefix?:                  string;
    arn?:                            string;
    id?:                             string;
    tags_all?:                       string;
}

export interface EcsClusterCapacityProviders {
    capacity_provider:                   string;
    capacity_providers?:                 string;
    cluster_name?:                       string;
    default_capacity_provider_strategy?: string;
    weight?:                             string;
    base?:                               string;
    id?:                                 string;
}

export interface ResourceEcsService {
    rollback:                            string;
    weight:                              string;
    value_from:                          string;
    port_name:                           string;
    alarms?:                             Alarms;
    capacity_provider_strategy?:         CapacityProviderStrategy;
    cluster?:                            string;
    deployment_circuit_breaker?:         DeploymentCircuitBreaker;
    deployment_controller?:              DeploymentController;
    deployment_maximum_percent?:         string;
    deployment_minimum_healthy_percent?: string;
    desired_count?:                      string;
    enable_ecs_managed_tags?:            string;
    enable_execute_command?:             string;
    force_new_deployment?:               string;
    health_check_grace_period_seconds?:  string;
    iam_role?:                           string;
    launch_type?:                        string;
    load_balancer?:                      LoadBalancer;
    network_configuration?:              NetworkConfiguration;
    ordered_placement_strategy?:         DeploymentController;
    placement_constraints?:              PlacementConstraint;
    platform_version?:                   string;
    propagate_tags?:                     string;
    service_connect_configuration?:      ServiceConnectConfiguration;
    service_registries?:                 ServiceRegistries;
    tags?:                               string;
    task_definition?:                    string;
    triggers?:                           string;
    wait_for_steady_state?:              string;
    type?:                               string;
    assign_public_ip?:                   string;
    expression?:                         string;
    container_name?:                     string;
    log_configuration?:                  EcsServiceLogConfiguration;
    service?:                            EcsServiceService;
    secret_option?:                      SecretOption;
    client_alias?:                       ClientAlias;
    id?:                                 string;
    name?:                               string;
    tags_all?:                           string;
}

export interface Alarms {
    alarm_names: string;
    enable:      string;
    rollback:    string;
}

export interface ClientAlias {
    dns_name: string;
    port:     string;
}

export interface DeploymentCircuitBreaker {
    enable:   string;
    rollback: string;
}

export interface DeploymentController {
    type: string;
}

export interface LoadBalancer {
    elb_name:         string;
    target_group_arn: string;
    container_name:   string;
}

export interface EcsServiceLogConfiguration {
    log_driver:    string;
    options:       string;
    secret_option: string;
}

export interface SecretOption {
    name:       string;
    value_from: string;
}

export interface EcsServiceService {
    client_alias:          string;
    discovery_name:        string;
    ingress_port_override: string;
    port_name:             string;
}

export interface ServiceConnectConfiguration {
    enabled:           string;
    log_configuration: string;
    namespace:         string;
    service:           string;
}

export interface ServiceRegistries {
    registry_arn:   string;
    port:           string;
    container_port: string;
    container_name: string;
}

export interface ResourceEcsTaskDefinition {
    container_definitions:                         string;
    family:                                        string;
    name:                                          string;
    domain:                                        string;
    type:                                          string;
    size_in_gib:                                   string;
    cpu?:                                          string;
    execution_role_arn?:                           string;
    inference_accelerator?:                        InferenceAccelerator;
    ipc_mode?:                                     string;
    memory?:                                       string;
    network_mode?:                                 string;
    runtime_platform?:                             RuntimePlatform;
    pid_mode?:                                     string;
    placement_constraints?:                        PlacementConstraint;
    proxy_configuration?:                          ProxyConfiguration;
    ephemeral_storage?:                            EphemeralStorage;
    requires_compatibilities?:                     string;
    skip_destroy?:                                 string;
    tags?:                                         string;
    task_role_arn?:                                string;
    volume?:                                       Volume;
    docker_volume_configuration?:                  DockerVolumeConfiguration;
    efs_volume_configuration?:                     EFSVolumeConfiguration;
    fsx_windows_file_server_volume_configuration?: FsxWindowsFileServerVolumeConfiguration;
    scope?:                                        string;
    authorization_config?:                         string;
    iam?:                                          string;
    arn?:                                          string;
    arn_without_revision?:                         string;
    revision?:                                     string;
    tags_all?:                                     string;
}

export interface DockerVolumeConfiguration {
    driver_opts: string;
    driver:      string;
    labels:      string;
    scope:       string;
}

export interface EFSVolumeConfiguration {
    file_system_id:          string;
    root_directory:          string;
    transit_encryption:      string;
    transit_encryption_port: string;
    authorization_config:    string;
}

export interface EphemeralStorage {
    size_in_gib: string;
}

export interface FsxWindowsFileServerVolumeConfiguration {
    file_system_id:        string;
    root_directory:        string;
    authorization_config:  string;
    credentials_parameter: string;
    domain:                string;
}

export interface ProxyConfiguration {
    container_name: string;
    properties:     string;
    type:           string;
}

export interface RuntimePlatform {
    operating_system_family: string;
    cpu_architecture:        string;
    access_point_id:         string;
    iam:                     string;
}

export interface Volume {
    docker_volume_configuration:                  string;
    efs_volume_configuration:                     string;
    fsx_windows_file_server_volume_configuration: string;
    host_path:                                    string;
    name:                                         string;
}

export interface EcsTaskSet {
    service:                     string;
    cluster:                     string;
    task_definition:             string;
    capacity_provider_strategy?: string;
    external_id?:                string;
    force_delete?:               string;
    launch_type?:                string;
    load_balancer?:              string;
    platform_version?:           string;
    network_configuration?:      string;
    scale?:                      string;
    service_registries?:         string;
    tags?:                       string;
    wait_until_stable?:          string;
    wait_until_stable_timeout?:  string;
    id?:                         string;
    arn?:                        string;
    stability_status?:           string;
    status?:                     string;
    tags_all?:                   string;
    task_set_id?:                string;
}

export interface ResourceEFSAccessPoint {
    file_system_id:   string;
    uid:              string;
    posix_user?:      POSIXUser;
    tags?:            string;
    creation_info?:   CreationInfo;
    path?:            string;
    arn?:             string;
    file_system_arn?: string;
    id?:              string;
    tags_all?:        string;
}

export interface CreationInfo {
    owner_gid:   string;
    owner_uid:   string;
    permissions: string;
}

export interface POSIXUser {
    gid:            string;
    secondary_gids: string;
    uid:            string;
}

export interface EFSBackupPolicy {
    file_system_id: string;
    backup_policy:  string;
    status:         string;
    id?:            string;
}

export interface ResourceEFSFileSystem {
    availability_zone_name?:              string;
    creation_token?:                      string;
    encrypted?:                           string;
    kms_key_id?:                          string;
    lifecycle_policy?:                    string;
    performance_mode?:                    string;
    provisioned_throughput_in_mibps?:     string;
    tags?:                                string;
    throughput_mode?:                     string;
    transition_to_ia?:                    string;
    transition_to_primary_storage_class?: string;
    arn?:                                 string;
    availability_zone_id?:                string;
    id?:                                  string;
    dns_name?:                            string;
    name?:                                string;
    number_of_mount_targets?:             string;
    owner_id?:                            string;
    size_in_bytes?:                       string;
    tags_all?:                            string;
    value?:                               string;
    value_in_ia?:                         string;
    value_in_standard?:                   string;
}

export interface EFSFileSystemPolicy {
    file_system_id:                      string;
    policy:                              string;
    bypass_policy_lockout_safety_check?: string;
    id?:                                 string;
}

export interface EFSReplicationConfiguration {
    source_file_system_id:            string;
    destination:                      string;
    availability_zone_name?:          string;
    kms_key_id?:                      string;
    region?:                          string;
    creation_time?:                   string;
    original_source_file_system_arn?: string;
    source_file_system_arn?:          string;
    source_file_system_region?:       string;
    "destination[0].file_system_id"?: string;
    "destination[0].status"?:         string;
}

export interface ResourceEip {
    address?:                   string;
    associate_with_private_ip?: string;
    customer_owned_ipv4_pool?:  string;
    domain?:                    string;
    instance?:                  string;
    network_border_group?:      string;
    network_interface?:         string;
    public_ipv4_pool?:          string;
    tags?:                      string;
    allocation_id?:             string;
    association_id?:            string;
    carrier_ip?:                string;
    customer_owned_ip?:         string;
    id?:                        string;
    private_dns?:               string;
    private_ip?:                string;
    public_dns?:                string;
    public_ip?:                 string;
}

export interface EipAssociation {
    allocation_id?:        string;
    allow_reassociation?:  string;
    instance_id?:          string;
    network_interface_id?: string;
    private_ip_address?:   string;
    public_ip?:            string;
    association_id?:       string;
}

export interface ResourceEksAddon {
    addon_name:                   string;
    cluster_name:                 string;
    addon_version?:               string;
    configuration_values?:        string;
    resolve_conflicts_on_create?: string;
    resolve_conflicts_on_update?: string;
    tags?:                        string;
    preserve?:                    string;
    arn?:                         string;
    id?:                          string;
    status?:                      string;
    created_at?:                  string;
    modified_at?:                 string;
    tags_all?:                    string;
}

export interface ResourceEksCluster {
    name:                                           string;
    role_arn:                                       string;
    vpc_config:                                     string;
    key_arn:                                        string;
    subnet_ids:                                     string;
    enabled_cluster_log_types?:                     string;
    encryption_config?:                             EncryptionConfig;
    kubernetes_network_config?:                     KubernetesNetworkConfig;
    outpost_config?:                                OutpostConfig;
    tags?:                                          string;
    version?:                                       string;
    endpoint_private_access?:                       string;
    endpoint_public_access?:                        string;
    public_access_cidrs?:                           string;
    security_group_ids?:                            string;
    ip_family?:                                     string;
    arn?:                                           string;
    certificate_authority?:                         CertificateAuthority;
    cluster_id?:                                    string;
    created_at?:                                    string;
    endpoint?:                                      string;
    id?:                                            string;
    identity?:                                      Identity;
    "kubernetes_network_config.service_ipv6_cidr"?: string;
    platform_version?:                              string;
    status?:                                        string;
    tags_all?:                                      string;
    data?:                                          string;
    oidc?:                                          Oidc;
    issuer?:                                        string;
    cluster_security_group_id?:                     string;
    vpc_id?:                                        string;
}

export interface CertificateAuthority {
    data: string;
}

export interface EncryptionConfig {
    provider:  string;
    resources: string;
    key_arn:   string;
}

export interface Identity {
    oidc: string;
}

export interface KubernetesNetworkConfig {
    ip_family: string;
}

export interface Oidc {
    issuer: string;
}

export interface OutpostConfig {
    outpost_arns: string;
}

export interface EksFargateProfile {
    cluster_name:           string;
    fargate_profile_name:   string;
    pod_execution_role_arn: string;
    selector:               string;
    subnet_ids:             string;
    namespace:              string;
    tags?:                  string;
    labels?:                string;
    arn?:                   string;
    id?:                    string;
    status?:                string;
    tags_all?:              string;
}

export interface EksIdentityProviderConfig {
    cluster_name:                  string;
    oidc:                          string;
    client_id:                     string;
    identity_provider_config_name: string;
    issuer_url:                    string;
    tags?:                         string;
    groups_claim?:                 string;
    groups_prefix?:                string;
    required_claims?:              string;
    username_claim?:               string;
    username_prefix?:              string;
    arn?:                          string;
    id?:                           string;
    status?:                       string;
    tags_all?:                     string;
}

export interface ResourceEksNodeGroup {
    cluster_name:                string;
    node_role_arn:               string;
    scaling_config:              string;
    subnet_ids:                  string;
    version:                     string;
    desired_size:                string;
    max_size:                    string;
    min_size:                    string;
    key:                         string;
    effect:                      string;
    ami_type?:                   string;
    capacity_type?:              string;
    disk_size?:                  string;
    force_update_version?:       string;
    instance_types?:             string;
    labels?:                     string;
    launch_template?:            string;
    node_group_name?:            string;
    node_group_name_prefix?:     string;
    release_version?:            string;
    remote_access?:              string;
    tags?:                       string;
    taint?:                      string;
    update_config?:              string;
    id?:                         string;
    name?:                       string;
    ec2_ssh_key?:                string;
    source_security_group_ids?:  string;
    value?:                      string;
    max_unavailable?:            string;
    max_unavailable_percentage?: string;
    arn?:                        string;
    tags_all?:                   string;
    status?:                     string;
}

export interface ElasticBeanstalkApplicationVersion {
    application:   string;
    bucket:        string;
    key:           string;
    name:          string;
    description?:  string;
    force_delete?: string;
    tags?:         string;
    arn?:          string;
    tags_all?:     string;
}

export interface ElasticBeanstalkConfigurationTemplate {
    name:                 string;
    application:          string;
    description?:         string;
    environment_id?:      string;
    setting?:             string;
    solution_stack_name?: string;
}

export interface ElasticBeanstalkEnvironment {
    name:                    string;
    application:             string;
    cname_prefix?:           string;
    description?:            string;
    tier?:                   string;
    setting?:                string;
    solution_stack_name?:    string;
    template_name?:          string;
    platform_arn?:           string;
    wait_for_ready_timeout?: string;
    poll_interval?:          string;
    version_label?:          string;
    tags?:                   string;
    id?:                     string;
    tags_all?:               string;
    all_settings?:           string;
    cname?:                  string;
    autoscaling_groups?:     string;
    instances?:              string;
    launch_configurations?:  string;
    load_balancers?:         string;
    queues?:                 string;
    triggers?:               string;
    endpoint_url?:           string;
}

export interface ResourceElasticacheCluster {
    cluster_id:                    string;
    engine?:                       string;
    node_type?:                    string;
    num_cache_nodes?:              string;
    parameter_group_name?:         string;
    apply_immediately?:            string;
    auto_minor_version_upgrade?:   string;
    availability_zone?:            string;
    az_mode?:                      string;
    engine_version?:               string;
    final_snapshot_identifier?:    string;
    ip_discovery?:                 string;
    log_delivery_configuration?:   string;
    maintenance_window?:           string;
    network_type?:                 string;
    notification_topic_arn?:       string;
    outpost_mode?:                 string;
    port?:                         string;
    preferred_availability_zones?: string;
    preferred_outpost_arn?:        string;
    replication_group_id?:         string;
    security_group_ids?:           string;
    snapshot_arns?:                string;
    snapshot_name?:                string;
    snapshot_retention_limit?:     string;
    snapshot_window?:              string;
    subnet_group_name?:            string;
    tags?:                         string;
    transit_encryption_enabled?:   string;
    destination?:                  string;
    destination_type?:             string;
    log_format?:                   string;
    log_type?:                     string;
    arn?:                          string;
    engine_version_actual?:        string;
    cache_nodes?:                  string;
    cluster_address?:              string;
    configuration_endpoint?:       string;
    tags_all?:                     string;
}

export interface ElasticacheGlobalReplicationGroup {
    global_replication_group_id_suffix:    string;
    primary_replication_group_id:          string;
    automatic_failover_enabled?:           string;
    cache_node_type?:                      string;
    engine_version?:                       string;
    global_replication_group_description?: string;
    num_node_groups?:                      string;
    parameter_group_name?:                 string;
    id?:                                   string;
    arn?:                                  string;
    engine_version_actual?:                string;
    at_rest_encryption_enabled?:           string;
    auth_token_enabled?:                   string;
    cluster_enabled?:                      string;
    engine?:                               string;
    global_replication_group_id?:          string;
    transit_encryption_enabled?:           string;
}

export interface ResourceElasticacheReplicationGroup {
    description:                     string;
    replication_group_id:            string;
    apply_immediately?:              string;
    at_rest_encryption_enabled?:     string;
    auth_token?:                     string;
    auto_minor_version_upgrade?:     string;
    automatic_failover_enabled?:     string;
    data_tiering_enabled?:           string;
    engine?:                         string;
    engine_version?:                 string;
    final_snapshot_identifier?:      string;
    global_replication_group_id?:    string;
    kms_key_id?:                     string;
    log_delivery_configuration?:     string;
    maintenance_window?:             string;
    multi_az_enabled?:               string;
    node_type?:                      string;
    notification_topic_arn?:         string;
    num_cache_clusters?:             string;
    num_node_groups?:                string;
    parameter_group_name?:           string;
    port?:                           string;
    preferred_cache_cluster_azs?:    string;
    replicas_per_node_group?:        string;
    security_group_ids?:             string;
    security_group_names?:           string;
    snapshot_arns?:                  string;
    snapshot_name?:                  string;
    snapshot_retention_limit?:       string;
    snapshot_window?:                string;
    subnet_group_name?:              string;
    tags?:                           string;
    transit_encryption_enabled?:     string;
    destination?:                    string;
    destination_type?:               string;
    log_format?:                     string;
    log_type?:                       string;
    arn?:                            string;
    engine_version_actual?:          string;
    cluster_enabled?:                string;
    configuration_endpoint_address?: string;
    id?:                             string;
    member_clusters?:                string;
    primary_endpoint_address?:       string;
    reader_endpoint_address?:        string;
    tags_all?:                       string;
}

export interface ResourceElasticacheUser {
    access_string:         string;
    engine:                string;
    user_id:               string;
    user_name:             string;
    type:                  string;
    authentication_mode?:  string;
    no_password_required?: string;
    passwords?:            string;
    tags?:                 string;
    arn?:                  string;
}

export interface ElasticacheUserGroup {
    engine:        string;
    user_group_id: string;
    user_ids?:     string;
    tags?:         string;
    id?:           string;
    arn?:          string;
    tags_all?:     string;
}

export interface ElasticacheUserGroupAssociation {
    user_group_id: string;
    user_id:       string;
}

export interface ElasticsearchDomain {
    domain_name:                         string;
    unit:                                string;
    user_pool_id:                        string;
    enabled:                             string;
    access_policies?:                    string;
    advanced_options?:                   string;
    advanced_security_options?:          AdvancedSecurityOptions;
    auto_tune_options?:                  AutoTuneOptions;
    cluster_config?:                     ClusterConfig;
    cognito_options?:                    CognitoOptions;
    domain_endpoint_options?:            DomainEndpointOptions;
    ebs_options?:                        EbsOptions;
    elasticsearch_version?:              string;
    encrypt_at_rest?:                    EncryptAtREST;
    log_publishing_options?:             LogPublishingOptions;
    node_to_node_encryption?:            SoftwareTokenMfaConfigurationClass;
    snapshot_options?:                   SnapshotOptions;
    tags?:                               string;
    vpc_options?:                        Vpc;
    master_user_password?:               string;
    availability_zone_count?:            string;
    tls_security_policy?:                string;
    kms_key_id?:                         string;
    arn?:                                string;
    domain_id?:                          string;
    endpoint?:                           string;
    kibana_endpoint?:                    string;
    tags_all?:                           string;
    "vpc_options.0.availability_zones"?: string;
    "vpc_options.0.vpc_id"?:             string;
}

export interface AdvancedSecurityOptions {
    enabled:                        string;
    internal_user_database_enabled: string;
    master_user_options:            string;
    master_user_arn:                string;
    master_user_name:               string;
    master_user_password:           string;
    anonymous_auth_enabled?:        string;
}

export interface AutoTuneOptions {
    desired_state:                  string;
    maintenance_schedule:           string;
    rollback_on_disable:            string;
    start_at:                       string;
    duration:                       string;
    cron_expression_for_recurrence: string;
    value:                          string;
    unit:                           string;
}

export interface ClusterConfig {
    cold_storage_options:     string;
    dedicated_master_count:   string;
    dedicated_master_enabled: string;
    dedicated_master_type:    string;
    instance_count:           string;
    instance_type:            string;
    warm_count:               string;
    warm_enabled:             string;
    warm_type:                string;
    zone_awareness_config:    string;
    zone_awareness_enabled:   string;
    enabled:                  string;
    availability_zone_count:  string;
}

export interface CognitoOptions {
    enabled:          string;
    identity_pool_id: string;
    role_arn:         string;
    user_pool_id:     string;
}

export interface DomainEndpointOptions {
    custom_endpoint_certificate_arn: string;
    custom_endpoint_enabled:         string;
    custom_endpoint:                 string;
    enforce_https:                   string;
    tls_security_policy:             string;
}

export interface EbsOptions {
    ebs_enabled: string;
    iops:        string;
    throughput:  string;
    volume_size: string;
    volume_type: string;
}

export interface EncryptAtREST {
    enabled:    string;
    kms_key_id: string;
}

export interface LogPublishingOptions {
    cloudwatch_log_group_arn: string;
    enabled:                  string;
    log_type:                 string;
}

export interface SnapshotOptions {
    automated_snapshot_start_hour: string;
}

export interface Vpc {
    subnet_ids:          string;
    security_group_ids?: string;
}

export interface SearchDomainPolicy {
    domain_name:      string;
    access_policies?: string;
}

export interface SearchDomainSamlOptions {
    domain_name:   string;
    saml_options?: ElasticsearchDomainSamlOptionsSamlOptions;
    id?:           string;
}

export interface ElasticsearchDomainSamlOptionsSamlOptions {
    enabled:                 string;
    idp:                     string;
    master_backend_role:     string;
    master_user_name:        string;
    roles_key:               string;
    session_timeout_minutes: string;
    subject_key:             string;
    entity_id:               string;
    metadata_content:        string;
}

export interface ElastictranscoderPipeline {
    input_bucket:                  string;
    role:                          string;
    aws_kms_key_arn?:              string;
    content_config?:               string;
    content_config_permissions?:   string;
    name?:                         string;
    notifications?:                string;
    output_bucket?:                string;
    thumbnail_config?:             string;
    thumbnail_config_permissions?: string;
    bucket?:                       string;
    storage_class?:                string;
    access?:                       string;
    grantee?:                      string;
    grantee_type?:                 string;
    completed?:                    string;
    error?:                        string;
    progressing?:                  string;
    warning?:                      string;
    id?:                           string;
    arn?:                          string;
}

export interface ElastictranscoderPreset {
    audio?:                string;
    audio_codec_options?:  string;
    container?:            string;
    description?:          string;
    name?:                 string;
    thumbnails?:           string;
    video?:                string;
    video_watermarks?:     string;
    audio_packing_mode?:   string;
    bit_rate?:             string;
    channels?:             string;
    codec?:                string;
    sample_rate?:          string;
    bit_depth?:            string;
    bit_order?:            string;
    profile?:              string;
    signed?:               string;
    aspect_ratio?:         string;
    format?:               string;
    interval?:             string;
    max_height?:           string;
    max_width?:            string;
    padding_policy?:       string;
    resolution?:           string;
    sizing_policy?:        string;
    display_aspect_ratio?: string;
    fixed_gop?:            string;
    frame_rate?:           string;
    keyframes_max_dist?:   string;
    max_frame_rate?:       string;
    horizontal_align?:     string;
    horizontal_offset?:    string;
    id?:                   string;
    opacity?:              string;
    target?:               string;
    vertical_align?:       string;
    vertical_offset?:      string;
    Profile?:              string;
    Level?:                string;
    MaxReferenceFrames?:   string;
    MaxBitRate?:           string;
    BufferSize?:           string;
    InterlacedMode?:       string;
    ColorSpaceConversion?: string;
    ChromaSubsampling?:    string;
    LoopCount?:            string;
    arn?:                  string;
}

export interface Elb {
    listener:                     string;
    bucket:                       string;
    instance_port:                string;
    instance_protocol:            string;
    lb_port:                      string;
    lb_protocol:                  string;
    healthy_threshold:            string;
    unhealthy_threshold:          string;
    interval:                     string;
    timeout:                      string;
    name?:                        string;
    name_prefix?:                 string;
    access_logs?:                 string;
    availability_zones?:          string;
    security_groups?:             string;
    subnets?:                     string;
    instances?:                   string;
    internal?:                    string;
    health_check?:                string;
    cross_zone_load_balancing?:   string;
    idle_timeout?:                string;
    connection_draining?:         string;
    connection_draining_timeout?: string;
    desync_mitigation_mode?:      string;
    tags?:                        string;
    bucket_prefix?:               string;
    enabled?:                     string;
    id?:                          string;
    arn?:                         string;
    dns_name?:                    string;
    source_security_group?:       string;
    source_security_group_id?:    string;
    zone_id?:                     string;
    tags_all?:                    string;
}

export interface ElbAttachment {
    elb:      string;
    instance: string;
}

export interface EmrBlockPublicAccessConfiguration {
    block_public_security_group_rules:           string;
    min_range:                                   string;
    max_range:                                   string;
    permitted_public_security_group_rule_range?: string;
}

export interface EmrCluster {
    release_label:                      string;
    service_role:                       string;
    path:                               string;
    timeout_duration_minutes:           string;
    realm:                              string;
    additional_info?:                   string;
    applications?:                      string;
    autoscaling_role?:                  string;
    auto_termination_policy?:           AutoTerminationPolicy;
    bootstrap_action?:                  string;
    configurations?:                    string;
    core_instance_fleet?:               CoreInstanceFleet;
    core_instance_group?:               CoreInstanceGroup;
    custom_ami_id?:                     string;
    ebs_root_volume_size?:              string;
    ec2_attributes?:                    string;
    keep_job_flow_alive_when_no_steps?: string;
    kerberos_attributes?:               KerberosAttributes;
    list_steps_states?:                 string;
    log_encryption_kms_key_id?:         string;
    log_uri?:                           string;
    master_instance_fleet?:             MasterInstanceFleet;
    master_instance_group?:             MasterInstanceGroup;
    placement_group_config?:            PlacementGroupConfig;
    scale_down_behavior?:               string;
    security_configuration?:            string;
    step?:                              Step;
    step_concurrency_level?:            string;
    tags?:                              string;
    termination_protection?:            string;
    visible_to_all_users?:              string;
    idle_timeout?:                      string;
    properties?:                        string;
    name?:                              string;
    target_spot_capacity?:              string;
    volumes_per_instance?:              string;
    "core_instance_group.0.id"?:        string;
    id?:                                string;
    "master_instance_group.0.id"?:      string;
    master_public_dns?:                 string;
    tags_all?:                          string;
}

export interface AutoTerminationPolicy {
    idle_timeout: string;
}

export interface CoreInstanceFleet {
    instance_type_configs:                      string;
    launch_specifications:                      string;
    name:                                       string;
    target_on_demand_capacity:                  string;
    target_spot_capacity:                       string;
    bid_price:                                  string;
    bid_price_as_percentage_of_on_demand_price: string;
    configurations:                             string;
    ebs_config:                                 string;
    instance_type:                              string;
    weighted_capacity:                          string;
    on_demand_specification:                    string;
    spot_specification:                         string;
    allocation_strategy:                        string;
    block_duration_minutes:                     string;
    timeout_action:                             string;
    timeout_duration_minutes:                   string;
}

export interface CoreInstanceGroup {
    autoscaling_policy:   string;
    bid_price:            string;
    ebs_config:           string;
    instance_count:       string;
    instance_type:        string;
    name:                 string;
    iops:                 string;
    size:                 string;
    type:                 string;
    throughput:           string;
    volumes_per_instance: string;
}

export interface KerberosAttributes {
    ad_domain_join_password:              string;
    ad_domain_join_user:                  string;
    cross_realm_trust_principal_password: string;
    kdc_admin_password:                   string;
    realm:                                string;
}

export interface MasterInstanceFleet {
    instance_type_configs:     string;
    launch_specifications:     string;
    name:                      string;
    target_on_demand_capacity: string;
    target_spot_capacity:      string;
}

export interface MasterInstanceGroup {
    bid_price:      string;
    ebs_config:     string;
    instance_count: string;
    instance_type:  string;
    name:           string;
}

export interface PlacementGroupConfig {
    instance_role:      string;
    placement_strategy: string;
}

export interface Step {
    action_on_failure: string;
    hadoop_jar_step:   string;
    name:              string;
    args:              string;
    jar:               string;
    main_class:        string;
    properties:        string;
}

export interface EmrInstanceFleet {
    cluster_id:                 string;
    instance_type_configs?:     string;
    launch_specifications?:     string;
    target_on_demand_capacity?: string;
    target_spot_capacity?:      string;
    name?:                      string;
    id?:                        string;
}

export interface EmrInstanceGroup {
    bid_price?:            string;
    autoscaling_policy?:   string;
    configurations_json?:  string;
    iops?:                 string;
    size?:                 string;
    type?:                 string;
    volumes_per_instance?: string;
    id?:                   string;
}

export interface EmrManagedScalingPolicy {
    cluster_id:     string;
    compute_limits: ComputeLimits;
}

export interface ComputeLimits {
    unit_type:                        string;
    minimum_capacity_units:           string;
    maximum_capacity_units:           string;
    maximum_ondemand_capacity_units?: string;
    maximum_core_capacity_units?:     string;
}

export interface EmrSecurityConfiguration {
    configuration:  string;
    name?:          string;
    name_prefix?:   string;
    id?:            string;
    creation_date?: string;
}

export interface EmrStudio {
    default_s3_location:             string;
    name:                            string;
    engine_security_group_id:        string;
    service_role:                    string;
    subnet_ids:                      string;
    vpc_id:                          string;
    workspace_security_group_id:     string;
    description?:                    string;
    idp_auth_url?:                   string;
    idp_relay_state_parameter_name?: string;
    tags?:                           string;
    user_role?:                      string;
    url?:                            string;
}

export interface EmrStudioSessionMapping {
    identity_type:      string;
    session_policy_arn: string;
    studio_id:          string;
    identity_name?:     string;
}

export interface EmrcontainersJobTemplate {
    job_template_data:                     string;
    name:                                  string;
    execution_role_arn:                    string;
    job_driver:                            string;
    release_label:                         string;
    classification:                        string;
    log_group_name:                        string;
    entry_point:                           string;
    kms_key_arn?:                          string;
    tags?:                                 string;
    configuration_overrides?:              string;
    job_tags?:                             string;
    application_configuration?:            string;
    monitoring_configuration?:             string;
    configurations?:                       string;
    properties?:                           string;
    cloud_watch_monitoring_configuration?: string;
    persistent_app_ui?:                    string;
    s3_monitoring_configuration?:          string;
    log_stream_name_prefix?:               string;
    log_uri?:                              string;
    spark_sql_job_driver?:                 string;
    spark_submit_job_driver?:              string;
    spark_sql_parameters?:                 string;
    entry_point_arguments?:                string;
    spark_submit_parameters?:              string;
    arn?:                                  string;
    id?:                                   string;
    tags_all?:                             string;
}

export interface ResourceEmrcontainersVirtualCluster {
    container_provider: string;
    name:               string;
    tags?:              string;
    id?:                string;
    type?:              string;
    arn?:               string;
    tags_all?:          string;
}

export interface EmrserverlessApplication {
    name:                      string;
    release_label:             string;
    type:                      string;
    initial_capacity_type:     string;
    cpu:                       string;
    memory:                    string;
    image_uri:                 string;
    worker_count:              string;
    architecture?:             string;
    auto_start_configuration?: string;
    auto_stop_configuration?:  string;
    image_configuration?:      string;
    initial_capacity?:         string;
    maximum_capacity?:         string;
    network_configuration?:    string;
    tags?:                     string;
    enabled?:                  string;
    idle_timeout_minutes?:     string;
    initial_capacity_config?:  string;
    disk?:                     string;
    security_group_ids?:       string;
    subnet_ids?:               string;
    worker_configuration?:     string;
    arn?:                      string;
    id?:                       string;
    tags_all?:                 string;
}

export interface EvidentlyFeature {
    name:                 string;
    project:              string;
    variations:           string;
    default_variation?:   string;
    description?:         string;
    entity_overrides?:    string;
    evaluation_strategy?: string;
    tags?:                string;
    bool_value?:          string;
    double_value?:        string;
    long_value?:          string;
    string_value?:        string;
    arn?:                 string;
    created_time?:        string;
    evaluation_rules?:    string;
    id?:                  string;
    last_updated_time?:   string;
    status?:              string;
    tags_all?:            string;
    value_type?:          string;
    type?:                string;
}

export interface EvidentlyLaunch {
    groups:                   string;
    name:                     string;
    project:                  string;
    feature:                  string;
    variation:                string;
    metric_definition:        string;
    entity_id_key:            string;
    event_pattern:            string;
    value_key:                string;
    steps:                    string;
    group_weights:            string;
    segment_overrides:        string;
    start_time:               string;
    evaluation_order:         string;
    segment:                  string;
    weights:                  string;
    description?:             string;
    metric_monitors?:         string;
    randomization_salt?:      string;
    scheduled_splits_config?: string;
    tags?:                    string;
    unit_label?:              string;
    arn?:                     string;
    created_time?:            string;
    execution?:               string;
    id?:                      string;
    last_updated_time?:       string;
    status?:                  string;
    status_reason?:           string;
    tags_all?:                string;
    type?:                    string;
    ended_time?:              string;
    started_time?:            string;
}

export interface EvidentlyProject {
    name:                     string;
    data_delivery?:           string;
    description?:             string;
    cloudwatch_logs?:         string;
    s3_destination?:          string;
    log_group?:               string;
    bucket?:                  string;
    prefix?:                  string;
    active_experiment_count?: string;
    active_launch_count?:     string;
    arn?:                     string;
    created_time?:            string;
    experiment_count?:        string;
    feature_count?:           string;
    id?:                      string;
    last_updated_time?:       string;
    launch_count?:            string;
    status?:                  string;
    tags_all?:                string;
}

export interface EvidentlySegment {
    description?:       string;
    name?:              string;
    pattern?:           string;
    tags?:              string;
    arn?:               string;
    created_time?:      string;
    experiment_count?:  string;
    id?:                string;
    last_updated_time?: string;
    launch_count?:      string;
    tags_all?:          string;
}

export interface FinspaceKxCluster {
    capacity_configuration:          CapacityConfiguration;
    environment_id:                  string;
    name:                            string;
    release_label:                   string;
    vpc_configuration:               VpcConfiguration;
    scale_out_cooldown_seconds:      string;
    node_count:                      string;
    size:                            string;
    auto_scaling_configuration?:     AutoScalingConfiguration;
    availability_zone_id?:           string;
    cache_storage_configurations?:   string;
    code?:                           Code;
    command_line_arguments?:         string;
    database?:                       FinspaceKxClusterDatabase;
    description?:                    string;
    execution_role?:                 string;
    initialization_script?:          string;
    savedown_storage_configuration?: SavedownStorageConfiguration;
    tags?:                           string;
    s3_object_version?:              string;
    db_paths?:                       string;
    arn?:                            string;
    created_timestamp?:              string;
    id?:                             string;
    last_modified_timestamp?:        string;
    tags_all?:                       string;
}

export interface AutoScalingConfiguration {
    auto_scaling_metric:        string;
    min_node_count:             string;
    max_node_count:             string;
    metric_target:              string;
    scale_in_cooldown_seconds:  string;
    scale_out_cooldown_seconds: string;
}

export interface CapacityConfiguration {
    node_count: string;
}

export interface Code {
    s3_bucket:         string;
    s3_key:            string;
    s3_object_version: string;
}

export interface FinspaceKxClusterDatabase {
    database_name:        string;
    cache_configurations: string;
    changeset_id:         string;
    cache_type:           string;
    db_paths:             string;
}

export interface SavedownStorageConfiguration {
    size: string;
}

export interface VpcConfiguration {
    vpc_id:             string;
    security_group_ids: string;
    ip_address_type:    string;
}

export interface FinspaceKxDatabase {
    environment_id:           string;
    name:                     string;
    description?:             string;
    tags?:                    string;
    arn?:                     string;
    created_timestamp?:       string;
    id?:                      string;
    last_modified_timestamp?: string;
    tags_all?:                string;
}

export interface FinspaceKxEnvironment {
    name:                                  string;
    kms_key_id:                            string;
    custom_dns_server_name:                string;
    to:                                    string;
    custom_dns_configuration?:             CustomDNSConfiguration;
    description?:                          string;
    tags?:                                 string;
    transit_gateway_configuration?:        TransitGatewayConfiguration;
    attachment_network_acl_configuration?: AttachmentNetworkACLConfiguration;
    icmp_type_code?:                       ICMPTypeCode;
    port_range?:                           PortRange;
    arn?:                                  string;
    availability_zones?:                   string;
    created_timestamp?:                    string;
    id?:                                   string;
    infrastructure_account_id?:            string;
    last_modified_timestamp?:              string;
    status?:                               string;
    tags_all?:                             string;
}

export interface AttachmentNetworkACLConfiguration {
    cidr_block:     string;
    protocol:       string;
    rule_action:    string;
    rule_number:    string;
    icmp_type_code: string;
    port_range:     string;
}

export interface CustomDNSConfiguration {
    custom_dns_server_ip:   string;
    custom_dns_server_name: string;
}

export interface ICMPTypeCode {
    code: string;
    type: string;
}

export interface PortRange {
    from: string;
    to:   string;
}

export interface TransitGatewayConfiguration {
    routable_cidr_space:                  string;
    transit_gateway_id:                   string;
    attachment_network_acl_configuration: string;
}

export interface FinspaceKxUser {
    name:           string;
    environment_id: string;
    iam_role:       string;
    tags?:          string;
    arn?:           string;
    id?:            string;
    tags_all?:      string;
}

export interface FisExperimentTemplate {
    action:                         string;
    description:                    string;
    role_arn:                       string;
    stop_condition:                 string;
    action_id:                      string;
    name:                           string;
    key:                            string;
    value:                          string;
    source:                         string;
    resource_type:                  string;
    selection_mode:                 string;
    path:                           string;
    log_schema_version:             string;
    log_group_arn:                  string;
    bucket_name:                    string;
    tags?:                          string;
    target?:                        string;
    log_configuration?:             string;
    parameter?:                     string;
    start_after?:                   string;
    filter?:                        string;
    resource_arns?:                 string;
    resource_tag?:                  string;
    cloudwatch_logs_configuration?: string;
    s3_configuration?:              string;
    prefix?:                        string;
    id?:                            string;
}

export interface FlowLog {
    traffic_type:                   string;
    deliver_cross_account_role?:    string;
    eni_id?:                        string;
    iam_role_arn?:                  string;
    log_destination_type?:          string;
    log_destination?:               string;
    subnet_id?:                     string;
    transit_gateway_id?:            string;
    transit_gateway_attachment_id?: string;
    vpc_id?:                        string;
    log_format?:                    string;
    destination_options?:           DestinationOptions;
    tags?:                          string;
    id?:                            string;
    arn?:                           string;
    tags_all?:                      string;
}

export interface DestinationOptions {
    file_format:                string;
    hive_compatible_partitions: string;
    per_hour_partition:         string;
}

export interface FmsAdminAccount {
    account_id?: string;
    id?:         string;
}

export interface FmsPolicy {
    remediation_enabled:                 string;
    security_service_policy_data:        string;
    name?:                               string;
    delete_all_policy_resources?:        string;
    delete_unused_fm_managed_resources?: string;
    description?:                        string;
    exclude_map?:                        string;
    exclude_resource_tags?:              string;
    include_map?:                        string;
    resource_tags?:                      string;
    resource_type?:                      string;
    resource_type_list?:                 string;
    tags?:                               string;
    id?:                                 string;
    policy_update_token?:                string;
    tags_all?:                           string;
}

export interface FsxBackup {
    file_system_id?: string;
    tags?:           string;
    volume_id?:      string;
    arn?:            string;
    id?:             string;
    kms_key_id?:     string;
    owner_id?:       string;
    tags_all?:       string;
    type?:           string;
}

export interface FsxDataRepositoryAssociation {
    data_repository_path:              string;
    file_system_id:                    string;
    file_system_path:                  string;
    batch_import_meta_data_on_create?: string;
    imported_file_chunk_size?:         string;
    s3?:                               string;
    delete_data_in_filesystem?:        string;
    tags?:                             string;
    auto_export_policy?:               string;
    auto_import_policy?:               string;
    events?:                           string;
    arn?:                              string;
    id?:                               string;
    tags_all?:                         string;
}

export interface FsxFileCache {
    file_cache_path:                            string;
    version:                                    string;
    deployment_type:                            string;
    metadata_configuration:                     string;
    per_unit_storage_throughput:                string;
    storage_capacity:                           string;
    file_cache_type?:                           string;
    file_cache_type_version?:                   string;
    subnet_ids?:                                string;
    copy_tags_to_data_repository_associations?: string;
    data_repository_association?:               string;
    kms_key_id?:                                string;
    lustre_configuration?:                      string;
    security_group_ids?:                        string;
    tags?:                                      string;
    data_repository_path?:                      string;
    data_repository_subdirectories?:            string;
    nfs?:                                       string;
    dns_ips?:                                   string;
    weekly_maintenance_start_time?:             string;
    arn?:                                       string;
    data_repository_association_ids?:           string;
    dns_name?:                                  string;
    file_cache_id?:                             string;
    id?:                                        string;
    network_interface_ids?:                     string;
    vpc_id?:                                    string;
}

export interface FsxLustreFileSystem {
    subnet_ids:                         string;
    storage_capacity?:                  string;
    backup_id?:                         string;
    export_path?:                       string;
    import_path?:                       string;
    imported_file_chunk_size?:          string;
    security_group_ids?:                string;
    tags?:                              string;
    weekly_maintenance_start_time?:     string;
    deployment_type?:                   string;
    kms_key_id?:                        string;
    per_unit_storage_throughput?:       string;
    automatic_backup_retention_days?:   string;
    storage_type?:                      string;
    drive_cache_type?:                  string;
    daily_automatic_backup_start_time?: string;
    auto_import_policy?:                string;
    copy_tags_to_backups?:              string;
    data_compression_type?:             string;
    file_system_type_version?:          string;
    log_configuration?:                 FsxLustreFileSystemLogConfiguration;
    root_squash_configuration?:         RootSquashConfiguration;
    level?:                             string;
    arn?:                               string;
    dns_name?:                          string;
    id?:                                string;
    network_interface_ids?:             string;
    mount_name?:                        string;
    owner_id?:                          string;
    tags_all?:                          string;
    vpc_id?:                            string;
}

export interface FsxLustreFileSystemLogConfiguration {
    destination: string;
    level:       string;
}

export interface RootSquashConfiguration {
    no_squash_nids: string;
    root_squash:    string;
}

export interface FsxOntapFileSystem {
    subnet_ids:                         string;
    preferred_subnet_id:                string;
    throughput_capacity:                string;
    storage_capacity?:                  string;
    security_group_ids?:                string;
    weekly_maintenance_start_time?:     string;
    deployment_type?:                   string;
    kms_key_id?:                        string;
    automatic_backup_retention_days?:   string;
    daily_automatic_backup_start_time?: string;
    disk_iops_configuration?:           string;
    storage_type?:                      string;
    fsx_admin_password?:                string;
    route_table_ids?:                   string;
    tags?:                              string;
    iops?:                              string;
    mode?:                              string;
    arn?:                               string;
    dns_name?:                          string;
    endpoints?:                         string;
    id?:                                string;
    network_interface_ids?:             string;
    owner_id?:                          string;
    tags_all?:                          string;
    vpc_id?:                            string;
    intercluster?:                      string;
    management?:                        string;
    ip_addresses?:                      string;
}

export interface ResourceFsxOntapStorageVirtualMachine {
    file_system_id:                  string;
    name:                            string;
    active_directory_configuration?: ActiveDirectoryConfiguration;
    root_volume_security_style?:     string;
    tags?:                           string;
    self_managed_active_directory?:  SelfManagedActiveDirectory;
    arn?:                            string;
    endpoints?:                      string;
    id?:                             string;
    subtype?:                        string;
    tags_all?:                       string;
    uuid?:                           string;
    iscsi?:                          string;
    management?:                     string;
    nfs?:                            string;
    smb?:                            string;
    dns_name?:                       string;
    ip_addresses?:                   string;
}

export interface ActiveDirectoryConfiguration {
    netbios_name:                  string;
    self_managed_active_directory: string;
}

export interface SelfManagedActiveDirectory {
    dns_ips:                                string;
    domain_name:                            string;
    password:                               string;
    username:                               string;
    file_system_administrators_group:       string;
    organizational_unit_distinguished_name: string;
}

export interface FsxOntapVolume {
    name:                                  string;
    size_in_megabytes:                     string;
    storage_virtual_machine_id:            string;
    snaplock_type:                         string;
    type:                                  string;
    default_retention:                     string;
    maximum_retention:                     string;
    minimum_retention:                     string;
    bypass_snaplock_enterprise_retention?: string;
    copy_tags_to_backups?:                 string;
    junction_path?:                        string;
    ontap_volume_type?:                    string;
    security_style?:                       string;
    skip_final_backup?:                    string;
    snaplock_configuration?:               string;
    snapshot_policy?:                      string;
    storage_efficiency_enabled?:           string;
    tags?:                                 string;
    tiering_policy?:                       string;
    audit_log_volume?:                     string;
    autocommit_period?:                    string;
    privileged_delete?:                    string;
    retention_period?:                     string;
    volume_append_mode_enabled?:           string;
    value?:                                string;
    cooling_period?:                       string;
    arn?:                                  string;
    id?:                                   string;
    file_system_id?:                       string;
    flexcache_endpoint_type?:              string;
    tags_all?:                             string;
    uuid?:                                 string;
    volume_type?:                          string;
}

export interface FsxOpenzfsFileSystem {
    deployment_type:                    string;
    storage_capacity:                   string;
    subnet_ids:                         string;
    throughput_capacity:                string;
    client_configurations:              string;
    options:                            string;
    id:                                 string;
    storage_capacity_quota_gib:         string;
    type:                               string;
    automatic_backup_retention_days?:   string;
    backup_id?:                         string;
    copy_tags_to_backups?:              string;
    copy_tags_to_volumes?:              string;
    daily_automatic_backup_start_time?: string;
    disk_iops_configuration?:           string;
    endpoint_ip_address_range?:         string;
    kms_key_id?:                        string;
    preferred_subnet_id?:               string;
    root_volume_configuration?:         string;
    route_table_ids?:                   string;
    security_group_ids?:                string;
    storage_type?:                      string;
    tags?:                              string;
    weekly_maintenance_start_time?:     string;
    iops?:                              string;
    mode?:                              string;
    copy_tags_to_snapshots?:            string;
    data_compression_type?:             string;
    nfs_exports?:                       string;
    read_only?:                         string;
    record_size_kib?:                   string;
    user_and_group_quotas?:             string;
    arn?:                               string;
    dns_name?:                          string;
    network_interface_ids?:             string;
    root_volume_id?:                    string;
    owner_id?:                          string;
    tags_all?:                          string;
    vpc_id?:                            string;
}

export interface FsxOpenzfsVolume {
    name:                       string;
    parent_volume_id:           string;
    client_configurations:      string;
    options:                    string;
    id:                         string;
    storage_capacity_quota_gib: string;
    Type:                       string;
    origin_snapshot?:           string;
    copy_tags_to_snapshots?:    string;
    data_compression_type?:     string;
    delete_volume_options?:     string;
    nfs_exports?:               string;
    read_only?:                 string;
    record_size_kib?:           string;
    user_and_group_quotas?:     string;
    tags?:                      string;
    arn?:                       string;
    tags_all?:                  string;
}

export interface ResourceFsxWindowsFileSystem {
    subnet_ids:                              string;
    throughput_capacity:                     string;
    dns_ips:                                 string;
    domain_name:                             string;
    password:                                string;
    username:                                string;
    active_directory_id?:                    string;
    aliases?:                                string;
    audit_log_configuration?:                string;
    automatic_backup_retention_days?:        string;
    backup_id?:                              string;
    copy_tags_to_backups?:                   string;
    daily_automatic_backup_start_time?:      string;
    deployment_type?:                        string;
    disk_iops_configuration?:                string;
    kms_key_id?:                             string;
    preferred_subnet_id?:                    string;
    security_group_ids?:                     string;
    self_managed_active_directory?:          string;
    skip_final_backup?:                      string;
    tags?:                                   string;
    storage_capacity?:                       string;
    storage_type?:                           string;
    weekly_maintenance_start_time?:          string;
    iops?:                                   string;
    mode?:                                   string;
    file_system_administrators_group?:       string;
    organizational_unit_distinguished_name?: string;
    audit_log_destination?:                  string;
    file_access_audit_log_level?:            string;
    file_share_access_audit_log_level?:      string;
    arn?:                                    string;
    dns_name?:                               string;
    id?:                                     string;
    network_interface_ids?:                  string;
    owner_id?:                               string;
    preferred_file_server_ip?:               string;
    remote_administration_endpoint?:         string;
    tags_all?:                               string;
    vpc_id?:                                 string;
}

export interface GameliftAlias {
    name:             string;
    routing_strategy: string;
    type:             string;
    description?:     string;
    tags?:            string;
    fleet_id?:        string;
    message?:         string;
    id?:              string;
    arn?:             string;
    tags_all?:        string;
}

export interface Gamelift {
    name:              string;
    operating_system?: string;
    storage_location?: string;
    bucket:            string;
    key:               string;
    role_arn:          string;
    version?:          string;
    tags?:             string;
    object_version?:   string;
    id?:               string;
    arn?:              string;
    tags_all?:         string;
    zip_file?:         string;
}

export interface GameliftFleet {
    ec2_instance_type:                        string;
    name:                                     string;
    from_port:                                string;
    ip_range:                                 string;
    protocol:                                 string;
    to_port:                                  string;
    concurrent_executions:                    string;
    launch_path:                              string;
    build_id?:                                string;
    certificate_configuration?:               string;
    description?:                             string;
    ec2_inbound_permission?:                  string;
    fleet_type?:                              string;
    instance_role_arn?:                       string;
    metric_groups?:                           string;
    new_game_session_protection_policy?:      string;
    resource_creation_limit_policy?:          string;
    runtime_configuration?:                   string;
    script_id?:                               string;
    tags?:                                    string;
    certificate_type?:                        string;
    new_game_sessions_per_creator?:           string;
    policy_period_in_minutes?:                string;
    game_session_activation_timeout_seconds?: string;
    max_concurrent_game_session_activations?: string;
    server_process?:                          string;
    parameters?:                              string;
    id?:                                      string;
    arn?:                                     string;
    build_arn?:                               string;
    operating_system?:                        string;
    script_arn?:                              string;
    tags_all?:                                string;
}

export interface GameliftGameServerGroup {
    game_server_group_name:         string;
    max_size:                       string;
    min_size:                       string;
    role_arn:                       string;
    target_value:                   string;
    instance_type:                  string;
    balancing_strategy?:            string;
    game_server_protection_policy?: string;
    tags?:                          string;
    vpc_subnets?:                   string;
    estimated_instance_warmup?:     string;
    weighted_capacity?:             string;
    id?:                            string;
    name?:                          string;
    version?:                       string;
    arn?:                           string;
    auto_scaling_group_arn?:        string;
}

export interface GameliftGameSessionQueue {
    name:                                           string;
    timeout_in_seconds:                             string;
    maximum_individual_player_latency_milliseconds: string;
    custom_event_data?:                             string;
    destinations?:                                  string;
    notification_target?:                           string;
    player_latency_policy?:                         string;
    tags?:                                          string;
    policy_duration_seconds?:                       string;
    arn?:                                           string;
    tags_all?:                                      string;
}

export interface GlacierVault {
    name:           string;
    events:         string;
    sns_topic:      string;
    access_policy?: string;
    notification?:  string;
    tags?:          string;
    location?:      string;
    arn?:           string;
    tags_all?:      string;
}

export interface GlacierVaultLock {
    complete_lock:          string;
    policy:                 string;
    vault_name:             string;
    ignore_deletion_error?: string;
    id?:                    string;
}

export interface ResourceGlobalacceleratorAccelerator {
    name:                 string;
    ip_address_type?:     string;
    ip_addresses?:        string;
    enabled?:             string;
    attributes?:          string;
    tags?:                string;
    flow_logs_enabled?:   string;
    flow_logs_s3_bucket?: string;
    flow_logs_s3_prefix?: string;
    id?:                  string;
    dns_name?:            string;
    dual_stack_dns_name?: string;
    ip_sets?:             string;
    tags_all?:            string;
    ip_family?:           string;
}

export interface GlobalacceleratorCustomRoutingEndpointGroup {
    listener_arn:              string;
    destination_configuration: string;
    from_port:                 string;
    protocols:                 string;
    to_port:                   string;
    endpoint_configuration?:   string;
    endpoint_group_region?:    string;
    endpoint_id?:              string;
    id?:                       string;
    arn?:                      string;
}

export interface GlobalacceleratorCustomRoutingListener {
    accelerator_arn: string;
    port_range?:     string;
    from_port?:      string;
    to_port?:        string;
    id?:             string;
}

export interface GlobalacceleratorEndpointGroup {
    listener_arn:                    string;
    endpoint_port:                   string;
    listener_port:                   string;
    endpoint_group_region?:          string;
    health_check_interval_seconds?:  string;
    health_check_path?:              string;
    health_check_port?:              string;
    health_check_protocol?:          string;
    threshold_count?:                string;
    traffic_dial_percentage?:        string;
    endpoint_configuration?:         string;
    port_override?:                  string;
    client_ip_preservation_enabled?: string;
    endpoint_id?:                    string;
    weight?:                         string;
    id?:                             string;
    arn?:                            string;
}

export interface GlobalacceleratorListener {
    accelerator_arn:  string;
    client_affinity?: string;
    protocol?:        string;
    port_range?:      string;
    from_port?:       string;
    to_port?:         string;
    id?:              string;
}

export interface GlueCatalogDatabase {
    name:                             string;
    catalog_id?:                      string;
    create_table_default_permission?: CreateTableDefaultPermission;
    description?:                     string;
    location_uri?:                    string;
    parameters?:                      string;
    tags?:                            string;
    target_database?:                 TargetDatabase;
    region?:                          string;
    arn?:                             string;
    id?:                              string;
    tags_all?:                        string;
}

export interface CreateTableDefaultPermission {
    permissions:                    string;
    principal:                      string;
    data_lake_principal_identifier: string;
}

export interface TargetDatabase {
    catalog_id:    string;
    database_name: string;
    region:        string;
}

export interface GlueClassifier {
    name:             string;
    grok_pattern:     string;
    json_path:        string;
    csv_classifier?:  CSVClassifier;
    grok_classifier?: GrokClassifier;
    json_classifier?: JSONClassifier;
    xml_classifier?:  XMLClassifier;
    quote_symbol?:    string;
    id?:              string;
}

export interface CSVClassifier {
    allow_single_column:        string;
    contains_header:            string;
    custom_datatype_configured: string;
    custom_datatypes:           string;
    delimiter:                  string;
    disable_value_trimming:     string;
    header:                     string;
    quote_symbol:               string;
}

export interface GrokClassifier {
    classification:  string;
    custom_patterns: string;
    grok_pattern:    string;
}

export interface JSONClassifier {
    json_path: string;
}

export interface XMLClassifier {
    classification: string;
    row_tag:        string;
}

export interface ResourceGlueConnection {
    name:                              string;
    catalog_id?:                       string;
    connection_properties?:            string;
    connection_type?:                  string;
    description?:                      string;
    match_criteria?:                   string;
    physical_connection_requirements?: PhysicalConnectionRequirements;
    tags?:                             string;
    id?:                               string;
    arn?:                              string;
    tags_all?:                         string;
}

export interface PhysicalConnectionRequirements {
    availability_zone:      string;
    security_group_id_list: string;
    subnet_id:              string;
}

export interface GlueCrawler {
    path:                            string;
    connection_name:                 string;
    database_name:                   string;
    tables:                          string;
    paths:                           string;
    maximum_traversal_depth:         string;
    delta_tables:                    string;
    write_manifest:                  string;
    tags?:                           string;
    scan_all?:                       string;
    scan_rate?:                      string;
    exclusions?:                     string;
    enable_additional_metadata?:     string;
    sample_size?:                    string;
    event_queue_arn?:                string;
    dlq_event_queue_arn?:            string;
    delete_behavior?:                string;
    update_behavior?:                string;
    account_id?:                     string;
    use_lake_formation_credentials?: string;
    crawler_lineage_settings?:       string;
    recrawl_behavior?:               string;
    id?:                             string;
    arn?:                            string;
    tags_all?:                       string;
}

export interface GlueDataQualityRuleset {
    description?:           string;
    name?:                  string;
    ruleset?:               string;
    tags?:                  string;
    target_table?:          TargetTable;
    arn?:                   string;
    created_on?:            string;
    last_modified_on?:      string;
    recommendation_run_id?: string;
    tags_all?:              string;
}

export interface TargetTable {
    catalog_id?:   string;
    database_name: string;
    table_name:    string;
}

export interface GlueDevEndpoint {
    name:                                    string;
    role_arn:                                string;
    arguments?:                              string;
    extra_jars_s3_path?:                     string;
    extra_python_libs_s3_path?:              string;
    glue_version?:                           string;
    number_of_nodes?:                        string;
    number_of_workers?:                      string;
    public_key?:                             string;
    public_keys?:                            string;
    security_configuration?:                 string;
    security_group_ids?:                     string;
    subnet_id?:                              string;
    tags?:                                   string;
    worker_type?:                            string;
    arn?:                                    string;
    private_address?:                        string;
    public_address?:                         string;
    yarn_endpoint_address?:                  string;
    zeppelin_remote_spark_interpreter_port?: string;
    availability_zone?:                      string;
    vpc_id?:                                 string;
    status?:                                 string;
    failure_reason?:                         string;
    tags_all?:                               string;
}

export interface GlueJob {
    command:                    string;
    name:                       string;
    role_arn:                   string;
    script_location:            string;
    connections?:               string;
    default_arguments?:         string;
    non_overridable_arguments?: string;
    description?:               string;
    execution_property?:        string;
    glue_version?:              string;
    execution_class?:           string;
    max_capacity?:              string;
    max_retries?:               string;
    notification_property?:     string;
    tags?:                      string;
    timeout?:                   string;
    security_configuration?:    string;
    number_of_workers?:         string;
    python_version?:            string;
    runtime?:                   string;
    max_concurrent_runs?:       string;
    notify_delay_after?:        string;
    arn?:                       string;
    id?:                        string;
    tags_all?:                  string;
}

export interface GlueMlTransform {
    name:                string;
    input_record_tables: TargetTable;
    parameters:          GlueMlTransformParameters;
    role_arn:            string;
    description?:        string;
    glue_version?:       string;
    max_capacity?:       string;
    max_retries?:        string;
    tags?:               string;
    timeout?:            string;
    worker_type?:        string;
    number_of_workers?:  string;
    arn?:                string;
    id?:                 string;
    label_count?:        string;
    schema?:             GlueMlTransformSchema;
    tags_all?:           string;
}

export interface GlueMlTransformParameters {
    transform_type:              string;
    find_matches_parameters:     string;
    accuracy_cost_trade_off?:    string;
    enforce_provided_labels?:    string;
    precision_recall_trade_off?: string;
    primary_key_column_name?:    string;
}

export interface GlueMlTransformSchema {
    name:      string;
    data_type: string;
}

export interface GluePartition {
    database_name:                      string;
    partition_values:                   string;
    name:                               string;
    column:                             string;
    sort_order:                         string;
    catalog_id?:                        string;
    storage_descriptor?:                string;
    parameters?:                        string;
    columns?:                           string;
    location?:                          string;
    input_format?:                      string;
    output_format?:                     string;
    compressed?:                        string;
    number_of_buckets?:                 string;
    ser_de_info?:                       string;
    bucket_columns?:                    string;
    sort_columns?:                      string;
    skewed_info?:                       string;
    stored_as_sub_directories?:         string;
    type?:                              string;
    comment?:                           string;
    serialization_library?:             string;
    skewed_column_names?:               string;
    skewed_column_value_location_maps?: string;
    skewed_column_values?:              string;
    id?:                                string;
    creation_time?:                     string;
    last_analyzed_time?:                string;
    last_accessed_time?:                string;
}

export interface GluePartitionIndex {
    table_name:      string;
    database_name:   string;
    partition_index: PartitionIndex;
    catalog_id?:     string;
    id?:             string;
}

export interface GlueResourcePolicy {
    policy:         string;
    enable_hybrid?: string;
}

export interface GlueSchema {
    schema_name:            string;
    registry_arn:           string;
    data_format:            string;
    compatibility:          string;
    schema_definition:      string;
    description?:           string;
    tags?:                  string;
    arn?:                   string;
    id?:                    string;
    registry_name?:         string;
    latest_schema_version?: string;
    next_schema_version?:   string;
    schema_checkpoint?:     string;
    tags_all?:              string;
}

export interface GlueSecurityConfiguration {
    encryption_configuration:       string;
    name:                           string;
    "cloudwatch_encryption ":       string;
    "job_bookmarks_encryption ":    string;
    s3_encryption:                  string;
    cloudwatch_encryption_mode?:    string;
    kms_key_arn?:                   string;
    job_bookmarks_encryption_mode?: string;
    s3_encryption_mode?:            string;
    id?:                            string;
}

export interface GlueTrigger {
    actions:                   string;
    name:                      string;
    type:                      string;
    conditions:                string;
    description?:              string;
    enabled?:                  string;
    predicate?:                string;
    schedule?:                 string;
    tags?:                     string;
    start_on_creation?:        string;
    workflow_name?:            string;
    event_batching_condition?: string;
    arguments?:                string;
    crawler_name?:             string;
    job_name?:                 string;
    timeout?:                  string;
    security_configuration?:   string;
    notification_property?:    string;
    notify_delay_after?:       string;
    logical?:                  string;
    state?:                    string;
    crawl_state?:              string;
    logical_operator?:         string;
    batch_size?:               string;
    batch_window?:             string;
    arn?:                      string;
    id?:                       string;
    tags_all?:                 string;
}

export interface GlueUserDefinedFunction {
    name:           string;
    database_name:  string;
    class_name:     string;
    owner_name:     string;
    owner_type:     string;
    resource_type:  string;
    uri:            string;
    catalog_id?:    string;
    resource_uris?: string;
}

export interface GrafanaLicenseAssociation {
    license_type:           string;
    workspace_id:           string;
    free_trial_expiration?: string;
    license_expiration?:    string;
}

export interface GrafanaRoleAssociation {
    role:         string;
    workspace_id: string;
    group_ids?:   string;
    user_ids?:    string;
}

export interface ResourceGrafanaWorkspace {
    account_access_type:        string;
    authentication_providers:   string;
    permission_type:            string;
    prefix_list_ids:            string;
    vpce_ids:                   string;
    security_group_ids:         string;
    subnet_ids:                 string;
    configuration?:             string;
    data_sources?:              string;
    description?:               string;
    grafana_version?:           string;
    name?:                      string;
    network_access_control?:    string;
    notification_destinations?: string;
    organization_role_name?:    string;
    organizational_units?:      string;
    role_arn?:                  string;
    stack_set_name?:            string;
    tags?:                      string;
    vpc_configuration?:         string;
    arn?:                       string;
    endpoint?:                  string;
    tags_all?:                  string;
}

export interface GrafanaWorkspaceAPIKey {
    key?: string;
}

export interface GrafanaWorkspaceSamlConfiguration {
    editor_role_values:       string;
    workspace_id:             string;
    admin_role_values?:       string;
    allowed_organizations?:   string;
    email_assertion?:         string;
    groups_assertion?:        string;
    idp_metadata_url?:        string;
    idp_metadata_xml?:        string;
    login_assertion?:         string;
    login_validity_duration?: string;
    name_assertion?:          string;
    org_assertion?:           string;
    role_assertion?:          string;
    status?:                  string;
}

export interface ResourceGuarddutyDetector {
    enable:                          string;
    audit_logs:                      string;
    scan_ec2_instance_with_findings: string;
    ebs_volumes:                     string;
    finding_publishing_frequency?:   string;
    datasources?:                    string;
    tags?:                           string;
    s3_logs?:                        string;
    kubernetes?:                     string;
    malware_protection?:             string;
    account_id?:                     string;
    arn?:                            string;
    id?:                             string;
    tags_all?:                       string;
}

export interface GuarddutyFilter {
    detector_id:            string;
    name:                   string;
    rank:                   string;
    action:                 string;
    finding_criteria:       string;
    field:                  string;
    description?:           string;
    tags?:                  string;
    equals?:                string;
    not_equals?:            string;
    greater_than?:          string;
    greater_than_or_equal?: string;
    less_than?:             string;
    less_than_or_equal?:    string;
    arn?:                   string;
    id?:                    string;
    tags_all?:              string;
}

export interface GuarddutyInviteAccepter {
    detector_id:       string;
    master_account_id: string;
    id?:               string;
}

export interface GuarddutySet {
    activate:    string;
    detector_id: string;
    format:      string;
    location:    string;
    name:        string;
    tags?:       string;
    arn?:        string;
    id?:         string;
    tags_all?:   string;
}

export interface GuarddutyMember {
    account_id:                  string;
    detector_id:                 string;
    email:                       string;
    invite?:                     string;
    invitation_message?:         string;
    disable_email_notification?: string;
    id?:                         string;
    relationship_status?:        string;
}

export interface OrganizationAdminAccount {
    admin_account_id: string;
    id?:              string;
}

export interface GuarddutyOrganizationConfiguration {
    detector_id:                       string;
    audit_logs:                        string;
    enable:                            string;
    scan_ec2_instance_with_findings:   string;
    ebs_volumes:                       string;
    auto_enable:                       string;
    auto_enable_organization_members?: string;
    datasources?:                      string;
    s3_logs?:                          string;
    kubernetes?:                       string;
    malware_protection?:               string;
    id?:                               string;
}

export interface GuarddutyPublishingDestination {
    detector_id:     string;
    destination_arn: string;
    kms_key_arn:     string;
    id?:             string;
}

export interface IamAccessKey {
    user:                            string;
    pgp_key?:                        string;
    status?:                         string;
    create_date?:                    string;
    encrypted_secret?:               string;
    encrypted_ses_smtp_password_v4?: string;
    id?:                             string;
    key_fingerprint?:                string;
    secret?:                         string;
    ses_smtp_password_v4?:           string;
}

export interface ResourceIamAccountAlias {
    account_alias: string;
}

export interface IamAccountPasswordPolicy {
    allow_users_to_change_password?: string;
    hard_expiry?:                    string;
    max_password_age?:               string;
    minimum_password_length?:        string;
    password_reuse_prevention?:      string;
    require_lowercase_characters?:   string;
    require_numbers?:                string;
    require_symbols?:                string;
    require_uppercase_characters?:   string;
    expire_passwords?:               string;
}

export interface ResourceIamGroup {
    name:       string;
    path?:      string;
    id?:        string;
    arn?:       string;
    unique_id?: string;
}

export interface IamGroupMembership {
    name:  string;
    users: string;
    group: string;
}

export interface IamPolicy {
    policy:       string;
    group?:       string;
    name?:        string;
    name_prefix?: string;
    id?:          string;
    role?:        string;
    user?:        string;
}

export interface ResourceIamInstanceProfile {
    name?:        string;
    name_prefix?: string;
    path?:        string;
    role?:        string;
    tags?:        string;
    arn?:         string;
    create_date?: string;
    id?:          string;
    tags_all?:    string;
    unique_id?:   string;
}

export interface ResourceIamPolicy {
    policy:       string;
    description?: string;
    name?:        string;
    name_prefix?: string;
    path?:        string;
    tags?:        string;
    id?:          string;
    arn?:         string;
    policy_id?:   string;
    tags_all?:    string;
}

export interface ResourceIamRole {
    description?:           string;
    force_detach_policies?: string;
    inline_policy?:         InlinePolicy;
    managed_policy_arns?:   string;
    max_session_duration?:  string;
    name?:                  string;
    name_prefix?:           string;
    path?:                  string;
    permissions_boundary?:  string;
    arn?:                   string;
    create_date?:           string;
    id?:                    string;
    tags_all?:              string;
    unique_id?:             string;
}

export interface InlinePolicy {
    name:   string;
    policy: string;
}

export interface IamRolePolicyAttachment {
    policy_arn: string;
}

export interface IamSecurityTokenServicePreferences {
    global_endpoint_token_version: string;
    id?:                           string;
}

export interface ResourceIamServerCertificate {
    certificate_body:   string;
    private_key:        string;
    name?:              string;
    name_prefix?:       string;
    certificate_chain?: string;
    path?:              string;
    arn?:               string;
    expiration?:        string;
    id?:                string;
    tags_all?:          string;
    upload_date?:       string;
}

export interface IamServiceLinkedRole {
    aws_service_name?: string;
    custom_suffix?:    string;
    description?:      string;
    tags?:             string;
    id?:               string;
    arn?:              string;
    create_date?:      string;
    name?:             string;
    path?:             string;
    unique_id?:        string;
    tags_all?:         string;
}

export interface IamServiceSpecificCredential {
    service_name:                    string;
    user_name:                       string;
    status?:                         string;
    id?:                             string;
    service_password?:               string;
    service_user_name?:              string;
    service_specific_credential_id?: string;
}

export interface IamSigningCertificate {
    certificate_body: string;
    user_name:        string;
    status?:          string;
    certificate_id?:  string;
    id?:              string;
}

export interface ResourceIamUser {
    name:                  string;
    path?:                 string;
    permissions_boundary?: string;
    force_destroy?:        string;
    tags?:                 string;
    arn?:                  string;
    tags_all?:             string;
    unique_id?:            string;
}

export interface IamUserGroupMembership {
    groups: string;
    user:   string;
}

export interface IamUserLoginProfile {
    user:                     string;
    pgp_key?:                 string;
    password_length?:         string;
    password_reset_required?: string;
    password?:                string;
    key_fingerprint?:         string;
}

export interface IamVirtualMfaDevice {
    virtual_mfa_device_name: string;
    path?:                   string;
    tags?:                   string;
    arn?:                    string;
    base_32_string_seed?:    string;
    enable_date?:            string;
    qr_code_png?:            string;
    tags_all?:               string;
    user_name?:              string;
}

export interface ResourceIdentitystoreGroup {
    identity_store_id: string;
    display_name?:     string;
    description?:      string;
    group_id?:         string;
    external_ids?:     string;
    id?:               string;
    issuer?:           string;
}

export interface IdentitystoreGroupMembership {
    member_id:         string;
    group_id:          string;
    identity_store_id: string;
    membership_id?:    string;
}

export interface ResourceIdentitystoreUser {
    display_name:        string;
    name:                string;
    family_name:         string;
    given_name:          string;
    identity_store_id?:  string;
    user_name?:          string;
    addresses?:          string;
    emails?:             string;
    locale?:             string;
    nickname?:           string;
    phone_numbers?:      string;
    preferred_language?: string;
    profile_url?:        string;
    timezone?:           string;
    title?:              string;
    user_type?:          string;
    country?:            string;
    formatted?:          string;
    locality?:           string;
    postal_code?:        string;
    primary?:            string;
    region?:             string;
    street_address?:     string;
    type?:               string;
    value?:              string;
    honorific_prefix?:   string;
    honorific_suffix?:   string;
    middle_name?:        string;
    user_id?:            string;
}

export interface ResourceImagebuilderContainerRecipe {
    component:                 Component;
    container_type:            string;
    value:                     string;
    repository_name:           string;
    service:                   string;
    description?:              string;
    dockerfile_template_data?: string;
    dockerfile_template_uri?:  string;
    instance_configuration?:   InstanceConfiguration;
    platform_override?:        string;
    tags?:                     string;
    working_directory?:        string;
    parameter?:                Parameter;
    block_device_mapping?:     BlockDeviceMapping;
    image?:                    string;
    arn?:                      string;
    date_created?:             string;
    encrypted?:                string;
    owner?:                    string;
    platform?:                 string;
    tags_all?:                 string;
}

export interface BlockDeviceMapping {
    device_name:           string;
    ebs:                   string;
    no_device:             string;
    virtual_name:          string;
    delete_on_termination: string;
    encrypted:             string;
    iops:                  string;
    kms_key_id:            string;
    snapshot_id:           string;
    throughput:            string;
    volume_size:           string;
    volume_type:           string;
}

export interface Component {
    component_arn: string;
    parameter?:    string;
}

export interface InstanceConfiguration {
    block_device_mapping: string;
    image:                string;
}

export interface Parameter {
    name:  string;
    value: string;
}

export interface ResourceImagebuilderDistributionConfiguration {
    name:                                  string;
    distribution:                          Distribution;
    repository_name:                       string;
    service:                               string;
    tags?:                                 string;
    ami_distribution_configuration?:       AmiDistributionConfiguration;
    container_distribution_configuration?: ContainerDistributionConfiguration;
    fast_launch_configuration?:            FastLaunchConfiguration;
    launch_template_configuration?:        LaunchTemplateConfiguration;
    license_configuration_arns?:           string;
    launch_permission?:                    LaunchPermission;
    target_account_ids?:                   string;
    user_ids?:                             string;
    launch_template?:                      ImagebuilderDistributionConfigurationLaunchTemplate;
    snapshot_configuration?:               SnapshotConfiguration;
    launch_template_version?:              string;
    target_resource_count?:                string;
    arn?:                                  string;
    date_created?:                         string;
    date_updated?:                         string;
    tags_all?:                             string;
}

export interface AmiDistributionConfiguration {
    ami_tags:           string;
    description:        string;
    kms_key_id:         string;
    launch_permission:  string;
    name:               string;
    target_account_ids: string;
}

export interface ContainerDistributionConfiguration {
    container_tags: string;
    description:    string;
}

export interface Distribution {
    region:                                string;
    ami_distribution_configuration?:       string;
    container_distribution_configuration?: string;
    fast_launch_configuration?:            string;
    launch_template_configuration?:        string;
    license_configuration_arns?:           string;
}

export interface FastLaunchConfiguration {
    account_id:             string;
    enabled:                string;
    launch_template:        string;
    max_parallel_launches:  string;
    snapshot_configuration: string;
}

export interface LaunchPermission {
    organization_arns:        string;
    organizational_unit_arns: string;
    user_groups:              string;
    user_ids:                 string;
}

export interface ImagebuilderDistributionConfigurationLaunchTemplate {
    launch_template_id:      string;
    launch_template_name:    string;
    launch_template_version: string;
}

export interface LaunchTemplateConfiguration {
    default:            string;
    account_id:         string;
    launch_template_id: string;
}

export interface SnapshotConfiguration {
    target_resource_count: string;
}

export interface ResourceImagebuilderImagePipeline {
    infrastructure_configuration_arn: string;
    name:                             string;
    container_recipe_arn?:            string;
    description?:                     string;
    distribution_configuration_arn?:  string;
    enhanced_image_metadata_enabled?: string;
    image_recipe_arn?:                string;
    image_scanning_configuration?:    ImageScanningConfiguration;
    image_tests_configuration?:       ImageTestsConfiguration;
    schedule?:                        ImagebuilderImagePipelineSchedule;
    status?:                          string;
    tags?:                            string;
    ecr_configuration?:               EcrConfiguration;
    repository_name?:                 string;
    timeout_minutes?:                 string;
    arn?:                             string;
    date_created?:                    string;
    date_last_run?:                   string;
    date_next_run?:                   string;
    date_updated?:                    string;
    platform?:                        string;
    tags_all?:                        string;
}

export interface EcrConfiguration {
    "container tags": string;
    repository_name:  string;
}

export interface ImageScanningConfiguration {
    image_scanning_enabled: string;
    ecr_configuration:      string;
}

export interface ImagebuilderImagePipelineSchedule {
    pipeline_execution_start_condition: string;
    timezone:                           string;
}

export interface ResourceImagebuilderImageRecipe {
    component?:             Component;
    parent_image?:          string;
    version?:               string;
    block_device_mapping?:  BlockDeviceMapping;
    description?:           string;
    systems_manager_agent?: SystemsManagerAgent;
    tags?:                  string;
    working_directory?:     string;
    volume_type?:           string;
    parameter?:             Parameter;
    value?:                 string;
    arn?:                   string;
    date_created?:          string;
    owner?:                 string;
    platform?:              string;
    tags_all?:              string;
}

export interface SystemsManagerAgent {
    uninstall_after_build: string;
}

export interface ResourceImagebuilderInfrastructureConfiguration {
    instance_profile_name:          string;
    name:                           string;
    s3_logs:                        S3Logs;
    description?:                   string;
    instance_metadata_options?:     InstanceMetadataOptions;
    instance_types?:                string;
    key_pair?:                      string;
    logging?:                       Logging;
    resource_tags?:                 string;
    security_group_ids?:            string;
    sns_topic_arn?:                 string;
    subnet_id?:                     string;
    tags?:                          string;
    terminate_instance_on_failure?: string;
    http_tokens?:                   string;
    id?:                            string;
    arn?:                           string;
    date_created?:                  string;
    date_updated?:                  string;
    tags_all?:                      string;
}

export interface InstanceMetadataOptions {
    http_put_response_hop_limit: string;
    http_tokens:                 string;
}

export interface Logging {
    s3_logs: string;
}

export interface S3Logs {
    s3_bucket_name: string;
    s3_key_prefix?: string;
}

export interface Inspector2DelegatedAdminAccount {
    account_id:           string;
    relationship_status?: string;
}

export interface Inspector2Enabler {
    account_ids:    string;
    resource_types: string;
}

export interface Inspector2MemberAssociation {
    account_id:                  string;
    delegated_admin_account_id?: string;
    relationship_status?:        string;
    updated_at?:                 string;
}

export interface Inspector2OrganizationConfiguration {
    auto_enable:                string;
    ec2:                        string;
    ecr:                        string;
    lambda?:                    string;
    max_account_limit_reached?: string;
}

export interface InspectorAssessmentTemplate {
    name:                string;
    target_arn:          string;
    duration:            string;
    rules_package_arns:  string;
    event:               string;
    topic_arn:           string;
    event_subscription?: string;
    tags?:               string;
    arn?:                string;
    tags_all?:           string;
}

export interface InspectorResourceGroup {
    tags: string;
    arn?: string;
}

export interface ResourceInstance {
    device_name:                           string;
    device_index:                          string;
    network_interface_id:                  string;
    ami?:                                  string;
    associate_public_ip_address?:          string;
    availability_zone?:                    string;
    cpu_options?:                          string;
    credit_specification?:                 string;
    disable_api_stop?:                     string;
    disable_api_termination?:              string;
    ebs_block_device?:                     string;
    ebs_optimized?:                        string;
    enclave_options?:                      string;
    ephemeral_block_device?:               string;
    get_password_data?:                    string;
    hibernation?:                          string;
    host_id?:                              string;
    host_resource_group_arn?:              string;
    iam_instance_profile?:                 string;
    instance_initiated_shutdown_behavior?: string;
    instance_market_options?:              string;
    instance_type?:                        string;
    ipv6_addresses?:                       string;
    key_name?:                             string;
    launch_template?:                      string;
    maintenance_options?:                  string;
    metadata_options?:                     string;
    monitoring?:                           string;
    network_interface?:                    string;
    placement_group?:                      string;
    placement_partition_number?:           string;
    private_dns_name_options?:             string;
    private_ip?:                           string;
    root_block_device?:                    string;
    secondary_private_ips?:                string;
    source_dest_check?:                    string;
    subnet_id?:                            string;
    tags?:                                 string;
    tenancy?:                              string;
    user_data?:                            string;
    user_data_base64?:                     string;
    user_data_replace_on_change?:          string;
    capacity_reservation_preference?:      string;
    capacity_reservation_id?:              string;
    amd_sev_snp?:                          string;
    core_count?:                           string;
    threads_per_core?:                     string;
    delete_on_termination?:                string;
    encrypted?:                            string;
    iops?:                                 string;
    kms_key_id?:                           string;
    throughput?:                           string;
    volume_size?:                          string;
    volume_type?:                          string;
    snapshot_id?:                          string;
    no_device?:                            string;
    enabled?:                              string;
    auto_recovery?:                        string;
    market_type?:                          string;
    spot_options?:                         string;
    http_endpoint?:                        string;
    http_protocol_ipv6?:                   string;
    http_put_response_hop_limit?:          string;
    http_tokens?:                          string;
    network_card_index?:                   string;
    enable_resource_name_dns_aaaa_record?: string;
    enable_resource_name_dns_a_record?:    string;
    hostname_type?:                        string;
    instance_interruption_behavior?:       string;
    max_price?:                            string;
    spot_instance_type?:                   string;
    id?:                                   string;
    name?:                                 string;
    version?:                              string;
    arn?:                                  string;
    capacity_reservation_specification?:   string;
    instance_state?:                       string;
    outpost_arn?:                          string;
    password_data?:                        string;
    primary_network_interface_id?:         string;
    private_dns?:                          string;
    public_dns?:                           string;
    tags_all?:                             string;
    volume_id?:                            string;
    instance_lifecycle?:                   string;
    spot_instance_request_id?:             string;
}

export interface InternetGatewayAttachment {
    internet_gateway_id: string;
    vpc_id:              string;
    id?:                 string;
}

export interface InternetmonitorMonitor {
    monitor_name:                        string;
    health_events_config?:               string;
    internet_measurements_log_delivery?: string;
    max_city_networks_to_monitor?:       string;
    resources?:                          string;
    status?:                             string;
    tags?:                               string;
    traffic_percentage_to_monitor?:      string;
    availability_score_threshold?:       string;
    performance_score_threshold?:        string;
    arn?:                                string;
    id?:                                 string;
    tags_all?:                           string;
}

export interface IotAuthorizer {
    authorizer_function_arn:    string;
    name:                       string;
    signing_disabled?:          string;
    status?:                    string;
    token_key_name?:            string;
    token_signing_public_keys?: string;
    arn?:                       string;
}

export interface IotCertificate {
    active:           string;
    csr?:             string;
    certificate_pem?: string;
    ca_pem?:          string;
    id?:              string;
    arn?:             string;
    public_key?:      string;
    private_key?:     string;
}

export interface IotIndexingConfiguration {
    thing_group_indexing_mode:           string;
    thing_indexing_mode:                 string;
    thing_group_indexing_configuration?: ThingGroupIndexingConfiguration;
    thing_indexing_configuration?:       ThingIndexingConfiguration;
    name?:                               string;
    type?:                               string;
}

export interface ThingGroupIndexingConfiguration {
    custom_field:              string;
    managed_field:             string;
    thing_group_indexing_mode: string;
}

export interface ThingIndexingConfiguration {
    custom_field:                     string;
    device_defender_indexing_mode:    string;
    managed_field:                    string;
    named_shadow_indexing_mode:       string;
    thing_connectivity_indexing_mode: string;
    thing_indexing_mode:              string;
}

export interface IotLoggingOptions {
    role_arn:           string;
    default_log_level?: string;
    disable_all_logs?:  string;
}

export interface IotPolicy {
    name:                string;
    policy:              string;
    arn?:                string;
    default_version_id?: string;
}

export interface IotPolicyAttachment {
    policy: string;
    target: string;
}

export interface IotProvisioningTemplate {
    name:                   string;
    provisioning_role_arn:  string;
    template_body:          string;
    description?:           string;
    enabled?:               string;
    pre_provisioning_hook?: PreProvisioningHook;
    tags?:                  string;
    arn?:                   string;
    default_version_id?:    string;
    tags_all?:              string;
}

export interface PreProvisioningHook {
    payload_version: string;
    target_arn:      string;
}

export interface IotRoleAlias {
    alias:                string;
    role_arn:             string;
    credential_duration?: string;
    arn?:                 string;
}

export interface IotThing {
    name:               string;
    attributes?:        string;
    thing_type_name?:   string;
    default_client_id?: string;
    version?:           string;
    arn?:               string;
}

export interface IotThingGroup {
    name:               string;
    parent_group_name?: string;
    properties?:        string;
    tags?:              string;
    attribute_payload?: string;
    description?:       string;
    attributes?:        string;
    arn?:               string;
    id?:                string;
    version?:           string;
}

export interface IotThingGroupMembership {
    thing_name:              string;
    thing_group_name:        string;
    override_dynamic_group?: string;
    id?:                     string;
}

export interface IotThingPrincipalAttachment {
    principal: string;
    thing:     string;
}

export interface IotTopicRule {
    name:                   string;
    enabled:                string;
    sql:                    string;
    sql_version:            string;
    alarm_name:             string;
    role_arn:               string;
    state_reason:           string;
    state_value:            string;
    log_group_name:         string;
    metric_name:            string;
    metric_namespace:       string;
    metric_unit:            string;
    metric_value:           string;
    hash_key_field:         string;
    hash_key_value:         string;
    table_name:             string;
    endpoint:               string;
    id:                     string;
    index:                  string;
    type:                   string;
    delivery_stream_name:   string;
    url:                    string;
    key:                    string;
    value:                  string;
    channel_name:           string;
    input_name:             string;
    client_properties:      string;
    destination_arn:        string;
    stream_name:            string;
    function_arn:           string;
    topic:                  string;
    bucket_name:            string;
    message_format:         string;
    target_arn:             string;
    queue_url:              string;
    use_base64:             string;
    state_machine_name:     string;
    database_name:          string;
    description?:           string;
    error_action?:          string;
    tags?:                  string;
    metric_timestamp?:      string;
    hash_key_type?:         string;
    payload_field?:         string;
    range_key_field?:       string;
    range_key_type?:        string;
    range_key_value?:       string;
    operation?:             string;
    separator?:             string;
    batch_mode?:            string;
    confirmation_url?:      string;
    http_header?:           string;
    message_id?:            string;
    partition?:             string;
    partition_key?:         string;
    qos?:                   string;
    canned_acl?:            string;
    execution_name_prefix?: string;
    arn?:                   string;
    tags_all?:              string;
}

export interface IotTopicRuleDestination {
    vpc_configuration: string;
    role_arn:          string;
    subnet_ids:        string;
    vpc_id:            string;
    enabled?:          string;
    security_groups?:  string;
    arn?:              string;
}

export interface IvsChannel {
    authorized?:                  string;
    latency_mode?:                string;
    name?:                        string;
    recording_configuration_arn?: string;
    tags?:                        string;
    type?:                        string;
    arn?:                         string;
    ingest_endpoint?:             string;
    playback_url?:                string;
    tags_all?:                    string;
}

export interface IvsPlaybackKeyPair {
    public_key:   string;
    name?:        string;
    tags?:        string;
    arn?:         string;
    fingerprint?: string;
    tags_all?:    string;
}

export interface IvsRecordingConfiguration {
    name?:                               string;
    recording_reconnect_window_seconds?: string;
    tags?:                               string;
    arn?:                                string;
    state?:                              string;
    tags_all?:                           string;
    id?:                                 string;
    domains?:                            string;
    resource_arn?:                       string;
}

export interface IvschatRoom {
    logging_configuration_identifiers?: string;
    maximum_message_length?:            string;
    maximum_message_rate_per_second?:   string;
    name?:                              string;
    tags?:                              string;
    arn?:                               string;
    id?:                                string;
    tags_all?:                          string;
}

export interface KendraDataSource {
    name:                                      string;
    bucket_name:                               string;
    urls:                                      string;
    credentials:                               string;
    host:                                      string;
    port:                                      string;
    seed_urls:                                 string;
    site_maps:                                 string;
    condition_document_attribute_key:          string;
    operator:                                  string;
    lambda_arn:                                string;
    s3_bucket:                                 string;
    index_id?:                                 string;
    role_arn?:                                 string;
    type?:                                     string;
    configuration?:                            string;
    custom_document_enrichment_configuration?: string;
    description?:                              string;
    language_code?:                            string;
    schedule?:                                 string;
    tags?:                                     string;
    s3_configuration?:                         string;
    web_crawler_configuration?:                string;
    access_control_list_configuration?:        string;
    documents_metadata_configuration?:         string;
    exclusion_patterns?:                       string;
    inclusion_patterns?:                       string;
    inclusion_prefixes?:                       string;
    key_path?:                                 string;
    s3_prefix?:                                string;
    authentication_configuration?:             string;
    crawl_depth?:                              string;
    max_content_size_per_page_in_mega_bytes?:  string;
    max_links_per_page?:                       string;
    max_urls_per_minute_crawl_rate?:           string;
    proxy_configuration?:                      string;
    url_exclusion_patterns?:                   string;
    url_inclusion_patterns?:                   string;
    basic_authentication?:                     string;
    seed_url_configuration?:                   string;
    site_maps_configuration?:                  string;
    inline_configurations?:                    string;
    post_extraction_hook_configuration?:       string;
    pre_extraction_hook_configuration?:        string;
    condition?:                                string;
    document_content_deletion?:                string;
    target?:                                   string;
    condition_on_value?:                       string;
    target_document_attribute_key?:            string;
    target_document_attribute_value?:          string;
    target_document_attribute_value_deletion?: string;
    date_value?:                               string;
    long_value?:                               string;
    string_list_value?:                        string;
    string?:                                   string;
    invocation_condition?:                     string;
    arn?:                                      string;
    created_at?:                               string;
    data_source_id?:                           string;
    error_message?:                            string;
    id?:                                       string;
    status?:                                   string;
    updated_at?:                               string;
    tags_all?:                                 string;
}

export interface ResourceKendraExperience {
    name:                          string;
    role_arn:                      string;
    identity_attribute_name:       string;
    index_id?:                     string;
    description?:                  string;
    content_source_configuration?: string;
    user_identity_configuration?:  string;
    data_source_ids?:              string;
    direct_put_content?:           string;
    faq_ids?:                      string;
    id?:                           string;
    arn?:                          string;
    experience_id?:                string;
    status?:                       string;
}

export interface PurpleKendra {
    name:                             string;
    role_arn:                         string;
    source_s3_path:                   string;
    bucket:                           string;
    key:                              string;
    index_id?:                        string;
    description?:                     string;
    tags?:                            string;
    arn?:                             string;
    query_suggestions_block_list_id?: string;
    tags_all?:                        string;
    id?:                              string;
    status?:                          string;
}

export interface ResourceKeyPair {
    public_key:       string;
    key_name?:        string;
    key_name_prefix?: string;
    tags?:            string;
    id?:              string;
    arn?:             string;
    key_pair_id?:     string;
    key_type?:        string;
    fingerprint?:     string;
    tags_all?:        string;
}

export interface KeyspacesTable {
    keyspace_name:             string;
    table_name:                string;
    status:                    string;
    message:                   string;
    column:                    string;
    partition_key:             string;
    clustering_key:            string;
    static_column:             string;
    name:                      string;
    type:                      string;
    order_by:                  string;
    capacity_specification?:   string;
    client_side_timestamps?:   string;
    comment?:                  string;
    default_time_to_live?:     string;
    encryption_specification?: string;
    point_in_time_recovery?:   string;
    schema_definition?:        string;
    tags?:                     string;
    ttl?:                      string;
    read_capacity_units?:      string;
    throughput_mode?:          string;
    write_capacity_units?:     string;
    kms_key_identifier?:       string;
    arn?:                      string;
    tags_all?:                 string;
}

export interface KinesisAnalyticsApplication {
    name:                        string;
    log_stream_arn:              string;
    role_arn:                    string;
    name_prefix:                 string;
    schema:                      string;
    table_name:                  string;
    resource_arn:                string;
    record_format_type:          string;
    record_columns:              string;
    record_format:               string;
    count:                       string;
    lambda:                      string;
    starting_position:           string;
    sql_type:                    string;
    record_column_delimiter:     string;
    record_row_delimiter:        string;
    record_row_path:             string;
    bucket_arn:                  string;
    file_key:                    string;
    code?:                       string;
    description?:                string;
    cloudwatch_logging_options?: string;
    inputs?:                     string;
    outputs?:                    string;
    reference_data_sources?:     string;
    start_application?:          string;
    tags?:                       string;
    kinesis_firehose?:           string;
    kinesis_stream?:             string;
    parallelism?:                string;
    processing_configuration?:   string;
    s3?:                         string;
    record_encoding?:            string;
    mapping?:                    string;
    mapping_parameters?:         string;
    csv?:                        string;
    json?:                       string;
    id?:                         string;
    arn?:                        string;
    create_timestamp?:           string;
    last_update_timestamp?:      string;
    status?:                     string;
    version?:                    string;
    tags_all?:                   string;
}

export interface KinesisFirehoseDeliveryStream {
    name:                                  string;
    destination:                           string;
    cluster_jdbcurl:                       string;
    username:                              string;
    password:                              string;
    s3_configuration:                      string;
    data_table_name:                       string;
    index_name:                            string;
    hec_endpoint:                          string;
    hec_token:                             string;
    url:                                   string;
    type:                                  string;
    parameter_name:                        string;
    value:                                 string;
    subnet_ids:                            string;
    security_group_ids:                    string;
    tags?:                                 string;
    kinesis_source_configuration?:         string;
    server_side_encryption?:               string;
    extended_s3_configuration?:            string;
    redshift_configuration?:               string;
    elasticsearch_configuration?:          string;
    opensearch_configuration?:             string;
    splunk_configuration?:                 string;
    http_endpoint_configuration?:          string;
    key_arn?:                              string;
    data_format_conversion_configuration?: DataFormatConversionConfiguration;
    processing_configuration?:             string;
    s3_backup_mode?:                       string;
    s3_backup_configuration?:              string;
    dynamic_partitioning_configuration?:   string;
    retry_duration?:                       string;
    copy_options?:                         string;
    data_table_columns?:                   string;
    cluster_endpoint?:                     string;
    index_rotation_period?:                string;
    type_name?:                            string;
    vpc_config?:                           string;
    hec_acknowledgment_timeout?:           string;
    hec_endpoint_type?:                    string;
    access_key?:                           string;
    request_configuration?:                string;
    log_group_name?:                       string;
    log_stream_name?:                      string;
    processors?:                           string;
    parameters?:                           string;
    content_encoding?:                     string;
    common_attributes?:                    string;
    arn?:                                  string;
    tags_all?:                             string;
}

export interface DataFormatConversionConfiguration {
    input_format_configuration:               string;
    output_format_configuration:              string;
    schema_configuration:                     string;
    enabled:                                  string;
    role_arn:                                 string;
    bucket_arn:                               string;
    prefix:                                   string;
    buffering_size:                           string;
    buffering_interval:                       string;
    compression_format:                       string;
    error_output_prefix:                      string;
    kms_key_arn:                              string;
    cloudwatch_logging_options:               string;
    hive_json_ser_de:                         string;
    open_x_json_ser_de:                       string;
    timestamp_formats:                        string;
    case_insensitive:                         string;
    column_to_json_key_mappings:              string;
    convert_dots_in_json_keys_to_underscores: string;
    orc_ser_de:                               string;
    parquet_ser_de:                           string;
    block_size_bytes:                         string;
    bloom_filter_columns:                     string;
    bloom_filter_false_positive_probability:  string;
    compression:                              string;
    dictionary_key_threshold:                 string;
    enable_padding:                           string;
    format_version:                           string;
    padding_tolerance:                        string;
    row_index_stride:                         string;
    stripe_size_bytes:                        string;
    enable_dictionary_compression:            string;
    max_padding_bytes:                        string;
    page_size_bytes:                          string;
    writer_version:                           string;
    database_name:                            string;
    table_name:                               string;
    catalog_id:                               string;
    region:                                   string;
    version_id:                               string;
}

export interface ResourceKinesisStream {
    name:                       string;
    stream_mode:                string;
    shard_count?:               string;
    retention_period?:          string;
    shard_level_metrics?:       string;
    enforce_consumer_deletion?: string;
    encryption_type?:           string;
    kms_key_id?:                string;
    stream_mode_details?:       string;
    tags?:                      string;
    id?:                        string;
    arn?:                       string;
    tags_all?:                  string;
}

export interface KinesisVideoStream {
    name:                     string;
    data_retention_in_hours?: string;
    kms_key_id?:              string;
    media_type?:              string;
    tags?:                    string;
    id?:                      string;
    arn?:                     string;
    creation_time?:           string;
    version?:                 string;
    tags_all?:                string;
}

export interface Kinesisanalyticsv2Application {
    name:                                string;
    runtime_environment:                 string;
    service_execution_role:              string;
    application_code_configuration:      string;
    code_content_type:                   string;
    bucket_arn:                          string;
    file_key:                            string;
    snapshots_enabled:                   string;
    property_group:                      string;
    property_group_id:                   string;
    property_map:                        string;
    configuration_type:                  string;
    application_restore_type:            string;
    input_schema:                        string;
    name_prefix:                         string;
    input_lambda_processor:              string;
    resource_arn:                        string;
    record_column:                       string;
    record_format:                       string;
    sql_type:                            string;
    mapping_parameters:                  string;
    record_format_type:                  string;
    record_column_delimiter:             string;
    record_row_delimiter:                string;
    input_starting_position:             string;
    destination_schema:                  string;
    reference_schema:                    string;
    s3_reference_data_source:            string;
    table_name:                          string;
    security_group_ids:                  string;
    subnet_ids:                          string;
    log_stream_arn:                      string;
    application_configuration?:          string;
    cloudwatch_logging_options?:         string;
    description?:                        string;
    force_stop?:                         string;
    start_application?:                  string;
    tags?:                               string;
    application_snapshot_configuration?: string;
    environment_properties?:             string;
    flink_application_configuration?:    string;
    run_configuration?:                  string;
    sql_application_configuration?:      string;
    vpc_configuration?:                  string;
    code_content?:                       string;
    s3_content_location?:                string;
    text_content?:                       string;
    object_version?:                     string;
    checkpoint_configuration?:           string;
    monitoring_configuration?:           string;
    parallelism_configuration?:          string;
    checkpointing_enabled?:              string;
    checkpoint_interval?:                string;
    min_pause_between_checkpoints?:      string;
    log_level?:                          string;
    metrics_level?:                      string;
    auto_scaling_enabled?:               string;
    parallelism?:                        string;
    parallelism_per_kpu?:                string;
    application_restore_configuration?:  string;
    flink_run_configuration?:            string;
    snapshot_name?:                      string;
    allow_non_restored_state?:           string;
    input?:                              string;
    output?:                             string;
    reference_data_source?:              string;
    input_parallelism?:                  string;
    input_processing_configuration?:     string;
    kinesis_firehose_input?:             string;
    kinesis_streams_input?:              string;
    count?:                              string;
    record_encoding?:                    string;
    mapping?:                            string;
    csv_mapping_parameters?:             string;
    json_mapping_parameters?:            string;
    kinesis_firehose_output?:            string;
    kinesis_streams_output?:             string;
    lambda_output?:                      string;
    id?:                                 string;
    arn?:                                string;
    create_timestamp?:                   string;
    last_update_timestamp?:              string;
    status?:                             string;
    version_id?:                         string;
    tags_all?:                           string;
}

export interface Kinesisanalyticsv2ApplicationSnapshot {
    application_name:             string;
    snapshot_name:                string;
    id?:                          string;
    application_version_id?:      string;
    snapshot_creation_timestamp?: string;
}

export interface ResourceKmsCustomKeyStore {
    cloud_hsm_cluster_id:     string;
    custom_key_store_name:    string;
    key_store_password:       string;
    trust_anchor_certificate: string;
    id?:                      string;
}

export interface KmsExternalKey {
    bypass_policy_lockout_safety_check?: string;
    deletion_window_in_days?:            string;
    description?:                        string;
    enabled?:                            string;
    key_material_base64?:                string;
    multi_region?:                       string;
    policy?:                             string;
    tags?:                               string;
    valid_to?:                           string;
    arn?:                                string;
    expiration_model?:                   string;
    id?:                                 string;
    key_state?:                          string;
    key_usage?:                          string;
    tags_all?:                           string;
    primary_key_arn?:                    string;
    key_id?:                             string;
}

export interface KmsGrant {
    name?:                      string;
    key_id?:                    string;
    grantee_principal?:         string;
    operations?:                string;
    retiring_principal?:        string;
    constraints?:               string;
    grant_creation_tokens?:     string;
    encryption_context_equals?: string;
    encryption_context_subset?: string;
    grant_id?:                  string;
    grant_token?:               string;
}

export interface ResourceKmsKey {
    description?:                        string;
    key_usage?:                          string;
    custom_key_store_id?:                string;
    customer_master_key_spec?:           string;
    bypass_policy_lockout_safety_check?: string;
    deletion_window_in_days?:            string;
    is_enabled?:                         string;
    enable_key_rotation?:                string;
    multi_region?:                       string;
    tags?:                               string;
    arn?:                                string;
    key_id?:                             string;
    tags_all?:                           string;
}

export interface KmsKeyPolicy {
    key_id:                              string;
    bypass_policy_lockout_safety_check?: string;
}

export interface KmsReplicaKey {
    primary_key_arn:                     string;
    bypass_policy_lockout_safety_check?: string;
    deletion_window_in_days?:            string;
    description?:                        string;
    enabled?:                            string;
    policy?:                             string;
    tags?:                               string;
    arn?:                                string;
    key_id?:                             string;
    key_rotation_enabled?:               string;
    key_spec?:                           string;
    key_usage?:                          string;
    tags_all?:                           string;
}

export interface ResourceLakeformationPermissions {
    permissions:                    string;
    values:                         string;
    catalog_resource?:              string;
    data_location?:                 DataLocation;
    database?:                      LakeformationPermissionsDatabase;
    lf_tag?:                        LakeformationLFTagClass;
    lf_tag_policy?:                 LFTagPolicy;
    table?:                         Table;
    table_with_columns?:            TableWithColumns;
    permissions_with_grant_option?: string;
}

export interface ResourceLakeformationResource {
    arn:            string;
    last_modified?: string;
}

export interface LakeformationResourceLFTags {
    lf_tag:              LakeformationResourceLFTagsLFTag;
    database?:           LakeformationPermissionsDatabase;
    table?:              Table;
    table_with_columns?: TableWithColumns;
}

export interface LakeformationResourceLFTagsLFTag {
    key:         string;
    value:       string;
    catalog_id?: string;
}

export interface LambdaEventSourceMapping {
    function_name:                             string;
    destination_arn:                           string;
    database_name:                             string;
    endpoints:                                 string;
    type:                                      string;
    uri:                                       string;
    amazon_managed_kafka_event_source_config?: string;
    batch_size?:                               string;
    enabled?:                                  string;
    event_source_arn?:                         string;
    filter_criteria?:                          string;
    function_response_types?:                  string;
    maximum_batching_window_in_seconds?:       string;
    queues?:                                   string;
    scaling_config?:                           string;
    self_managed_kafka_event_source_config?:   string;
    starting_position?:                        string;
    starting_position_timestamp?:              string;
    topics?:                                   string;
    tumbling_window_in_seconds?:               string;
    consumer_group_id?:                        string;
    on_failure?:                               string;
    collection_name?:                          string;
    full_document?:                            string;
    filter?:                                   string;
    pattern?:                                  string;
    maximum_concurrency?:                      string;
    function_arn?:                             string;
    last_modified?:                            string;
    last_processing_result?:                   string;
    state?:                                    string;
    state_transition_reason?:                  string;
    uuid?:                                     string;
}

export interface ResourceLambdaFunction {
    function_name:                     string;
    role:                              string;
    target_arn:                        string;
    size:                              string;
    local_mount_path:                  string;
    apply_on:                          string;
    architectures?:                    string;
    code_signing_config_arn?:          string;
    dead_letter_config?:               DeadLetterConfig;
    description?:                      string;
    environment?:                      LambdaFunctionEnvironment;
    ephemeral_storage?:                SavedownStorageConfiguration;
    file_system_config?:               FileSystemConfig;
    filename?:                         string;
    handler?:                          string;
    image_config?:                     ImageConfig;
    image_uri?:                        string;
    kms_key_arn?:                      string;
    layers?:                           string;
    memory_size?:                      string;
    package_type?:                     string;
    publish?:                          string;
    reserved_concurrent_executions?:   string;
    runtime?:                          string;
    s3_bucket?:                        string;
    s3_key?:                           string;
    s3_object_version?:                string;
    skip_destroy?:                     string;
    source_code_hash?:                 string;
    snap_start?:                       SnapStart;
    tags?:                             string;
    timeout?:                          string;
    tracing_config?:                   TracingConfig;
    vpc_config?:                       Vpc;
    variables?:                        string;
    working_directory?:                string;
    arn?:                              string;
    invoke_arn?:                       string;
    last_modified?:                    string;
    qualified_arn?:                    string;
    qualified_invoke_arn?:             string;
    signing_job_arn?:                  string;
    signing_profile_version_arn?:      string;
    "snap_start.optimization_status"?: string;
    source_code_size?:                 string;
    tags_all?:                         string;
    version?:                          string;
    "vpc_config.vpc_id"?:              string;
}

export interface DeadLetterConfig {
    target_arn: string;
}

export interface LambdaFunctionEnvironment {
    variables: string;
}

export interface FileSystemConfig {
    arn:              string;
    local_mount_path: string;
}

export interface ImageConfig {
    command:           string;
    entry_point:       string;
    working_directory: string;
}

export interface SnapStart {
    apply_on: string;
}

export interface TracingConfig {
    mode: string;
}

export interface LambdaFunctionEventInvokeConfig {
    function_name:                 string;
    destination:                   string;
    destination_config?:           string;
    maximum_event_age_in_seconds?: string;
    maximum_retry_attempts?:       string;
    on_failure?:                   string;
    on_success?:                   string;
    id?:                           string;
}

export interface ResourceLambdaFunctionURL {
    authorization_type: string;
    function_name:      string;
    cors?:              Cors;
    invoke_mode?:       string;
    qualifier?:         string;
    function_arn?:      string;
    function_url?:      string;
    url_id?:            string;
}

export interface Cors {
    allow_credentials: string;
    allow_headers:     string;
    expose_headers:    string;
    max_age:           string;
}

export interface ResourceLambdaInvocation {
    function_name:    string;
    input:            string;
    lifecycle_scope?: string;
    qualifier?:       string;
    terraform_key?:   string;
    triggers?:        string;
    result?:          string;
}

export interface LambdaLayerVersionPermission {
    action:        string;
    statement_id:  string;
    skip_destroy?: string;
    id?:           string;
    revision_id?:  string;
    policy?:       string;
}

export interface LambdaPermission {
    action:                  string;
    function_name:           string;
    principal:               string;
    event_source_token?:     string;
    function_url_auth_type?: string;
    qualifier?:              string;
    source_account?:         string;
    source_arn?:             string;
    statement_id?:           string;
    statement_id_prefix?:    string;
    principal_org_id?:       string;
}

export interface LambdaProvisionedConcurrencyConfig {
    function_name:                     string;
    provisioned_concurrent_executions: string;
    qualifier:                         string;
    skip_destroy?:                     string;
    id?:                               string;
}

export interface ResourceLaunchConfiguration {
    image_id:                     string;
    instance_type:                string;
    associate_public_ip_address?: string;
    ebs_block_device?:            string;
    ebs_optimized?:               string;
    enable_monitoring?:           string;
    ephemeral_block_device?:      string;
    iam_instance_profile?:        string;
    key_name?:                    string;
    name?:                        string;
    name_prefix?:                 string;
    security_groups?:             string;
    placement_tenancy?:           string;
    root_block_device?:           string;
    spot_price?:                  string;
    user_data?:                   string;
    user_data_base64?:            string;
    id?:                          string;
    arn?:                         string;
}

export interface ResourceLaunchTemplate {
    device_name:                                       string;
    type:                                              string;
    license_configuration_arn:                         string;
    block_device_mappings?:                            string;
    capacity_reservation_specification?:               string;
    cpu_options?:                                      string;
    credit_specification?:                             string;
    default_version?:                                  string;
    description?:                                      string;
    disable_api_stop?:                                 string;
    disable_api_termination?:                          string;
    ebs_optimized?:                                    string;
    elastic_gpu_specifications?:                       string;
    elastic_inference_accelerator?:                    string;
    enclave_options?:                                  string;
    hibernation_options?:                              string;
    iam_instance_profile?:                             string;
    image_id?:                                         string;
    instance_initiated_shutdown_behavior?:             string;
    instance_market_options?:                          string;
    instance_requirements?:                            string;
    instance_type?:                                    string;
    kernel_id?:                                        string;
    key_name?:                                         string;
    license_specification?:                            string;
    maintenance_options?:                              string;
    metadata_options?:                                 string;
    monitoring?:                                       string;
    name?:                                             string;
    name_prefix?:                                      string;
    network_interfaces?:                               string;
    placement?:                                        string;
    private_dns_name_options?:                         string;
    ram_disk_id?:                                      string;
    security_group_names?:                             string;
    tag_specifications?:                               string;
    tags?:                                             string;
    update_default_version?:                           string;
    user_data?:                                        string;
    vpc_security_group_ids?:                           string;
    ebs?:                                              string;
    no_device?:                                        string;
    virtual_name?:                                     string;
    delete_on_termination?:                            string;
    encrypted?:                                        string;
    iops?:                                             string;
    kms_key_id?:                                       string;
    snapshot_id?:                                      string;
    throughput?:                                       string;
    volume_size?:                                      string;
    volume_type?:                                      string;
    capacity_reservation_preference?:                  string;
    capacity_reservation_target?:                      string;
    capacity_reservation_id?:                          string;
    capacity_reservation_resource_group_arn?:          string;
    amd_sev_snp?:                                      string;
    core_count?:                                       string;
    threads_per_core?:                                 string;
    cpu_credits?:                                      string;
    enabled?:                                          string;
    configured?:                                       string;
    arn?:                                              string;
    bare_metal?:                                       string;
    burstable_performance?:                            string;
    local_storage?:                                    string;
    on_demand_max_price_percentage_over_lowest_price?: string;
    require_hibernate_support?:                        string;
    spot_max_price_percentage_over_lowest_price?:      string;
    auto_recovery?:                                    string;
    market_type?:                                      string;
    spot_options?:                                     string;
    block_duration_minutes?:                           string;
    instance_interruption_behavior?:                   string;
    max_price?:                                        string;
    spot_instance_type?:                               string;
    valid_until?:                                      string;
    http_endpoint?:                                    string;
    http_tokens?:                                      string;
    http_put_response_hop_limit?:                      string;
    http_protocol_ipv6?:                               string;
    instance_metadata_tags?:                           string;
    associate_carrier_ip_address?:                     string;
    associate_public_ip_address?:                      string;
    device_index?:                                     string;
    interface_type?:                                   string;
    ipv4_prefix_count?:                                string;
    ipv4_prefixes?:                                    string;
    ipv6_addresses?:                                   string;
    ipv6_address_count?:                               string;
    ipv6_prefix_count?:                                string;
    ipv6_prefixes?:                                    string;
    network_interface_id?:                             string;
    network_card_index?:                               string;
    private_ip_address?:                               string;
    ipv4_address_count?:                               string;
    ipv4_addresses?:                                   string;
    security_groups?:                                  string;
    subnet_id?:                                        string;
    affinity?:                                         string;
    availability_zone?:                                string;
    group_name?:                                       string;
    host_id?:                                          string;
    host_resource_group_arn?:                          string;
    spread_domain?:                                    string;
    tenancy?:                                          string;
    partition_number?:                                 string;
    enable_resource_name_dns_aaaa_record?:             string;
    enable_resource_name_dns_a_record?:                string;
    hostname_type?:                                    string;
    resource_type?:                                    string;
    id?:                                               string;
    latest_version?:                                   string;
    tags_all?:                                         string;
}

export interface LB {
    access_logs?:                                 AccessLogs;
    customer_owned_ipv4_pool?:                    string;
    desync_mitigation_mode?:                      string;
    drop_invalid_header_fields?:                  string;
    enable_cross_zone_load_balancing?:            string;
    enable_deletion_protection?:                  string;
    enable_http2?:                                string;
    enable_tls_version_and_cipher_suite_headers?: string;
    enable_xff_client_port?:                      string;
    enable_waf_fail_open?:                        string;
    idle_timeout?:                                string;
    internal?:                                    string;
    ip_address_type?:                             string;
    load_balancer_type?:                          string;
    name?:                                        string;
    name_prefix?:                                 string;
    security_groups?:                             string;
    preserve_host_header?:                        string;
    subnet_mapping?:                              SubnetMapping;
    subnets?:                                     string;
    xff_header_processing_mode?:                  string;
    tags?:                                        string;
    prefix?:                                      string;
    arn?:                                         string;
    arn_suffix?:                                  string;
    dns_name?:                                    string;
    id?:                                          string;
    "subnet_mapping.*.outpost_id"?:               string;
    tags_all?:                                    string;
    zone_id?:                                     string;
}

export interface AccessLogs {
    bucket:  string;
    enabled: string;
    prefix:  string;
}

export interface SubnetMapping {
    subnet_id:            string;
    allocation_id:        string;
    ipv6_address:         string;
    private_ipv4_address: string;
}

export interface ResourceLBListener {
    default_action:     DefaultAction;
    load_balancer_arn?: string;
    alpn_policy?:       string;
    certificate_arn?:   string;
    ssl_policy?:        string;
    arn?:               string;
    id?:                string;
    tags_all?:          string;
}

export interface DefaultAction {
    type:                                 string;
    user_pool_arn:                        string;
    user_pool_client_id:                  string;
    user_pool_domain:                     string;
    key:                                  string;
    value:                                string;
    authorization_endpoint:               string;
    client_id:                            string;
    client_secret:                        string;
    issuer:                               string;
    token_endpoint:                       string;
    user_info_endpoint:                   string;
    content_type:                         string;
    target_group:                         string;
    arn:                                  string;
    duration:                             string;
    status_code:                          string;
    authenticate_cognito?:                string;
    authenticate_oidc?:                   string;
    fixed_response?:                      string;
    forward?:                             string;
    order?:                               string;
    redirect?:                            string;
    target_group_arn?:                    string;
    authentication_request_extra_params?: string;
    on_unauthenticated_request?:          string;
    scope?:                               string;
    session_cookie_name?:                 string;
    session_timeout?:                     string;
    message_body?:                        string;
    stickiness?:                          string;
    weight?:                              string;
    host?:                                string;
    path?:                                string;
    port?:                                string;
    protocol?:                            string;
    query?:                               string;
}

export interface LBListenerCertificate {
    listener_arn?:    string;
    certificate_arn?: string;
    id?:              string;
}

export interface LBListenerRule {
    action:                               string;
    condition:                            string;
    type:                                 string;
    target_group:                         string;
    arn:                                  string;
    enabled:                              string;
    status_code:                          string;
    content_type:                         string;
    user_pool_arn:                        string;
    user_pool_client_id:                  string;
    user_pool_domain:                     string;
    authorization_endpoint:               string;
    client_id:                            string;
    client_secret:                        string;
    issuer:                               string;
    token_endpoint:                       string;
    user_info_endpoint:                   string;
    key:                                  string;
    value:                                string;
    http_header_name:                     string;
    listener_arn?:                        string;
    priority?:                            string;
    tags?:                                string;
    target_group_arn?:                    string;
    forward?:                             string;
    redirect?:                            string;
    fixed_response?:                      string;
    authenticate_cognito?:                string;
    authenticate_oidc?:                   string;
    stickiness?:                          string;
    weight?:                              string;
    host?:                                string;
    path?:                                string;
    port?:                                string;
    protocol?:                            string;
    query?:                               string;
    message_body?:                        string;
    authentication_request_extra_params?: string;
    on_unauthenticated_request?:          string;
    scope?:                               string;
    session_cookie_name?:                 string;
    session_timeout?:                     string;
    http_header?:                         string;
    http_request_method?:                 string;
    query_string?:                        string;
    id?:                                  string;
    tags_all?:                            string;
}

export interface LBTargetGroup {
    connection_termination?:             string;
    deregistration_delay?:               string;
    health_check?:                       HealthCheck;
    lambda_multi_value_headers_enabled?: string;
    load_balancing_algorithm_type?:      string;
    load_balancing_cross_zone_enabled?:  string;
    name_prefix?:                        string;
    name?:                               string;
    preserve_client_ip?:                 string;
    protocol_version?:                   string;
    proxy_protocol_v2?:                  string;
    slow_start?:                         string;
    stickiness?:                         Stickiness;
    tags?:                               string;
    target_failover?:                    TargetFailover;
    target_type?:                        string;
    arn_suffix?:                         string;
    arn?:                                string;
    id?:                                 string;
    tags_all?:                           string;
}

export interface HealthCheck {
    enabled:             string;
    healthy_threshold:   string;
    interval:            string;
    path:                string;
    port:                string;
    protocol:            string;
    timeout:             string;
    unhealthy_threshold: string;
}

export interface Stickiness {
    cookie_duration: string;
    cookie_name:     string;
    enabled:         string;
    type:            string;
}

export interface TargetFailover {
    on_deregistration: string;
    on_unhealthy:      string;
}

export interface LBTargetGroupAttachment {
    target_group_arn:   string;
    availability_zone?: string;
    port?:              string;
    id?:                string;
}

export interface ResourceLexBot {
    abort_statement:                  string;
    child_directed:                   string;
    clarification_prompt:             string;
    intent:                           Intent;
    name:                             string;
    intent_version:                   string;
    max_attempts:                     string;
    message:                          Message;
    create_version?:                  string;
    description?:                     string;
    detect_sentiment?:                string;
    enable_model_improvements?:       string;
    idle_session_ttl_in_seconds?:     string;
    locale?:                          string;
    nlu_intent_confidence_threshold?: string;
    process_behavior?:                string;
    voice_id?:                        string;
    group_number?:                    string;
    response_card?:                   string;
    checksum?:                        string;
    created_date?:                    string;
    failure_reason?:                  string;
    last_updated_date?:               string;
    status?:                          string;
    version?:                         string;
}

export interface Intent {
    intent_name:    string;
    intent_version: string;
}

export interface Message {
    content:       string;
    content_type:  string;
    group_number?: string;
}

export interface LexIntent {
    fulfillment_activity:      FulfillmentActivity;
    uri:                       string;
    prompt:                    Prompt;
    message:                   Message;
    conclusion_statement?:     string;
    confirmation_prompt?:      string;
    create_version?:           string;
    dialog_code_hook?:         string;
    follow_up_prompt?:         FollowUpPrompt;
    parent_intent_signature?:  string;
    rejection_statement?:      string;
    slot?:                     Slot;
    code_hook?:                CodeHook;
    group_number?:             string;
    value_elicitation_prompt?: string;
    arn?:                      string;
    checksum?:                 string;
    created_date?:             string;
    last_updated_date?:        string;
    version?:                  string;
}

export interface CodeHook {
    message_version: string;
    uri:             string;
}

export interface FollowUpPrompt {
    prompt:              string;
    rejection_statement: string;
}

export interface FulfillmentActivity {
    type:       string;
    code_hook?: string;
}

export interface Prompt {
    max_attempts:   string;
    message:        string;
    response_card?: string;
}

export interface Slot {
    name:                     string;
    slot_constraint:          string;
    description:              string;
    priority:                 string;
    response_card:            string;
    sample_utterances:        string;
    slot_type:                string;
    slot_type_version:        string;
    value_elicitation_prompt: string;
}

export interface LexSlotType {
    enumeration_value:         EnumerationValue;
    name:                      string;
    create_version?:           string;
    description?:              string;
    value_selection_strategy?: string;
    checksum?:                 string;
    created_date?:             string;
    last_updated_date?:        string;
    version?:                  string;
}

export interface EnumerationValue {
    value:     string;
    synonyms?: string;
}

export interface Lexv2ModelsBot {
    name?:                        string;
    data_privacy?:                string;
    idle_session_ttl_in_seconds?: string;
    role_arn?:                    string;
    members?:                     string;
    bot_tags?:                    string;
    bot_type?:                    string;
    description?:                 string;
    test_bot_alias_tags?:         string;
    id?:                          string;
    child_directed?:              string;
    alias_id?:                    string;
    alias_name?:                  string;
    version?:                     string;
}

export interface LicensemanagerAssociation {
    license_configuration_arn: string;
    resource_arn:              string;
    id?:                       string;
}

export interface LicensemanagerGrant {
    name?:               string;
    allowed_operations?: string;
    license_arn?:        string;
    principal?:          string;
    home_region?:        string;
    id?:                 string;
    arn?:                string;
    parent_arn?:         string;
    status?:             string;
    version?:            string;
    grant_arn?:          string;
}

export interface LicensemanagerLicenseConfiguration {
    name:                      string;
    license_counting_type:     string;
    description?:              string;
    license_count?:            string;
    license_count_hard_limit?: string;
    license_rules?:            string;
    tags?:                     string;
    arn?:                      string;
    id?:                       string;
    owner_account_id?:         string;
    tags_all?:                 string;
}

export interface LightsailBucket {
    name:               string;
    bundle_id:          string;
    force_delete?:      string;
    tags?:              string;
    id?:                string;
    arn?:               string;
    availability_zone?: string;
    created_at?:        string;
    region?:            string;
    support_code?:      string;
    tags_all?:          string;
}

export interface LightsailBucketAccessKey {
    bucket_name:        string;
    id?:                string;
    access_key_id?:     string;
    created_at?:        string;
    secret_access_key?: string;
    status?:            string;
}

export interface LightsailBucketResourceAccess {
    bucket_name:   string;
    resource_name: string;
    id?:           string;
}

export interface LightsailCertificate {
    name:                       string;
    domain_name:                string;
    subject_alternative_names?: string;
    tags?:                      string;
    id?:                        string;
    arn?:                       string;
    created_at?:                string;
    domain_validation_options?: string;
    tags_all?:                  string;
    lb_name?:                   string;
}

export interface LightsailContainerService {
    name:                     string;
    power:                    string;
    scale:                    string;
    is_disabled?:             string;
    public_domain_names?:     string;
    private_registry_access?: string;
    tags?:                    string;
    ecr_image_puller_role?:   string;
    is_active?:               string;
    arn?:                     string;
    availability_zone?:       string;
    id?:                      string;
    power_id?:                string;
    private_domain_name?:     string;
    region_name?:             string;
    resource_type?:           string;
    state?:                   string;
    tags_all?:                string;
    url?:                     string;
}

export interface LightsailContainerServiceDeploymentVersion {
    service_name:         string;
    container:            string;
    container_name:       string;
    image:                string;
    container_port:       string;
    health_check:         string;
    public_endpoint?:     string;
    command?:             string;
    environment?:         string;
    ports?:               string;
    healthy_threshold?:   string;
    unhealthy_threshold?: string;
    timeout_seconds?:     string;
    interval_seconds?:    string;
    path?:                string;
    success_codes?:       string;
    id?:                  string;
    created_at?:          string;
    state?:               string;
    version?:             string;
}

export interface LightsailDatabase {
    relational_database_name:      string;
    master_database_name:          string;
    blueprint_id:                  string;
    bundle_id:                     string;
    availability_zone?:            string;
    master_password?:              string;
    master_username?:              string;
    preferred_backup_window?:      string;
    preferred_maintenance_window?: string;
    publicly_accessible?:          string;
    apply_immediately?:            string;
    backup_retention_enabled?:     string;
    skip_final_snapshot?:          string;
    final_snapshot_name?:          string;
    tags?:                         string;
    id?:                           string;
    arn?:                          string;
    ca_certificate_identifier?:    string;
    created_at?:                   string;
    engine?:                       string;
    engine_version?:               string;
    cpu_count?:                    string;
    ram_size?:                     string;
    disk_size?:                    string;
    master_endpoint_port?:         string;
    master_endpoint_address?:      string;
    secondary_availability_zone?:  string;
    support_code?:                 string;
    tags_all?:                     string;
}

export interface LightsailDisk {
    name:              string;
    size_in_gb:        string;
    availability_zone: string;
    tags?:             string;
    id?:               string;
    arn?:              string;
    created_at?:       string;
    support_code?:     string;
    tags_all?:         string;
}

export interface LightsailDiskAttachment {
    disk_name:     string;
    instance_name: string;
    disk_path:     string;
    id?:           string;
}

export interface LightsailDistribution {
    bundle_id:                  string;
    default_cache_behavior:     CacheBehavior;
    origin:                     Origin;
    cache_behavior_settings:    CacheBehaviorSettings;
    query_strings_allowed_list: string;
    cache_behavior?:            CacheBehavior;
    certificate_name?:          string;
    ip_address_type?:           string;
    is_enabled?:                string;
    tags?:                      string;
    resource_type?:             string;
    alternative_domain_names?:  string;
    arn?:                       string;
    created_at?:                string;
    domain_name?:               string;
    location?:                  Location;
    origin_public_dns?:         string;
    status?:                    string;
    support_code?:              string;
    tags_all?:                  string;
}

export interface CacheBehavior {
    behavior: string;
}

export interface CacheBehaviorSettings {
    forwarded_cookies:          string;
    forwarded_headers:          string;
    forwarded_query_strings:    string;
    cookies_allow_list:         string;
    headers_allow_list:         string;
    query_strings_allowed_list: string;
    allowed_http_methods?:      string;
    cached_http_methods?:       string;
    default_ttl?:               string;
    maximum_ttl?:               string;
    minimum_ttl?:               string;
    option?:                    string;
}

export interface Location {
    availability_zone: string;
    region_name:       string;
}

export interface Origin {
    name:             string;
    region_name:      string;
    protocol_policy?: string;
    resource_type?:   string;
}

export interface LightsailDomain {
    domain_name: string;
    id?:         string;
    arn?:        string;
}

export interface LightsailDomainEntry {
    domain_name: string;
    name:        string;
    type:        string;
    target:      string;
    is_alias?:   string;
    id?:         string;
}

export interface LightsailInstance {
    name:                string;
    availability_zone:   string;
    blueprint_id:        string;
    bundle_id:           string;
    type:                string;
    snapshot_time:       string;
    status:              string;
    key_pair_name?:      string;
    user_data?:          string;
    ip_address_type?:    string;
    add_on?:             string;
    tags?:               string;
    id?:                 string;
    arn?:                string;
    created_at?:         string;
    cpu_count?:          string;
    ram_size?:           string;
    ipv6_addresses?:     string;
    private_ip_address?: string;
    public_ip_address?:  string;
    is_static_ip?:       string;
    username?:           string;
    tags_all?:           string;
}

export interface LightsailInstancePublicPorts {
    instance_name: string;
    port_info:     PortInfo;
    id?:           string;
}

export interface PortInfo {
    from_port:          string;
    protocol:           string;
    to_port:            string;
    cidrs?:             string;
    cidr_list_aliases?: string;
}

export interface LightsailKeyPair {
    public_key:             string;
    name?:                  string;
    pgp_key?:               string;
    id?:                    string;
    arn?:                   string;
    encrypted_fingerprint?: string;
    encrypted_private_key?: string;
    fingerprint?:           string;
    private_key?:           string;
}

export interface LightsailLB {
    name:               string;
    instance_port:      string;
    health_check_path?: string;
    tags?:              string;
    id?:                string;
    arn?:               string;
    created_at?:        string;
    dns_name?:          string;
    protocol?:          string;
    public_ports?:      string;
    support_code?:      string;
    tags_all?:          string;
}

export interface LightsailLBAttachment {
    lb_name:       string;
    instance_name: string;
    id?:           string;
}

export interface LightsailLBCertificateAttachment {
    lb_name:          string;
    certificate_name: string;
    id?:              string;
}

export interface LightsailLBPolicy {
    lb_name:          string;
    enabled:          string;
    id?:              string;
    cookie_duration?: string;
}

export interface LightsailStaticIP {
    name:          string;
    arn?:          string;
    ip_address?:   string;
    support_code?: string;
}

export interface LightsailStaticIPAttachment {
    static_ip_name: string;
    instance_name:  string;
    ip_address?:    string;
}

export interface LoadBalancerBackendServerPolicy {
    load_balancer_name: string;
    policy_names:       string;
    instance_port:      string;
    id?:                string;
}

export interface LoadBalancerListenerPolicy {
    load_balancer_name: string;
    load_balancer_port: string;
    policy_names:       string;
    triggers?:          string;
    id?:                string;
}

export interface LoadBalancerPolicy {
    load_balancer_name: string;
    policy_name:        string;
    policy_type_name:   string;
    policy_attribute?:  string;
    id?:                string;
}

export interface ResourceLocationPlaceIndex {
    data_source:                string;
    index_name:                 string;
    data_source_configuration?: DataSourceConfiguration;
    description?:               string;
    tags?:                      string;
    create_time?:               string;
    index_arn?:                 string;
    tags_all?:                  string;
    update_time?:               string;
}

export interface DataSourceConfiguration {
    intended_use: string;
}

export interface Macie2Account {
    finding_publishing_frequency?: string;
    status?:                       string;
    id?:                           string;
    service_role?:                 string;
    created_at?:                   string;
    updated_at?:                   string;
}

export interface Macie2ClassificationExportConfiguration {
    s3_destination: string;
    bucket_name:    string;
    kms_key_arn:    string;
    key_prefix?:    string;
    id?:            string;
}

export interface Macie2ClassificationJob {
    job_type:                    string;
    comparator:                  string;
    key:                         string;
    values:                      string;
    tag_values:                  string;
    value:                       string;
    account_id:                  string;
    buckets:                     string;
    target:                      string;
    schedule_frequency?:         string;
    custom_data_identifier_ids?: string;
    sampling_percentage?:        string;
    name?:                       string;
    name_prefix?:                string;
    description?:                string;
    initial_run?:                string;
    s3_job_definition?:          string;
    tags?:                       string;
    job_status?:                 string;
    daily_schedule?:             string;
    weekly_schedule?:            string;
    monthly_schedule?:           string;
    bucket_criteria?:            string;
    bucket_definitions?:         string;
    scoping?:                    string;
    excludes?:                   string;
    includes?:                   string;
    and?:                        string;
    simple_criterion?:           string;
    tag_criterion?:              string;
    simple_scope_term?:          string;
    tag_scope_term?:             string;
    id?:                         string;
    created_at?:                 string;
    user_paused_details?:        string;
}

export interface Macie2CustomDataIdentifier {
    regex?:                  string;
    keywords?:               string;
    ignore_words?:           string;
    name?:                   string;
    name_prefix?:            string;
    description?:            string;
    maximum_match_distance?: string;
    tags?:                   string;
    id?:                     string;
    deleted?:                string;
    created_at?:             string;
    arn?:                    string;
}

export interface Macie2FindingsFilter {
    finding_criteria: string;
    action:           string;
    field:            string;
    name?:            string;
    name_prefix?:     string;
    description?:     string;
    position?:        string;
    tags?:            string;
    criterion?:       string;
    eq_exact_match?:  string;
    eq?:              string;
    neq?:             string;
    lt?:              string;
    lte?:             string;
    gt?:              string;
    gte?:             string;
    id?:              string;
    arn?:             string;
}

export interface Macie2InvitationAccepter {
    administrator_account_id: string;
    id?:                      string;
    invitation_id?:           string;
}

export interface Macie2Member {
    account_id:                             string;
    email:                                  string;
    tags?:                                  string;
    status?:                                string;
    invite?:                                string;
    invitation_message?:                    string;
    invitation_disable_email_notification?: string;
    id?:                                    string;
    arn?:                                   string;
    relationship_status?:                   string;
    administrator_account_id?:              string;
    invited_at?:                            string;
    updated_at?:                            string;
}

export interface MainRouteTableAssociation {
    vpc_id:                   string;
    route_table_id:           string;
    id?:                      string;
    original_route_table_id?: string;
}

export interface MediaConvertQueue {
    name:                       string;
    commitment:                 string;
    renewal_type:               string;
    reserved_slots:             string;
    description?:               string;
    pricing_plan?:              string;
    reservation_plan_settings?: string;
    status?:                    string;
    tags?:                      string;
    id?:                        string;
    arn?:                       string;
    tags_all?:                  string;
}

export interface MediaStoreContainerPolicy {
    container_name: string;
    policy:         string;
}

export interface MedialiveChannel {
    channel_class:                              string;
    destinations:                               string;
    encoder_settings:                           string;
    input_specification:                        string;
    name:                                       string;
    resolution:                                 string;
    id:                                         string;
    audio_descriptions:                         string;
    output_groups:                              string;
    timecode_config:                            string;
    video_descriptions:                         string;
    input_id:                                   string;
    group_id:                                   string;
    language_code:                              string;
    pid:                                        string;
    tracks:                                     string;
    track:                                      string;
    program_selection:                          string;
    height:                                     string;
    left_offset:                                string;
    top_offset:                                 string;
    width:                                      string;
    secondary_input_id:                         string;
    audio_selector_name:                        string;
    channel_id:                                 string;
    multiplex_id:                               string;
    cbet_check_digit:                           string;
    cbet_stepaside:                             string;
    csid:                                       string;
    check_digit:                                string;
    sid:                                        string;
    output_group_settings:                      string;
    outputs:                                    string;
    output_settings:                            string;
    output_name:                                string;
    bitrate:                                    string;
    framerate_denominator:                      string;
    framerate_numerator:                        string;
    caption_selector_name:                      string;
    uri:                                        string;
    destination:                                string;
    destination_ref_id:                         string;
    container_settings:                         string;
    cdi_input_specification?:                   string;
    input_attachments?:                         string;
    log_level?:                                 string;
    maintenance?:                               string;
    role_arn?:                                  string;
    start_channel?:                             string;
    tags?:                                      string;
    vpc?:                                       string;
    media_package_settings?:                    string;
    multiplex_settings?:                        string;
    settings?:                                  string;
    caption_descriptions?:                      string;
    global_configuration?:                      string;
    motion_graphics_configuration?:             string;
    nielsen_configuration?:                     string;
    avail_blanking?:                            string;
    input_attachment_name?:                     string;
    input_settings?:                            string;
    automatic_input_failover_settings?:         string;
    audio_selectors?:                           string;
    caption_selectors?:                         string;
    deblock_filter?:                            string;
    denoise_filter?:                            string;
    filter_strength?:                           string;
    input_filter?:                              string;
    network_input_settings?:                    string;
    scte35_pid?:                                string;
    smpte2038_data_preference?:                 string;
    source_end_behavior?:                       string;
    selector_settings?:                         string;
    audio_hls_rendition_selection?:             string;
    audio_language_selection?:                  string;
    audio_pid_selection?:                       string;
    audio_track_selection?:                     string;
    language_selection_policy?:                 string;
    dolby_e_decode?:                            string;
    ancillary_source_settings?:                 string;
    arib_source_settings?:                      string;
    dvb_sub_source_settings?:                   string;
    embedded_source_settings?:                  string;
    scte20_source_settings?:                    string;
    scte27_source_settings?:                    string;
    teletext_source_settings?:                  string;
    source_ancillary_channel_number?:           string;
    ocr_language?:                              string;
    convert_608_to_708?:                        string;
    scte20_detection?:                          string;
    source_608_channel_number?:                 string;
    output_rectangle?:                          string;
    page_number?:                               string;
    hls_input_settings?:                        string;
    server_validation?:                         string;
    bandwidth?:                                 string;
    buffer_segments?:                           string;
    retries?:                                   string;
    retry_interval?:                            string;
    scte35_source_type?:                        string;
    error_clear_time_msec?:                     string;
    failover_conditions?:                       string;
    input_preference?:                          string;
    failover_condition_settings?:               string;
    audio_silence_settings?:                    string;
    input_loss_settings?:                       string;
    video_black_settings?:                      string;
    audio_silence_threshold_msec?:              string;
    input_loss_threshold_msec?:                 string;
    black_detect_threshold?:                    string;
    video_black_threshold_msec?:                string;
    maintenance_day?:                           string;
    maintenance_start_time?:                    string;
    program_name?:                              string;
    password_param?:                            string;
    stream_name?:                               string;
    url?:                                       string;
    username?:                                  string;
    audio_normalization_settings?:              string;
    audio_type?:                                string;
    audio_type_control?:                        string;
    audio_watermark_settings?:                  string;
    codec_settings?:                            string;
    algorithm?:                                 string;
    algorithm_control?:                         string;
    target_lkfs?:                               string;
    nielsen_watermark_settings?:                string;
    aac_settings?:                              string;
    ac3_settings?:                              string;
    eac3_atmos_settings?:                       string;
    eac3_settings?:                             string;
    coding_mode?:                               string;
    input_type?:                                string;
    profile?:                                   string;
    rate_control_mode?:                         string;
    raw_format?:                                string;
    sample_rate?:                               string;
    spec?:                                      string;
    vbr_quality?:                               string;
    bitstream_mode?:                            string;
    dialnorm?:                                  string;
    drc_profile?:                               string;
    lfe_filter?:                                string;
    metadata_control?:                          string;
    drc_line?:                                  string;
    drc_rf?:                                    string;
    height_trim?:                               string;
    surround_trim?:                             string;
    attenuation_control?:                       string;
    nielsen_cbet_settings?:                     string;
    nielsen_distribution_type?:                 string;
    nielsen_naes_ii_nw_settings?:               string;
    archive_group_settings?:                    string;
    media_package_group_settings?:              string;
    multiplex_group_sttings?:                   string;
    rtmp_group_settings?:                       string;
    udp_group_sttings?:                         string;
    audio_description_names?:                   string;
    caption_description_names?:                 string;
    video_description_name?:                    string;
    source?:                                    string;
    sync_threshold?:                            string;
    respond_to_afd?:                            string;
    scaling_behavior?:                          string;
    sharpness?:                                 string;
    frame_capture_settings?:                    string;
    h264_settings?:                             string;
    capture_interval?:                          string;
    capture_interval_units?:                    string;
    adaptive_quantization?:                     string;
    afd_signaling?:                             string;
    buf_fil_pct?:                               string;
    buf_size?:                                  string;
    color_metadata?:                            string;
    entropy_encoding?:                          string;
    filter_settings?:                           string;
    fixed_afd?:                                 string;
    flicer_aq?:                                 string;
    force_field_pictures?:                      string;
    framerate_control?:                         string;
    gop_b_reference?:                           string;
    gop_closed_cadence?:                        string;
    gop_num_b_frames?:                          string;
    gop_size?:                                  string;
    gop_size_units?:                            string;
    level?:                                     string;
    look_ahead_rate_control?:                   string;
    max_bitrate?:                               string;
    min_interval?:                              string;
    num_ref_frames?:                            string;
    par_control?:                               string;
    par_denominator?:                           string;
    par_numerator?:                             string;
    quality_level?:                             string;
    qvbr_quality_level?:                        string;
    scan_type?:                                 string;
    scene_change_detect?:                       string;
    slices?:                                    string;
    softness?:                                  string;
    spatial_aq?:                                string;
    subgop_length?:                             string;
    syntax?:                                    string;
    temporal_aq?:                               string;
    timecode_insertion?:                        string;
    temporal_filter_settings?:                  string;
    alternative_transfer_function?:             string;
    tier?:                                      string;
    timecode_burnin_settings?:                  string;
    color_space_passthrough_settings?:          string;
    dolby_vision81_settings?:                   string;
    hdr10_settings?:                            string;
    rec601_settings?:                           string;
    rec709_settings?:                           string;
    max_cll?:                                   string;
    max_fall?:                                  string;
    timecode_burnin_font_size?:                 string;
    timecode_burnin_position?:                  string;
    prefix?:                                    string;
    post_filter_sharpening?:                    string;
    strength?:                                  string;
    accessibility?:                             string;
    destination_settings?:                      string;
    language_description?:                      string;
    arib_destination_settings?:                 string;
    burn_in_destination_settings?:              string;
    dvb_sub_destination_settings?:              string;
    ebu_tt_d_destination_settings?:             string;
    embedded_destination_settings?:             string;
    embedded_plus_scte20_destination_settings?: string;
    rtmp_caption_info_destination_settings?:    string;
    scte20_plus_embedded_destination_settings?: string;
    scte27_destination_settings?:               string;
    smpte_tt_destination_settings?:             string;
    teletext_destination_settings?:             string;
    ttml_destination_settings?:                 string;
    webvtt_destination_settings?:               string;
    alignment?:                                 string;
    background_color?:                          string;
    background_opacity?:                        string;
    font?:                                      string;
    font_color?:                                string;
    font_opacity?:                              string;
    font_resolution?:                           string;
    font_size?:                                 string;
    outline_color?:                             string;
    outline_size?:                              string;
    shadow_color?:                              string;
    shadow_opacity?:                            string;
    shadow_x_offset?:                           string;
    shadow_y_offset?:                           string;
    teletext_grid_control?:                     string;
    x_position?:                                string;
    y_position?:                                string;
    copyright_holder?:                          string;
    fill_line_gap?:                             string;
    font_family?:                               string;
    style_control?:                             string;
    initial_audio_gain?:                        string;
    input_end_action?:                          string;
    input_loss_behavior?:                       string;
    output_locking_mode?:                       string;
    output_timing_source?:                      string;
    support_low_framerate_inputs?:              string;
    motion_graphics_insertion?:                 string;
    html_motion_graphics_settings?:             string;
    distributor_id?:                            string;
    nielsen_pcm_to_id3_tagging?:                string;
    avail_blanking_image?:                      string;
    state?:                                     string;
    archive_cdn_settings?:                      string;
    rollover_interval?:                         string;
    ad_markers?:                                string;
    authentication_scheme?:                     string;
    cache_full_behavior?:                       string;
    cache_length?:                              string;
    caption_data?:                              string;
    input_loss_action?:                         string;
    restart_delay?:                             string;
    timed_metadata_id3_frame?:                  string;
    archive_s3_settings?:                       string;
    canned_acl?:                                string;
    archive_output_settings?:                   string;
    media_package_output_settings?:             string;
    multiplex_output_settings?:                 string;
    rtmp_output_settings?:                      string;
    udp_output_settings?:                       string;
    extension?:                                 string;
    name_modifier?:                             string;
    m2ts_settings?:                             string;
    buffer_msec?:                               string;
    fec_output_setting?:                        string;
    column_depth?:                              string;
    include_fec?:                               string;
    row_length?:                                string;
    arn?:                                       string;
}

export interface MedialiveInput {
    name:                  string;
    input_security_groups: string;
    type:                  string;
    destinations?:         string;
    input_devices?:        string;
    media_connect_flows?:  string;
    role_arn?:             string;
    sources?:              string;
    vpc?:                  string;
    stream_name?:          string;
    id?:                   string;
    flow_arn?:             string;
    password_param?:       string;
    url?:                  string;
    username?:             string;
    subnet_ids?:           string;
    security_group_ids?:   string;
    arn?:                  string;
    attached_channels?:    string;
    input_class?:          string;
    input_partner_ids?:    string;
    input_source_type?:    string;
}

export interface MedialiveInputSecurityGroup {
    whitelist_rules: string;
    cidr:            string;
    tags?:           string;
    id?:             string;
    arn?:            string;
    inputs?:         string;
}

export interface MedialiveMultiplex {
    availability_zones:                       string;
    name:                                     string;
    transport_stream_bitrate:                 string;
    transport_stream_id:                      string;
    start_multiplex?:                         string;
    tags?:                                    string;
    transport_stream_reserved_bitrate?:       string;
    maximum_video_buffer_delay_milliseconds?: string;
    arn?:                                     string;
}

export interface MedialiveMultiplexProgram {
    multiplex_id:               string;
    program_name:               string;
    multiplex_program_settings: string;
    program_number:             string;
    preferred_channel_pipeline: string;
    provider_name:              string;
    service_name:               string;
    service_descriptor?:        string;
    video_settings?:            string;
    constant_bitrate?:          string;
    statmux_settings?:          string;
    minimum_bitrate?:           string;
    maximum_bitrate?:           string;
    priority?:                  string;
    id?:                        string;
    example_attribute?:         string;
}

export interface ResourceMemorydbUser {
    access_string:           string;
    authentication_mode:     string;
    passwords:               string;
    type:                    string;
    user_name?:              string;
    tags?:                   string;
    id?:                     string;
    arn?:                    string;
    minimum_engine_version?: string;
    tags_all?:               string;
}

export interface ResourceMqBroker {
    broker_name:                    string;
    engine_type:                    string;
    engine_version:                 string;
    host_instance_type:             string;
    user:                           User;
    time_zone:                      string;
    apply_immediately?:             string;
    authentication_strategy?:       string;
    auto_minor_version_upgrade?:    string;
    configuration?:                 MqBrokerConfiguration;
    deployment_mode?:               string;
    encryption_options?:            EncryptionOptions;
    ldap_server_metadata?:          LDAPServerMetadata;
    logs?:                          Logs;
    maintenance_window_start_time?: MaintenanceWindowStartTime;
    publicly_accessible?:           string;
    security_groups?:               string;
    storage_type?:                  string;
    subnet_ids?:                    string;
    tags?:                          string;
    revision?:                      string;
    use_aws_owned_key?:             string;
    user_search_subtree?:           string;
    general?:                       string;
    arn?:                           string;
    id?:                            string;
    tags_all?:                      string;
}

export interface MqBrokerConfiguration {
    id:       string;
    revision: string;
}

export interface EncryptionOptions {
    kms_key_id:        string;
    use_aws_owned_key: string;
}

export interface LDAPServerMetadata {
    hosts:                    string;
    role_base:                string;
    role_name:                string;
    role_search_matching:     string;
    role_search_subtree:      string;
    service_account_password: string;
    service_account_username: string;
    user_base:                string;
    user_role_name:           string;
    user_search_matching:     string;
    user_search_subtree:      string;
}

export interface Logs {
    audit:   string;
    general: string;
}

export interface MaintenanceWindowStartTime {
    day_of_week: string;
    time_of_day: string;
    time_zone:   string;
}

export interface User {
    password:          string;
    console_access?:   string;
    groups?:           string;
    replication_user?: string;
}

export interface MqConfiguration {
    data:                     string;
    engine_type:              string;
    engine_version:           string;
    name:                     string;
    authentication_strategy?: string;
    description?:             string;
    tags?:                    string;
    arn?:                     string;
    id?:                      string;
    latest_revision?:         string;
    tags_all?:                string;
}

export interface ResourceMskCluster {
    broker_node_group_info:                              string;
    cluster_name:                                        string;
    kafka_version:                                       string;
    number_of_broker_nodes:                              string;
    client_subnets:                                      string;
    instance_type:                                       string;
    security_groups:                                     string;
    arn:                                                 string;
    revision:                                            string;
    prometheus:                                          string;
    enabled_in_broker:                                   string;
    broker_logs:                                         string;
    client_authentication?:                              string;
    configuration_info?:                                 string;
    encryption_info?:                                    string;
    enhanced_monitoring?:                                string;
    open_monitoring?:                                    string;
    logging_info?:                                       string;
    tags?:                                               string;
    az_distribution?:                                    string;
    connectivity_info?:                                  string;
    storage_info?:                                       string;
    public_access?:                                      string;
    vpc_connectivity?:                                   string;
    type?:                                               string;
    sasl?:                                               string;
    tls?:                                                string;
    iam?:                                                string;
    scram?:                                              string;
    ebs_storage_info?:                                   string;
    provisioned_throughput?:                             string;
    volume_size?:                                        string;
    enabled?:                                            string;
    volume_throughput?:                                  string;
    unauthenticated?:                                    string;
    certificate_authority_arns?:                         string;
    encryption_in_transit?:                              string;
    encryption_at_rest_kms_key_arn?:                     string;
    client_broker?:                                      string;
    in_cluster?:                                         string;
    jmx_exporter?:                                       string;
    node_exporter?:                                      string;
    log_group?:                                          string;
    delivery_stream?:                                    string;
    bucket?:                                             string;
    prefix?:                                             string;
    bootstrap_brokers?:                                  string;
    bootstrap_brokers_public_sasl_iam?:                  string;
    bootstrap_brokers_public_sasl_scram?:                string;
    bootstrap_brokers_public_tls?:                       string;
    bootstrap_brokers_sasl_iam?:                         string;
    bootstrap_brokers_sasl_scram?:                       string;
    bootstrap_brokers_tls?:                              string;
    bootstrap_brokers_vpc_connectivity_sasl_iam?:        string;
    bootstrap_brokers_vpc_connectivity_sasl_scram?:      string;
    bootstrap_brokers_vpc_connectivity_tls?:             string;
    current_version?:                                    string;
    "encryption_info.0.encryption_at_rest_kms_key_arn"?: string;
    tags_all?:                                           string;
    storage_mode?:                                       string;
    zookeeper_connect_string?:                           string;
    zookeeper_connect_string_tls?:                       string;
}

export interface MskClusterPolicy {
    cluster_arn: string;
    policy:      string;
    id?:         string;
}

export interface MskScramSecretAssociation {
    secret_arn_list: string;
    cluster_arn?:    string;
    id?:             string;
}

export interface MskServerlessCluster {
    client_authentication: string;
    cluster_name:          string;
    vpc_config:            string;
    sasl:                  string;
    iam:                   string;
    enabled:               string;
    subnet_ids:            string;
    tags?:                 string;
    security_group_ids?:   string;
    arn?:                  string;
    tags_all?:             string;
}

export interface PurpleMskconnectConnector {
    capacity:                            string;
    connector_configuration:             string;
    kafka_cluster:                       string;
    kafka_cluster_client_authentication: string;
    kafka_cluster_encryption_in_transit: string;
    kafkaconnect_version:                string;
    name:                                string;
    plugin:                              string;
    service_execution_role_arn:          string;
    max_worker_count:                    string;
    min_worker_count:                    string;
    cpu_utilization_percentage:          string;
    worker_count:                        string;
    apache_kafka_cluster:                string;
    bootstrap_servers:                   string;
    vpc:                                 string;
    security_groups:                     string;
    subnets:                             string;
    worker_log_delivery:                 string;
    log_group:                           string;
    enabled:                             string;
    custom_plugin:                       string;
    arn:                                 string;
    revision:                            string;
    description?:                        string;
    log_delivery?:                       string;
    worker_configuration?:               string;
    autoscaling?:                        string;
    provisioned_capacity?:               string;
    mcu_count?:                          string;
    scale_in_policy?:                    string;
    scale_out_policy?:                   string;
    authentication_type?:                string;
    encryption_type?:                    string;
    cloudwatch_logs?:                    string;
    firehose?:                           string;
    s3?:                                 string;
    delivery_stream?:                    string;
    bucket?:                             string;
    prefix?:                             string;
    version?:                            string;
}

export interface MskconnectCustomPlugin {
    name:             string;
    content_type:     string;
    location:         string;
    s3:               string;
    bucket_arn:       string;
    file_key:         string;
    description?:     string;
    object_version?:  string;
    arn?:             string;
    latest_revision?: string;
    state?:           string;
}

export interface MwaaEnvironment {
    dag_s3_path:                                                                       string;
    execution_role_arn:                                                                string;
    name:                                                                              string;
    network_configuration:                                                             string;
    source_bucket_arn:                                                                 string;
    enabled:                                                                           string;
    security_group_ids:                                                                string;
    subnet_ids:                                                                        string;
    airflow_configuration_options?:                                                    string;
    airflow_version?:                                                                  string;
    environment_class?:                                                                string;
    kms_key?:                                                                          string;
    logging_configuration?:                                                            string;
    max_workers?:                                                                      string;
    min_workers?:                                                                      string;
    plugins_s3_object_version?:                                                        string;
    plugins_s3_path?:                                                                  string;
    requirements_s3_object_version?:                                                   string;
    requirements_s3_path?:                                                             string;
    schedulers?:                                                                       string;
    startup_script_s3_object_version?:                                                 string;
    startup_script_s3_path?:                                                           string;
    webserver_access_mode?:                                                            string;
    weekly_maintenance_window_start?:                                                  string;
    tags?:                                                                             string;
    dag_processing_logs?:                                                              string;
    scheduler_logs?:                                                                   string;
    task_logs?:                                                                        string;
    webserver_logs?:                                                                   string;
    worker_logs?:                                                                      string;
    log_level?:                                                                        string;
    arn?:                                                                              string;
    created_at?:                                                                       string;
    "logging_configuration[0].<LOG_CONFIGURATION_TYPE>[0].cloud_watch_log_group_arn"?: string;
    service_role_arn?:                                                                 string;
    status?:                                                                           string;
    tags_all?:                                                                         string;
    webserver_url?:                                                                    string;
}

export interface ResourceNatGateway {
    subnet_id:                           string;
    allocation_id?:                      string;
    connectivity_type?:                  string;
    private_ip?:                         string;
    secondary_allocation_ids?:           string;
    secondary_private_ip_address_count?: string;
    secondary_private_ip_addresses?:     string;
    tags?:                               string;
    association_id?:                     string;
    id?:                                 string;
    network_interface_id?:               string;
    public_ip?:                          string;
    tags_all?:                           string;
}

export interface NeptuneCluster {
    allow_major_version_upgrade?:           string;
    apply_immediately?:                     string;
    availability_zones?:                    string;
    backup_retention_period?:               string;
    cluster_identifier?:                    string;
    cluster_identifier_prefix?:             string;
    copy_tags_to_snapshot?:                 string;
    enable_cloudwatch_logs_exports?:        string;
    engine?:                                string;
    engine_version?:                        string;
    final_snapshot_identifier?:             string;
    global_cluster_identifier?:             string;
    iam_roles?:                             string;
    iam_database_authentication_enabled?:   string;
    kms_key_arn?:                           string;
    neptune_subnet_group_name?:             string;
    neptune_cluster_parameter_group_name?:  string;
    neptune_instance_parameter_group_name?: string;
    preferred_backup_window?:               string;
    preferred_maintenance_window?:          string;
    port?:                                  string;
    replication_source_identifier?:         string;
    skip_final_snapshot?:                   string;
    storage_encrypted?:                     string;
    tags?:                                  string;
    vpc_security_group_ids?:                string;
    deletion_protection?:                   string;
    serverless_v2_scaling_configuration?:   string;
    arn?:                                   string;
    cluster_resource_id?:                   string;
    cluster_members?:                       string;
    endpoint?:                              string;
    hosted_zone_id?:                        string;
    id?:                                    string;
    reader_endpoint?:                       string;
    status?:                                string;
    tags_all?:                              string;
}

export interface ClusterEndpoint {
    endpoint_type?:               string;
    cluster_identifier?:          string;
    cluster_endpoint_identifier?: string;
    excluded_members?:            string;
    static_members?:              string;
    tags?:                        string;
    arn?:                         string;
    endpoint?:                    string;
    id?:                          string;
    tags_all?:                    string;
    custom_endpoint_type?:        string;
}

export interface NeptuneGlobalCluster {
    global_cluster_identifier?:    string;
    deletion_protection?:          string;
    engine?:                       string;
    source_db_cluster_identifier?: string;
    storage_encrypted?:            string;
    create?:                       string;
    update?:                       string;
    delete?:                       string;
    arn?:                          string;
    global_cluster_resource_id?:   string;
    id?:                           string;
}

export interface NetworkACLAssociation {
    network_acl_id: string;
    subnet_id:      string;
    id?:            string;
}

export interface NetworkACLRule {
    network_acl_id:   string;
    rule_number:      string;
    protocol:         string;
    rule_action:      string;
    egress?:          string;
    cidr_block?:      string;
    ipv6_cidr_block?: string;
    from_port?:       string;
    to_port?:         string;
    icmp_type?:       string;
    id?:              string;
}

export interface ResourceNetworkInterface {
    subnet_id:                  string;
    instance:                   string;
    device_index:               string;
    attachment?:                string;
    description?:               string;
    interface_type?:            string;
    ipv4_prefix_count?:         string;
    ipv4_prefixes?:             string;
    ipv6_address_count?:        string;
    ipv6_address_list_enabled?: string;
    ipv6_address_list?:         string;
    ipv6_addresses?:            string;
    ipv6_prefix_count?:         string;
    ipv6_prefixes?:             string;
    private_ip_list?:           string;
    private_ip_list_enabled?:   string;
    private_ips?:               string;
    private_ips_count?:         string;
    security_groups?:           string;
    source_dest_check?:         string;
    tags?:                      string;
    arn?:                       string;
    id?:                        string;
    mac_address?:               string;
    owner_id?:                  string;
    private_dns_name?:          string;
    tags_all?:                  string;
}

export interface NetworkInterfaceAttachment {
    instance_id:          string;
    network_interface_id: string;
    device_index:         string;
    attachment_id?:       string;
    status?:              string;
}

export interface NetworkInterfaceSgAttachment {
    security_group_id:    string;
    network_interface_id: string;
}

export interface ResourceNetworkfirewallFirewall {
    firewall_policy_arn:                string;
    subnet_mapping:                     string;
    type:                               string;
    subnet_id:                          string;
    delete_protection?:                 string;
    description?:                       string;
    encryption_configuration?:          string;
    firewall_policy_change_protection?: string;
    name?:                              string;
    subnet_change_protection?:          string;
    tags?:                              string;
    vpc_id?:                            string;
    key_id?:                            string;
    ip_address_type?:                   string;
    id?:                                string;
    arn?:                               string;
    tags_all?:                          string;
    update_token?:                      string;
}

export interface ResourceNetworkfirewallFirewallPolicy {
    firewall_policy:                    string;
    type:                               string;
    stateless_default_actions:          string;
    stateless_fragment_default_actions: string;
    key:                                string;
    ip_set:                             string;
    resource_arn:                       string;
    action_definition:                  string;
    priority:                           string;
    publish_metric_action:              string;
    dimension:                          string;
    value:                              string;
    description?:                       string;
    encryption_configuration?:          string;
    name?:                              string;
    tags?:                              string;
    key_id?:                            string;
    policy_variables?:                  string;
    stateful_default_actions?:          string;
    stateful_engine_options?:           string;
    stateful_rule_group_reference?:     string;
    stateless_custom_action?:           string;
    stateless_rule_group_reference?:    string;
    rule_order?:                        string;
    stream_exception_policy?:           string;
    override?:                          string;
    action?:                            string;
    action_name?:                       string;
    id?:                                string;
    arn?:                               string;
    tags_all?:                          string;
    update_token?:                      string;
}

export interface NetworkfirewallLoggingConfiguration {
    logging_configuration:  string;
    log_destination_config: string;
    log_destination_type:   string;
    log_type:               string;
    firewall_arn?:          string;
    id?:                    string;
}

export interface NetworkfirewallResourcePolicy {
    resource_arn?: string;
    id?:           string;
}

export interface NetworkfirewallRuleGroup {
    type:                      string;
    rules_source:              string;
    key:                       string;
    ip_set:                    string;
    definition:                string;
    reference_arn:             string;
    port_set:                  string;
    rule_order:                string;
    generated_rules_type:      string;
    target_types:              string;
    targets:                   string;
    action:                    string;
    header:                    string;
    rule_option:               string;
    stateless_rule:            string;
    destination:               string;
    destination_port:          string;
    direction:                 string;
    protocol:                  string;
    source:                    string;
    source_port:               string;
    keyword:                   string;
    action_definition:         string;
    priority:                  string;
    rule_definition:           string;
    actions:                   string;
    match_attributes:          string;
    publish_metric_action:     string;
    dimension:                 string;
    value:                     string;
    address_definition:        string;
    from_port:                 string;
    flags:                     string;
    capacity?:                 string;
    description?:              string;
    encryption_configuration?: string;
    name?:                     string;
    rule_group?:               string;
    rules?:                    string;
    tags?:                     string;
    key_id?:                   string;
    reference_sets?:           string;
    stateful_rule_options?:    string;
    ip_set_reference?:         string;
    ip_sets?:                  string;
    port_sets?:                string;
    custom_action?:            string;
    settings?:                 string;
    action_name?:              string;
    protocols?:                string;
    tcp_flag?:                 string;
    to_port?:                  string;
    masks?:                    string;
    id?:                       string;
    arn?:                      string;
    tags_all?:                 string;
    update_token?:             string;
}

export interface NetworkmanagerCoreNetwork {
    global_network_id:    string;
    description?:         string;
    base_policy_regions?: string;
    create_base_policy?:  string;
    tags?:                string;
    arn?:                 string;
    created_at?:          string;
    edges?:               string;
    id?:                  string;
    segments?:            string;
    state?:               string;
    tags_all?:            string;
    asn?:                 string;
    edge_location?:       string;
    inside_cidr_blocks?:  string;
    edge_locations?:      string;
    name?:                string;
    shared_segments?:     string;
}

export interface NetworkmanagerCoreNetworkPolicyAttachment {
    core_network_id: string;
    policy_document: string;
    state?:          string;
}

export interface NetworkmanagerAssociation {
    customer_gateway_arn?:             string;
    device_id:                         string;
    global_network_id:                 string;
    link_id?:                          string;
    transit_gateway_connect_peer_arn?: string;
}

export interface NetworkmanagerTransitGatewayPeering {
    core_network_id:                        string;
    transit_gateway_arn:                    string;
    tags?:                                  string;
    arn?:                                   string;
    core_network_arn?:                      string;
    edge_location?:                         string;
    id?:                                    string;
    owner_account_id?:                      string;
    peering_type?:                          string;
    resource_arn?:                          string;
    tags_all?:                              string;
    transit_gateway_peering_attachment_id?: string;
}

export interface NetworkmanagerTransitGatewayRegistration {
    global_network_id:   string;
    transit_gateway_arn: string;
}

export interface NetworkmanagerAttachment {
    peering_id?:                      string;
    transit_gateway_route_table_arn?: string;
    tags?:                            string;
    arn?:                             string;
    attachment_policy_rule_number?:   string;
    attachment_type?:                 string;
    core_network_arn?:                string;
    core_network_id?:                 string;
    edge_location?:                   string;
    id?:                              string;
    owner_account_id?:                string;
    resource_arn?:                    string;
    segment_name?:                    string;
    state?:                           string;
    tags_all?:                        string;
    subnet_arns?:                     string;
    vpc_arn?:                         string;
    options?:                         Options;
}

export interface Options {
    appliance_mode_support: string;
    ipv6_support:           string;
}

export interface OamSinkPolicy {
    sink_identifier: string;
    policy:          string;
    arn?:            string;
    sink_id?:        string;
}

export interface OpensearchDomain {
    domain_name:                         string;
    unit:                                string;
    user_pool_id:                        string;
    enabled:                             string;
    automated_snapshot_start_hour:       string;
    subnet_ids:                          string;
    access_policies?:                    string;
    advanced_options?:                   string;
    advanced_security_options?:          AdvancedSecurityOptions;
    auto_tune_options?:                  AutoTuneOptions;
    cluster_config?:                     ClusterConfig;
    cognito_options?:                    CognitoOptions;
    domain_endpoint_options?:            DomainEndpointOptions;
    ebs_options?:                        EbsOptions;
    engine_version?:                     string;
    encrypt_at_rest?:                    EncryptAtREST;
    log_publishing_options?:             LogPublishingOptions;
    node_to_node_encryption?:            SoftwareTokenMfaConfigurationClass;
    snapshot_options?:                   SnapshotOptions;
    software_update_options?:            SoftwareUpdateOptions;
    tags?:                               string;
    vpc_options?:                        Vpc;
    off_peak_window_options?:            SoftwareTokenMfaConfigurationClass;
    master_user_password?:               string;
    availability_zone_count?:            string;
    tls_security_policy?:                string;
    kms_key_id?:                         string;
    arn?:                                string;
    domain_id?:                          string;
    endpoint?:                           string;
    dashboard_endpoint?:                 string;
    tags_all?:                           string;
    "vpc_options.0.availability_zones"?: string;
    "vpc_options.0.vpc_id"?:             string;
}

export interface SoftwareUpdateOptions {
    auto_software_update_enabled: string;
}

export interface OpensearchInboundConnectionAccepter {
    connection_id?:     string;
    id?:                string;
    connection_status?: string;
}

export interface OpensearchOutboundConnection {
    connection_alias?:      string;
    connection_mode?:       string;
    accept_connection?:     string;
    connection_properties?: ConnectionProperties;
    local_domain_info?:     DomainInfo;
    remote_domain_info?:    DomainInfo;
    cross_cluster_search?:  CrossClusterSearch;
    skip_unavailable?:      string;
    id?:                    string;
    connection_status?:     string;
    endpoint?:              string;
}

export interface ConnectionProperties {
    cross_cluster_search: string;
}

export interface CrossClusterSearch {
    skip_unavailable: string;
}

export interface DomainInfo {
    owner_id:    string;
    domain_name: string;
    region:      string;
}

export interface OpensearchPackage {
    package_name?:              string;
    package_type?:              string;
    package_source?:            PackageSource;
    package_description?:       string;
    id?:                        string;
    available_package_version?: string;
}

export interface PackageSource {
    s3_bucket_name: string;
    s3_key:         string;
}

export interface OpensearchPackageAssociation {
    package_id?:  string;
    domain_name?: string;
    id?:          string;
}

export interface OpensearchVpcEndpoint {
    vpc_options: Vpc;
    domain_arn?: string;
    id?:         string;
    endpoint?:   string;
}

export interface ResourceOpensearchserverlessSecurityConfig {
    saml_options:    OpensearchserverlessSecurityConfigSamlOptions;
    type:            string;
    name?:           string;
    description?:    string;
    config_version?: string;
}

export interface OpsworksApplication {
    name:                       string;
    short_name:                 string;
    stack_id:                   string;
    type:                       string;
    url:                        string;
    key:                        string;
    value:                      string;
    private_key:                string;
    certificate:                string;
    description?:               string;
    environment?:               string;
    enable_ssl?:                string;
    ssl_configuration?:         string;
    app_source?:                string;
    data_source_arn?:           string;
    data_source_type?:          string;
    data_source_database_name?: string;
    domains?:                   string;
    document_root?:             string;
    auto_bundle_on_deploy?:     string;
    rails_env?:                 string;
    aws_flow_ruby_settings?:    string;
    username?:                  string;
    password?:                  string;
    ssh_key?:                   string;
    revision?:                  string;
    secure?:                    string;
    chain?:                     string;
    id?:                        string;
}

export interface OpsworksCustomLayer {
    name:                         string;
    short_name:                   string;
    stack_id:                     string;
    mount_point:                  string;
    size:                         string;
    number_of_disks:              string;
    raid_level:                   string;
    log_group_name:               string;
    auto_assign_elastic_ips?:     string;
    auto_assign_public_ips?:      string;
    cloudwatch_configuration?:    string;
    custom_instance_profile_arn?: string;
    custom_security_group_ids?:   string;
    auto_healing?:                string;
    install_updates_on_boot?:     string;
    instance_shutdown_timeout?:   string;
    elastic_load_balancer?:       string;
    drain_elb_on_shutdown?:       string;
    load_based_auto_scaling?:     string;
    system_packages?:             string;
    use_ebs_optimized_instances?: string;
    ebs_volume?:                  string;
    custom_json?:                 string;
    tags?:                        string;
    type?:                        string;
    iops?:                        string;
    encrypted?:                   string;
    enabled?:                     string;
    log_streams?:                 string;
    batch_count?:                 string;
    batch_size?:                  string;
    buffer_duration?:             string;
    datetime_format?:             string;
    encoding?:                    string;
    file_fingerprint_lines?:      string;
    initial_position?:            string;
    multiline_start_pattern?:     string;
    time_zone?:                   string;
    downscaling?:                 string;
    enable?:                      string;
    upscaling?:                   string;
    alarms?:                      string;
    cpu_threshold?:               string;
    ignore_metrics_time?:         string;
    instance_count?:              string;
    load_threshold?:              string;
    memory_threshold?:            string;
    thresholds_wait_time?:        string;
    id?:                          string;
    arn?:                         string;
    tags_all?:                    string;
}

export interface OpsworksLayer {
    stack_id:                        string;
    ecs_cluster_arn?:                string;
    mount_point:                     string;
    size:                            string;
    number_of_disks:                 string;
    raid_level:                      string;
    name?:                           string;
    auto_assign_elastic_ips?:        string;
    auto_assign_public_ips?:         string;
    custom_instance_profile_arn?:    string;
    custom_security_group_ids?:      string;
    auto_healing?:                   string;
    install_updates_on_boot?:        string;
    instance_shutdown_timeout?:      string;
    elastic_load_balancer?:          string;
    drain_elb_on_shutdown?:          string;
    system_packages?:                string;
    use_ebs_optimized_instances?:    string;
    ebs_volume?:                     string;
    custom_json?:                    string;
    tags?:                           string;
    type?:                           string;
    iops?:                           string;
    id?:                             string;
    arn?:                            string;
    password?:                       string;
    url?:                            string;
    username?:                       string;
    tags_all?:                       string;
    stats_password?:                 string;
    healthcheck_method?:             string;
    healthcheck_url?:                string;
    stats_enabled?:                  string;
    stats_url?:                      string;
    stats_user?:                     string;
    app_server?:                     string;
    app_server_version?:             string;
    jvm_type?:                       string;
    jvm_options?:                    string;
    jvm_version?:                    string;
    allocated_memory?:               string;
    root_password?:                  string;
    root_password_on_all_instances?: string;
    nodejs_version?:                 string;
    bundler_version?:                string;
    manage_bundler?:                 string;
    passenger_version?:              string;
    ruby_version?:                   string;
    rubygems_version?:               string;
}

export interface OpsworksInstance {
    layer_ids:                     string;
    stack_id:                      string;
    agent_version?:                string;
    ami_id?:                       string;
    architecture?:                 string;
    auto_scaling_type?:            string;
    availability_zone?:            string;
    delete_ebs?:                   string;
    delete_eip?:                   string;
    ebs_block_device?:             string;
    ebs_optimized?:                string;
    ecs_cluster_arn?:              string;
    elastic_ip?:                   string;
    ephemeral_block_device?:       string;
    hostname?:                     string;
    infrastructure_class?:         string;
    install_updates_on_boot?:      string;
    instance_profile_arn?:         string;
    instance_type?:                string;
    os?:                           string;
    root_block_device?:            string;
    root_device_type?:             string;
    ssh_key_name?:                 string;
    state?:                        string;
    subnet_id?:                    string;
    tenancy?:                      string;
    virtualization_type?:          string;
    created_at?:                   string;
    ec2_instance_id?:              string;
    id?:                           string;
    last_service_error_id?:        string;
    platform?:                     string;
    private_dns?:                  string;
    private_ip?:                   string;
    public_dns?:                   string;
    public_ip?:                    string;
    registered_by?:                string;
    reported_agent_version?:       string;
    reported_os_family?:           string;
    reported_os_name?:             string;
    reported_os_version?:          string;
    root_device_volume_id?:        string;
    security_group_ids?:           string;
    ssh_host_dsa_key_fingerprint?: string;
    ssh_host_rsa_key_fingerprint?: string;
    status?:                       string;
}

export interface OpsworksPermission {
    user_arn:    string;
    stack_id:    string;
    allow_ssh?:  string;
    allow_sudo?: string;
    level?:      string;
    id?:         string;
}

export interface OpsworksRDSDBInstance {
    stack_id:            string;
    rds_db_instance_arn: string;
    db_user:             string;
    db_password:         string;
    id?:                 string;
}

export interface OpsworksStack {
    name:                           string;
    region:                         string;
    service_role_arn:               string;
    default_instance_profile_arn:   string;
    type:                           string;
    url:                            string;
    agent_version?:                 string;
    berkshelf_version?:             string;
    color?:                         string;
    configuration_manager_name?:    string;
    configuration_manager_version?: string;
    custom_cookbooks_source?:       string;
    custom_json?:                   string;
    default_availability_zone?:     string;
    default_os?:                    string;
    default_root_device_type?:      string;
    default_ssh_key_name?:          string;
    default_subnet_id?:             string;
    hostname_theme?:                string;
    manage_berkshelf?:              string;
    tags?:                          string;
    use_custom_cookbooks?:          string;
    use_opsworks_security_groups?:  string;
    vpc_id?:                        string;
    username?:                      string;
    password?:                      string;
    ssh_key?:                       string;
    revision?:                      string;
    id?:                            string;
    tags_all?:                      string;
}

export interface OpsworksUserProfile {
    user_arn:               string;
    ssh_username:           string;
    allow_self_management?: string;
    ssh_public_key?:        string;
    id?:                    string;
}

export interface OrganizationsAccount {
    email:                       string;
    name:                        string;
    close_on_deletion?:          string;
    create_govcloud?:            string;
    iam_user_access_to_billing?: string;
    parent_id?:                  string;
    role_name?:                  string;
    tags?:                       string;
    arn?:                        string;
    govcloud_id?:                string;
    id?:                         string;
    tags_all?:                   string;
}

export interface OrganizationsDelegatedAdministrator {
    account_id:               string;
    service_principal:        string;
    id?:                      string;
    arn?:                     string;
    delegation_enabled_date?: string;
    email?:                   string;
    joined_method?:           string;
    joined_timestamp?:        string;
    name?:                    string;
    status?:                  string;
}

export interface OrganizationsPolicyAttachment {
    policy_id: string;
    target_id: string;
}

export interface PinpointAdmChannel {
    application_id: string;
    client_id:      string;
    client_secret:  string;
    enabled?:       string;
}

export interface PinpointApnsChannel {
    application_id:                 string;
    certificate:                    string;
    private_key:                    string;
    bundle_id:                      string;
    team_id:                        string;
    token_key:                      string;
    token_key_id:                   string;
    enabled?:                       string;
    default_authentication_method?: string;
}

export interface PinpointApp {
    name?:                 string;
    name_prefix?:          string;
    campaign_hook?:        string;
    limits?:               string;
    quiet_time?:           string;
    tags?:                 string;
    lambda_function_name?: string;
    mode?:                 string;
    web_url?:              string;
    daily?:                string;
    maximum_duration?:     string;
    messages_per_second?:  string;
    total?:                string;
    end?:                  string;
    start?:                string;
    application_id?:       string;
    arn?:                  string;
    tags_all?:             string;
}

export interface PinpointChannel {
    application_id: string;
    api_key:        string;
    secret_key?:    string;
    enabled?:       string;
}

export interface PinpointEmailChannel {
    application_id:       string;
    from_address:         string;
    identity:             string;
    enabled?:             string;
    configuration_set?:   string;
    role_arn?:            string;
    messages_per_second?: string;
}

export interface PinpointEventStream {
    application_id:         string;
    destination_stream_arn: string;
    role_arn:               string;
}

export interface PinpointSMSChannel {
    application_id:                     string;
    enabled?:                           string;
    sender_id?:                         string;
    short_code?:                        string;
    promotional_messages_per_second?:   string;
    transactional_messages_per_second?: string;
}

export interface PipesPipe {
    role_arn:                                string;
    source:                                  string;
    target:                                  string;
    pattern:                                 string;
    credentials:                             string;
    queue_name:                              string;
    basic_auth:                              string;
    starting_position:                       string;
    topic_name:                              string;
    job_definition:                          string;
    job_name:                                string;
    size_in_gib:                             string;
    partition_key:                           string;
    database:                                string;
    description?:                            string;
    desired_state?:                          string;
    enrichment?:                             string;
    enrichment_parameters?:                  string;
    name?:                                   string;
    name_prefix?:                            string;
    source_parameters?:                      string;
    target_parameters?:                      string;
    tags?:                                   string;
    input_template?:                         string;
    http_parameters?:                        string;
    header_parameters?:                      string;
    query_string_parameters?:                string;
    activemq_broker_parameters?:             string;
    dynamodb_stream_parameters?:             string;
    filter_criteria?:                        string;
    kinesis_stream_parameters?:              string;
    managed_streaming_kafka_parameters?:     string;
    rabbitmq_broker_parameters?:             string;
    self_managed_kafka_parameters?:          string;
    sqs_queue_parameters?:                   string;
    filter?:                                 string;
    batch_size?:                             string;
    maximum_batching_window_in_seconds?:     string;
    dead_letter_config?:                     string;
    maximum_record_age_in_seconds?:          string;
    maximum_retry_attempts?:                 string;
    on_partial_batch_item_failure?:          string;
    parallelization_factor?:                 string;
    arn?:                                    string;
    starting_position_timestamp?:            string;
    consumer_group_id?:                      string;
    client_certificate_tls_auth?:            string;
    sasl_scram_512_auth?:                    string;
    virtual_host?:                           string;
    additional_bootstrap_servers?:           string;
    server_root_ca_certificate?:             string;
    vpc?:                                    string;
    sasl_scram_256_auth?:                    string;
    security_groups?:                        string;
    subnets?:                                string;
    batch_job_parameters?:                   string;
    cloudwatch_logs_parameters?:             string;
    ecs_task_parameters?:                    string;
    eventbridge_event_bus_parameters?:       string;
    lambda_function_parameters?:             string;
    redshift_data_parameters?:               string;
    sagemaker_pipeline_parameters?:          string;
    step_function_state_machine_parameters?: string;
    array_properties?:                       string;
    container_overrides?:                    string;
    depends_on?:                             string;
    parameters?:                             string;
    retry_strategy?:                         string;
    size?:                                   string;
    command?:                                string;
    environment?:                            string;
    instance_type?:                          string;
    resource_requirement?:                   string;
    value?:                                  string;
    type?:                                   string;
    job_id?:                                 string;
    attempts?:                               string;
    log_stream_name?:                        string;
    timestamp?:                              string;
    capacity_provider_strategy?:             string;
    enable_ecs_managed_tags?:                string;
    enable_execute_command?:                 string;
    group?:                                  string;
    launch_type?:                            string;
    network_configuration?:                  string;
    overrides?:                              string;
    placement_constraint?:                   string;
    placement_strategy?:                     string;
    platform_version?:                       string;
    propagate_tags?:                         string;
    reference_id?:                           string;
    task_count?:                             string;
    task_definition_arn?:                    string;
    base?:                                   string;
    capacity_provider?:                      string;
    weight?:                                 string;
    aws_vpc_configuration?:                  string;
    assign_public_ip?:                       string;
    container_override?:                     string;
    cpu?:                                    string;
    ephemeral_storage?:                      string;
    execution_role_arn?:                     string;
    inference_accelerator_override?:         string;
    memory?:                                 string;
    task_role_arn?:                          string;
    environment_file?:                       string;
    memory_reservation?:                     string;
    device_name?:                            string;
    device_type?:                            string;
    expression?:                             string;
    field?:                                  string;
    detail_type?:                            string;
    endpoint_id?:                            string;
    resources?:                              string;
    time?:                                   string;
    invocation_type?:                        string;
    db_user?:                                string;
    secret_manager_arn?:                     string;
    sqls?:                                   string;
    statement_name?:                         string;
    with_event?:                             string;
    pipeline_parameter?:                     string;
    message_deduplication_id?:               string;
    message_group_id?:                       string;
    id?:                                     string;
    tags_all?:                               string;
}

export interface PlacementGroup {
    name:                string;
    strategy:            string;
    partition_count?:    string;
    spread_level?:       string;
    tags?:               string;
    arn?:                string;
    id?:                 string;
    placement_group_id?: string;
    tags_all?:           string;
}

export interface PrometheusAlertManagerDefinition {
    workspace_id: string;
    definition:   string;
}

export interface PrometheusRuleGroupNamespace {
    name:         string;
    workspace_id: string;
    data:         string;
}

export interface ResourcePrometheusWorkspace {
    log_group_arn:          string;
    alias?:                 string;
    logging_configuration?: string;
    tags?:                  string;
    arn?:                   string;
    id?:                    string;
    prometheus_endpoint?:   string;
    tags_all?:              string;
}

export interface ProxyProtocolPolicy {
    load_balancer:  string;
    instance_ports: string;
    id?:            string;
}

export interface QldbLedger {
    permissions_mode:     string;
    deletion_protection?: string;
    kms_key?:             string;
    name?:                string;
    tags?:                string;
    id?:                  string;
    arn?:                 string;
    tags_all?:            string;
}

export interface QldbStream {
    inclusive_start_time:  string;
    kinesis_configuration: KinesisConfiguration;
    ledger_name:           string;
    role_arn:              string;
    stream_name:           string;
    exclusive_end_time?:   string;
    tags?:                 string;
    id?:                   string;
    arn?:                  string;
    tags_all?:             string;
}

export interface KinesisConfiguration {
    stream_arn:           string;
    aggregation_enabled?: string;
}

export interface QuicksightAccountSubscription {
    account_name:                 string;
    authentication_method:        string;
    edition:                      string;
    notification_email:           string;
    active_directory_name?:       string;
    admin_group?:                 string;
    author_group?:                string;
    aws_account_id?:              string;
    contact_number?:              string;
    directory_id?:                string;
    email_address?:               string;
    first_name?:                  string;
    last_name?:                   string;
    reader_group?:                string;
    realm?:                       string;
    account_subscription_status?: string;
}

export interface QuicksightAnalysis {
    name:                     string;
    principal:                string;
    data_set_references:      DataSetReferences;
    data_set_placeholder:     string;
    analysis_id?:             string;
    aws_account_id?:          string;
    definition?:              Definition;
    parameters?:              QuicksightAnalysisParameters;
    permissions?:             Permissions;
    recovery_window_in_days?: string;
    source_entity?:           QuicksightAnalysisSourceEntity;
    tags?:                    string;
    theme_arn?:               string;
    source_template?:         Source;
    string_parameters?:       string;
    arn?:                     string;
    created_time?:            string;
    id?:                      string;
    last_updated_time?:       string;
    status?:                  string;
    tags_all?:                string;
}

export interface DataSetReferences {
    data_set_arn:         string;
    data_set_placeholder: string;
}

export interface Definition {
    data_set_identifiers_declarations?: string;
    analysis_defaults:                  string;
    calculated_fields:                  string;
    column_configurations:              string;
    filter_groups:                      string;
    parameters_declarations:            string;
    sheets:                             string;
    data_set_configuration?:            string;
}

export interface QuicksightAnalysisParameters {
    date_time_parameters: string;
    decimal_parameters:   string;
    integer_parameters:   string;
    string_parameters:    string;
}

export interface QuicksightAnalysisSourceEntity {
    source_template: string;
}

export interface Source {
    arn:                 string;
    data_set_references: string;
}

export interface QuicksightDashboard {
    name:                                      string;
    version_description:                       string;
    principal:                                 string;
    data_set_references:                       DataSetReferences;
    data_set_placeholder:                      string;
    dashboard_id?:                             string;
    aws_account_id?:                           string;
    dashboard_publish_options?:                DashboardPublishOptions;
    definition?:                               Definition;
    parameters?:                               QuicksightAnalysisParameters;
    permissions?:                              Permissions;
    source_entity?:                            QuicksightAnalysisSourceEntity;
    tags?:                                     string;
    theme_arn?:                                string;
    source_template?:                          Source;
    ad_hoc_filtering_option?:                  Option;
    data_point_drill_up_down_option?:          Option;
    data_point_menu_label_option?:             Option;
    data_point_tooltip_option?:                Option;
    export_to_csv_option?:                     Option;
    export_with_hidden_fields_option?:         Option;
    sheet_controls_option?:                    SheetControlsOption;
    sheet_layout_element_maximization_option?: Option;
    visual_axis_sort_option?:                  Option;
    visual_menu_option?:                       Option;
    availability_status?:                      string;
    visibility_state?:                         string;
    string_parameters?:                        string;
    arn?:                                      string;
    created_time?:                             string;
    id?:                                       string;
    last_updated_time?:                        string;
    source_entity_arn?:                        string;
    status?:                                   string;
    tags_all?:                                 string;
    version_number?:                           string;
}

export interface Option {
    availability_status: string;
}

export interface DashboardPublishOptions {
    ad_hoc_filtering_option:                  string;
    data_point_drill_up_down_option:          string;
    data_point_menu_label_option:             string;
    data_point_tooltip_option:                string;
    export_to_csv_option:                     string;
    export_with_hidden_fields_option:         string;
    sheet_controls_option:                    string;
    sheet_layout_element_maximization_option: string;
    visual_axis_sort_option:                  string;
    visual_menu_option:                       string;
}

export interface SheetControlsOption {
    visibility_state: string;
}

export interface ResourceQuicksightDataSet {
    import_mode:                             string;
    name:                                    string;
    physical_table_map:                      PhysicalTableMap;
    input_columns:                           AuditmanagerFrameworkClass;
    columns:                                 Columns;
    expression:                              string;
    condition_expression:                    string;
    projected_columns:                       string;
    new_column_name:                         string;
    tag_names:                               string;
    principal:                               string;
    tag_rules:                               TagRules;
    refresh_configuration:                   RefreshConfiguration;
    incremental_refresh:                     IncrementalRefresh;
    lookback_window:                         LookbackWindow;
    size_unit:                               string;
    data_set_id?:                            string;
    aws_account_id?:                         string;
    column_groups?:                          ColumnGroups;
    column_level_permission_rules?:          ColumnLevelPermissionRules;
    data_set_usage_configuration?:           DataSetUsageConfiguration;
    field_folders?:                          FieldFolders;
    logical_table_map?:                      LogicalTableMap;
    permissions?:                            Permissions;
    row_level_permission_data_set?:          RowLevelPermissionDataSet;
    row_level_permission_tag_configuration?: RowLevelPermissionTagConfiguration;
    tags?:                                   QuicksightDataSetTags;
    custom_sql?:                             CustomSQL;
    relational_table?:                       RelationalTable;
    s3_source?:                              S3Source;
    schema?:                                 string;
    upload_settings?:                        UploadSettings;
    format?:                                 string;
    text_qualifier?:                         string;
    geo_spatial_column_group?:               GeoSpatialColumnGroup;
    principals?:                             string;
    disable_use_as_imported_source?:         string;
    description?:                            string;
    data_transforms?:                        DataTransforms;
    source?:                                 SourceClass;
    cast_column_type_operation?:             CastColumnTypeOperation;
    create_columns_operation?:               CreateColumnsOperation;
    filter_operation?:                       FilterOperation;
    project_operation?:                      ProjectOperation;
    rename_column_operation?:                RenameColumnOperation;
    tag_column_operation?:                   TagColumnOperation;
    untag_column_operation?:                 UntagColumnOperation;
    column_description?:                     ColumnDescription;
    column_geographic_role?:                 string;
    text?:                                   string;
    join_instruction?:                       JoinInstruction;
    physical_table_id?:                      string;
    left_join_key_properties?:               TJoinKeyProperties;
    right_join_key_properties?:              TJoinKeyProperties;
    unique_key?:                             string;
    status?:                                 string;
    arn?:                                    string;
    id?:                                     string;
    tags_all?:                               string;
}

export interface CastColumnTypeOperation {
    column_name:     string;
    new_column_type: string;
    format:          string;
}

export interface ColumnDescription {
    text: string;
}

export interface ColumnGroups {
    geo_spatial_column_group: string;
}

export interface ColumnLevelPermissionRules {
    column_names: string;
    principals:   string;
}

export interface Columns {
    column_id:   string;
    column_name: string;
    expression:  string;
}

export interface CreateColumnsOperation {
    columns: string;
}

export interface CustomSQL {
    data_source_arn: string;
    name:            string;
    sql_query:       string;
    columns:         string;
}

export interface DataSetUsageConfiguration {
    disable_use_as_direct_query_source: string;
    disable_use_as_imported_source:     string;
}

export interface DataTransforms {
    cast_column_type_operation: string;
    create_columns_operation:   string;
    filter_operation:           string;
    project_operation:          string;
    rename_column_operation:    string;
    tag_column_operation:       string;
    untag_column_operation:     string;
}

export interface FieldFolders {
    field_folders_id: string;
    columns:          string;
    description:      string;
}

export interface FilterOperation {
    condition_expression: string;
}

export interface GeoSpatialColumnGroup {
    columns:      string;
    country_code: string;
    name:         string;
}

export interface IncrementalRefresh {
    lookback_window: string;
}

export interface JoinInstruction {
    left_operand:              string;
    on_clause:                 string;
    right_operand:             string;
    type:                      string;
    left_join_key_properties:  string;
    right_join_key_properties: string;
}

export interface TJoinKeyProperties {
    unique_key: string;
}

export interface LogicalTableMap {
    alias:                string;
    logical_table_map_id: string;
    data_transforms:      string;
    source:               string;
}

export interface LookbackWindow {
    column_name: string;
    size:        string;
    size_unit:   string;
}

export interface PhysicalTableMap {
    physical_table_map_id: string;
    custom_sql?:           string;
    relational_table?:     string;
    s3_source?:            string;
}

export interface ProjectOperation {
    projected_columns: string;
}

export interface RefreshConfiguration {
    incremental_refresh: string;
}

export interface RelationalTable {
    data_source_arn: string;
    input_columns:   string;
    name:            string;
    catalog:         string;
    schema:          string;
}

export interface RenameColumnOperation {
    column_name:     string;
    new_column_name: string;
}

export interface RowLevelPermissionDataSet {
    arn:               string;
    permission_policy: string;
    format_version:    string;
    namespace:         string;
    status:            string;
}

export interface RowLevelPermissionTagConfiguration {
    tag_rules: string;
    status:    string;
}

export interface S3Source {
    data_source_arn: string;
    input_columns:   string;
    upload_settings: string;
}

export interface SourceClass {
    data_set_arn:      string;
    join_instruction:  string;
    physical_table_id: string;
}

export interface TagColumnOperation {
    column_name: string;
    tags:        string;
}

export interface TagRules {
    column_name:                string;
    tag_key:                    string;
    match_all_value?:           string;
    tag_multi_value_delimiter?: string;
}

export interface QuicksightDataSetTags {
    column_description:     string;
    column_geographic_role: string;
}

export interface UntagColumnOperation {
    column_name: string;
    tag_names:   string;
}

export interface UploadSettings {
    contains_header: string;
    delimiter:       string;
    format:          string;
    start_from_row:  string;
    text_qualifier:  string;
}

export interface QuicksightDataSource {
    name:                   string;
    parameters:             string;
    type:                   string;
    password:               string;
    username:               string;
    actions:                string;
    principal:              string;
    disable_ssl:            string;
    vpc_connection_arn:     string;
    domain:                 string;
    database:               string;
    host:                   string;
    port:                   string;
    data_set_name:          string;
    site_base_url:          string;
    catalog:                string;
    manifest_file_location: string;
    bucket:                 string;
    key:                    string;
    warehouse:              string;
    max_rows:               string;
    query:                  string;
    data_source_id?:        string;
    aws_account_id?:        string;
    credentials?:           string;
    permission?:            string;
    ssl_properties?:        string;
    tags?:                  string;
    amazon_elasticsearch?:  string;
    athena?:                string;
    aurora?:                string;
    aurora_postgresql?:     string;
    aws_iot_analytics?:     string;
    jira?:                  string;
    maria_db?:              string;
    mysql?:                 string;
    oracle?:                string;
    postgresql?:            string;
    presto?:                string;
    rds?:                   string;
    redshift?:              string;
    s3?:                    string;
    service_now?:           string;
    snowflake?:             string;
    spark?:                 string;
    sql_server?:            string;
    teradata?:              string;
    twitter?:               string;
    work_group?:            string;
    instance_id?:           string;
    cluster_id?:            string;
    arn?:                   string;
    tags_all?:              string;
}

export interface QuicksightFolder {
    name:               string;
    folder_id?:         string;
    aws_account_id?:    string;
    folder_type?:       string;
    parent_folder_arn?: string;
    permissions?:       Permissions;
    tags?:              string;
    arn?:               string;
    created_time?:      string;
    folder_path?:       string;
    id?:                string;
    last_updated_time?: string;
    tags_all?:          string;
}

export interface QuicksightFolderMembership {
    folder_id?:      string;
    member_id?:      string;
    member_type?:    string;
    aws_account_id?: string;
    id?:             string;
}

export interface QuicksightGroupMembership {
    group_name:      string;
    member_name:     string;
    namespace:       string;
    aws_account_id?: string;
}

export interface QuicksightIamPolicyAssignment {
    assignment_name:   string;
    assignment_status: string;
    aws_account_id?:   string;
    identities?:       IamUserGroupMembership;
    namespace?:        string;
    policy_arn?:       string;
    assignment_id?:    string;
    id?:               string;
}

export interface QuicksightIngestion {
    data_set_id:       string;
    ingestion_id:      string;
    ingestion_type:    string;
    aws_account_id?:   string;
    arn?:              string;
    id?:               string;
    ingestion_status?: string;
}

export interface QuicksightNamespace {
    namespace:        string;
    aws_account_id?:  string;
    identity_store?:  string;
    tags?:            string;
    arn?:             string;
    capacity_region?: string;
    creation_status?: string;
    id?:              string;
    tags_all?:        string;
}

export interface QuicksightRefreshSchedule {
    schedule:            QuicksightRefreshScheduleSchedule;
    data_set_id?:        string;
    schedule_id?:        string;
    aws_account_id?:     string;
    schedule_frequency?: ScheduleFrequency;
    refresh_on_day?:     RefreshOnDay;
    arn?:                string;
    id?:                 string;
}

export interface RefreshOnDay {
    day_of_month: string;
    day_of_week:  string;
}

export interface QuicksightRefreshScheduleSchedule {
    refresh_type:        string;
    schedule_frequency?: string;
}

export interface ScheduleFrequency {
    interval:        string;
    time_of_the_day: string;
    timezone:        string;
    refresh_on_day:  string;
}

export interface QuicksightTemplate {
    name:                 string;
    version_description:  string;
    principal:            string;
    arn:                  string;
    data_set_references:  DataSetReferences;
    data_set_placeholder: string;
    template_id?:         string;
    aws_account_id?:      string;
    definition?:          Definition;
    permissions?:         Permissions;
    source_entity?:       QuicksightTemplateSourceEntity;
    tags?:                string;
    source_analysis?:     Source;
    source_template?:     GlobalacceleratorAccelerator;
    created_time?:        string;
    id?:                  string;
    last_updated_time?:   string;
    source_entity_arn?:   string;
    status?:              string;
    tags_all?:            string;
    version_number?:      string;
}

export interface QuicksightTemplateSourceEntity {
    source_analysis: string;
    source_template: string;
}

export interface QuicksightTemplateAlias {
    template_version_number: string;
    alias_name?:             string;
    template_id?:            string;
    aws_account_id?:         string;
    arn?:                    string;
    id?:                     string;
}

export interface ResourceQuicksightUser {
    email:           string;
    identity_type:   string;
    user_role:       string;
    user_name?:      string;
    aws_account_id?: string;
    iam_arn?:        string;
    session_name?:   string;
    arn?:            string;
}

export interface QuicksightVpcConnection {
    vpc_connection_id:    string;
    name:                 string;
    role_arn:             string;
    security_group_ids:   string;
    subnet_ids:           string;
    aws_account_id?:      string;
    dns_resolvers?:       string;
    tags?:                string;
    arn?:                 string;
    availability_status?: string;
    id?:                  string;
    tags_all?:            string;
}

export interface RAMPrincipalAssociation {
    principal:          string;
    resource_share_arn: string;
    id?:                string;
}

export interface RAMResourceAssociation {
    resource_arn:       string;
    resource_share_arn: string;
    id?:                string;
}

export interface ResourceRAMResourceShare {
    name:                       string;
    allow_external_principals?: string;
    permission_arns?:           string;
    tags?:                      string;
    arn?:                       string;
    id?:                        string;
    tags_all?:                  string;
}

export interface RAMResourceShareAccepter {
    share_arn:            string;
    invitation_arn?:      string;
    share_id?:            string;
    status?:              string;
    receiver_account_id?: string;
    sender_account_id?:   string;
    share_name?:          string;
    resources?:           string;
}

export interface RbinRule {
    resource_type:          string;
    retention_period:       RetentionPeriod;
    retention_period_value: string;
    unlock_delay:           UnlockDelay;
    description?:           string;
    resource_tags?:         ResourceTags;
    lock_configuration?:    LockConfiguration;
    resource_tag_value?:    string;
    id?:                    string;
    lock_end_time?:         string;
    lock_state?:            string;
    status?:                string;
}

export interface LockConfiguration {
    unlock_delay: string;
}

export interface ResourceTags {
    resource_tag_key:   string;
    resource_tag_value: string;
}

export interface RetentionPeriod {
    retention_period_unit:  string;
    retention_period_value: string;
}

export interface UnlockDelay {
    unlock_delay_unit:  string;
    unlock_delay_value: string;
}

export interface ResourceRDSCluster {
    engine:                               string;
    bucket_name:                          string;
    ingestion_role:                       string;
    source_engine:                        string;
    source_cluster_identifier:            string;
    max_capacity:                         string;
    min_capacity:                         string;
    allocated_storage?:                   string;
    allow_major_version_upgrade?:         string;
    apply_immediately?:                   string;
    availability_zones?:                  string;
    backtrack_window?:                    string;
    backup_retention_period?:             string;
    cluster_identifier_prefix?:           string;
    cluster_identifier?:                  string;
    copy_tags_to_snapshot?:               string;
    database_name?:                       string;
    db_cluster_instance_class?:           string;
    db_cluster_parameter_group_name?:     string;
    db_instance_parameter_group_name?:    string;
    db_system_id?:                        string;
    deletion_protection?:                 string;
    enable_global_write_forwarding?:      string;
    enable_http_endpoint?:                string;
    enabled_cloudwatch_logs_exports?:     string;
    engine_mode?:                         string;
    engine_version?:                      string;
    final_snapshot_identifier?:           string;
    global_cluster_identifier?:           string;
    iam_database_authentication_enabled?: string;
    iam_roles?:                           string;
    iops?:                                string;
    kms_key_id?:                          string;
    manage_master_user_password?:         string;
    master_password?:                     string;
    master_user_secret_kms_key_id?:       string;
    master_username?:                     string;
    network_type?:                        string;
    port?:                                string;
    preferred_backup_window?:             string;
    preferred_maintenance_window?:        string;
    replication_source_identifier?:       string;
    restore_to_point_in_time?:            string;
    scaling_configuration?:               string;
    skip_final_snapshot?:                 string;
    source_region?:                       string;
    storage_encrypted?:                   string;
    storage_type?:                        string;
    tags?:                                string;
    bucket_prefix?:                       string;
    restore_type?:                        string;
    use_latest_restorable_time?:          string;
    auto_pause?:                          string;
    seconds_until_auto_pause?:            string;
    arn?:                                 string;
    id?:                                  string;
    cluster_resource_id?:                 string;
    cluster_members?:                     string;
    endpoint?:                            string;
    reader_endpoint?:                     string;
    engine_version_actual?:               string;
    master_user_secret?:                  MasterUserSecret;
    hosted_zone_id?:                      string;
    tags_all?:                            string;
}

export interface RDSClusterActivityStream {
    resource_arn?:                        string;
    mode?:                                string;
    kms_key_id?:                          string;
    engine_native_audit_fields_included?: string;
    id?:                                  string;
    kinesis_stream_name?:                 string;
}

export interface RDSClusterInstance {
    apply_immediately?:                     string;
    auto_minor_version_upgrade?:            string;
    availability_zone?:                     string;
    ca_cert_identifier?:                    string;
    cluster_identifier?:                    string;
    copy_tags_to_snapshot?:                 string;
    custom_iam_instance_profile?:           string;
    db_parameter_group_name?:               string;
    engine_version?:                        string;
    engine?:                                string;
    identifier_prefix?:                     string;
    identifier?:                            string;
    monitoring_interval?:                   string;
    monitoring_role_arn?:                   string;
    performance_insights_enabled?:          string;
    performance_insights_kms_key_id?:       string;
    performance_insights_retention_period?: string;
    preferred_maintenance_window?:          string;
    promotion_tier?:                        string;
    publicly_accessible?:                   string;
    tags?:                                  string;
    arn?:                                   string;
    id?:                                    string;
    writer?:                                string;
    endpoint?:                              string;
    engine_version_actual?:                 string;
    port?:                                  string;
    storage_encrypted?:                     string;
    kms_key_id?:                            string;
    network_type?:                          string;
    dbi_resource_id?:                       string;
    tags_all?:                              string;
}

export interface RDSCustomDBEngineVersion {
    database_installation_files_s3_bucket_name: string;
    database_installation_files_s3_prefix:      string;
    engine_version:                             string;
    description?:                               string;
    filename?:                                  string;
    kms_key_id?:                                string;
    manifest?:                                  string;
    manifest_hash?:                             string;
    status?:                                    string;
    source_image_id?:                           string;
    tags?:                                      string;
    arn?:                                       string;
    create_time?:                               string;
    db_parameter_group_family?:                 string;
    image_id?:                                  string;
    major_engine_version?:                      string;
    manifest_computed?:                         string;
    tags_all?:                                  string;
}

export interface RDSExportTask {
    export_task_identifier: string;
    iam_role_arn:           string;
    kms_key_id:             string;
    s3_bucket_name:         string;
    source_arn:             string;
    export_only?:           string;
    s3_prefix?:             string;
    failure_cause?:         string;
    id?:                    string;
    percent_progress?:      string;
    snapshot_time?:         string;
    source_type?:           string;
    status?:                string;
    task_end_time?:         string;
    task_start_time?:       string;
    warning_message?:       string;
}

export interface RDSReservedInstance {
    offering_id:          string;
    instance_count?:      string;
    reservation_id?:      string;
    tags?:                string;
    arn?:                 string;
    id?:                  string;
    currency_code?:       string;
    duration?:            string;
    fixed_price?:         string;
    db_instance_class?:   string;
    lease_id?:            string;
    multi_az?:            string;
    offering_type?:       string;
    product_description?: string;
    recurring_charges?:   string;
    start_time?:          string;
    state?:               string;
    usage_price?:         string;
    tags_all?:            string;
}

export interface RedshiftAuthenticationProfile {
    authentication_profile_content: string;
    authentication_profile_name?:   string;
    id?:                            string;
}

export interface ResourceRedshiftCluster {
    cluster_identifier:                    string;
    node_type:                             string;
    enable:                                string;
    destination_region:                    string;
    database_name?:                        string;
    default_iam_role_arn?:                 string;
    cluster_type?:                         string;
    master_password?:                      string;
    master_username?:                      string;
    vpc_security_group_ids?:               string;
    cluster_subnet_group_name?:            string;
    availability_zone?:                    string;
    availability_zone_relocation_enabled?: string;
    preferred_maintenance_window?:         string;
    cluster_parameter_group_name?:         string;
    automated_snapshot_retention_period?:  string;
    port?:                                 string;
    cluster_version?:                      string;
    allow_version_upgrade?:                string;
    apply_immediately?:                    string;
    number_of_nodes?:                      string;
    publicly_accessible?:                  string;
    encrypted?:                            string;
    enhanced_vpc_routing?:                 string;
    kms_key_id?:                           string;
    elastic_ip?:                           string;
    skip_final_snapshot?:                  string;
    final_snapshot_identifier?:            string;
    snapshot_identifier?:                  string;
    snapshot_cluster_identifier?:          string;
    owner_account?:                        string;
    iam_roles?:                            string;
    logging?:                              string;
    maintenance_track_name?:               string;
    manual_snapshot_retention_period?:     string;
    snapshot_copy?:                        string;
    tags?:                                 string;
    bucket_name?:                          string;
    s3_key_prefix?:                        string;
    log_destination_type?:                 string;
    log_exports?:                          string;
    retention_period?:                     string;
    grant_name?:                           string;
    arn?:                                  string;
    id?:                                   string;
    endpoint?:                             string;
    dns_name?:                             string;
    cluster_public_key?:                   string;
    cluster_revision_number?:              string;
    cluster_nodes?:                        string;
    cluster_namespace_arn?:                string;
    tags_all?:                             string;
    node_role?:                            string;
    private_ip_address?:                   string;
    public_ip_address?:                    string;
}

export interface RedshiftClusterIamRoles {
    cluster_identifier:    string;
    iam_role_arns?:        string;
    default_iam_role_arn?: string;
    id?:                   string;
}

export interface RedshiftClusterSnapshot {
    cluster_identifier?:               string;
    snapshot_identifier?:              string;
    manual_snapshot_retention_period?: string;
    tags?:                             string;
    arn?:                              string;
    id?:                               string;
    kms_key_id?:                       string;
    owner_account?:                    string;
    tags_all?:                         string;
}

export interface RedshiftEndpointAccess {
    cluster_identifier?:     string;
    endpoint_name:           string;
    subnet_group_name?:      string;
    resource_owner?:         string;
    vpc_security_group_ids?: string;
    address?:                string;
    id?:                     string;
    port?:                   string;
    vpc_endpoint?:           string;
    network_interface?:      string;
    vpc_endpoint_id?:        string;
    vpc_id?:                 string;
    availability_zone?:      string;
    network_interface_id?:   string;
    private_ip_address?:     string;
    subnet_id?:              string;
    subnet_ids?:             string;
    workgroup_name?:         string;
    arn?:                    string;
}

export interface RedshiftEndpointAuthorization {
    account:            string;
    cluster_identifier: string;
    force_delete?:      string;
    vpc_ids?:           string;
    allowed_all_vpcs?:  string;
    id?:                string;
    endpoint_count?:    string;
    grantee?:           string;
    grantor?:           string;
}

export interface RedshiftHSMClientCertificate {
    hsm_client_certificate_identifier?: string;
    tags?:                              string;
    arn?:                               string;
    hsm_client_certificate_public_key?: string;
    tags_all?:                          string;
}

export interface RedshiftHSMConfiguration {
    description?:                   string;
    hsm_configuration_identifier?:  string;
    hsm_ip_address?:                string;
    hsm_partition_name?:            string;
    hsm_partition_password?:        string;
    hsm_server_public_certificate?: string;
    tags?:                          string;
    arn?:                           string;
    hsm_configuration_public_key?:  string;
    tags_all?:                      string;
}

export interface RedshiftPartner {
    account_id:         string;
    cluster_identifier: string;
    database_name:      string;
    partner_name:       string;
    id?:                string;
    status?:            string;
    status_message?:    string;
}

export interface RedshiftScheduledAction {
    name:               string;
    iam_role:           string;
    target_action:      string;
    cluster_identifier: string;
    description?:       string;
    enable?:            string;
    start_time?:        string;
    end_time?:          string;
    pause_cluster?:     string;
    resize_cluster?:    string;
    resume_cluster?:    string;
    classic?:           string;
    cluster_type?:      string;
    node_type?:         string;
    number_of_nodes?:   string;
    id?:                string;
}

export interface RedshiftSnapshotCopyGrant {
    snapshot_copy_grant_name?: string;
    kms_key_id?:               string;
    tags?:                     string;
    arn?:                      string;
    tags_all?:                 string;
}

export interface RedshiftSnapshotSchedule {
    identifier?:        string;
    identifier_prefix?: string;
    description?:       string;
    force_destroy?:     string;
    tags?:              string;
    arn?:               string;
    tags_all?:          string;
}

export interface RedshiftSnapshotScheduleAssociation {
    cluster_identifier?:  string;
    schedule_identifier?: string;
}

export interface RedshiftUsageLimit {
    amount:             string;
    cluster_identifier: string;
    feature_type:       string;
    limit_type:         string;
    breach_action?:     string;
    period?:            string;
    tags?:              string;
    arn?:               string;
    id?:                string;
    tags_all?:          string;
}

export interface RedshiftdataStatement {
    database:            string;
    sql:                 string;
    cluster_identifier?: string;
    db_user?:            string;
    secret_arn?:         string;
    statement_name?:     string;
    with_event?:         string;
    workgroup_name?:     string;
    id?:                 string;
}

export interface ResourceRedshiftserverlessNamespace {
    namespace_name:        string;
    admin_user_password?:  string;
    admin_username?:       string;
    db_name?:              string;
    default_iam_role_arn?: string;
    iam_roles?:            string;
    kms_key_id?:           string;
    log_exports?:          string;
    tags?:                 string;
    arn?:                  string;
    id?:                   string;
    namespace_id?:         string;
    tags_all?:             string;
}

export interface RedshiftserverlessSnapshot {
    namespace_name:                            string;
    snapshot_name:                             string;
    retention_period?:                         string;
    accounts_with_provisioned_restore_access?: string;
    accounts_with_restore_access?:             string;
    admin_username?:                           string;
    arn?:                                      string;
    id?:                                       string;
    kms_key_id?:                               string;
    namespace_arn?:                            string;
    owner_account?:                            string;
}

export interface RedshiftserverlessUsageLimit {
    amount:         string;
    resource_arn:   string;
    usage_type:     string;
    breach_action?: string;
    period?:        string;
    arn?:           string;
    id?:            string;
}

export interface ResourceRedshiftserverlessWorkgroup {
    namespace_name:        string;
    workgroup_name:        string;
    parameter_key:         string;
    parameter_value:       string;
    base_capacity?:        string;
    config_parameter?:     string;
    enhanced_vpc_routing?: string;
    publicly_accessible?:  string;
    security_group_ids?:   string;
    subnet_ids?:           string;
    tags?:                 string;
    arn?:                  string;
    id?:                   string;
    workgroup_id?:         string;
    endpoint?:             string;
    tags_all?:             string;
    address?:              string;
    port?:                 string;
    vpc_endpoint?:         string;
    vpc_endpoint_id?:      string;
    vpc_id?:               string;
    network_interface?:    string;
    availability_zone?:    string;
    network_interface_id?: string;
    private_ip_address?:   string;
    subnet_id?:            string;
}

export interface Resourceexplorer2View {
    name:               string;
    filter_string:      string;
    default_view?:      string;
    filters?:           string;
    included_property?: string;
    tags?:              string;
    arn?:               string;
    tags_all?:          string;
}

export interface ResourcegroupsGroup {
    name:           string;
    resource_query: string;
    query:          string;
    type:           string;
    configuration?: string;
    description?:   string;
    tags?:          string;
    parameters?:    string;
    values?:        string;
    arn?:           string;
    tags_all?:      string;
}

export interface ResourcegroupsResource {
    group_arn:      string;
    resource_arn:   string;
    resource_type?: string;
}

export interface RolesanywhereProfile {
    name:                         string;
    role_arns:                    string;
    duration_seconds?:            string;
    enabled?:                     string;
    managed_policy_arns?:         string;
    require_instance_properties?: string;
    session_policy?:              string;
    tags?:                        string;
    arn?:                         string;
    id?:                          string;
    tags_all?:                    string;
}

export interface RolesanywhereTrustAnchor {
    name:                   string;
    source:                 string;
    source_data:            string;
    source_type:            string;
    enabled?:               string;
    tags?:                  string;
    acm_pca_arn?:           string;
    x509_certificate_data?: string;
    arn?:                   string;
    id?:                    string;
    tags_all?:              string;
}

export interface ResourceRoute {
    route_table_id:               string;
    destination_cidr_block?:      string;
    destination_ipv6_cidr_block?: string;
    destination_prefix_list_id?:  string;
    carrier_gateway_id?:          string;
    core_network_arn?:            string;
    egress_only_gateway_id?:      string;
    gateway_id?:                  string;
    nat_gateway_id?:              string;
    local_gateway_id?:            string;
    network_interface_id?:        string;
    transit_gateway_id?:          string;
    vpc_endpoint_id?:             string;
    vpc_peering_connection_id?:   string;
    id?:                          string;
    instance_id?:                 string;
    instance_owner_id?:           string;
    origin?:                      string;
    state?:                       string;
}

export interface Route53CIDRLocation {
    cidr_blocks:        string;
    cidr_collection_id: string;
    name:               string;
    id?:                string;
}

export interface Route53HealthCheck {
    type:                             string;
    request_interval:                 string;
    reference_name?:                  string;
    fqdn?:                            string;
    ip_address?:                      string;
    port?:                            string;
    failure_threshold?:               string;
    resource_path?:                   string;
    search_string?:                   string;
    measure_latency?:                 string;
    invert_healthcheck?:              string;
    enable_sni?:                      string;
    child_healthchecks?:              string;
    child_health_threshold?:          string;
    cloudwatch_alarm_name?:           string;
    cloudwatch_alarm_region?:         string;
    insufficient_data_health_status?: string;
    regions?:                         string;
    routing_control_arn?:             string;
    tags?:                            string;
    arn?:                             string;
    id?:                              string;
    tags_all?:                        string;
}

export interface Route53HostedZoneDnssec {
    hosted_zone_id:  string;
    signing_status?: string;
    id?:             string;
}

export interface Route53KeySigningKey {
    hosted_zone_id:              string;
    key_management_service_arn:  string;
    name:                        string;
    status?:                     string;
    digest_algorithm_mnemonic?:  string;
    digest_algorithm_type?:      string;
    digest_value?:               string;
    dnskey_record?:              string;
    ds_record?:                  string;
    flag?:                       string;
    id?:                         string;
    key_tag?:                    string;
    public_key?:                 string;
    signing_algorithm_mnemonic?: string;
    signing_algorithm_type?:     string;
}

export interface Route53QueryLog {
    cloudwatch_log_group_arn: string;
    zone_id:                  string;
    arn?:                     string;
    id?:                      string;
}

export interface Route53Record {
    zone_id:                           string;
    name:                              string;
    type:                              string;
    evaluate_target_health:            string;
    collection_id:                     string;
    region:                            string;
    weight:                            string;
    ttl?:                              string;
    records?:                          string;
    set_identifier?:                   string;
    health_check_id?:                  string;
    alias?:                            string;
    cidr_routing_policy?:              string;
    failover_routing_policy?:          string;
    geolocation_routing_policy?:       string;
    latency_routing_policy?:           string;
    multivalue_answer_routing_policy?: string;
    weighted_routing_policy?:          string;
    allow_overwrite?:                  string;
    continent?:                        string;
    subdivision?:                      string;
    fqdn?:                             string;
}

export interface Route53ResolverDnssecConfig {
    resource_id:        string;
    arn?:               string;
    id?:                string;
    owner_id?:          string;
    validation_status?: string;
}

export interface ResourceRoute53ResolverEndpoint {
    direction:          string;
    ip_address:         string;
    security_group_ids: string;
    subnet_id:          string;
    name?:              string;
    tags?:              string;
    ip?:                string;
    id?:                string;
    arn?:               string;
    host_vpc_id?:       string;
    tags_all?:          string;
}

export interface Route53ResolverFirewallRule {
    name:                     string;
    action:                   string;
    firewall_domain_list_id:  string;
    firewall_rule_group_id:   string;
    priority:                 string;
    block_override_dns_type?: string;
    block_override_domain?:   string;
    block_override_ttl?:      string;
    block_response?:          string;
    id?:                      string;
}

export interface ResourceRoute53ResolverFirewallRuleGroupAssociation {
    name:                   string;
    firewall_rule_group_id: string;
    priority:               string;
    vpc_id:                 string;
    mutation_protection?:   string;
    tags?:                  string;
    arn?:                   string;
    id?:                    string;
    tags_all?:              string;
}

export interface Route53ResolverQueryLogConfigAssociation {
    resolver_query_log_config_id: string;
    resource_id:                  string;
}

export interface Route53ResolverRule {
    domain_name:   string;
    rule_type:     string;
    ip:            string;
    name?:         string;
    target_ip?:    string;
    tags?:         string;
    port?:         string;
    id?:           string;
    arn?:          string;
    owner_id?:     string;
    share_status?: string;
    tags_all?:     string;
}

export interface Route53ResolverRuleAssociation {
    resolver_rule_id: string;
    vpc_id:           string;
    name?:            string;
    id?:              string;
}

export interface Route53TrafficPolicy {
    name:     string;
    document: string;
    comment?: string;
    id?:      string;
    type?:    string;
    version?: string;
}

export interface Route53TrafficPolicyInstance {
    name:                   string;
    traffic_policy_id:      string;
    traffic_policy_version: string;
    hosted_zone_id:         string;
    ttl:                    string;
    id?:                    string;
}

export interface Route53Ation {
    zone_id:         string;
    vpc_id:          string;
    vpc_region?:     string;
    id?:             string;
    owning_account?: string;
}

export interface ResourceRoute53Zone {
    name:                 string;
    vpc_id:               string;
    comment?:             string;
    delegation_set_id?:   string;
    force_destroy?:       string;
    tags?:                string;
    vpc?:                 string;
    vpc_region?:          string;
    arn?:                 string;
    zone_id?:             string;
    name_servers?:        string;
    primary_name_server?: string;
    tags_all?:            string;
}

export interface Route53DomainsRegisteredDomain {
    domain_name:          string;
    name:                 string;
    admin_contact?:       string;
    admin_privacy?:       string;
    auto_renew?:          string;
    name_server?:         string;
    registrant_contact?:  string;
    registrant_privacy?:  string;
    tags?:                string;
    tech_contact?:        string;
    tech_privacy?:        string;
    transfer_lock?:       string;
    address_line_1?:      string;
    address_line_2?:      string;
    city?:                string;
    contact_type?:        string;
    country_code?:        string;
    email?:               string;
    extra_params?:        string;
    fax?:                 string;
    first_name?:          string;
    last_name?:           string;
    organization_name?:   string;
    phone_number?:        string;
    state?:               string;
    zip_code?:            string;
    glue_ips?:            string;
    id?:                  string;
    abuse_contact_email?: string;
    abuse_contact_phone?: string;
    creation_date?:       string;
    expiration_date?:     string;
    registrar_name?:      string;
    registrar_url?:       string;
    reseller?:            string;
    status_list?:         string;
    tags_all?:            string;
    updated_date?:        string;
    whois_server?:        string;
}

export interface Route53RecoverycontrolconfigCluster {
    name:               string;
    arn?:               string;
    cluster_endpoints?: ClusterEndpoints;
    status?:            string;
}

export interface ClusterEndpoints {
    endpoint: string;
    region:   string;
}

export interface Route53RecoverycontrolconfigControlPanel {
    cluster_arn:            string;
    name:                   string;
    arn?:                   string;
    default_control_panel?: string;
    routing_control_count?: string;
    status?:                string;
}

export interface Route53RecoverycontrolconfigRoutingControl {
    cluster_arn:        string;
    name:               string;
    control_panel_arn?: string;
    arn?:               string;
    status?:            string;
}

export interface Route53RecoverycontrolconfigSafetyRule {
    control_panel_arn:  string;
    name:               string;
    rule_config:        RuleConfig;
    wait_period_ms:     string;
    asserted_controls?: string;
    gating_controls?:   string;
    target_controls?:   string;
    arn?:               string;
    status?:            string;
}

export interface RuleConfig {
    inverted:  string;
    threshold: string;
    type:      string;
}

export interface Route53RecoveryreadinessCell {
    cell_name:                string;
    cells?:                   string;
    tags?:                    string;
    arn?:                     string;
    parent_readiness_scopes?: string;
    tags_all?:                string;
}

export interface Route53RecoveryreadinessReadinessCheck {
    readiness_check_name: string;
    resource_set_name:    string;
    tags?:                string;
    arn?:                 string;
    tags_all?:            string;
}

export interface Route53RecoveryreadinessRecoveryGroup {
    recovery_group_name: string;
    cells?:              string;
    tags?:               string;
    arn?:                string;
    tags_all?:           string;
}

export interface Route53RecoveryreadinessResourceSet {
    resource_set_name:           string;
    resource_set_type:           string;
    arn:                         string;
    resources?:                  Resources;
    tags?:                       string;
    dns_target_resource?:        DNSTargetResource;
    resource_arn?:               string;
    target_resource?:            TargetResource;
    nlb_resource?:               GlobalacceleratorAccelerator;
    r53_resource?:               R53Resource;
    "resources.#.component_id"?: string;
    tags_all?:                   string;
}

export interface DNSTargetResource {
    domain_name:     string;
    hosted_zone_arn: string;
    record_set_id:   string;
    record_type:     string;
    target_resource: string;
}

export interface R53Resource {
    domain_name:   string;
    record_set_id: string;
}

export interface Resources {
    dns_target_resource: string;
    readiness_scopes:    string;
    resource_arn:        string;
}

export interface TargetResource {
    nlb_resource: string;
    r53_resource: string;
}

export interface ResourceRouteTable {
    vpc_id:                      string;
    cidr_block:                  string;
    route?:                      string;
    tags?:                       string;
    propagating_vgws?:           string;
    ipv6_cidr_block?:            string;
    destination_prefix_list_id?: string;
    carrier_gateway_id?:         string;
    core_network_arn?:           string;
    egress_only_gateway_id?:     string;
    gateway_id?:                 string;
    local_gateway_id?:           string;
    nat_gateway_id?:             string;
    network_interface_id?:       string;
    transit_gateway_id?:         string;
    vpc_endpoint_id?:            string;
    vpc_peering_connection_id?:  string;
    id?:                         string;
    arn?:                        string;
    owner_id?:                   string;
    tags_all?:                   string;
}

export interface RouteTableAssociation {
    route_table_id: string;
    subnet_id?:     string;
    gateway_id?:    string;
    id?:            string;
}

export interface RumAppMonitor {
    name:                       string;
    domain:                     string;
    app_monitor_configuration?: AppMonitorConfiguration;
    cw_log_enabled?:            string;
    custom_events?:             CustomEvents;
    tags?:                      string;
    telemetries?:               string;
    arn?:                       string;
    id?:                        string;
    app_monitor_id?:            string;
    cw_log_group?:              string;
    tags_all?:                  string;
}

export interface AppMonitorConfiguration {
    allow_cookies:       string;
    enable_xray:         string;
    excluded_pages:      string;
    favorite_pages:      string;
    guest_role_arn:      string;
    identity_pool_id:    string;
    included_pages:      string;
    session_sample_rate: string;
    telemetries:         string;
}

export interface CustomEvents {
    status: string;
}

export interface RumMetricsDestination {
    app_monitor_name: string;
    destination:      string;
    destination_arn?: string;
    iam_role_arn?:    string;
    id?:              string;
}

export interface S3AccessPoint {
    bucket:                             string;
    name:                               string;
    vpc_id:                             string;
    account_id?:                        string;
    bucket_account_id?:                 string;
    policy?:                            string;
    public_access_block_configuration?: string;
    vpc_configuration?:                 string;
    alias?:                             string;
    arn?:                               string;
    domain_name?:                       string;
    endpoints?:                         string;
    has_public_access_policy?:          string;
    id?:                                string;
    network_origin?:                    string;
}

export interface ResourceS3Bucket {
    allowed_methods:                         string;
    allowed_origins:                         string;
    type:                                    string;
    permissions:                             string;
    enabled:                                 string;
    storage_class:                           string;
    days:                                    string;
    target_bucket:                           string;
    mode:                                    string;
    role:                                    string;
    destination:                             string;
    status:                                  string;
    bucket:                                  string;
    rule:                                    string;
    apply_server_side_encryption_by_default: string;
    sse_algorithm:                           string;
    bucket_prefix?:                          string;
    object_lock_enabled?:                    string;
    tags?:                                   string;
    allowed_headers?:                        string;
    expose_headers?:                         string;
    id?:                                     string;
    prefix?:                                 string;
    expiration?:                             string;
    transition?:                             string;
    noncurrent_version_expiration?:          string;
    noncurrent_version_transition?:          string;
    date?:                                   string;
    expired_object_delete_marker?:           string;
    delete_marker_replication_status?:       string;
    filter?:                                 string;
    priority?:                               string;
    source_selection_criteria?:              string;
    replica_kms_key_id?:                     string;
    access_control_translation?:             string;
    account_id?:                             string;
    replication_time?:                       string;
    metrics?:                                string;
    minutes?:                                string;
    sse_kms_encrypted_objects?:              string;
    bucket_key_enabled?:                     string;
    index_document?:                         string;
    error_document?:                         string;
    redirect_all_requests_to?:               string;
    routing_rules?:                          string;
    arn?:                                    string;
    bucket_domain_name?:                     string;
    bucket_regional_domain_name?:            string;
    hosted_zone_id?:                         string;
    region?:                                 string;
    tags_all?:                               string;
}

export interface S3Bucket {
    status?:                   string;
    bucket?:                   string;
    expected_bucket_owner?:    string;
    id?:                       string;
    cors_rule?:                CorsRule;
    payer?:                    string;
    versioning_configuration?: VersioningConfiguration;
}

export interface CorsRule {
    allowed_methods:  string;
    allowed_origins:  string;
    allowed_headers?: string;
    expose_headers?:  string;
    id?:              string;
    max_age_seconds?: string;
}

export interface VersioningConfiguration {
    status:      string;
    mfa_delete?: string;
}

export interface S3BucketACL {
    grant:                  TargetGrantClass;
    owner:                  Owner;
    grantee:                Grantee;
    permission:             string;
    acl?:                   string;
    access_control_policy?: AccessControlPolicy;
    bucket?:                string;
    expected_bucket_owner?: string;
    display_name?:          string;
    id?:                    string;
}

export interface AccessControlPolicy {
    grant: string;
    owner: string;
}

export interface TargetGrantClass {
    grantee:    string;
    permission: string;
}

export interface Grantee {
    type:           string;
    email_address?: string;
    id?:            string;
    uri?:           string;
}

export interface Owner {
    id:            string;
    display_name?: string;
}

export interface S3BucketAnalyticsConfiguration {
    bucket:                  string;
    name:                    string;
    data_export:             string;
    destination:             string;
    s3_bucket_destination:   string;
    bucket_arn:              string;
    filter?:                 string;
    storage_class_analysis?: string;
    prefix?:                 string;
    tags?:                   string;
    output_schema_version?:  string;
    bucket_account_id?:      string;
    format?:                 string;
}

export interface S3BucketIntelligentTieringConfiguration {
    bucket:      string;
    name:        string;
    tiering:     string;
    access_tier: string;
    days:        string;
    status?:     string;
    filter?:     string;
    prefix?:     string;
    tags?:       string;
}

export interface S3BucketInventory {
    bucket:                   string;
    name:                     string;
    included_object_versions: string;
    schedule:                 string;
    destination:              string;
    frequency:                string;
    bucket_arn:               string;
    format:                   string;
    key_id:                   string;
    enabled?:                 string;
    filter?:                  string;
    optional_fields?:         string;
    prefix?:                  string;
    account_id?:              string;
    encryption?:              string;
    sse_kms?:                 string;
    sse_s3?:                  string;
}

export interface S3BucketLifecycleConfiguration {
    bucket:                             string;
    id:                                 string;
    status:                             string;
    expected_bucket_owner?:             string;
    abort_incomplete_multipart_upload?: AbortIncompleteMultipartUpload;
    expiration?:                        Expiration;
    filter?:                            S3BucketLifecycleConfigurationFilter;
    noncurrent_version_expiration?:     NoncurrentVersionExpiration;
    noncurrent_version_transition?:     NoncurrentVersionTransition;
    transition?:                        Transition;
    days_after_initiation?:             string;
    object_size_greater_than?:          string;
    object_size_less_than?:             string;
    prefix?:                            string;
    tag?:                               EnvironmentClass;
    storage_class?:                     string;
    tags?:                              string;
}

export interface AbortIncompleteMultipartUpload {
    days_after_initiation: string;
}

export interface Expiration {
    date:                         string;
    days:                         string;
    expired_object_delete_marker: string;
}

export interface S3BucketLifecycleConfigurationFilter {
    object_size_greater_than: string;
    object_size_less_than:    string;
    prefix:                   string;
    tag:                      string;
}

export interface NoncurrentVersionExpiration {
    newer_noncurrent_versions: string;
    noncurrent_days:           string;
}

export interface NoncurrentVersionTransition {
    newer_noncurrent_versions: string;
    noncurrent_days:           string;
    storage_class:             string;
}

export interface Transition {
    date:          string;
    days:          string;
    storage_class: string;
}

export interface S3BucketLogging {
    target_bucket:          string;
    target_prefix:          string;
    grantee:                Grantee;
    permission:             string;
    bucket?:                string;
    expected_bucket_owner?: string;
    target_grant?:          TargetGrantClass;
    id?:                    string;
}

export interface S3BucketMetric {
    bucket:  string;
    name:    string;
    prefix?: string;
    tags?:   string;
}

export interface S3BucketNotification {
    bucket:              string;
    events:              string;
    lambda_function_arn: string;
    queue_arn:           string;
    topic_arn:           string;
    eventbridge?:        string;
    lambda_function?:    string;
    queue?:              string;
    topic?:              string;
    filter_prefix?:      string;
    filter_suffix?:      string;
    id?:                 string;
}

export interface ResourceS3BucketObject {
    bucket:                         string;
    key:                            string;
    acl?:                           string;
    bucket_key_enabled?:            string;
    cache_control?:                 string;
    content_base64?:                string;
    content_disposition?:           string;
    content_encoding?:              string;
    content_language?:              string;
    content_type?:                  string;
    content?:                       string;
    etag?:                          string;
    force_destroy?:                 string;
    kms_key_id?:                    string;
    metadata?:                      string;
    object_lock_legal_hold_status?: string;
    object_lock_mode?:              string;
    object_lock_retain_until_date?: string;
    server_side_encryption?:        string;
    source_hash?:                   string;
    source?:                        string;
    storage_class?:                 string;
    tags?:                          string;
    id?:                            string;
    tags_all?:                      string;
    version_id?:                    string;
    checksum_algorithm?:            string;
    checksum_crc32?:                string;
    checksum_crc32c?:               string;
    checksum_sha1?:                 string;
    checksum_sha256?:               string;
}

export interface S3BucketObjectLockConfiguration {
    default_retention:      DefaultRetention;
    bucket?:                string;
    expected_bucket_owner?: string;
    object_lock_enabled?:   string;
    rule?:                  S3BucketObjectLockConfigurationRule;
    token?:                 string;
    id?:                    string;
}

export interface DefaultRetention {
    mode:   string;
    days?:  string;
    years?: string;
}

export interface S3BucketObjectLockConfigurationRule {
    default_retention: string;
}

export interface S3BucketOwnershipControls {
    bucket: string;
    rule:   string;
    id?:    string;
}

export interface S3 {
    bucket: string;
    id?:    string;
}

export interface S3BucketReplicationConfiguration {
    role:                         string;
    rule:                         S3BucketReplicationConfigurationRule;
    destination:                  Destination;
    owner:                        string;
    replica_kms_key_id:           string;
    minutes:                      string;
    time:                         EventThreshold;
    value:                        string;
    delete_marker_replication?:   CustomEvents;
    existing_object_replication?: CustomEvents;
    filter?:                      S3BucketReplicationConfigurationFilter;
    source_selection_criteria?:   SourceSelectionCriteria;
    access_control_translation?:  AccessControlTranslation;
    encryption_configuration?:    S3BucketReplicationConfigurationEncryptionConfiguration;
    metrics?:                     Metrics;
    replication_time?:            ReplicationTime;
    storage_class?:               string;
    event_threshold?:             EventThreshold;
    and?:                         And;
    tag?:                         EnvironmentClass;
    tags?:                        string;
    replica_modifications?:       CustomEvents;
    sse_kms_encrypted_objects?:   CustomEvents;
    id?:                          string;
}

export interface AccessControlTranslation {
    owner: string;
}

export interface And {
    prefix: string;
    tags:   string;
}

export interface Destination {
    bucket:                      string;
    access_control_translation?: string;
    account?:                    string;
    encryption_configuration?:   string;
    metrics?:                    string;
    replication_time?:           string;
    storage_class?:              string;
}

export interface S3BucketReplicationConfigurationEncryptionConfiguration {
    replica_kms_key_id: string;
}

export interface EventThreshold {
    minutes: string;
}

export interface S3BucketReplicationConfigurationFilter {
    and:    string;
    prefix: string;
    tag:    string;
}

export interface Metrics {
    event_threshold: string;
    status:          string;
}

export interface ReplicationTime {
    status: string;
    time:   string;
}

export interface S3BucketReplicationConfigurationRule {
    destination:                  string;
    status:                       string;
    delete_marker_replication?:   string;
    existing_object_replication?: string;
    filter?:                      string;
    id?:                          string;
    priority?:                    string;
    source_selection_criteria?:   string;
}

export interface SourceSelectionCriteria {
    replica_modifications:     string;
    sse_kms_encrypted_objects: string;
}

export interface S3BucketServerSideEncryptionConfiguration {
    bucket?:                                  string;
    expected_bucket_owner?:                   string;
    rule?:                                    S3BucketServerSideEncryptionConfigurationRule;
    apply_server_side_encryption_by_default?: ApplyServerSideEncryptionByDefault;
    bucket_key_enabled?:                      string;
    id?:                                      string;
}

export interface ApplyServerSideEncryptionByDefault {
    sse_algorithm:     string;
    kms_master_key_id: string;
}

export interface S3BucketServerSideEncryptionConfigurationRule {
    apply_server_side_encryption_by_default: string;
    bucket_key_enabled:                      string;
}

export interface S3BucketWebsiteConfiguration {
    key:                       string;
    suffix:                    string;
    bucket?:                   string;
    error_document?:           GrafanaWorkspaceAPIKey;
    expected_bucket_owner?:    string;
    index_document?:           IndexDocument;
    redirect_all_requests_to?: RedirectAllRequestsTo;
    routing_rule?:             RoutingRule;
    routing_rules?:            string;
    condition?:                S3BucketWebsiteConfigurationCondition;
    redirect?:                 Redirect;
    key_prefix_equals?:        string;
    id?:                       string;
    website_domain?:           string;
    website_endpoint?:         string;
}

export interface S3BucketWebsiteConfigurationCondition {
    http_error_code_returned_equals: string;
    key_prefix_equals:               string;
}

export interface IndexDocument {
    suffix: string;
}

export interface Redirect {
    host_name:               string;
    http_redirect_code:      string;
    protocol:                string;
    replace_key_prefix_with: string;
    replace_key_with:        string;
}

export interface RedirectAllRequestsTo {
    host_name: string;
    protocol:  string;
}

export interface RoutingRule {
    condition: string;
    redirect:  string;
}

export interface S3ObjectCopy {
    bucket:                         string;
    key:                            string;
    source:                         string;
    acl?:                           string;
    cache_control?:                 string;
    checksum_algorithm?:            string;
    content_disposition?:           string;
    content_encoding?:              string;
    content_language?:              string;
    content_type?:                  string;
    copy_if_match?:                 string;
    copy_if_modified_since?:        string;
    copy_if_none_match?:            string;
    copy_if_unmodified_since?:      string;
    customer_algorithm?:            string;
    customer_key?:                  string;
    customer_key_md5?:              string;
    expected_bucket_owner?:         string;
    expected_source_bucket_owner?:  string;
    expires?:                       string;
    force_destroy?:                 string;
    grant?:                         S3ObjectCopyGrant;
    kms_encryption_context?:        string;
    metadata?:                      string;
    metadata_directive?:            string;
    object_lock_legal_hold_status?: string;
    object_lock_mode?:              string;
    object_lock_retain_until_date?: string;
    request_payer?:                 string;
    server_side_encryption?:        string;
    source_customer_algorithm?:     string;
    source_customer_key?:           string;
    source_customer_key_md5?:       string;
    storage_class?:                 string;
    tagging_directive?:             string;
    tags?:                          string;
    website_redirect?:              string;
    checksum_crc32?:                string;
    checksum_crc32c?:               string;
    checksum_sha1?:                 string;
    checksum_sha256?:               string;
    etag?:                          string;
    expiration?:                    string;
    id?:                            string;
    last_modified?:                 string;
    request_charged?:               string;
    source_version_id?:             string;
    tags_all?:                      string;
    version_id?:                    string;
}

export interface S3ObjectCopyGrant {
    permissions: string;
    type:        string;
    email:       string;
    id:          string;
}

export interface S3ControlAccessPointPolicy {
    access_point_arn:          string;
    policy:                    string;
    has_public_access_policy?: string;
    id?:                       string;
}

export interface S3ControlBucket {
    bucket:                       string;
    outpost_id:                   string;
    tags?:                        string;
    arn?:                         string;
    creation_date?:               string;
    id?:                          string;
    public_access_block_enabled?: string;
    tags_all?:                    string;
}

export interface S3ControlBucketPolicy {
    bucket: string;
    policy: string;
    id?:    string;
}

export interface ResourceS3ControlMultiRegionAccessPoint {
    details:      string;
    account_id?:  string;
    alias?:       string;
    arn?:         string;
    domain_name?: string;
    id?:          string;
    status?:      string;
}

export interface S3ControlMultiRegionAccessPointPolicy {
    details:      string;
    name:         string;
    account_id?:  string;
    established?: string;
    id?:          string;
    proposed?:    string;
}

export interface S3ControlObjectLambdaAccessPoint {
    configuration:                string;
    name:                         string;
    supporting_access_point:      string;
    transformation_configuration: string;
    actions:                      string;
    content_transformation:       string;
    aws_lambda:                   string;
    function_arn:                 string;
    account_id?:                  string;
    allowed_features?:            string;
    cloud_watch_metrics_enabled?: string;
    function_payload?:            string;
    alias?:                       string;
    arn?:                         string;
    id?:                          string;
}

export interface S3ControlObjectLambdaAccessPointPolicy {
    name:                      string;
    policy:                    string;
    account_id?:               string;
    has_public_access_policy?: string;
    id?:                       string;
}

export interface S3ControlStorageLensConfiguration {
    config_id:                  string;
    storage_lens_configuration: string;
    account_id?:                string;
    tags?:                      string;
    arn?:                       string;
    tags_all?:                  string;
}

export interface S3OutpostsEndpoint {
    outpost_id:                string;
    security_group_id:         string;
    subnet_id:                 string;
    access_type?:              string;
    customer_owned_ipv4_pool?: string;
    arn?:                      string;
    cidr_block?:               string;
    creation_time?:            string;
    id?:                       string;
}

export interface SagemakerApp {
    app_name:                     string;
    app_type:                     string;
    domain_id:                    string;
    user_profile_name?:           string;
    resource_spec?:               string;
    space_name?:                  string;
    tags?:                        string;
    instance_type?:               string;
    lifecycle_config_arn?:        string;
    sagemaker_image_arn?:         string;
    sagemaker_image_version_arn?: string;
    id?:                          string;
    arn?:                         string;
    tags_all?:                    string;
}

export interface SagemakerAppImageConfig {
    app_image_config_name:        string;
    kernel_spec:                  string;
    name:                         string;
    kernel_gateway_image_config?: string;
    tags?:                        string;
    file_system_config?:          string;
    default_gid?:                 string;
    default_uid?:                 string;
    display_name?:                string;
    id?:                          string;
    arn?:                         string;
    tags_all?:                    string;
}

export interface SagemakerCodeRepository {
    code_repository_name: string;
    git_config:           string;
    repository_url:       string;
    tags?:                string;
    branch?:              string;
    secret_arn?:          string;
    id?:                  string;
    arn?:                 string;
    tags_all?:            string;
}

export interface SagemakerDataQualityJobDefinition {
    data_quality_app_specification:  DataQualityAppSpecification;
    data_quality_job_input:          DataQualityJobInput;
    data_quality_job_output_config:  DataQualityJobOutputConfig;
    job_resources:                   JobResources;
    role_arn:                        string;
    s3_uri:                          string;
    volume_size_in_gb:               string;
    subnets:                         string;
    data_quality_baseline_config?:   DataQualityBaselineConfig;
    name?:                           string;
    network_config?:                 NetworkConfig;
    stopping_condition?:             StoppingCondition;
    tags?:                           string;
    record_preprocessor_source_uri?: string;
    s3_input_mode?:                  string;
    arn?:                            string;
    tags_all?:                       string;
}

export interface DataQualityAppSpecification {
    image_uri:                            string;
    environment?:                         string;
    post_analytics_processor_source_uri?: string;
    record_preprocessor_source_uri?:      string;
}

export interface DataQualityBaselineConfig {
    constraints_resource: string;
    statistics_resource:  string;
    s3_uri:               string;
}

export interface DataQualityJobInput {
    data_captured_destination_s3_uri: string;
    dataset_format:                   string;
    endpoint_name:                    string;
    batch_transform_input?:           string;
    endpoint_input?:                  string;
    local_path?:                      string;
    s3_data_distribution_type?:       string;
    s3_input_mode?:                   string;
    csv?:                             string;
    json?:                            string;
    header?:                          string;
    line?:                            string;
}

export interface DataQualityJobOutputConfig {
    monitoring_outputs: string;
    s3_output:          string;
    s3_uri:             string;
    kms_key_id?:        string;
    local_path?:        string;
    s3_upload_mode?:    string;
}

export interface JobResources {
    cluster_config:     string;
    instance_count:     string;
    instance_type:      string;
    volume_size_in_gb:  string;
    volume_kms_key_id?: string;
}

export interface NetworkConfig {
    enable_inter_container_traffic_encryption: string;
    enable_network_isolation:                  string;
    vpc_config:                                string;
    security_group_ids:                        string;
    subnets:                                   string;
}

export interface StoppingCondition {
    max_runtime_in_seconds: string;
}

export interface SagemakerDevice {
    device_fleet_name: string;
    device:            string;
    description:       string;
    device_name?:      string;
    iot_thing_name?:   string;
    id?:               string;
    arn?:              string;
}

export interface SagemakerDeviceFleet {
    device_fleet_name:      string;
    role_arn:               string;
    output_config:          string;
    s3_output_location:     string;
    description?:           string;
    enable_iot_role_alias?: string;
    tags?:                  string;
    kms_key_id?:            string;
    id?:                    string;
    arn?:                   string;
    tags_all?:              string;
}

export interface SagemakerDomain {
    auth_mode:                                       string;
    default_space_settings:                          DefaultSpaceSettings;
    subnet_ids:                                      string;
    vpc_id:                                          string;
    execution_role:                                  string;
    app_image_config_name:                           string;
    image_name:                                      string;
    app_network_access_type?:                        string;
    app_security_group_management?:                  string;
    domain_settings?:                                DomainSettings;
    kms_key_id?:                                     string;
    retention_policy?:                               RetentionPolicy;
    tags?:                                           string;
    security_groups?:                                string;
    canvas_app_settings?:                            string;
    r_session_app_settings?:                         string;
    r_studio_server_pro_app_settings?:               string;
    sharing_settings?:                               string;
    tensor_board_app_settings?:                      string;
    access_status?:                                  string;
    user_group?:                                     string;
    model_register_settings?:                        string;
    time_series_forecasting_settings?:               string;
    workspace_settings?:                             string;
    cross_account_model_register_role_arn?:          string;
    status?:                                         string;
    amazon_forecast_role_arn?:                       string;
    s3_artifact_path?:                               string;
    s3_kms_key_id?:                                  string;
    notebook_output_option?:                         string;
    s3_output_path?:                                 string;
    custom_image?:                                   string;
    lifecycle_config_arns?:                          string;
    code_repository?:                                string;
    repository_url?:                                 string;
    instance_type?:                                  string;
    lifecycle_config_arn?:                           string;
    sagemaker_image_arn?:                            string;
    sagemaker_image_version_arn?:                    string;
    image_version_number?:                           string;
    r_studio_package_manager_url?:                   string;
    id?:                                             string;
    arn?:                                            string;
    url?:                                            string;
    single_sign_on_managed_application_instance_id?: string;
    security_group_id_for_domain_boundary?:          string;
    home_efs_file_system_id?:                        string;
    tags_all?:                                       string;
}

export interface DefaultSpaceSettings {
    execution_role:               string;
    jupyter_server_app_settings?: string;
    kernel_gateway_app_settings?: string;
    security_groups?:             string;
}

export interface DomainSettings {
    execution_role_identity_config:      string;
    r_studio_server_pro_domain_settings: string;
    security_group_ids:                  string;
    default_resource_spec:               string;
    domain_execution_role_arn:           string;
    r_studio_connect_url:                string;
    r_studio_package_manager_url:        string;
}

export interface RetentionPolicy {
    home_efs_file_system: string;
}

export interface SagemakerEndpoint {
    endpoint_config_name:                  string;
    traffic_routing_configuration:         string;
    maximum_batch_size:                    string;
    wait_interval_in_seconds:              string;
    type:                                  string;
    value:                                 string;
    alarms:                                string;
    alarm_name:                            string;
    deployment_config?:                    string;
    name?:                                 string;
    tags?:                                 string;
    blue_green_update_policy?:             string;
    auto_rollback_configuration?:          string;
    rolling_update_policy?:                string;
    maximum_execution_timeout_in_seconds?: string;
    termination_wait_in_seconds?:          string;
    rollback_maximum_batch_size?:          string;
    canary_size?:                          string;
    linear_step_size?:                     string;
    arn?:                                  string;
    tags_all?:                             string;
}

export interface SagemakerEndpointConfiguration {
    production_variants:         ProductionVariants;
    kms_key_arn?:                string;
    name?:                       string;
    name_prefix?:                string;
    tags?:                       string;
    data_capture_config?:        DataCaptureConfig;
    async_inference_config?:     AsyncInferenceConfig;
    shadow_production_variants?: string;
    provisioned_concurrency?:    string;
    json_content_types?:         string;
    arn?:                        string;
    tags_all?:                   string;
}

export interface AsyncInferenceConfig {
    output_config:                           string;
    client_config:                           string;
    max_concurrent_invocations_per_instance: string;
    s3_output_path:                          string;
    s3_failure_path:                         string;
    kms_key_id:                              string;
    notification_config:                     string;
    include_inference_response_in:           string;
    error_topic:                             string;
    success_topic:                           string;
}

export interface DataCaptureConfig {
    initial_sampling_percentage: string;
    destination_s3_uri:          string;
    capture_options:             string;
    kms_key_id:                  string;
    enable_capture:              string;
    capture_content_type_header: string;
    capture_mode:                string;
    csv_content_types:           string;
    json_content_types:          string;
}

export interface ProductionVariants {
    model_name:                                         string;
    destination_s3_uri:                                 string;
    kms_key_id:                                         string;
    max_concurrency:                                    string;
    memory_size_in_mb:                                  string;
    accelerator_type?:                                  string;
    container_startup_health_check_timeout_in_seconds?: string;
    core_dump_config?:                                  string;
    enable_ssm_access?:                                 string;
    initial_instance_count?:                            string;
    instance_type?:                                     string;
    initial_variant_weight?:                            string;
    model_data_download_timeout_in_seconds?:            string;
    serverless_config?:                                 string;
    variant_name?:                                      string;
    volume_size_in_gb?:                                 string;
    provisioned_concurrency?:                           string;
}

export interface SagemakerFeatureGroup {
    feature_group_name:             string;
    record_identifier_feature_name: string;
    event_time_feature_name:        string;
    role_arn:                       string;
    feature_name:                   string;
    feature_type:                   string;
    s3_storage_config:              string;
    security_config:                string;
    s3_uri:                         string;
    description?:                   string;
    feature_definition?:            string;
    offline_store_config?:          string;
    online_store_config?:           string;
    tags?:                          string;
    enable_online_store?:           string;
    data_catalog_config?:           string;
    table_format?:                  string;
    disable_glue_table_creation?:   string;
    kms_key_id?:                    string;
    catalog?:                       string;
    database?:                      string;
    table_name?:                    string;
    name?:                          string;
    arn?:                           string;
    tags_all?:                      string;
}

export interface SagemakerFlowDefinition {
    flow_definition_name:                    string;
    human_loop_config:                       string;
    role_arn:                                string;
    output_config:                           string;
    human_task_ui_arn:                       string;
    task_availability_lifetime_in_seconds:   string;
    task_count:                              string;
    task_description:                        string;
    task_title:                              string;
    workteam_arn:                            string;
    human_loop_activation_conditions_config: string;
    human_loop_activation_conditions:        string;
    aws_managed_human_loop_request_source:   string;
    s3_output_path:                          string;
    human_loop_activation_config?:           string;
    human_loop_request_source?:              string;
    tags?:                                   string;
    public_workforce_task_price?:            string;
    task_keywords?:                          string;
    task_time_limit_in_seconds?:             string;
    amount_in_usd?:                          string;
    cents?:                                  string;
    dollars?:                                string;
    tenth_fractions_of_a_cent?:              string;
    kms_key_id?:                             string;
    arn?:                                    string;
    id?:                                     string;
    tags_all?:                               string;
}

export interface SagemakerHumanTaskUI {
    human_task_ui_name: string;
    ui_template:        string;
    content:            string;
    tags?:              string;
    arn?:               string;
    id?:                string;
    tags_all?:          string;
    content_sha256?:    string;
    url?:               string;
}

export interface SagemakerImage {
    image_name:    string;
    role_arn:      string;
    display_name?: string;
    description?:  string;
    tags?:         string;
    id?:           string;
    arn?:          string;
    tags_all?:     string;
}

export interface SagemakerImageVersion {
    image_name:       string;
    base_image:       string;
    id?:              string;
    arn?:             string;
    container_image?: string;
}

export interface SagemakerModel {
    execution_role_arn:                  string;
    repository_access_mode:              string;
    repository_credentials_provider_arn: string;
    name?:                               string;
    primary_container?:                  string;
    inference_execution_config?:         string;
    container?:                          string;
    enable_network_isolation?:           string;
    vpc_config?:                         string;
    tags?:                               string;
    image?:                              string;
    mode?:                               string;
    model_data_url?:                     string;
    model_package_name?:                 string;
    container_hostname?:                 string;
    environment?:                        string;
    image_config?:                       string;
    repository_auth_config?:             string;
    arn?:                                string;
    tags_all?:                           string;
}

export interface SagemakerModelPackageGroup {
    model_package_group_name:         string;
    model_package_group_description?: string;
    tags?:                            string;
    id?:                              string;
    arn?:                             string;
    tags_all?:                        string;
}

export interface SagemakerModelPackageGroupPolicy {
    model_package_group_name: string;
    id?:                      string;
}

export interface SagemakerNotebookInstance {
    name:                                     string;
    role_arn:                                 string;
    instance_type:                            string;
    platform_identifier?:                     string;
    volume_size?:                             string;
    subnet_id?:                               string;
    security_groups?:                         string;
    accelerator_types?:                       string;
    additional_code_repositories?:            string;
    default_code_repository?:                 string;
    direct_internet_access?:                  string;
    instance_metadata_service_configuration?: InstanceMetadataServiceConfiguration;
    kms_key_id?:                              string;
    lifecycle_config_name?:                   string;
    root_access?:                             string;
    tags?:                                    string;
    id?:                                      string;
    arn?:                                     string;
    url?:                                     string;
    network_interface_id?:                    string;
    tags_all?:                                string;
}

export interface InstanceMetadataServiceConfiguration {
    minimum_instance_metadata_service_version: string;
}

export interface SagemakerNotebookInstanceLifecycleConfiguration {
    name?:      string;
    on_create?: string;
    on_start?:  string;
    arn?:       string;
}

export interface SagemakerPipeline {
    pipeline_name:                    string;
    pipeline_display_name:            string;
    role_arn:                         string;
    max_parallel_execution_steps:     string;
    bucket:                           string;
    object_key:                       string;
    pipeline_description?:            string;
    pipeline_definition?:             string;
    pipeline_definition_s3_location?: string;
    parallelism_configuration?:       string;
    tags?:                            string;
    version_id?:                      string;
    id?:                              string;
    arn?:                             string;
    tags_all?:                        string;
}

export interface SagemakerProject {
    project_name:                         string;
    service_catalog_provisioning_details: string;
    product_id:                           string;
    key:                                  string;
    project_description?:                 string;
    tags?:                                string;
    path_id?:                             string;
    provisioning_artifact_id?:            string;
    provisioning_parameter?:              string;
    value?:                               string;
    arn?:                                 string;
    id?:                                  string;
    project_id?:                          string;
    tags_all?:                            string;
}

export interface SagemakerServicecatalogPortfolioStatus {
    status: string;
    id?:    string;
}

export interface SagemakerSpace {
    space_name:                   string;
    domain_id:                    string;
    space_settings:               string;
    app_image_config_name:        string;
    image_name:                   string;
    tags?:                        string;
    jupyter_server_app_settings?: string;
    kernel_gateway_app_settings?: string;
    default_resource_spec?:       string;
    custom_image?:                string;
    lifecycle_config_arns?:       string;
    code_repository?:             string;
    repository_url?:              string;
    instance_type?:               string;
    lifecycle_config_arn?:        string;
    sagemaker_image_arn?:         string;
    sagemaker_image_version_arn?: string;
    image_version_number?:        string;
    id?:                          string;
    arn?:                         string;
    home_efs_file_system_uid?:    string;
    tags_all?:                    string;
}

export interface SagemakerStudioLifecycleConfig {
    studio_lifecycle_config_name:     string;
    studio_lifecycle_config_app_type: string;
    studio_lifecycle_config_content:  string;
    tags?:                            string;
    id?:                              string;
    arn?:                             string;
    tags_all?:                        string;
}

export interface SagemakerUserProfile {
    user_profile_name:                      string;
    domain_id:                              string;
    single_sign_on_user_value:              string;
    user_settings:                          string;
    execution_role:                         string;
    app_image_config_name:                  string;
    image_name:                             string;
    single_sign_on_user_identifier?:        string;
    tags?:                                  string;
    security_groups?:                       string;
    sharing_settings?:                      string;
    tensor_board_app_settings?:             string;
    jupyter_server_app_settings?:           string;
    kernel_gateway_app_settings?:           string;
    r_session_app_settings?:                string;
    r_studio_server_pro_app_settings?:      string;
    canvas_app_settings?:                   string;
    model_register_settings?:               string;
    time_series_forecasting_settings?:      string;
    workspace_settings?:                    string;
    notebook_output_option?:                string;
    s3_kms_key_id?:                         string;
    s3_output_path?:                        string;
    default_resource_spec?:                 string;
    custom_image?:                          string;
    lifecycle_config_arns?:                 string;
    code_repository?:                       string;
    access_status?:                         string;
    user_group?:                            string;
    repository_url?:                        string;
    instance_type?:                         string;
    lifecycle_config_arn?:                  string;
    sagemaker_image_arn?:                   string;
    sagemaker_image_version_arn?:           string;
    image_version_number?:                  string;
    amazon_forecast_role_arn?:              string;
    status?:                                string;
    cross_account_model_register_role_arn?: string;
    s3_artifact_path?:                      string;
    id?:                                    string;
    arn?:                                   string;
    home_efs_file_system_uid?:              string;
    tags_all?:                              string;
}

export interface SagemakerWorkforce {
    workforce_name:                            string;
    client_id:                                 string;
    user_pool:                                 string;
    authorization_endpoint:                    string;
    client_secret:                             string;
    issuer:                                    string;
    jwks_uri:                                  string;
    logout_endpoint:                           string;
    token_endpoint:                            string;
    user_info_endpoint:                        string;
    cidrs:                                     string;
    cognito_config?:                           string;
    oidc_config?:                              string;
    source_ip_config?:                         string;
    workforce_vpc_config?:                     string;
    security_group_ids?:                       string;
    subnets?:                                  string;
    vpc_id?:                                   string;
    arn?:                                      string;
    id?:                                       string;
    subdomain?:                                string;
    "workforce_vpc_config.0.vpc_endpoint_id"?: string;
}

export interface SagemakerWorkteam {
    description:                 string;
    workforce_name:              string;
    workteam_name:               string;
    member_definition:           string;
    client_id:                   string;
    user_pool:                   string;
    user_group:                  string;
    groups:                      string;
    notification_topic_arn:      string;
    notification_configuration?: string;
    tags?:                       string;
    cognito_member_definition?:  string;
    oidc_member_definition?:     string;
    arn?:                        string;
    id?:                         string;
    subdomain?:                  string;
    tags_all?:                   string;
}

export interface SchedulerSchedule {
    flexible_time_window:           string;
    schedule_expression:            string;
    target:                         string;
    mode:                           string;
    arn:                            string;
    role_arn:                       string;
    task_definition_arn:            string;
    capacity_provider:              string;
    type:                           string;
    detail_type:                    string;
    source:                         string;
    partition_key:                  string;
    name:                           string;
    value:                          string;
    description?:                   string;
    end_date?:                      string;
    group_name?:                    string;
    kms_key_arn?:                   string;
    name_prefix?:                   string;
    schedule_expression_timezone?:  string;
    start_date?:                    string;
    state?:                         string;
    maximum_window_in_minutes?:     string;
    dead_letter_config?:            string;
    ecs_parameters?:                string;
    eventbridge_parameters?:        string;
    input?:                         string;
    kinesis_parameters?:            string;
    retry_policy?:                  string;
    sagemaker_pipeline_parameters?: string;
    sqs_parameters?:                string;
    capacity_provider_strategy?:    string;
    enable_ecs_managed_tags?:       string;
    enable_execute_command?:        string;
    group?:                         string;
    launch_type?:                   string;
    network_configuration?:         string;
    placement_constraints?:         string;
    placement_strategy?:            string;
    platform_version?:              string;
    propagate_tags?:                string;
    reference_id?:                  string;
    tags?:                          string;
    task_count?:                    string;
    base?:                          string;
    weight?:                        string;
    assign_public_ip?:              string;
    security_groups?:               string;
    subnets?:                       string;
    expression?:                    string;
    field?:                         string;
    maximum_event_age_in_seconds?:  string;
    maximum_retry_attempts?:        string;
    pipeline_parameter?:            string;
    message_group_id?:              string;
    id?:                            string;
}

export interface SchedulerScheduleGroup {
    name?:                   string;
    name_prefix?:            string;
    tags?:                   string;
    id?:                     string;
    arn?:                    string;
    creation_date?:          string;
    last_modification_date?: string;
    state?:                  string;
    tags_all?:               string;
}

export interface SchemasRegistryPolicy {
    registry_name: string;
    policy:        string;
}

export interface SchemasSchema {
    name:                  string;
    content:               string;
    registry_name:         string;
    type:                  string;
    description?:          string;
    tags?:                 string;
    arn?:                  string;
    last_modified?:        string;
    tags_all?:             string;
    version?:              string;
    version_created_date?: string;
}

export interface ResourceSecretsmanagerSecret {
    description?:                    string;
    name_prefix?:                    string;
    name?:                           string;
    policy?:                         string;
    recovery_window_in_days?:        string;
    replica?:                        Replica;
    force_overwrite_replica_secret?: string;
    tags?:                           string;
    id?:                             string;
    arn?:                            string;
    tags_all?:                       string;
}

export interface Replica {
    last_accessed_date: string;
    status:             string;
    status_message:     string;
}

export interface SecretsmanagerSecretPolicy {
    policy:               string;
    secret_arn:           string;
    block_public_policy?: string;
    id?:                  string;
}

export interface ResourceSecretsmanagerSecretRotation {
    secret_id:           string;
    rotation_lambda_arn: string;
    rotation_rules?:     RotationRules;
    id?:                 string;
    arn?:                string;
    rotation_enabled?:   string;
}

export interface RotationRules {
    automatically_after_days: string;
    duration:                 string;
    schedule_expression:      string;
}

export interface SecurityGroup {
    egress?:                 Gress;
    ingress?:                Gress;
    name_prefix?:            string;
    name?:                   string;
    revoke_rules_on_delete?: string;
    tags?:                   string;
    vpc_id?:                 string;
    arn?:                    string;
    id?:                     string;
    owner_id?:               string;
    tags_all?:               string;
}

export interface Gress {
    from_port:        string;
    cidr_blocks:      string;
    description:      string;
    ipv6_cidr_blocks: string;
    prefix_list_ids:  string;
    protocol?:        string;
    security_groups:  string;
    self:             string;
    to_port?:         string;
}

export interface SecurityGroupRule {
    from_port:                 string;
    protocol:                  string;
    security_group_id:         string;
    to_port:                   string;
    cidr_blocks?:              string;
    description?:              string;
    ipv6_cidr_blocks?:         string;
    prefix_list_ids?:          string;
    self?:                     string;
    source_security_group_id?: string;
    id?:                       string;
    security_group_rule_id?:   string;
}

export interface SecurityhubAccount {
    enable_default_standards?:  string;
    control_finding_generator?: string;
    auto_enable_controls?:      string;
    id?:                        string;
    arn?:                       string;
}

export interface SecurityhubInsight {
    group_by_attribute: string;
    unit:               string;
    value:              string;
    cidr:               string;
    comparison:         string;
    key:                string;
    filters?:           Filters;
    workflow_status?:   string;
    date_range?:        string;
    end?:               string;
    start?:             string;
    eq?:                string;
    gte?:               string;
    lte?:               string;
    id?:                string;
    arn?:               string;
}

export interface Filters {
    aws_account_id:                                       string;
    company_name:                                         string;
    compliance_status:                                    string;
    confidence:                                           string;
    created_at:                                           string;
    criticality:                                          string;
    description:                                          string;
    finding_provider_fields_confidence:                   string;
    finding_provider_fields_criticality:                  string;
    finding_provider_fields_related_findings_id:          string;
    finding_provider_fields_related_findings_product_arn: string;
    finding_provider_fields_severity_label:               string;
    finding_provider_fields_severity_original:            string;
    finding_provider_fields_types:                        string;
    first_observed_at:                                    string;
    generator_id:                                         string;
    id:                                                   string;
    keyword:                                              string;
    last_observed_at:                                     string;
    malware_name:                                         string;
    malware_path:                                         string;
    malware_state:                                        string;
    malware_type:                                         string;
    network_destination_domain:                           string;
    network_destination_ipv4:                             string;
    network_destination_ipv6:                             string;
    network_destination_port:                             string;
    network_direction:                                    string;
    network_protocol:                                     string;
    network_source_domain:                                string;
    network_source_ipv4:                                  string;
    network_source_ipv6:                                  string;
    network_source_mac:                                   string;
    network_source_port:                                  string;
    note_text:                                            string;
    note_updated_at:                                      string;
    note_updated_by:                                      string;
    process_launched_at:                                  string;
    process_name:                                         string;
    process_parent_pid:                                   string;
    process_path:                                         string;
    process_pid:                                          string;
    process_terminated_at:                                string;
    product_arn:                                          string;
    product_fields:                                       string;
    product_name:                                         string;
    recommendation_text:                                  string;
    record_state:                                         string;
    related_findings_id:                                  string;
    related_findings_product_arn:                         string;
    resource_aws_ec2_instance_iam_instance_profile_arn:   string;
    resource_aws_ec2_instance_image_id:                   string;
    resource_aws_ec2_instance_ipv4_addresses:             string;
    resource_aws_ec2_instance_ipv6_addresses:             string;
    resource_aws_ec2_instance_key_name:                   string;
    resource_aws_ec2_instance_launched_at:                string;
    resource_aws_ec2_instance_subnet_id:                  string;
    resource_aws_ec2_instance_type:                       string;
    resource_aws_ec2_instance_vpc_id:                     string;
    resource_aws_iam_access_key_created_at:               string;
    resource_aws_iam_access_key_status:                   string;
    resource_aws_iam_access_key_user_name:                string;
    resource_aws_s3_bucket_owner_id:                      string;
    resource_aws_s3_bucket_owner_name:                    string;
    resource_container_image_id:                          string;
    resource_container_image_name:                        string;
    resource_container_launched_at:                       string;
    resource_container_name:                              string;
    resource_details_other:                               string;
    resource_id:                                          string;
    resource_partition:                                   string;
    resource_region:                                      string;
    resource_tags:                                        string;
    resource_type:                                        string;
    severity_label:                                       string;
    source_url:                                           string;
    threat_intel_indicator_category:                      string;
    threat_intel_indicator_last_observed_at:              string;
    threat_intel_indicator_source:                        string;
    threat_intel_indicator_source_url:                    string;
    threat_intel_indicator_type:                          string;
    threat_intel_indicator_value:                         string;
    title:                                                string;
    type:                                                 string;
    updated_at:                                           string;
    user_defined_values:                                  string;
    verification_state:                                   string;
    workflow_status:                                      string;
}

export interface SecurityhubInviteAccepter {
    master_id:      string;
    invitation_id?: string;
}

export interface SecurityhubMember {
    account_id:     string;
    email?:         string;
    invite?:        string;
    id?:            string;
    master_id?:     string;
    member_status?: string;
}

export interface SecurityhubOrganizationConfiguration {
    auto_enable:            string;
    auto_enable_standards?: string;
    id?:                    string;
}

export interface SecurityhubProductSubscription {
    product_arn: string;
    arn?:        string;
}

export interface SecurityhubStandardsControl {
    standards_control_arn:      string;
    control_status:             string;
    disabled_reason?:           string;
    id?:                        string;
    control_id?:                string;
    control_status_updated_at?: string;
    description?:               string;
    related_requirements?:      string;
    remediation_url?:           string;
    severity_rating?:           string;
    title?:                     string;
}

export interface SecurityhubStandardsSubscription {
    standards_arn: string;
    id?:           string;
}

export interface ServerlessapplicationrepositoryCloudformationStack {
    name:              string;
    application_id:    string;
    capabilities:      string;
    parameters?:       string;
    semantic_version?: string;
    tags?:             string;
    id?:               string;
    outputs?:          string;
    tags_all?:         string;
}

export interface ServiceDiscoveryInstance {
    attributes:   string;
    instance_id?: string;
    service_id?:  string;
    id?:          string;
}

export interface ServicecatalogBudgetResourceAssociation {
    budget_name: string;
    resource_id: string;
    id?:         string;
}

export interface ServicecatalogPortfolioShare {
    portfolio_id:         string;
    principal_id:         string;
    type:                 string;
    accept_language?:     string;
    share_principals?:    string;
    share_tag_options?:   string;
    wait_for_acceptance?: string;
    accepted?:            string;
}

export interface ServicecatalogPrincipalPortfolioAssociation {
    portfolio_id:     string;
    principal_arn:    string;
    accept_language?: string;
    principal_type?:  string;
    id?:              string;
}

export interface ServicecatalogProductPortfolioAssociation {
    portfolio_id:         string;
    product_id:           string;
    accept_language?:     string;
    source_portfolio_id?: string;
    id?:                  string;
}

export interface ServicecatalogProvisionedProduct {
    name:                                    string;
    accept_language?:                        string;
    ignore_errors?:                          string;
    notification_arns?:                      string;
    path_id?:                                string;
    path_name?:                              string;
    product_id?:                             string;
    product_name?:                           string;
    provisioning_artifact_id?:               string;
    provisioning_artifact_name?:             string;
    provisioning_parameters?:                ProvisioningParameters;
    retain_physical_resources?:              string;
    stack_set_provisioning_preferences?:     StackSetProvisioningPreferences;
    tags?:                                   string;
    value?:                                  string;
    arn?:                                    string;
    cloudwatch_dashboard_names?:             string;
    created_time?:                           string;
    id?:                                     string;
    last_provisioning_record_id?:            string;
    last_record_id?:                         string;
    last_successful_provisioning_record_id?: string;
    launch_role_arn?:                        string;
    status?:                                 string;
    status_message?:                         string;
    tags_all?:                               string;
    type?:                                   string;
    AVAILABLE?:                              string;
    UNDER_CHANGE?:                           string;
    TAINTED?:                                string;
    ERROR?:                                  string;
    PLAN_IN_PROGRESS?:                       string;
}

export interface ProvisioningParameters {
    key:                string;
    use_previous_value: string;
    value:              string;
}

export interface StackSetProvisioningPreferences {
    accounts:                     string;
    failure_tolerance_count:      string;
    failure_tolerance_percentage: string;
    max_concurrency_count:        string;
    max_concurrency_percentage:   string;
    regions:                      string;
}

export interface ServicecatalogProvisioningArtifact {
    product_id:                   string;
    template_physical_id?:        string;
    template_url?:                string;
    accept_language?:             string;
    active?:                      string;
    description?:                 string;
    disable_template_validation?: string;
    guidance?:                    string;
    name?:                        string;
    type?:                        string;
    created_time?:                string;
    id?:                          string;
    provisioning_artifact_id?:    string;
    status?:                      string;
}

export interface ServicecatalogServiceAction {
    definition:       string;
    name:             string;
    version:          string;
    accept_language?: string;
    description?:     string;
    assume_role?:     string;
    parameters?:      string;
    type?:            string;
    id?:              string;
}

export interface ServicecatalogTagOption {
    key:       string;
    value:     string;
    active?:   string;
    id?:       string;
    owner_id?: string;
}

export interface ServicecatalogTagOptionResourceAssociation {
    resource_id:            string;
    tag_option_id:          string;
    id?:                    string;
    resource_arn?:          string;
    resource_created_time?: string;
    resource_description?:  string;
    resource_name?:         string;
}

export interface SesReceiptRuleSet {
    rule_set_name: string;
    arn?:          string;
    id?:           string;
}

export interface SesConfigurationSet {
    name:                        string;
    delivery_options?:           SesConfigurationSetDeliveryOptions;
    reputation_metrics_enabled?: string;
    sending_enabled?:            string;
    tls_policy?:                 string;
    custom_redirect_domain?:     string;
    arn?:                        string;
    id?:                         string;
    last_fresh_start?:           string;
}

export interface SesConfigurationSetDeliveryOptions {
    tls_policy: string;
}

export interface SesDomainDKIM {
    domain:       string;
    dkim_tokens?: string;
}

export interface SesDomainIdentityVerification {
    domain: string;
    id?:    string;
    arn?:   string;
}

export interface SesDomainMailFrom {
    domain:                  string;
    mail_from_domain:        string;
    behavior_on_mx_failure?: string;
    id?:                     string;
}

export interface SesEventDestination {
    name:                    string;
    configuration_set_name:  string;
    matching_types:          string;
    default_value:           string;
    dimension_name:          string;
    value_source:            string;
    stream_arn:              string;
    role_arn:                string;
    topic_arn:               string;
    enabled?:                string;
    cloudwatch_destination?: string;
    kinesis_destination?:    string;
    id?:                     string;
    arn?:                    string;
}

export interface SesIdentityNotificationTopic {
    notification_type:         string;
    identity:                  string;
    topic_arn?:                string;
    include_original_headers?: string;
}

export interface SesIdentityPolicy {
    identity: string;
    name:     string;
    policy:   string;
}

export interface SesReceiptFilter {
    name:   string;
    cidr:   string;
    policy: string;
    id?:    string;
    arn?:   string;
}

export interface SesReceiptRule {
    name:               string;
    rule_set_name:      string;
    header_name:        string;
    header_value:       string;
    position:           string;
    message:            string;
    sender:             string;
    smtp_reply_code:    string;
    function_arn:       string;
    bucket_name:        string;
    topic_arn:          string;
    scope:              string;
    organization_arn:   string;
    after?:             string;
    enabled?:           string;
    recipients?:        string;
    scan_enabled?:      string;
    tls_policy?:        string;
    add_header_action?: string;
    bounce_action?:     string;
    lambda_action?:     string;
    s3_action?:         string;
    sns_action?:        string;
    stop_action?:       string;
    workmail_action?:   string;
    status_code?:       string;
    invocation_type?:   string;
    kms_key_arn?:       string;
    object_key_prefix?: string;
    encoding?:          string;
    id?:                string;
    arn?:               string;
}

export interface SesTemplate {
    name:     string;
    html?:    string;
    subject?: string;
    text?:    string;
    arn?:     string;
    id?:      string;
}

export interface ResourceSesv2ConfigurationSet {
    configuration_set_name:      string;
    custom_redirect_domain:      string;
    delivery_options?:           Sesv2ConfigurationSetDeliveryOptions;
    reputation_options?:         ReputationOptions;
    sending_options?:            SendingOptions;
    suppression_options?:        SuppressionOptions;
    tags?:                       string;
    tracking_options?:           TrackingOptions;
    vdm_options?:                VDMOptions;
    tls_policy?:                 string;
    reputation_metrics_enabled?: string;
    sending_enabled?:            string;
    suppressed_reasons?:         string;
    dashboard_options?:          DashboardOptions;
    guardian_options?:           GuardianOptions;
    engagement_metrics?:         string;
    arn?:                        string;
}

export interface DashboardOptions {
    engagement_metrics: string;
}

export interface Sesv2ConfigurationSetDeliveryOptions {
    sending_pool_name: string;
    tls_policy:        string;
}

export interface GuardianOptions {
    optimized_shared_delivery: string;
}

export interface ReputationOptions {
    reputation_metrics_enabled: string;
}

export interface SendingOptions {
    sending_enabled: string;
}

export interface SuppressionOptions {
    suppressed_reasons: string;
}

export interface TrackingOptions {
    custom_redirect_domain: string;
}

export interface VDMOptions {
    dashboard_options: string;
    guardian_options:  string;
}

export interface Sesv2ConfigurationSetEventDestination {
    configuration_set_name:        string;
    event_destination:             EventDestination;
    event_destination_name:        string;
    dimension_configuration:       DimensionConfiguration;
    dimension_value_source:        string;
    iam_role_arn:                  string;
    pinpoint_application_arn:      string;
    cloud_watch_destination?:      CloudWatchDestination;
    kinesis_firehose_destination?: KinesisFirehoseDestination;
    pinpoint_destination?:         PinpointDestination;
    sns_destination?:              SnsDestination;
    id?:                           string;
}

export interface CloudWatchDestination {
    dimension_configuration: string;
}

export interface DimensionConfiguration {
    default_dimension_value: string;
    dimension_name:          string;
    dimension_value_source:  string;
}

export interface EventDestination {
    matching_event_types:          string;
    cloud_watch_destination?:      string;
    enabled?:                      string;
    kinesis_firehose_destination?: string;
    pinpoint_destination?:         string;
    sns_destination?:              string;
}

export interface KinesisFirehoseDestination {
    delivery_stream_arn: string;
    iam_role_arn:        string;
}

export interface PinpointDestination {
    pinpoint_application_arn: string;
}

export interface SnsDestination {
    topic_arn: string;
}

export interface Sesv2ContactList {
    contact_list_name:       string;
    tags?:                   string;
    topic?:                  Topic;
    created_timestamp?:      string;
    last_updated_timestamp?: string;
}

export interface Topic {
    default_subscription_status: string;
    display_name:                string;
    topic_name:                  string;
    description:                 string;
}

export interface Sesv2DedicatedIPAssignment {
    ip:                    string;
    destination_pool_name: string;
    id?:                   string;
}

export interface ResourceSesv2EmailIdentity {
    email_identity:               string;
    configuration_set_name?:      string;
    dkim_signing_attributes?:     DKIMSigningAttributes;
    tags?:                        string;
    arn?:                         string;
    identity_type?:               string;
    tags_all?:                    string;
    verified_for_sending_status?: string;
}

export interface DKIMSigningAttributes {
    domain_signing_selector: string;
    next_signing_key_length: string;
}

export interface Sesv2EmailIdentityFeedbackAttributes {
    email_identity:            string;
    email_forwarding_enabled?: string;
}

export interface ResourceSfnAlias {
    name:                      string;
    routing_configuration:     string;
    state_machine_version_arn: string;
    weight:                    string;
    description?:              string;
    arn?:                      string;
    creation_date?:            string;
}

export interface ResourceSfnStateMachine {
    definition:              string;
    role_arn:                string;
    logging_configuration?:  string;
    name?:                   string;
    name_prefix?:            string;
    publish?:                string;
    tags?:                   string;
    tracing_configuration?:  string;
    type?:                   string;
    include_execution_data?: string;
    level?:                  string;
    enabled?:                string;
    id?:                     string;
    arn?:                    string;
    creation_date?:          string;
    status?:                 string;
    tags_all?:               string;
}

export interface ShieldApplicationLayerAutomaticResponse {
    resource_arn: string;
    action:       string;
}

export interface ShieldDrtAccessLogBucketAssociation {
    log_bucket:              string;
    role_arn_association_id: string;
}

export interface ShieldDrtAccessRoleArnAssociation {
    role_arn: string;
}

export interface ShieldProtectionGroup {
    aggregation:           string;
    pattern:               string;
    protection_group_id:   string;
    members?:              string;
    resource_type?:        string;
    tags?:                 string;
    protection_group_arn?: string;
    tags_all?:             string;
}

export interface ShieldProtectionHealthCheckAssociation {
    health_check_arn:     string;
    shield_protection_id: string;
    id?:                  string;
}

export interface ResourceSignerSigningJob {
    profile_name:                string;
    source:                      string;
    destination:                 string;
    s3:                          string;
    bucket:                      string;
    key:                         string;
    version:                     string;
    ignore_signing_job_failure?: string;
    prefix?:                     string;
    completed_at?:               string;
    created_at?:                 string;
    job_id?:                     string;
    job_invoker?:                string;
    job_owner?:                  string;
    platform_display_name?:      string;
    platform_id?:                string;
    profile_version?:            string;
    requested_by?:               string;
    revocation_record?:          string;
    signature_expires_at?:       string;
    signed_object?:              string;
    status?:                     string;
    status_reason?:              string;
}

export interface SignerSigningProfilePermission {
    profile_name:         string;
    action:               string;
    principal:            string;
    profile_version?:     string;
    statement_id?:        string;
    statement_id_prefix?: string;
}

export interface SnapshotCreateVolumePermission {
    snapshot_id: string;
    account_id:  string;
    id?:         string;
}

export interface SnsPlatformApplication {
    name:                              string;
    platform:                          string;
    platform_credential:               string;
    apple_platform_team_id:            string;
    apple_platform_bundle_id:          string;
    event_delivery_failure_topic_arn?: string;
    event_endpoint_created_topic_arn?: string;
    event_endpoint_deleted_topic_arn?: string;
    event_endpoint_updated_topic_arn?: string;
    failure_feedback_role_arn?:        string;
    platform_principal?:               string;
    success_feedback_role_arn?:        string;
    success_feedback_sample_rate?:     string;
    id?:                               string;
    arn?:                              string;
}

export interface SnsSMSPreferences {
    monthly_spend_limit?:                   string;
    delivery_status_iam_role_arn?:          string;
    delivery_status_success_sampling_rate?: string;
    default_sender_id?:                     string;
    default_sms_type?:                      string;
    usage_report_s3_bucket?:                string;
}

export interface SnsTopic {
    name?:                                     string;
    name_prefix?:                              string;
    display_name?:                             string;
    policy?:                                   string;
    delivery_policy?:                          string;
    application_success_feedback_role_arn?:    string;
    application_success_feedback_sample_rate?: string;
    application_failure_feedback_role_arn?:    string;
    http_success_feedback_role_arn?:           string;
    http_success_feedback_sample_rate?:        string;
    http_failure_feedback_role_arn?:           string;
    kms_master_key_id?:                        string;
    signature_version?:                        string;
    tracing_config?:                           string;
    fifo_topic?:                               string;
    content_based_deduplication?:              string;
    lambda_success_feedback_role_arn?:         string;
    lambda_success_feedback_sample_rate?:      string;
    lambda_failure_feedback_role_arn?:         string;
    sqs_success_feedback_role_arn?:            string;
    sqs_success_feedback_sample_rate?:         string;
    sqs_failure_feedback_role_arn?:            string;
    firehose_success_feedback_role_arn?:       string;
    firehose_success_feedback_sample_rate?:    string;
    firehose_failure_feedback_role_arn?:       string;
    tags?:                                     string;
    id?:                                       string;
    arn?:                                      string;
    owner?:                                    string;
    tags_all?:                                 string;
}

export interface SnsTopicDataProtectionPolicy {
    arn:    string;
    policy: string;
}

export interface SnsTopicPolicy {
    arn:    string;
    policy: string;
    owner?: string;
}

export interface SnsTopicSubscription {
    endpoint:                         string;
    protocol:                         string;
    topic_arn:                        string;
    subscription_role_arn?:           string;
    confirmation_timeout_in_minutes?: string;
    delivery_policy?:                 string;
    endpoint_auto_confirms?:          string;
    filter_policy?:                   string;
    filter_policy_scope?:             string;
    raw_message_delivery?:            string;
    redrive_policy?:                  string;
    application?:                     string;
    firehose?:                        string;
    lambda?:                          string;
    sms?:                             string;
    email?:                           string;
    "email-json"?:                    string;
    arn?:                             string;
    confirmation_was_authenticated?:  string;
    id?:                              string;
    owner_id?:                        string;
    pending_confirmation?:            string;
}

export interface SpotDatafeedSubscription {
    bucket:  string;
    prefix?: string;
}

export interface SpotFleetRequest {
    iam_fleet_role:                                    string;
    launch_template_specification:                     string;
    context?:                                          string;
    replace_unhealthy_instances?:                      string;
    launch_template_config?:                           string;
    spot_maintenance_strategies?:                      MaintenanceStrategies;
    spot_price?:                                       string;
    wait_for_fulfillment?:                             string;
    target_capacity?:                                  string;
    target_capacity_unit_type?:                        string;
    allocation_strategy?:                              string;
    instance_pools_to_use_count?:                      string;
    excess_capacity_termination_policy?:               string;
    terminate_instances_with_expiration?:              string;
    terminate_instances_on_delete?:                    string;
    instance_interruption_behaviour?:                  string;
    fleet_type?:                                       string;
    valid_until?:                                      string;
    valid_from?:                                       string;
    on_demand_allocation_strategy?:                    string;
    on_demand_max_total_price?:                        string;
    on_demand_target_capacity?:                        string;
    tags?:                                             string;
    overrides?:                                        string;
    id?:                                               string;
    name?:                                             string;
    capacity_rebalance?:                               CapacityRebalance;
    replacement_strategy?:                             string;
    availability_zone?:                                string;
    instance_requirements?:                            string;
    instance_type?:                                    string;
    priority?:                                         string;
    subnet_id?:                                        string;
    weighted_capacity?:                                string;
    bare_metal?:                                       string;
    burstable_performance?:                            string;
    local_storage?:                                    string;
    on_demand_max_price_percentage_over_lowest_price?: string;
    require_hibernate_support?:                        string;
    spot_max_price_percentage_over_lowest_price?:      string;
    spot_request_state?:                               string;
    tags_all?:                                         string;
}

export interface SpotInstanceRequest {
    spot_price?:                     string;
    wait_for_fulfillment?:           string;
    spot_type?:                      string;
    launch_group?:                   string;
    block_duration_minutes?:         string;
    instance_interruption_behavior?: string;
    valid_until?:                    string;
    valid_from?:                     string;
    tags?:                           string;
    id?:                             string;
    spot_bid_status?:                string;
    spot_instance_id?:               string;
    public_dns?:                     string;
    public_ip?:                      string;
    private_dns?:                    string;
    private_ip?:                     string;
    tags_all?:                       string;
}

export interface PurpleSqsQueue {
    name?:                              string;
    name_prefix?:                       string;
    visibility_timeout_seconds?:        string;
    message_retention_seconds?:         string;
    max_message_size?:                  string;
    delay_seconds?:                     string;
    receive_wait_time_seconds?:         string;
    policy?:                            string;
    redrive_allow_policy?:              string;
    fifo_queue?:                        string;
    content_based_deduplication?:       string;
    sqs_managed_sse_enabled?:           string;
    kms_master_key_id?:                 string;
    kms_data_key_reuse_period_seconds?: string;
    deduplication_scope?:               string;
    fifo_throughput_limit?:             string;
    tags?:                              string;
    id?:                                string;
    arn?:                               string;
    tags_all?:                          string;
    url?:                               string;
}

export interface SqsQueuePolicy {
    queue_url: string;
    policy:    string;
}

export interface SqsQueueRedriveAllowPolicy {
    queue_url:            string;
    redrive_allow_policy: string;
}

export interface SqsQueueRedrivePolicy {
    queue_url:      string;
    redrive_policy: string;
}

export interface SsmActivation {
    iam_role:            string;
    name?:               string;
    description?:        string;
    expiration_date?:    string;
    registration_limit?: string;
    tags?:               string;
    id?:                 string;
    activation_code?:    string;
    expired?:            string;
    registration_count?: string;
    tags_all?:           string;
}

export interface SsmAssociation {
    name:                              string;
    s3_bucket_name:                    string;
    key:                               string;
    values:                            string;
    apply_only_at_cron_interval?:      string;
    association_name?:                 string;
    automation_target_parameter_name?: string;
    compliance_severity?:              string;
    document_version?:                 string;
    max_concurrency?:                  string;
    max_errors?:                       string;
    output_location?:                  string;
    parameters?:                       string;
    schedule_expression?:              string;
    sync_compliance?:                  string;
    targets?:                          string;
    wait_for_success_timeout_seconds?: string;
    s3_key_prefix?:                    string;
    s3_region?:                        string;
    arn?:                              string;
    association_id?:                   string;
    instance_id?:                      string;
}

export interface SsmDefaultPatchBaseline {
    baseline_id:      string;
    operating_system: string;
}

export interface ResourceSsmDocument {
    name:                string;
    content:             string;
    document_type:       string;
    attachments_source?: string;
    document_format?:    string;
    permissions?:        string;
    target_type?:        string;
    tags?:               string;
    version_name?:       string;
    created_date?:       string;
    description?:        string;
    schema_version?:     string;
    default_version?:    string;
    document_version?:   string;
    hash?:               string;
    hash_type?:          string;
    latest_version?:     string;
    owner?:              string;
    status?:             string;
    parameter?:          string;
    platform_types?:     string;
    tags_all?:           string;
}

export interface SsmMaintenanceWindow {
    name:                        string;
    schedule:                    string;
    cutoff:                      string;
    duration:                    string;
    description?:                string;
    allow_unassociated_targets?: string;
    enabled?:                    string;
    end_date?:                   string;
    schedule_timezone?:          string;
    schedule_offset?:            string;
    start_date?:                 string;
    tags?:                       string;
    id?:                         string;
    tags_all?:                   string;
}

export interface SsmMaintenanceWindowTarget {
    window_id:          string;
    resource_type:      string;
    targets:            string;
    name?:              string;
    description?:       string;
    owner_information?: string;
    id?:                string;
}

export interface SsmMaintenanceWindowTask {
    window_id:                   string;
    task_type:                   string;
    task_arn:                    string;
    name:                        string;
    values:                      string;
    max_concurrency?:            string;
    max_errors?:                 string;
    cutoff_behavior?:            string;
    service_role_arn?:           string;
    description?:                string;
    targets?:                    string;
    priority?:                   string;
    task_invocation_parameters?: string;
    automation_parameters?:      string;
    lambda_parameters?:          string;
    run_command_parameters?:     string;
    step_functions_parameters?:  string;
    document_version?:           string;
    parameter?:                  string;
    client_context?:             string;
    payload?:                    string;
    qualifier?:                  string;
    comment?:                    string;
    document_hash?:              string;
    document_hash_type?:         string;
    notification_config?:        string;
    output_s3_bucket?:           string;
    output_s3_key_prefix?:       string;
    timeout_seconds?:            string;
    cloudwatch_config?:          string;
    input?:                      string;
    notification_arn?:           string;
    notification_events?:        string;
    notification_type?:          string;
    cloudwatch_log_group_name?:  string;
    cloudwatch_output_enabled?:  string;
    arn?:                        string;
    id?:                         string;
    window_task_id?:             string;
}

export interface ResourceSsmParameter {
    name:             string;
    type:             string;
    allowed_pattern?: string;
    data_type?:       string;
    description?:     string;
    key_id?:          string;
    tags?:            string;
    tier?:            string;
    arn?:             string;
    tags_all?:        string;
    version?:         string;
}

export interface ResourceSsmPatchBaseline {
    name:                                  string;
    configuration:                         string;
    products:                              string;
    description?:                          string;
    operating_system?:                     string;
    approved_patches_compliance_level?:    string;
    approved_patches?:                     string;
    rejected_patches?:                     string;
    global_filter?:                        string;
    approval_rule?:                        string;
    source?:                               string;
    rejected_patches_action?:              string;
    approved_patches_enable_non_security?: string;
    tags?:                                 string;
    approve_after_days?:                   string;
    approve_until_date?:                   string;
    compliance_level?:                     string;
    enable_non_security?:                  string;
    id?:                                   string;
    arn?:                                  string;
    tags_all?:                             string;
}

export interface SsmPatchGroup {
    baseline_id: string;
    patch_group: string;
    id?:         string;
}

export interface SsmResourceDataSync {
    name:           string;
    s3_destination: string;
}

export interface SsmServiceSetting {
    setting_id:    string;
    setting_value: string;
    arn?:          string;
    status?:       string;
}

export interface ResourceSsmincidentsReplicationSet {
    name:                string;
    kms_key_arn?:        string;
    arn?:                string;
    tags_all?:           string;
    created_by?:         string;
    created_time?:       string;
    deletion_protected?: string;
    last_modified_by?:   string;
    last_modified_time?: string;
    status_update_time?: string;
    status_message?:     string;
}

export interface SsoadminAccountAssignment {
    instance_arn?:       string;
    permission_set_arn?: string;
    principal_id?:       string;
    principal_type?:     string;
    target_id?:          string;
    target_type?:        string;
    id?:                 string;
}

export interface SsoadminYAttachment {
    instance_arn?:                      string;
    permission_set_arn?:                string;
    customer_managed_policy_reference?: string;
    name?:                              string;
    path?:                              string;
    id?:                                string;
    permissions_boundary?:              string;
    managed_policy_arn?:                string;
}

export interface SsoadminInstanceAccessControlAttributes {
    attribute:     string;
    key:           string;
    value:         string;
    source:        string;
    instance_arn?: string;
    id?:           string;
}

export interface SsoadminManagedPolicyAttachment {
    instance_arn?:        string;
    managed_policy_arn?:  string;
    permission_set_arn?:  string;
    id?:                  string;
    managed_policy_name?: string;
}

export interface SsoadminPermissionSetInlinePolicy {
    inline_policy:       string;
    instance_arn?:       string;
    permission_set_arn?: string;
    id?:                 string;
}

export interface StoragegatewayCacheClass {
    disk_id:     string;
    gateway_arn: string;
    id?:         string;
}

export interface StoragegatewayEdIscsiVolume {
    gateway_arn:               string;
    network_interface_id:      string;
    target_name:               string;
    volume_size_in_bytes?:     string;
    snapshot_id?:              string;
    source_volume_arn?:        string;
    kms_encrypted?:            string;
    kms_key?:                  string;
    tags?:                     string;
    arn?:                      string;
    chap_enabled?:             string;
    id?:                       string;
    lun_number?:               string;
    network_interface_port?:   string;
    tags_all?:                 string;
    target_arn?:               string;
    volume_arn?:               string;
    volume_id?:                string;
    disk_id?:                  string;
    preserve_existing_data?:   string;
    volume_status?:            string;
    volume_type?:              string;
    volume_attachment_status?: string;
}

export interface StoragegatewayFileSystemAssociation {
    gateway_arn:            string;
    location_arn:           string;
    username:               string;
    password?:              string;
    audit_destination_arn?: string;
    cache_attributes?:      CacheAttributes;
    tags?:                  string;
    id?:                    string;
    arn?:                   string;
    tags_all?:              string;
}

export interface CacheAttributes {
    cache_stale_timeout_in_seconds: string;
}

export interface StoragegatewayGateway {
    gateway_name:                                 string;
    gateway_timezone:                             string;
    activation_key?:                              string;
    average_download_rate_limit_in_bits_per_sec?: string;
    average_upload_rate_limit_in_bits_per_sec?:   string;
    gateway_ip_address?:                          string;
    gateway_type?:                                string;
    gateway_vpc_endpoint?:                        string;
    cloudwatch_log_group_arn?:                    string;
    maintenance_start_time?:                      MaintenanceStartTime;
    medium_changer_type?:                         string;
    smb_active_directory_settings?:               SMBActiveDirectorySettings;
    smb_guest_password?:                          string;
    smb_security_strategy?:                       string;
    smb_file_share_visibility?:                   string;
    tape_drive_type?:                             string;
    tags?:                                        string;
    id?:                                          string;
    arn?:                                         string;
    gateway_id?:                                  string;
    ec2_instance_id?:                             string;
    endpoint_type?:                               string;
    host_environment?:                            string;
    gateway_network_interface?:                   string;
    tags_all?:                                    string;
    ipv4_address?:                                string;
}

export interface MaintenanceStartTime {
    day_of_month:   string;
    day_of_week:    string;
    hour_of_day:    string;
    minute_of_hour: string;
}

export interface SMBActiveDirectorySettings {
    domain_name:         string;
    password:            string;
    username:            string;
    timeout_in_seconds:  string;
    organizational_unit: string;
    domain_controllers:  string;
}

export interface StoragegatewayNFSFileShare {
    client_list:              string;
    gateway_arn:              string;
    location_arn:             string;
    role_arn:                 string;
    vpc_endpoint_dns_name?:   string;
    bucket_region?:           string;
    audit_destination_arn?:   string;
    default_storage_class?:   string;
    guess_mime_type_enabled?: string;
    kms_encrypted?:           string;
    kms_key_arn?:             string;
    nfs_file_share_defaults?: NFSFileShareDefaults;
    cache_attributes?:        CacheAttributes;
    object_acl?:              string;
    read_only?:               string;
    requester_pays?:          string;
    squash?:                  string;
    file_share_name?:         string;
    notification_policy?:     string;
    tags?:                    string;
    owner_id?:                string;
    id?:                      string;
    arn?:                     string;
    fileshare_id?:            string;
    path?:                    string;
    tags_all?:                string;
}

export interface NFSFileShareDefaults {
    directory_mode: string;
    file_mode:      string;
    group_id:       string;
    owner_id:       string;
}

export interface StoragegatewaySMBFileShare {
    gateway_arn:               string;
    location_arn:              string;
    role_arn:                  string;
    vpc_endpoint_dns_name?:    string;
    bucket_region?:            string;
    admin_user_list?:          string;
    authentication?:           string;
    audit_destination_arn?:    string;
    default_storage_class?:    string;
    file_share_name?:          string;
    guess_mime_type_enabled?:  string;
    invalid_user_list?:        string;
    kms_encrypted?:            string;
    kms_key_arn?:              string;
    object_acl?:               string;
    oplocks_enabled?:          string;
    cache_attributes?:         CacheAttributes;
    read_only?:                string;
    requester_pays?:           string;
    smb_acl_enabled?:          string;
    case_sensitivity?:         string;
    valid_user_list?:          string;
    access_based_enumeration?: string;
    notification_policy?:      string;
    tags?:                     string;
    id?:                       string;
    arn?:                      string;
    fileshare_id?:             string;
    path?:                     string;
    tags_all?:                 string;
}

export interface StoragegatewayTapePool {
    pool_name:                    string;
    storage_class:                string;
    retention_lock_type:          string;
    retention_lock_time_in_days?: string;
    tags?:                        string;
    arn?:                         string;
    tags_all?:                    string;
}

export interface SyntheticsCanary {
    artifact_s3_location:      string;
    execution_role_arn:        string;
    handler:                   string;
    name:                      string;
    runtime_version:           string;
    schedule:                  SyntheticsCanarySchedule;
    delete_lambda?:            string;
    vpc_config?:               Vpc;
    failure_retention_period?: string;
    run_config?:               RunConfig;
    start_canary?:             string;
    success_retention_period?: string;
    tags?:                     string;
    artifact_config?:          ArtifactConfig;
    s3_encryption?:            S3Encryption;
    kms_key_arn?:              string;
    duration_in_seconds?:      string;
    environment_variables?:    string;
    arn?:                      string;
    engine_arn?:               string;
    id?:                       string;
    source_location_arn?:      string;
    status?:                   string;
    tags_all?:                 string;
    timeline?:                 Timeline;
    vpc_id?:                   string;
}

export interface ArtifactConfig {
    s3_encryption: string;
}

export interface RunConfig {
    timeout_in_seconds:    string;
    memory_in_mb:          string;
    active_tracing:        string;
    environment_variables: string;
}

export interface S3Encryption {
    encryption_mode: string;
    kms_key_arn:     string;
}

export interface SyntheticsCanarySchedule {
    expression:           string;
    duration_in_seconds?: string;
}

export interface Timeline {
    created:       string;
    last_modified: string;
    last_started:  string;
    last_stopped:  string;
}

export interface SyntheticsGroupAssociation {
    group_name: string;
    canary_arn: string;
    group_id?:  string;
}

export interface TimestreamwriteDatabase {
    database_name: string;
    kms_key_id?:   string;
    tags?:         string;
    id?:           string;
    arn?:          string;
    table_count?:  string;
    tags_all?:     string;
}

export interface TimestreamwriteTable {
    database_name:                           string;
    table_name:                              string;
    enable_magnetic_store_writes:            string;
    magnetic_store_retention_period_in_days: string;
    memory_store_retention_period_in_hours:  string;
    composite_partition_key:                 string;
    type:                                    string;
    magnetic_store_write_properties?:        string;
    retention_properties?:                   string;
    schema?:                                 string;
    tags?:                                   string;
    magnetic_store_rejected_data_location?:  string;
    s3_configuration?:                       string;
    bucket_name?:                            string;
    encryption_option?:                      string;
    kms_key_id?:                             string;
    object_key_prefix?:                      string;
    enforcement_in_record?:                  string;
    name?:                                   string;
    id?:                                     string;
    arn?:                                    string;
    tags_all?:                               string;
}

export interface TranscribeLanguageModel {
    base_model_name:      string;
    input_data_config:    string;
    language_code:        string;
    model_name:           string;
    data_access_role_arn: string;
    s3_uri:               string;
    tuning_data_s3_uri?:  string;
    tags?:                string;
    id?:                  string;
    arn?:                 string;
}

export interface TranscribeVocabulary {
    language_code:       string;
    vocabulary_file_uri: string;
    vocabulary_name:     string;
    tags?:               string;
    id?:                 string;
    arn?:                string;
    download_uri?:       string;
    phrases?:            string;
}

export interface TranscribeVocabularyFilter {
    language_code:               string;
    vocabulary_filter_name:      string;
    vocabulary_filter_file_uri?: string;
    tags?:                       string;
    words?:                      string;
    id?:                         string;
    arn?:                        string;
    download_uri?:               string;
}

export interface Transfer {
    external_id?:             string;
    server_id:                string;
    role:                     string;
    entry:                    string;
    target:                   string;
    gid:                      string;
    uid:                      string;
    home_directory?:          string;
    home_directory_mappings?: string;
    home_directory_type?:     string;
    policy?:                  string;
    posix_profile?:           string;
    secondary_gids?:          string;
    user_name?:               string;
    tags?:                    string;
    arn?:                     string;
    tags_all?:                string;
}

export interface TransferAgreement {
    access_role:        string;
    base_directory:     string;
    local_profile_id:   string;
    partner_profile_id: string;
    server_id:          string;
    description?:       string;
    tags?:              string;
    arn?:               string;
}

export interface TransferCertificate {
    certificate:        string;
    usage:              string;
    certificate_chain?: string;
    description?:       string;
    private_key?:       string;
    tags?:              string;
    arn?:               string;
    certificate_id?:    string;
    active_date?:       string;
    inactive_date?:     string;
}

export interface TransferConnector {
    access_role:            string;
    url:                    string;
    compression:            string;
    encryption_algorithm:   string;
    local_profile_id:       string;
    mdn_response:           string;
    partner_profile_id:     string;
    signing_algorithm:      string;
    trusted_host_keys:      string;
    user_secret_id:         string;
    as2_config?:            string;
    logging_role?:          string;
    sftp_config?:           string;
    tags?:                  string;
    mdn_signing_algorithm?: string;
    message_subject?:       string;
    arn?:                   string;
}

export interface TransferProfile {
    as2_id:           string;
    profile_type:     string;
    certificate_ids?: string;
    tags?:            string;
    arn?:             string;
}

export interface ResourceTransferServer {
    execution_role:               string;
    workflow_id:                  string;
    certificate?:                 string;
    domain?:                      string;
    endpoint_details?:            string;
    endpoint_type?:               string;
    invocation_role?:             string;
    host_key?:                    string;
    url?:                         string;
    identity_provider_type?:      string;
    directory_id?:                string;
    function?:                    string;
    logging_role?:                string;
    force_destroy?:               string;
    security_policy_name?:        string;
    structured_log_destinations?: string;
    tags?:                        string;
    workflow_details?:            string;
    address_allocation_ids?:      string;
    security_group_ids?:          string;
    subnet_ids?:                  string;
    vpc_endpoint_id?:             string;
    vpc_id?:                      string;
    as2_transports?:              string;
    passive_ip?:                  string;
    set_stat_option?:             string;
    tls_session_resumption_mode?: string;
    on_upload?:                   string;
    on_partial_upload?:           string;
    arn?:                         string;
    endpoint?:                    string;
    host_key_fingerprint?:        string;
    tags_all?:                    string;
}

export interface TransferSSHKey {
    server_id?: string;
    user_name?: string;
    body?:      string;
}

export interface TransferWorkflow {
    steps:                      string;
    type:                       string;
    key:                        string;
    value:                      string;
    description?:               string;
    on_exception_steps?:        string;
    tags?:                      string;
    copy_step_details?:         string;
    custom_step_details?:       string;
    decrypt_step_details?:      string;
    delete_step_details?:       string;
    tag_step_details?:          string;
    destination_file_location?: string;
    name?:                      string;
    overwrite_existing?:        string;
    source_file_location?:      string;
    target?:                    string;
    timeout_seconds?:           string;
    efs_file_location?:         string;
    s3_file_location?:          string;
    file_system_id?:            string;
    path?:                      string;
    bucket?:                    string;
    arn?:                       string;
    id?:                        string;
    tags_all?:                  string;
}

export interface VerifiedaccessInstance {
    description?:                     string;
    tags?:                            string;
    creation_time?:                   string;
    id?:                              string;
    last_updated_time?:               string;
    verified_access_trust_providers?: VerifiedAccessTrustProviders;
}

export interface VerifiedAccessTrustProviders {
    description:                       string;
    device_trust_provider_type:        string;
    trust_provider_type:               string;
    user_trust_provider_type:          string;
    verified_access_trust_provider_id: string;
}

export interface VerifiedaccessTrustProvider {
    policy_reference_name:     string;
    trust_provider_type:       string;
    description?:              string;
    device_options?:           string;
    oidc_options?:             string;
    tags?:                     string;
    user_trust_provider_type?: string;
    id?:                       string;
}

export interface VolumeAttachment {
    device_name:                     string;
    instance_id:                     string;
    volume_id:                       string;
    skip_destroy?:                   string;
    stop_instance_before_detaching?: string;
}

export interface ResourceVpc {
    cidr_block?:                           string;
    instance_tenancy?:                     string;
    ipv4_ipam_pool_id?:                    string;
    ipv4_netmask_length?:                  string;
    ipv6_cidr_block?:                      string;
    ipv6_ipam_pool_id?:                    string;
    ipv6_netmask_length?:                  string;
    ipv6_cidr_block_network_border_group?: string;
    enable_dns_support?:                   string;
    enable_network_address_usage_metrics?: string;
    enable_dns_hostnames?:                 string;
    assign_generated_ipv6_cidr_block?:     string;
    tags?:                                 string;
    arn?:                                  string;
    id?:                                   string;
    main_route_table_id?:                  string;
    default_network_acl_id?:               string;
    default_security_group_id?:            string;
    default_route_table_id?:               string;
    ipv6_association_id?:                  string;
    owner_id?:                             string;
    tags_all?:                             string;
}

export interface VpcDHCPOptionsAssociation {
    vpc_id:          string;
    dhcp_options_id: string;
    id?:             string;
}

export interface ResourceVpcEndpoint {
    service_name:           string;
    vpc_id:                 string;
    auto_accept?:           string;
    policy?:                string;
    private_dns_enabled?:   string;
    dns_options?:           DNSOptions;
    ip_address_type?:       string;
    route_table_ids?:       string;
    subnet_ids?:            string;
    security_group_ids?:    string;
    tags?:                  string;
    vpc_endpoint_type?:     string;
    id?:                    string;
    arn?:                   string;
    cidr_blocks?:           string;
    dns_entry?:             string;
    network_interface_ids?: string;
    owner_id?:              string;
    prefix_list_id?:        string;
    requester_managed?:     string;
    state?:                 string;
    tags_all?:              string;
    dns_name?:              string;
    hosted_zone_id?:        string;
}

export interface DNSOptions {
    dns_record_ip_type:                             string;
    private_dns_only_for_inbound_resolver_endpoint: string;
}

export interface VpcEndpointConnectionAccepter {
    vpc_endpoint_id:         string;
    vpc_endpoint_service_id: string;
    id?:                     string;
    vpc_endpoint_state?:     string;
}

export interface VpcEndpointConnectionNotification {
    connection_notification_arn: string;
    vpc_endpoint_service_id?:    string;
    vpc_endpoint_id?:            string;
    id?:                         string;
    state?:                      string;
    notification_type?:          string;
}

export interface VpcEndpointPolicy {
    vpc_endpoint_id: string;
    policy?:         string;
    id?:             string;
}

export interface VpcEndpointRouteTableAssociation {
    route_table_id:  string;
    vpc_endpoint_id: string;
    id?:             string;
}

export interface VpcEndpointSecurityGroupAssociation {
    security_group_id:            string;
    vpc_endpoint_id:              string;
    replace_default_association?: string;
    id?:                          string;
}

export interface ResourceVpcEndpointService {
    acceptance_required:         string;
    allowed_principals?:         string;
    gateway_load_balancer_arns?: string;
    network_load_balancer_arns?: string;
    tags?:                       string;
    private_dns_name?:           string;
    supported_ip_address_types?: string;
    id?:                         string;
    availability_zones?:         string;
    arn?:                        string;
    base_endpoint_dns_names?:    string;
    manages_vpc_endpoints?:      string;
    service_name?:               string;
    service_type?:               string;
    state?:                      string;
    tags_all?:                   string;
}

export interface VpcEndpointServiceAllowedPrincipal {
    vpc_endpoint_service_id: string;
    principal_arn:           string;
    id?:                     string;
}

export interface VpcEndpointSubnetAssociation {
    vpc_endpoint_id: string;
    subnet_id:       string;
    id?:             string;
}

export interface VpcIPAM {
    region_name:                                string;
    description?:                               string;
    tags?:                                      string;
    cascade?:                                   string;
    arn?:                                       string;
    id?:                                        string;
    default_resource_discovery_id?:             string;
    default_resource_discovery_association_id?: string;
    private_default_scope_id?:                  string;
    public_default_scope_id?:                   string;
    scope_count?:                               string;
    tags_all?:                                  string;
}

export interface VpcIPAMOrganizationAdminAccount {
    delegated_admin_account_id?: string;
    arn?:                        string;
    id?:                         string;
    email?:                      string;
    name?:                       string;
    service_principal?:          string;
}

export interface VpcIPAMPoolCIDR {
    ipam_pool_id:                string;
    cidr?:                       string;
    cidr_authorization_context?: CIDRAuthorizationContext;
    netmask_length?:             string;
    id?:                         string;
    ipam_pool_cidr_id?:          string;
}

export interface CIDRAuthorizationContext {
    message:   string;
    signature: string;
}

export interface VpcIPAMPoolCIDRAllocation {
    ipam_pool_id:      string;
    cidr?:             string;
    description?:      string;
    disallowed_cidrs?: string;
    netmask_length?:   string;
    id?:               string;
    resource_id?:      string;
    resource_owner?:   string;
    resource_type?:    string;
}

export interface VpcIPAMResourceDiscovery {
    region_name:                     string;
    description?:                    string;
    tags?:                           string;
    arn?:                            string;
    id?:                             string;
    is_default?:                     string;
    owner_id?:                       string;
    ipam_resource_discovery_region?: string;
    tags_all?:                       string;
}

export interface VpcIPAMResourceDiscoveryAssociation {
    ipam_id:                    string;
    ipam_resource_discovery_id: string;
    tags?:                      string;
    arn?:                       string;
    id?:                        string;
    owner_id?:                  string;
    ipam_arn?:                  string;
    ipam_region?:               string;
    is_default?:                string;
    state?:                     string;
    tags_all?:                  string;
}

export interface VpcIPAMScope {
    ipam_id?:     string;
    description?: string;
    tags?:        string;
    arn?:         string;
    id?:          string;
    ipam_arn?:    string;
    is_default?:  string;
    pool_count?:  string;
    type?:        string;
}

export interface VpcIpv4CIDRBlockAssociation {
    vpc_id:               string;
    cidr_block?:          string;
    ipv4_ipam_pool_id?:   string;
    ipv4_netmask_length?: string;
    id?:                  string;
}

export interface VpcIpv6CIDRBlockAssociation {
    ipv6_ipam_pool_id:    string;
    vpc_id:               string;
    ipv6_cidr_block?:     string;
    ipv6_netmask_length?: string;
    id?:                  string;
}

export interface VpcNetworkPerformanceMetricSubscription {
    destination: string;
    source:      string;
    metric?:     string;
    statistic?:  string;
    period?:     string;
}

export interface VpcPeeringConnectionAccepterClass {
    peer_vpc_id?:                     string;
    vpc_id?:                          string;
    peer_owner_id?:                   string;
    auto_accept?:                     string;
    peer_region?:                     string;
    accepter?:                        string;
    requester?:                       string;
    allow_remote_vpc_dns_resolution?: string;
    id?:                              string;
    accept_status?:                   string;
    tags_all?:                        string;
    vpc_peering_connection_id?:       string;
}

export interface VpcPeeringConnectionOptions {
    vpc_peering_connection_id:        string;
    accepter?:                        string;
    allow_remote_vpc_dns_resolution?: string;
    id?:                              string;
}

export interface VpclatticeAccessLogSubscription {
    destination_arn:     string;
    resource_identifier: string;
    id?:                 string;
    arn?:                string;
    resource_arn?:       string;
}

export interface ResourceVpclatticeListener {
    default_action:          string;
    status_code:             string;
    target_groups:           string;
    target_group_identifier: string;
    name?:                   string;
    port?:                   string;
    protocol?:               string;
    service_arn?:            string;
    tags?:                   string;
    "fixed-response"?:       string;
    weight?:                 string;
    arn?:                    string;
    created_at?:             string;
    listener_id?:            string;
    updated_at?:             string;
}

export interface VpclatticeListenerRule {
    service_identifier:  string;
    listener_identifier: string;
    action:              string;
    match:               string;
    name:                string;
    priority:            string;
    tags?:               string;
    fixed_response?:     string;
    forward?:            string;
    status_code?:        string;
    target_groups?:      string;
    http_match?:         string;
    header_matches?:     string;
    method?:             string;
    path_match?:         string;
    case_sensitive?:     string;
    contains?:           string;
    exact?:              string;
    prefix?:             string;
    arn?:                string;
    rule_id?:            string;
    tags_all?:           string;
}

export interface VpclatticeServiceNetworkAssociation {
    service_identifier?:        string;
    service_network_identifier: string;
    tags?:                      string;
    arn?:                       string;
    created_by?:                string;
    custom_domain_name?:        string;
    id?:                        string;
    status?:                    string;
    tags_all?:                  string;
    vpc_identifier?:            string;
    security_group_ids?:        string;
}

export interface VpclatticeTargetGroup {
    name:                           string;
    type:                           string;
    port:                           string;
    protocol:                       string;
    vpc_identifier:                 string;
    config?:                        string;
    tags?:                          string;
    health_check?:                  string;
    ip_address_type?:               string;
    protocol_version?:              string;
    enabled?:                       string;
    health_check_interval_seconds?: string;
    health_check_timeout_seconds?:  string;
    "healthy_threshold_count "?:    string;
    path?:                          string;
    unhealthy_threshold_count?:     string;
    arn?:                           string;
    id?:                            string;
    status?:                        string;
    tags_all?:                      string;
}

export interface VPNConnection {
    customer_gateway_id:                      string;
    type:                                     string;
    transit_gateway_id?:                      string;
    vpn_gateway_id?:                          string;
    static_routes_only?:                      string;
    enable_acceleration?:                     string;
    tags?:                                    string;
    local_ipv4_network_cidr?:                 string;
    local_ipv6_network_cidr?:                 string;
    outside_ip_address_type?:                 string;
    remote_ipv4_network_cidr?:                string;
    remote_ipv6_network_cidr?:                string;
    transport_transit_gateway_attachment_id?: string;
    tunnel_inside_ip_version?:                string;
    tunnel1_inside_cidr?:                     string;
    tunnel2_inside_cidr?:                     string;
    tunnel1_inside_ipv6_cidr?:                string;
    tunnel2_inside_ipv6_cidr?:                string;
    tunnel1_preshared_key?:                   string;
    tunnel2_preshared_key?:                   string;
    tunnel1_dpd_timeout_action?:              string;
    tunnel2_dpd_timeout_action?:              string;
    tunnel1_dpd_timeout_seconds?:             string;
    tunnel2_dpd_timeout_seconds?:             string;
    tunnel1_enable_tunnel_lifecycle_control?: string;
    tunnel2_enable_tunnel_lifecycle_control?: string;
    tunnel1_ike_versions?:                    string;
    tunnel2_ike_versions?:                    string;
    tunnel1_log_options?:                     string;
    tunnel2_log_options?:                     string;
    tunnel1_phase1_dh_group_numbers?:         string;
    tunnel2_phase1_dh_group_numbers?:         string;
    tunnel1_phase1_encryption_algorithms?:    string;
    tunnel2_phase1_encryption_algorithms?:    string;
    tunnel1_phase1_integrity_algorithms?:     string;
    tunnel2_phase1_integrity_algorithms?:     string;
    tunnel1_phase1_lifetime_seconds?:         string;
    tunnel2_phase1_lifetime_seconds?:         string;
    tunnel1_phase2_dh_group_numbers?:         string;
    tunnel2_phase2_dh_group_numbers?:         string;
    tunnel1_phase2_encryption_algorithms?:    string;
    tunnel2_phase2_encryption_algorithms?:    string;
    tunnel1_phase2_integrity_algorithms?:     string;
    tunnel2_phase2_integrity_algorithms?:     string;
    tunnel1_phase2_lifetime_seconds?:         string;
    tunnel2_phase2_lifetime_seconds?:         string;
    tunnel1_rekey_fuzz_percentage?:           string;
    tunnel2_rekey_fuzz_percentage?:           string;
    tunnel1_rekey_margin_time_seconds?:       string;
    tunnel2_rekey_margin_time_seconds?:       string;
    tunnel1_replay_window_size?:              string;
    tunnel2_replay_window_size?:              string;
    tunnel1_startup_action?:                  string;
    tunnel2_startup_action?:                  string;
    cloudwatch_log_options?:                  string;
    log_enabled?:                             string;
    log_group_arn?:                           string;
    log_output_format?:                       string;
    arn?:                                     string;
    id?:                                      string;
    core_network_arn?:                        string;
    core_network_attachment_arn?:             string;
    customer_gateway_configuration?:          string;
    routes?:                                  Routes;
    tags_all?:                                string;
    transit_gateway_attachment_id?:           string;
    tunnel1_address?:                         string;
    tunnel1_cgw_inside_address?:              string;
    tunnel1_vgw_inside_address?:              string;
    tunnel1_bgp_asn?:                         string;
    tunnel1_bgp_holdtime?:                    string;
    tunnel2_address?:                         string;
    tunnel2_cgw_inside_address?:              string;
    tunnel2_vgw_inside_address?:              string;
    tunnel2_bgp_asn?:                         string;
    tunnel2_bgp_holdtime?:                    string;
    vgw_telemetry?:                           VgwTelemetry;
    state?:                                   string;
}

export interface Routes {
    destination_cidr_block: string;
    source:                 string;
    state:                  string;
}

export interface VgwTelemetry {
    accepted_route_count: string;
    certificate_arn:      string;
    last_status_change:   string;
    outside_ip_address:   string;
    status:               string;
    status_message:       string;
}

export interface VPNConnectionRoute {
    destination_cidr_block: string;
    vpn_connection_id:      string;
}

export interface ResourceVPNGateway {
    vpc_id?:            string;
    availability_zone?: string;
    tags?:              string;
    amazon_side_asn?:   string;
    arn?:               string;
    id?:                string;
    tags_all?:          string;
}

export interface VPNGatewayAttachment {
    vpc_id:         string;
    vpn_gateway_id: string;
}

export interface VPNGatewayRoutePropagation {
    vpn_gateway_id?: string;
    route_table_id?: string;
}

export interface WafByteMatchSet {
    name:               string;
    byte_match_tuples?: string;
    id?:                string;
}

export interface Waf {
    metric_name:     string;
    name?:           string;
    rate_key?:       string;
    rate_limit?:     string;
    predicates?:     string;
    tags?:           string;
    id?:             string;
    arn?:            string;
    tags_all?:       string;
    name_prefix?:    string;
    activated_rule?: string;
    predicate?:      string;
}

export interface WafMatchSet {
    name:                       string;
    regex_match_tuple?:         string;
    field_to_match:             string;
    regex_pattern_set_id?:      string;
    text_transformation:        string;
    type:                       string;
    data?:                      string;
    id?:                        string;
    arn?:                       string;
    sql_injection_match_tuple?: string;
    xss_match_tuple?:           string;
}

export interface WafSQLInjectionMatchSet {
    name:                        string;
    sql_injection_match_tuples?: string;
    id?:                         string;
}

export interface WafWebACL {
    default_action:         string;
    metric_name:            string;
    name:                   string;
    type:                   string;
    log_destination:        string;
    field_to_match:         string;
    priority:               string;
    rule_id:                string;
    rules?:                 string;
    logging_configuration?: string;
    tags?:                  string;
    redacted_fields?:       string;
    data?:                  string;
    id?:                    string;
    arn?:                   string;
    tags_all?:              string;
    rule?:                  string;
    action?:                string;
    override_action?:       string;
}

export interface WafregionalByteMatchSet {
    name:                  string;
    field_to_match:        string;
    positional_constraint: string;
    target_string:         string;
    text_transformation:   string;
    type:                  string;
    byte_match_tuples?:    string;
    data?:                 string;
    id?:                   string;
}

export interface WafregionalWebACLAssociation {
    web_acl_id:   string;
    resource_arn: string;
    id?:          string;
}

export interface ResourceWafv2RuleGroup {
    visibility_config:                       string;
    key:                                     string;
    content:                                 string;
    content_type?:                           string;
    action?:                                 string;
    priority:                                string;
    statement:                               string;
    insert_header:                           string;
    response_code:                           string;
    field_to_match:                          string;
    positional_constraint:                   string;
    search_string:                           string;
    text_transformation:                     string;
    country_codes:                           string;
    scope:                                   string;
    arn:                                     string;
    limit:                                   string;
    regex_string:                            string;
    comparison_operator:                     string;
    size:                                    string;
    fallback_behavior:                       string;
    header_name:                             string;
    position:                                string;
    match_scope:                             string;
    oversize_handling:                       string;
    match_pattern:                           string;
    type:                                    string;
    cloudwatch_metrics_enabled:              string;
    sampled_requests_enabled:                string;
    capacity?:                               string;
    custom_response_body?:                   string;
    description?:                            string;
    name?:                                   string;
    rule?:                                   string;
    tags?:                                   string;
    captcha_config?:                         string;
    rule_label?:                             string;
    allow?:                                  string;
    block?:                                  string;
    captcha?:                                string;
    challenge?:                              string;
    count?:                                  string;
    custom_request_handling?:                string;
    custom_response?:                        string;
    custom_response_body_key?:               string;
    response_header?:                        string;
    value?:                                  string;
    and_statement?:                          string;
    byte_match_statement?:                   string;
    geo_match_statement?:                    string;
    label_match_statement?:                  string;
    ip_set_reference_statement?:             string;
    not_statement?:                          string;
    or_statement?:                           string;
    rate_based_statement?:                   string;
    regex_match_statement?:                  string;
    regex_pattern_set_reference_statement?:  string;
    size_constraint_statement?:              string;
    sqli_match_statement?:                   string;
    xss_match_statement?:                    string;
    forwarded_ip_config?:                    string;
    ip_set_forwarded_ip_config?:             string;
    aggregate_key_type?:                     string;
    custom_key?:                             string;
    scope_down_statement?:                   string;
    all_query_arguments?:                    string;
    body?:                                   string;
    cookies?:                                string;
    headers?:                                string;
    json_body?:                              string;
    method?:                                 string;
    query_string?:                           string;
    single_header?:                          string;
    single_query_argument?:                  string;
    uri_path?:                               string;
    invalid_fallback_behavior?:              string;
    metric_name?:                            string;
    immunity_time_property?:                 string;
    immunity_time?:                          string;
    id?:                                     string;
    tags_all?:                               string;
    cookie?:                                 string;
    forwarded_ip?:                           string;
    http_method?:                            string;
    header?:                                 string;
    ip?:                                     string;
    label_namespace?:                        string;
    query_argument?:                         string;
    default_action?:                         string;
    vendor_name?:                            string;
    action_to_use?:                          string;
    login_path?:                             string;
    default_size_inspection_limit?:          string;
    association_config?:                     string;
    token_domains?:                          string;
    request_body?:                           string;
    none?:                                   string;
    managed_rule_group_statement?:           string;
    rule_group_reference_statement?:         string;
    rule_action_override?:                   string;
    version?:                                string;
    aws_managed_rules_bot_control_rule_set?: string;
    aws_managed_rules_atp_rule_set?:         string;
    inspection_level?:                       string;
    enable_regex_in_path?:                   string;
    request_inspection?:                     string;
    response_inspection?:                    string;
    identifier?:                             string;
    cloudfront?:                             string;
}

export interface Wafv2WebACLAssociation {
    resource_arn: string;
    web_acl_arn:  string;
}

export interface Wafv2WebACLLoggingConfiguration {
    resource_arn:          string;
    default_behavior:      string;
    filter:                string;
    behavior:              string;
    condition:             string;
    action:                string;
    logging_filter?:       string;
    redacted_fields?:      string;
    action_condition?:     string;
    label_name_condition?: string;
    method?:               string;
    query_string?:         string;
    single_header?:        string;
    uri_path?:             string;
    name?:                 string;
    id?:                   string;
}

export interface WorklinkFleet {
    name:                            string;
    vpc_id:                          string;
    subnet_ids:                      string;
    security_group_ids:              string;
    type:                            string;
    saml_metadata:                   string;
    audit_stream_arn?:               string;
    device_ca_certificate?:          string;
    identity_provider?:              string;
    display_name?:                   string;
    network?:                        string;
    optimize_for_end_user_location?: string;
    id?:                             string;
    arn?:                            string;
    company_code?:                   string;
    created_time?:                   string;
    last_updated_time?:              string;
}

export interface WorklinkWebsiteCertificateAuthorityAssociation {
    fleet_arn?:     string;
    certificate?:   string;
    display_name?:  string;
    website_ca_id?: string;
}

export interface WorkspacesConnectionAlias {
    connection_string: string;
    tags?:             string;
    id?:               string;
    owner_account_id?: string;
    state?:            string;
    tags_all?:         string;
}

export interface XrayEncryptionConfig {
    type:    string;
    key_id?: string;
    id?:     string;
}

export interface XrayGroup {
    group_name:              string;
    filter_expression:       string;
    insights_enabled:        string;
    insights_configuration?: string;
    tags?:                   string;
    notifications_enabled?:  string;
    id?:                     string;
    arn?:                    string;
    tags_all?:               string;
}

export interface XraySamplingRule {
    rule_name:      string;
    resource_arn:   string;
    priority:       string;
    fixed_rate:     string;
    reservoir_size: string;
    service_name:   string;
    service_type:   string;
    host:           string;
    http_method:    string;
    url_path:       string;
    version:        string;
    attributes?:    string;
    tags?:          string;
    id?:            string;
    arn?:           string;
    tags_all?:      string;
}

// Converts JSON strings to/from your types
// and asserts the results of JSON.parse at runtime
export class Convert {
    public static toTerraformProviderAws(json: string): TerraformProviderAws {
        return cast(JSON.parse(json), r("TerraformProviderAws"));
    }

    public static terraformProviderAwsToJson(value: TerraformProviderAws): string {
        return JSON.stringify(uncast(value, r("TerraformProviderAws")), null, 2);
    }
}

function invalidValue(typ: any, val: any, key: any, parent: any = ''): never {
    const prettyTyp = prettyTypeName(typ);
    const parentText = parent ? ` on ${parent}` : '';
    const keyText = key ? ` for key "${key}"` : '';
    throw Error(`Invalid value${keyText}${parentText}. Expected ${prettyTyp} but got ${JSON.stringify(val)}`);
}

function prettyTypeName(typ: any): string {
    if (Array.isArray(typ)) {
        if (typ.length === 2 && typ[0] === undefined) {
            return `an optional ${prettyTypeName(typ[1])}`;
        } else {
            return `one of [${typ.map(a => { return prettyTypeName(a); }).join(", ")}]`;
        }
    } else if (typeof typ === "object" && typ.literal !== undefined) {
        return typ.literal;
    } else {
        return typeof typ;
    }
}

function jsonToJSProps(typ: any): any {
    if (typ.jsonToJS === undefined) {
        const map: any = {};
        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });
        typ.jsonToJS = map;
    }
    return typ.jsonToJS;
}

function jsToJSONProps(typ: any): any {
    if (typ.jsToJSON === undefined) {
        const map: any = {};
        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });
        typ.jsToJSON = map;
    }
    return typ.jsToJSON;
}

function transform(val: any, typ: any, getProps: any, key: any = '', parent: any = ''): any {
    function transformPrimitive(typ: string, val: any): any {
        if (typeof typ === typeof val) return val;
        return invalidValue(typ, val, key, parent);
    }

    function transformUnion(typs: any[], val: any): any {
        // val must validate against one typ in typs
        const l = typs.length;
        for (let i = 0; i < l; i++) {
            const typ = typs[i];
            try {
                return transform(val, typ, getProps);
            } catch (_) {}
        }
        return invalidValue(typs, val, key, parent);
    }

    function transformEnum(cases: string[], val: any): any {
        if (cases.indexOf(val) !== -1) return val;
        return invalidValue(cases.map(a => { return l(a); }), val, key, parent);
    }

    function transformArray(typ: any, val: any): any {
        // val must be an array with no invalid elements
        if (!Array.isArray(val)) return invalidValue(l("array"), val, key, parent);
        return val.map(el => transform(el, typ, getProps));
    }

    function transformDate(val: any): any {
        if (val === null) {
            return null;
        }
        const d = new Date(val);
        if (isNaN(d.valueOf())) {
            return invalidValue(l("Date"), val, key, parent);
        }
        return d;
    }

    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {
        if (val === null || typeof val !== "object" || Array.isArray(val)) {
            return invalidValue(l(ref || "object"), val, key, parent);
        }
        const result: any = {};
        Object.getOwnPropertyNames(props).forEach(key => {
            const prop = props[key];
            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;
            result[prop.key] = transform(v, prop.typ, getProps, key, ref);
        });
        Object.getOwnPropertyNames(val).forEach(key => {
            if (!Object.prototype.hasOwnProperty.call(props, key)) {
                result[key] = transform(val[key], additional, getProps, key, ref);
            }
        });
        return result;
    }

    if (typ === "any") return val;
    if (typ === null) {
        if (val === null) return val;
        return invalidValue(typ, val, key, parent);
    }
    if (typ === false) return invalidValue(typ, val, key, parent);
    let ref: any = undefined;
    while (typeof typ === "object" && typ.ref !== undefined) {
        ref = typ.ref;
        typ = typeMap[typ.ref];
    }
    if (Array.isArray(typ)) return transformEnum(typ, val);
    if (typeof typ === "object") {
        return typ.hasOwnProperty("unionMembers") ? transformUnion(typ.unionMembers, val)
            : typ.hasOwnProperty("arrayItems")    ? transformArray(typ.arrayItems, val)
            : typ.hasOwnProperty("props")         ? transformObject(getProps(typ), typ.additional, val)
            : invalidValue(typ, val, key, parent);
    }
    // Numbers can be parsed by Date but shouldn't be.
    if (typ === Date && typeof val !== "number") return transformDate(val);
    return transformPrimitive(typ, val);
}

function cast<T>(val: any, typ: any): T {
    return transform(val, typ, jsonToJSProps);
}

function uncast<T>(val: T, typ: any): any {
    return transform(val, typ, jsToJSONProps);
}

function l(typ: any) {
    return { literal: typ };
}

function a(typ: any) {
    return { arrayItems: typ };
}

function u(...typs: any[]) {
    return { unionMembers: typs };
}

function o(props: any[], additional: any) {
    return { props, additional };
}

function m(additional: any) {
    return { props: [], additional };
}

function r(name: string) {
    return { ref: name };
}

const typeMap: any = {
    "TerraformProviderAws": o([
        { json: "data", js: "data", typ: u(undefined, r("Data")) },
        { json: "resource", js: "resource", typ: u(undefined, r("Resource")) },
    ], false),
    "Data": o([
        { json: "cloudwatch_log_group", js: "cloudwatch_log_group", typ: u(undefined, r("DataCloudwatchLogGroup")) },
        { json: "sesv2_configuration_set", js: "sesv2_configuration_set", typ: u(undefined, r("DataSesv2ConfigurationSet")) },
        { json: "acmpca_certificate_authority", js: "acmpca_certificate_authority", typ: u(undefined, r("DataAcmpcaCertificateAuthority")) },
        { json: "ec2_managed_prefix_list", js: "ec2_managed_prefix_list", typ: u(undefined, r("DataEc2ManagedPrefixList")) },
        { json: "rds_certificate", js: "rds_certificate", typ: u(undefined, r("RDSCertificate")) },
        { json: "api_gateway_export", js: "api_gateway_export", typ: u(undefined, r("APIGateway")) },
        { json: "eks_clusters", js: "eks_clusters", typ: u(undefined, r("EksClusters")) },
        { json: "networkmanager_global_network", js: "networkmanager_global_network", typ: u(undefined, r("NetworkmanagerGlobalNetwork")) },
        { json: "cloudfront_function", js: "cloudfront_function", typ: u(undefined, r("CloudfrontFunction")) },
        { json: "eips", js: "eips", typ: u(undefined, r("Eips")) },
        { json: "organizations_policies_for_target", js: "organizations_policies_for_target", typ: u(undefined, r("OrganizationsPoliciesForTarget")) },
        { json: "mskconnect_custom_plugin", js: "mskconnect_custom_plugin", typ: u(undefined, r("Mskconnect")) },
        { json: "cloudwatch_log_groups", js: "cloudwatch_log_groups", typ: u(undefined, r("CloudwatchLogGroups")) },
        { json: "ssm_patch_baseline", js: "ssm_patch_baseline", typ: u(undefined, r("DataSsmPatchBaseline")) },
        { json: "kms_alias", js: "kms_alias", typ: u(undefined, r("KmsAlias")) },
        { json: "wafregional_web_acl", js: "wafregional_web_acl", typ: u(undefined, r("WafIpset")) },
        { json: "glue_data_catalog_encryption_settings", js: "glue_data_catalog_encryption_settings", typ: u(undefined, r("GlueDataCatalogEncryptionSettings")) },
        { json: "ec2_transit_gateway_route_table_propagations", js: "ec2_transit_gateway_route_table_propagations", typ: u(undefined, r("EbsVolumes")) },
        { json: "ssm_maintenance_windows", js: "ssm_maintenance_windows", typ: u(undefined, r("Ec2TransitGatewayAttachments")) },
        { json: "vpc_ipam_preview_next_cidr", js: "vpc_ipam_preview_next_cidr", typ: u(undefined, r("VpcIPAMPreviewNextCIDR")) },
        { json: "connect_hours_of_operation", js: "connect_hours_of_operation", typ: u(undefined, r("ConnectHoursOfOperation")) },
        { json: "appconfig_configuration_profile", js: "appconfig_configuration_profile", typ: u(undefined, r("DataAppconfigConfigurationProfile")) },
        { json: "route53_traffic_policy_document", js: "route53_traffic_policy_document", typ: u(undefined, r("Route53TrafficPolicyDocument")) },
        { json: "ecr_image", js: "ecr_image", typ: u(undefined, r("EcrImage")) },
        { json: "location_map", js: "location_map", typ: u(undefined, r("LocationMap")) },
        { json: "s3_account_public_access_block", js: "s3_account_public_access_block", typ: u(undefined, r("S3AccountPublicAccessBlock")) },
        { json: "connect_lambda_function_association", js: "connect_lambda_function_association", typ: u(undefined, r("ConnectLambdaFunctionAssociation")) },
        { json: "connect_security_profile", js: "connect_security_profile", typ: u(undefined, r("ConnectSecurityProfile")) },
        { json: "ec2_client_vpn_endpoint", js: "ec2_client_vpn_endpoint", typ: u(undefined, r("DataEc2ClientVPNEndpoint")) },
        { json: "networkmanager_devices", js: "networkmanager_devices", typ: u(undefined, r("Networkmanager")) },
        { json: "lakeformation_permissions", js: "lakeformation_permissions", typ: u(undefined, r("DataLakeformationPermissions")) },
        { json: "cloudformation_stack", js: "cloudformation_stack", typ: u(undefined, r("DataCloudformationStack")) },
        { json: "memorydb_subnet_group", js: "memorydb_subnet_group", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "ebs_volume", js: "ebs_volume", typ: u(undefined, r("DataEbsVolume")) },
        { json: "location_geofence_collection", js: "location_geofence_collection", typ: u(undefined, r("LocationGeofenceCollection")) },
        { json: "networkmanager_links", js: "networkmanager_links", typ: u(undefined, r("NetworkmanagerLinks")) },
        { json: "launch_configuration", js: "launch_configuration", typ: u(undefined, r("DataLaunchConfiguration")) },
        { json: "codecommit_repository", js: "codecommit_repository", typ: u(undefined, r("DataCodecommitRepository")) },
        { json: "fsx_ontap_file_system", js: "fsx_ontap_file_system", typ: u(undefined, r("CanonicalUserID")) },
        { json: "sesv2_dedicated_ip_pool", js: "sesv2_dedicated_ip_pool", typ: u(undefined, r("Sesv2DedicatedIPPool")) },
        { json: "iam_policy", js: "iam_policy", typ: u(undefined, r("DataIamPolicy")) },
        { json: "apigatewayv2_api", js: "apigatewayv2_api", typ: u(undefined, r("DataApigatewayv2API")) },
        { json: "emr_release_labels", js: "emr_release_labels", typ: u(undefined, r("EmrReleaseLabels")) },
        { json: "appmesh_virtual_gateway", js: "appmesh_virtual_gateway", typ: u(undefined, r("Appmesh")) },
        { json: "caller_identity", js: "caller_identity", typ: u(undefined, r("CallerIdentity")) },
        { json: "route_table", js: "route_table", typ: u(undefined, r("DataRouteTable")) },
        { json: "autoscaling_group", js: "autoscaling_group", typ: u(undefined, r("AutoscalingGroup")) },
        { json: "ecs_container_definition", js: "ecs_container_definition", typ: u(undefined, r("EcsContainerDefinition")) },
        { json: "neptune_orderable_db_instance", js: "neptune_orderable_db_instance", typ: u(undefined, r("NeptuneOrderableDBInstance")) },
        { json: "api_gateway_authorizer", js: "api_gateway_authorizer", typ: u(undefined, r("APIGatewayAuthorizer")) },
        { json: "outposts_asset", js: "outposts_asset", typ: u(undefined, r("OutpostsAsset")) },
        { json: "ec2_local_gateway", js: "ec2_local_gateway", typ: u(undefined, r("Ec2LocalGateway")) },
        { json: "s3_bucket_object", js: "s3_bucket_object", typ: u(undefined, r("DataS3BucketObject")) },
        { json: "appmesh_route", js: "appmesh_route", typ: u(undefined, r("Appmesh")) },
        { json: "network_acls", js: "network_acls", typ: u(undefined, r("Ec2LocalGatewayVirtualInterfaceGroup")) },
        { json: "vpc_dhcp_options", js: "vpc_dhcp_options", typ: u(undefined, r("VpcDHCPOptions")) },
        { json: "organizations_organizational_unit_descendant_accounts", js: "organizations_organizational_unit_descendant_accounts", typ: u(undefined, r("OrganizationsOrganizationalUnitChildAccountsClass")) },
        { json: "key_pair", js: "key_pair", typ: u(undefined, r("DataKeyPair")) },
        { json: "networkmanager_global_networks", js: "networkmanager_global_networks", typ: u(undefined, r("NetworkmanagerGlobalNetworks")) },
        { json: "acmpca_certificate", js: "acmpca_certificate", typ: u(undefined, r("AcmpcaCertificateCertificate")) },
        { json: "redshiftserverless_credentials", js: "redshiftserverless_credentials", typ: u(undefined, r("RedshiftserverlessCredentials")) },
        { json: "vpc_peering_connections", js: "vpc_peering_connections", typ: u(undefined, r("EbsVolumes")) },
        { json: "connect_instance", js: "connect_instance", typ: u(undefined, r("DataConnectInstance")) },
        { json: "route_tables", js: "route_tables", typ: u(undefined, r("Ec2LocalGatewayVirtualInterfaceGroup")) },
        { json: "api_gateway_domain_name", js: "api_gateway_domain_name", typ: u(undefined, r("DataAPIGatewayDomainName")) },
        { json: "waf_web_acl", js: "waf_web_acl", typ: u(undefined, r("WafIpset")) },
        { json: "customer_gateway", js: "customer_gateway", typ: u(undefined, r("CustomerGateway")) },
        { json: "batch_scheduling_policy", js: "batch_scheduling_policy", typ: u(undefined, r("BatchSchedulingPolicy")) },
        { json: "route53_resolver_rules", js: "route53_resolver_rules", typ: u(undefined, r("Route53ResolverRules")) },
        { json: "ebs_snapshot", js: "ebs_snapshot", typ: u(undefined, r("DataEbsSnapshot")) },
        { json: "memorydb_snapshot", js: "memorydb_snapshot", typ: u(undefined, r("MemorydbSnapshot")) },
        { json: "organizations_policy", js: "organizations_policy", typ: u(undefined, r("OrganizationsPolicy")) },
        { json: "api_gateway_sdk", js: "api_gateway_sdk", typ: u(undefined, r("APIGateway")) },
        { json: "docdb_engine_version", js: "docdb_engine_version", typ: u(undefined, r("EngineVersion")) },
        { json: "kms_ciphertext", js: "kms_ciphertext", typ: u(undefined, r("KmsCiphertext")) },
        { json: "organizations_delegated_administrators", js: "organizations_delegated_administrators", typ: u(undefined, r("OrganizationsDelegatedAdministrators")) },
        { json: "appmesh_gateway_route", js: "appmesh_gateway_route", typ: u(undefined, r("Appmesh")) },
        { json: "location_tracker", js: "location_tracker", typ: u(undefined, r("LocationTracker")) },
        { json: "datapipeline_pipeline_definition", js: "datapipeline_pipeline_definition", typ: u(undefined, r("DatapipelinePipelineDefinition")) },
        { json: "efs_access_points", js: "efs_access_points", typ: u(undefined, r("EFSAccessPoints")) },
        { json: "security_groups", js: "security_groups", typ: u(undefined, r("SecurityGroups")) },
        { json: "api_gateway_rest_api", js: "api_gateway_rest_api", typ: u(undefined, r("DataAPIGatewayRESTAPI")) },
        { json: "ssm_parameters_by_path", js: "ssm_parameters_by_path", typ: u(undefined, r("SsmParametersByPath")) },
        { json: "elasticache_replication_group", js: "elasticache_replication_group", typ: u(undefined, r("DataElasticacheReplicationGroup")) },
        { json: "kms_custom_key_store", js: "kms_custom_key_store", typ: u(undefined, r("DataKmsCustomKeyStore")) },
        { json: "rds_cluster", js: "rds_cluster", typ: u(undefined, r("DataRDSCluster")) },
        { json: "memorydb_acl", js: "memorydb_acl", typ: u(undefined, r("MemorydbACL")) },
        { json: "fsx_openzfs_snapshot", js: "fsx_openzfs_snapshot", typ: u(undefined, r("FsxOpenzfsSnapshot")) },
        { json: "iam_saml_provider", js: "iam_saml_provider", typ: u(undefined, r("IamSamlProvider")) },
        { json: "ec2_public_ipv4_pools", js: "ec2_public_ipv4_pools", typ: u(undefined, r("EbsVolumes")) },
        { json: "ssoadmin_instances", js: "ssoadmin_instances", typ: u(undefined, r("SsoadminInstances")) },
        { json: "networkmanager_site", js: "networkmanager_site", typ: u(undefined, r("NetworkmanagerSite")) },
        { json: "quicksight_user", js: "quicksight_user", typ: u(undefined, r("DataQuicksightUser")) },
        { json: "subnets", js: "subnets", typ: u(undefined, r("Ec2InstanceTypes")) },
        { json: "kms_secrets", js: "kms_secrets", typ: u(undefined, r("KmsSecrets")) },
        { json: "ce_tags", js: "ce_tags", typ: u(undefined, r("CeTags")) },
        { json: "appmesh_virtual_node", js: "appmesh_virtual_node", typ: u(undefined, r("Appmesh")) },
        { json: "networkfirewall_firewall", js: "networkfirewall_firewall", typ: u(undefined, r("DataNetworkfirewallFirewall")) },
        { json: "ssmcontacts_contact_channel", js: "ssmcontacts_contact_channel", typ: u(undefined, r("KmsSecretClass")) },
        { json: "neptune_engine_version", js: "neptune_engine_version", typ: u(undefined, r("EngineVersion")) },
        { json: "organizations_organizational_units", js: "organizations_organizational_units", typ: u(undefined, r("OrganizationsOrganizationalUnitChildAccountsClass")) },
        { json: "glue_script", js: "glue_script", typ: u(undefined, r("GlueScript")) },
        { json: "lambda_alias", js: "lambda_alias", typ: u(undefined, r("LambdaAlias")) },
        { json: "imagebuilder_component", js: "imagebuilder_component", typ: u(undefined, r("ImagebuilderComponent")) },
        { json: "wafv2_web_acl", js: "wafv2_web_acl", typ: u(undefined, r("DataWafv2RuleGroup")) },
        { json: "ec2_managed_prefix_lists", js: "ec2_managed_prefix_lists", typ: u(undefined, r("EbsVolumes")) },
        { json: "rds_reserved_instance_offering", js: "rds_reserved_instance_offering", typ: u(undefined, r("RDSReservedInstanceOffering")) },
        { json: "cloudcontrolapi_resource", js: "cloudcontrolapi_resource", typ: u(undefined, r("DataCloudcontrolapiResource")) },
        { json: "vpc_ipam_pool_cidrs", js: "vpc_ipam_pool_cidrs", typ: u(undefined, r("VpcIPAMPoolCidrs")) },
        { json: "wafregional_rule", js: "wafregional_rule", typ: u(undefined, r("WafIpset")) },
        { json: "ec2_local_gateway_route_tables", js: "ec2_local_gateway_route_tables", typ: u(undefined, r("EbsVolumes")) },
        { json: "ecrpublic_authorization_token", js: "ecrpublic_authorization_token", typ: u(undefined, r("EcrpublicAuthorizationToken")) },
        { json: "quicksight_group", js: "quicksight_group", typ: u(undefined, r("QuicksightGroup")) },
        { json: "ec2_instance_types", js: "ec2_instance_types", typ: u(undefined, r("Ec2InstanceTypes")) },
        { json: "batch_job_queue", js: "batch_job_queue", typ: u(undefined, r("BatchJobQueue")) },
        { json: "oam_sinks", js: "oam_sinks", typ: u(undefined, r("OamInks")) },
        { json: "backup_vault", js: "backup_vault", typ: u(undefined, r("DataBackupVault")) },
        { json: "servicecatalog_portfolio_constraints", js: "servicecatalog_portfolio_constraints", typ: u(undefined, r("ServicecatalogPortfolioConstraints")) },
        { json: "kms_key", js: "kms_key", typ: u(undefined, r("DataKmsKey")) },
        { json: "sfn_alias", js: "sfn_alias", typ: u(undefined, r("DataSfnAlias")) },
        { json: "ec2_instance_type", js: "ec2_instance_type", typ: u(undefined, r("Ec2InstanceType")) },
        { json: "route53_resolver_firewall_config", js: "route53_resolver_firewall_config", typ: u(undefined, r("Route53ResolverConfig")) },
        { json: "cloudfront_realtime_log_config", js: "cloudfront_realtime_log_config", typ: u(undefined, r("CloudfrontRealtimeLogConfig")) },
        { json: "dms_replication_subnet_group", js: "dms_replication_subnet_group", typ: u(undefined, r("DataDmsReplicationSubnetGroup")) },
        { json: "arn", js: "arn", typ: u(undefined, r("Arn")) },
        { json: "docdb_orderable_db_instance", js: "docdb_orderable_db_instance", typ: u(undefined, r("DocdbOrderableDBInstance")) },
        { json: "dms_replication_instance", js: "dms_replication_instance", typ: u(undefined, r("DmsReplicationInstance")) },
        { json: "ec2_local_gateway_virtual_interface", js: "ec2_local_gateway_virtual_interface", typ: u(undefined, r("Ec2LocalGatewayVirtualInterface")) },
        { json: "lakeformation_resource", js: "lakeformation_resource", typ: u(undefined, r("DataLakeformationResource")) },
        { json: "lambda_code_signing_config", js: "lambda_code_signing_config", typ: u(undefined, r("LambdaCodeSigningConfig")) },
        { json: "vpc", js: "vpc", typ: u(undefined, r("DataVpc")) },
        { json: "ec2_public_ipv4_pool", js: "ec2_public_ipv4_pool", typ: u(undefined, r("Ec2PublicIpv4Pool")) },
        { json: "mq_broker", js: "mq_broker", typ: u(undefined, r("DataMqBroker")) },
        { json: "iam_server_certificate", js: "iam_server_certificate", typ: u(undefined, r("DataIamServerCertificate")) },
        { json: "lb_hosted_zone_id", js: "lb_hosted_zone_id", typ: u(undefined, r("LBHostedZoneID")) },
        { json: "resourcegroupstaggingapi_resources", js: "resourcegroupstaggingapi_resources", typ: u(undefined, r("ResourcegroupstaggingapiResources")) },
        { json: "globalaccelerator_accelerator", js: "globalaccelerator_accelerator", typ: u(undefined, r("GlobalacceleratorAccelerator")) },
        { json: "licensemanager_grants", js: "licensemanager_grants", typ: u(undefined, r("Ec2TransitGatewayAttachments")) },
        { json: "subnet", js: "subnet", typ: u(undefined, r("Subnet")) },
        { json: "region", js: "region", typ: u(undefined, r("Region")) },
        { json: "vpn_gateway", js: "vpn_gateway", typ: u(undefined, r("DataVPNGateway")) },
        { json: "workspaces_directory", js: "workspaces_directory", typ: u(undefined, r("WorkspacesDirectory")) },
        { json: "ebs_default_kms_key", js: "ebs_default_kms_key", typ: u(undefined, r("DataEbsDefaultKmsKey")) },
        { json: "elasticache_subnet_group", js: "elasticache_subnet_group", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "service", js: "service", typ: u(undefined, r("DataService")) },
        { json: "msk_cluster", js: "msk_cluster", typ: u(undefined, r("DataMskCluster")) },
        { json: "grafana_workspace", js: "grafana_workspace", typ: u(undefined, r("DataGrafanaWorkspace")) },
        { json: "cognito_user_pool_clients", js: "cognito_user_pool_clients", typ: u(undefined, r("CognitoUserPoolClients")) },
        { json: "outposts_outpost_instance_types", js: "outposts_outpost_instance_types", typ: u(undefined, r("OutpostsOutpostInstanceTypes")) },
        { json: "sqs_queues", js: "sqs_queues", typ: u(undefined, r("SqsQueues")) },
        { json: "lambda_layer_version", js: "lambda_layer_version", typ: u(undefined, r("LambdaLayerVersion")) },
        { json: "efs_access_point", js: "efs_access_point", typ: u(undefined, r("DataEFSAccessPoint")) },
        { json: "imagebuilder_distribution_configurations", js: "imagebuilder_distribution_configurations", typ: u(undefined, r("ImagebuilderDistributionConfigurations")) },
        { json: "nat_gateways", js: "nat_gateways", typ: u(undefined, r("Ec2LocalGatewayVirtualInterfaceGroup")) },
        { json: "ec2_transit_gateway_attachment", js: "ec2_transit_gateway_attachment", typ: u(undefined, r("Ec2TransitGatewayAttachment")) },
        { json: "ecs_task_execution", js: "ecs_task_execution", typ: u(undefined, r("EcsTaskExecution")) },
        { json: "organizations_organization", js: "organizations_organization", typ: u(undefined, r("OrganizationsOrganization")) },
        { json: "api_gateway_authorizers", js: "api_gateway_authorizers", typ: u(undefined, r("APIGatewayAuthorizers")) },
        { json: "ram_resource_share", js: "ram_resource_share", typ: u(undefined, r("DataRAMResourceShare")) },
        { json: "service_discovery_http_namespace", js: "service_discovery_http_namespace", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "db_instances", js: "db_instances", typ: u(undefined, r("DBInstances")) },
        { json: "opensearchserverless_security_config", js: "opensearchserverless_security_config", typ: u(undefined, r("DataOpensearchserverlessSecurityConfig")) },
        { json: "connect_user_hierarchy_group", js: "connect_user_hierarchy_group", typ: u(undefined, r("ConnectUserHierarchyGroup")) },
        { json: "elasticache_cluster", js: "elasticache_cluster", typ: u(undefined, r("DataElasticacheCluster")) },
        { json: "backup_framework", js: "backup_framework", typ: u(undefined, r("BackupFramework")) },
        { json: "budgets_budget", js: "budgets_budget", typ: u(undefined, r("BudgetsBudget")) },
        { json: "redshiftserverless_namespace", js: "redshiftserverless_namespace", typ: u(undefined, r("DataRedshiftserverlessNamespace")) },
        { json: "redshift_service_account", js: "redshift_service_account", typ: u(undefined, r("ServiceAccount")) },
        { json: "cloudformation_type", js: "cloudformation_type", typ: u(undefined, r("CloudformationType")) },
        { json: "s3_object", js: "s3_object", typ: u(undefined, r("DataS3BucketObject")) },
        { json: "redshift_orderable_cluster", js: "redshift_orderable_cluster", typ: u(undefined, r("RedshiftOrderableCluster")) },
        { json: "sesv2_email_identity", js: "sesv2_email_identity", typ: u(undefined, r("DataSesv2EmailIdentity")) },
        { json: "connect_prompt", js: "connect_prompt", typ: u(undefined, r("ConnectPrompt")) },
        { json: "route53_resolver_firewall_rule_group_association", js: "route53_resolver_firewall_rule_group_association", typ: u(undefined, r("DataRoute53ResolverFirewallRuleGroupAssociation")) },
        { json: "ec2_transit_gateway_vpc_attachment", js: "ec2_transit_gateway_vpc_attachment", typ: u(undefined, r("Ec2TransitGatewayVpcAttachment")) },
        { json: "eip", js: "eip", typ: u(undefined, r("DataEip")) },
        { json: "ssmincidents_response_plan", js: "ssmincidents_response_plan", typ: u(undefined, r("SsmincidentsResponsePlan")) },
        { json: "fsx_ontap_storage_virtual_machine", js: "fsx_ontap_storage_virtual_machine", typ: u(undefined, r("DataFsxOntapStorageVirtualMachine")) },
        { json: "organizations_organizational_unit_child_accounts", js: "organizations_organizational_unit_child_accounts", typ: u(undefined, r("OrganizationsOrganizationalUnitChildAccountsClass")) },
        { json: "lex_intent", js: "lex_intent", typ: u(undefined, r("Lex")) },
        { json: "dms_endpoint", js: "dms_endpoint", typ: u(undefined, r("DataDmsEndpoint")) },
        { json: "kendra_index", js: "kendra_index", typ: u(undefined, r("KendraIndex")) },
        { json: "vpc_ipam_pool", js: "vpc_ipam_pool", typ: u(undefined, r("VpcIPAMPool")) },
        { json: "vpclattice_auth_policy", js: "vpclattice_auth_policy", typ: u(undefined, r("VpclatticeAuthPolicy")) },
        { json: "cloudformation_export", js: "cloudformation_export", typ: u(undefined, r("CloudformationExport")) },
        { json: "lbs", js: "lbs", typ: u(undefined, r("Lbs")) },
        { json: "location_tracker_associations", js: "location_tracker_associations", typ: u(undefined, r("LocationTrackerAssociations")) },
        { json: "imagebuilder_distribution_configuration", js: "imagebuilder_distribution_configuration", typ: u(undefined, r("DataImagebuilderDistributionConfiguration")) },
        { json: "codestarconnections_connection", js: "codestarconnections_connection", typ: u(undefined, r("CodestarconnectionsConnection")) },
        { json: "security_group", js: "security_group", typ: u(undefined, r("Ec2LocalGatewayVirtualInterfaceGroup")) },
        { json: "cloudhsm_v2_cluster", js: "cloudhsm_v2_cluster", typ: u(undefined, r("DataCloudhsmV2Cluster")) },
        { json: "emrcontainers_virtual_cluster", js: "emrcontainers_virtual_cluster", typ: u(undefined, r("DataEmrcontainersVirtualCluster")) },
        { json: "wafv2_ip_set", js: "wafv2_ip_set", typ: u(undefined, r("Wafv2Set")) },
        { json: "kinesis_stream_consumer", js: "kinesis_stream_consumer", typ: u(undefined, r("KinesisStreamConsumer")) },
        { json: "connect_bot_association", js: "connect_bot_association", typ: u(undefined, r("DataConnectBotAssociation")) },
        { json: "waf_rule", js: "waf_rule", typ: u(undefined, r("WafIpset")) },
        { json: "ec2_transit_gateway_vpn_attachment", js: "ec2_transit_gateway_vpn_attachment", typ: u(undefined, r("Ec2TransitGatewayDxGatewayAttachmentClass")) },
        { json: "appconfig_environment", js: "appconfig_environment", typ: u(undefined, r("DataAppconfigEnvironment")) },
        { json: "ebs_volumes", js: "ebs_volumes", typ: u(undefined, r("EbsVolumes")) },
        { json: "codeartifact_repository_endpoint", js: "codeartifact_repository_endpoint", typ: u(undefined, r("CodeartifactRepositoryEndpoint")) },
        { json: "signer_signing_job", js: "signer_signing_job", typ: u(undefined, r("DataSignerSigningJob")) },
        { json: "autoscaling_groups", js: "autoscaling_groups", typ: u(undefined, r("AutoscalingGroups")) },
        { json: "outposts_assets", js: "outposts_assets", typ: u(undefined, r("OutpostsAssets")) },
        { json: "cloudtrail_service_account", js: "cloudtrail_service_account", typ: u(undefined, r("ServiceAccount")) },
        { json: "waf_rate_based_rule", js: "waf_rate_based_rule", typ: u(undefined, r("WafIpset")) },
        { json: "lambda_functions", js: "lambda_functions", typ: u(undefined, r("LambdaFunctions")) },
        { json: "secretsmanager_secret", js: "secretsmanager_secret", typ: u(undefined, r("DataSecretsmanagerSecret")) },
        { json: "iam_account_alias", js: "iam_account_alias", typ: u(undefined, r("DataIamAccountAlias")) },
        { json: "connect_instance_storage_config", js: "connect_instance_storage_config", typ: u(undefined, r("ConnectInstanceStorageConfig")) },
        { json: "route53_resolver_endpoint", js: "route53_resolver_endpoint", typ: u(undefined, r("DataRoute53ResolverEndpoint")) },
        { json: "sagemaker_prebuilt_ecr_image", js: "sagemaker_prebuilt_ecr_image", typ: u(undefined, r("SagemakerPrebuiltEcrImage")) },
        { json: "db_subnet_group", js: "db_subnet_group", typ: u(undefined, r("DataDBSubnetGroup")) },
        { json: "servicecatalog_portfolio", js: "servicecatalog_portfolio", typ: u(undefined, r("ServicecatalogPortfolio")) },
        { json: "appmesh_virtual_router", js: "appmesh_virtual_router", typ: u(undefined, r("Appmesh")) },
        { json: "directory_service_directory", js: "directory_service_directory", typ: u(undefined, r("DataDirectoryServiceDirectory")) },
        { json: "iam_user", js: "iam_user", typ: u(undefined, r("DataIamUser")) },
        { json: "cloudfront_origin_access_identities", js: "cloudfront_origin_access_identities", typ: u(undefined, r("CloudfrontOriginAccessIdentities")) },
        { json: "eks_node_groups", js: "eks_node_groups", typ: u(undefined, r("EksNodeGroups")) },
        { json: "networkmanager_core_network_policy_document", js: "networkmanager_core_network_policy_document", typ: u(undefined, r("NetworkmanagerCoreNetworkPolicyDocument")) },
        { json: "secretsmanager_secret_rotation", js: "secretsmanager_secret_rotation", typ: u(undefined, r("DataSecretsmanagerSecretRotation")) },
        { json: "kms_secret", js: "kms_secret", typ: u(undefined, r("KmsSecretClass")) },
        { json: "signer_signing_profile", js: "signer_signing_profile", typ: u(undefined, r("SignerSigningProfile")) },
        { json: "vpclattice_listener", js: "vpclattice_listener", typ: u(undefined, r("DataVpclatticeListener")) },
        { json: "ec2_transit_gateway_multicast_domain", js: "ec2_transit_gateway_multicast_domain", typ: u(undefined, r("DataEc2TransitGatewayMulticastDomain")) },
        { json: "opensearchserverless_access_policy", js: "opensearchserverless_access_policy", typ: u(undefined, r("OpensearchserverlessPolicy")) },
        { json: "servicecatalog_launch_paths", js: "servicecatalog_launch_paths", typ: u(undefined, r("ServicecatalogLaunchPaths")) },
        { json: "dynamodb_table", js: "dynamodb_table", typ: u(undefined, r("ElbClass")) },
        { json: "s3_bucket_objects", js: "s3_bucket_objects", typ: u(undefined, r("S3Objects")) },
        { json: "storagegateway_local_disk", js: "storagegateway_local_disk", typ: u(undefined, r("StoragegatewayLocalDiskClass")) },
        { json: "connect_routing_profile", js: "connect_routing_profile", typ: u(undefined, r("ConnectRoutingProfile")) },
        { json: "rds_engine_version", js: "rds_engine_version", typ: u(undefined, r("RDSEngineVersion")) },
        { json: "cloudfront_cache_policy", js: "cloudfront_cache_policy", typ: u(undefined, r("CloudfrontCachePolicy")) },
        { json: "dx_connection", js: "dx_connection", typ: u(undefined, r("DataDxConnection")) },
        { json: "ec2_transit_gateway_route_table_routes", js: "ec2_transit_gateway_route_table_routes", typ: u(undefined, r("Ec2TransitGatewayAttachments")) },
        { json: "cloudwatch_event_source", js: "cloudwatch_event_source", typ: u(undefined, r("CloudwatchEventSource")) },
        { json: "networkmanager_device", js: "networkmanager_device", typ: u(undefined, r("NetworkmanagerDevice")) },
        { json: "appintegrations_event_integration", js: "appintegrations_event_integration", typ: u(undefined, r("AppintegrationsEventIntegration")) },
        { json: "location_place_index", js: "location_place_index", typ: u(undefined, r("DataLocationPlaceIndex")) },
        { json: "connect_contact_flow_module", js: "connect_contact_flow_module", typ: u(undefined, r("ConnectContactFlowModule")) },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, r("AvailabilityZone")) },
        { json: "dx_location", js: "dx_location", typ: u(undefined, r("DxLocation")) },
        { json: "nat_gateway", js: "nat_gateway", typ: u(undefined, r("DataNatGateway")) },
        { json: "servicequotas_service", js: "servicequotas_service", typ: u(undefined, r("ServicequotasService")) },
        { json: "location_route_calculator", js: "location_route_calculator", typ: u(undefined, r("LocationRouteCalculator")) },
        { json: "globalaccelerator_custom_routing_accelerator", js: "globalaccelerator_custom_routing_accelerator", typ: u(undefined, r("GlobalacceleratorAccelerator")) },
        { json: "ec2_coip_pool", js: "ec2_coip_pool", typ: u(undefined, r("Ec2CoipPool")) },
        { json: "ecs_service", js: "ecs_service", typ: u(undefined, r("DataEcsService")) },
        { json: "s3control_multi_region_access_point", js: "s3control_multi_region_access_point", typ: u(undefined, r("DataS3ControlMultiRegionAccessPoint")) },
        { json: "imagebuilder_image_recipes", js: "imagebuilder_image_recipes", typ: u(undefined, r("Imagebuilder")) },
        { json: "eks_addon", js: "eks_addon", typ: u(undefined, r("DataEksAddon")) },
        { json: "oam_links", js: "oam_links", typ: u(undefined, r("OamInks")) },
        { json: "ec2_transit_gateway_peering_attachment", js: "ec2_transit_gateway_peering_attachment", typ: u(undefined, r("DataEc2TransitGatewayPeeringAttachment")) },
        { json: "acm_certificate", js: "acm_certificate", typ: u(undefined, r("DataACMCertificate")) },
        { json: "opensearchserverless_vpc_endpoint", js: "opensearchserverless_vpc_endpoint", typ: u(undefined, r("OpensearchserverlessVpcEndpoint")) },
        { json: "servicequotas_service_quota", js: "servicequotas_service_quota", typ: u(undefined, r("ServicequotasServiceQuota")) },
        { json: "ec2_coip_pools", js: "ec2_coip_pools", typ: u(undefined, r("EbsVolumes")) },
        { json: "eks_addon_version", js: "eks_addon_version", typ: u(undefined, r("EksAddonVersion")) },
        { json: "elb", js: "elb", typ: u(undefined, r("ElbClass")) },
        { json: "eks_cluster_auth", js: "eks_cluster_auth", typ: u(undefined, r("EksClusterAuth")) },
        { json: "imagebuilder_container_recipes", js: "imagebuilder_container_recipes", typ: u(undefined, r("Imagebuilder")) },
        { json: "lb", js: "lb", typ: u(undefined, r("CloudwatchEventBus")) },
        { json: "iam_session_context", js: "iam_session_context", typ: u(undefined, r("IamSessionContext")) },
        { json: "partition", js: "partition", typ: u(undefined, r("Partition")) },
        { json: "ses_active_receipt_rule_set", js: "ses_active_receipt_rule_set", typ: u(undefined, r("SesActiveReceiptRuleSet")) },
        { json: "workspaces_bundle", js: "workspaces_bundle", typ: u(undefined, r("WorkspacesBundle")) },
        { json: "workspaces_image", js: "workspaces_image", typ: u(undefined, r("WorkspacesImage")) },
        { json: "imagebuilder_image_pipeline", js: "imagebuilder_image_pipeline", typ: u(undefined, r("DataImagebuilderImagePipeline")) },
        { json: "imagebuilder_image_recipe", js: "imagebuilder_image_recipe", typ: u(undefined, r("DataImagebuilderImageRecipe")) },
        { json: "backup_selection", js: "backup_selection", typ: u(undefined, r("DataBackupSelection")) },
        { json: "imagebuilder_components", js: "imagebuilder_components", typ: u(undefined, r("Imagebuilder")) },
        { json: "mskconnect_worker_configuration", js: "mskconnect_worker_configuration", typ: u(undefined, r("Mskconnect")) },
        { json: "ssm_parameter", js: "ssm_parameter", typ: u(undefined, r("DataSsmParameter")) },
        { json: "s3_bucket", js: "s3_bucket", typ: u(undefined, r("DataS3Bucket")) },
        { json: "sqs_queue", js: "sqs_queue", typ: u(undefined, r("CloudwatchEventBusClass")) },
        { json: "fsx_windows_file_system", js: "fsx_windows_file_system", typ: u(undefined, r("DataFsxWindowsFileSystem")) },
        { json: "wafv2_regex_pattern_set", js: "wafv2_regex_pattern_set", typ: u(undefined, r("Wafv2RegexPatternSet")) },
        { json: "secretsmanager_random_password", js: "secretsmanager_random_password", typ: u(undefined, r("SecretsmanagerRandomPassword")) },
        { json: "cloudwatch_event_bus", js: "cloudwatch_event_bus", typ: u(undefined, r("CloudwatchEventBus")) },
        { json: "api_gateway_resource", js: "api_gateway_resource", typ: u(undefined, r("APIGatewayResource")) },
        { json: "instances", js: "instances", typ: u(undefined, r("Instances")) },
        { json: "connect_quick_connect", js: "connect_quick_connect", typ: u(undefined, r("ConnectQuickConnect")) },
        { json: "rds_orderable_db_instance", js: "rds_orderable_db_instance", typ: u(undefined, r("RDSOrderableDBInstance")) },
        { json: "waf_ipset", js: "waf_ipset", typ: u(undefined, r("WafIpset")) },
        { json: "memorydb_user", js: "memorydb_user", typ: u(undefined, r("DataMemorydbUser")) },
        { json: "vpclattice_service_network", js: "vpclattice_service_network", typ: u(undefined, r("VpclatticeServiceNetwork")) },
        { json: "api_gateway_api_key", js: "api_gateway_api_key", typ: u(undefined, r("APIGatewayAPIKey")) },
        { json: "db_cluster_snapshot", js: "db_cluster_snapshot", typ: u(undefined, r("DBClusterSnapshot")) },
        { json: "dx_locations", js: "dx_locations", typ: u(undefined, r("DxLocations")) },
        { json: "db_proxy", js: "db_proxy", typ: u(undefined, r("DataDBProxy")) },
        { json: "network_interfaces", js: "network_interfaces", typ: u(undefined, r("EbsVolumes")) },
        { json: "cloudfront_origin_access_identity", js: "cloudfront_origin_access_identity", typ: u(undefined, r("CloudfrontOriginAccessIdentity")) },
        { json: "licensemanager_received_licenses", js: "licensemanager_received_licenses", typ: u(undefined, r("Ec2TransitGatewayAttachments")) },
        { json: "kinesis_stream", js: "kinesis_stream", typ: u(undefined, r("DataKinesisStream")) },
        { json: "ip_ranges", js: "ip_ranges", typ: u(undefined, r("IPRanges")) },
        { json: "imagebuilder_image_pipelines", js: "imagebuilder_image_pipelines", typ: u(undefined, r("Imagebuilder")) },
        { json: "default_tags", js: "default_tags", typ: u(undefined, r("DefaultTags")) },
        { json: "elasticsearch_domain", js: "elasticsearch_domain", typ: u(undefined, r("SearchDomain")) },
        { json: "qldb_ledger", js: "qldb_ledger", typ: u(undefined, r("ElbClass")) },
        { json: "ivs_stream_key", js: "ivs_stream_key", typ: u(undefined, r("IvsStreamKey")) },
        { json: "msk_vpc_connection", js: "msk_vpc_connection", typ: u(undefined, r("MskVpcConnection")) },
        { json: "waf_subscribed_rule_group", js: "waf_subscribed_rule_group", typ: u(undefined, r("WafSubscribedRuleGroup")) },
        { json: "elasticache_user", js: "elasticache_user", typ: u(undefined, r("DataElasticacheUser")) },
        { json: "lb_target_group", js: "lb_target_group", typ: u(undefined, r("CloudwatchEventBus")) },
        { json: "networkfirewall_resource_policy", js: "networkfirewall_resource_policy", typ: u(undefined, r("ResourcePolicy")) },
        { json: "networkmanager_sites", js: "networkmanager_sites", typ: u(undefined, r("Networkmanager")) },
        { json: "wafregional_ipset", js: "wafregional_ipset", typ: u(undefined, r("WafIpset")) },
        { json: "organizations_policies", js: "organizations_policies", typ: u(undefined, r("OrganizationsPolicies")) },
        { json: "db_snapshot", js: "db_snapshot", typ: u(undefined, r("DataDBSnapshot")) },
        { json: "imagebuilder_container_recipe", js: "imagebuilder_container_recipe", typ: u(undefined, r("DataImagebuilderContainerRecipe")) },
        { json: "connect_user", js: "connect_user", typ: u(undefined, r("ConnectUser")) },
        { json: "iam_user_ssh_key", js: "iam_user_ssh_key", typ: u(undefined, r("IamUserSSHKey")) },
        { json: "secretsmanager_secret_version", js: "secretsmanager_secret_version", typ: u(undefined, r("SecretsmanagerSecretVersion")) },
        { json: "msk_kafka_version", js: "msk_kafka_version", typ: u(undefined, r("MskKafkaVersion")) },
        { json: "elastic_beanstalk_hosted_zone", js: "elastic_beanstalk_hosted_zone", typ: u(undefined, r("CloudfrontLogDeliveryCanonicalUserID")) },
        { json: "workspaces_workspace", js: "workspaces_workspace", typ: u(undefined, r("WorkspacesWorkspace")) },
        { json: "db_event_categories", js: "db_event_categories", typ: u(undefined, r("DBEventCategories")) },
        { json: "route53_resolver_firewall_rule_group", js: "route53_resolver_firewall_rule_group", typ: u(undefined, r("Route53ResolverFirewallRuleGroup")) },
        { json: "ssoadmin_permission_set", js: "ssoadmin_permission_set", typ: u(undefined, r("SsoadminPermissionSet")) },
        { json: "apigatewayv2_export", js: "apigatewayv2_export", typ: u(undefined, r("Apigatewayv2Export")) },
        { json: "apigatewayv2_apis", js: "apigatewayv2_apis", typ: u(undefined, r("Apigatewayv2Apis")) },
        { json: "pricing_product", js: "pricing_product", typ: u(undefined, r("PricingProduct")) },
        { json: "cloudfront_log_delivery_canonical_user_id", js: "cloudfront_log_delivery_canonical_user_id", typ: u(undefined, r("CloudfrontLogDeliveryCanonicalUserID")) },
        { json: "elastic_beanstalk_solution_stack", js: "elastic_beanstalk_solution_stack", typ: u(undefined, r("ElasticBeanstalkSolutionStack")) },
        { json: "guardduty_finding_ids", js: "guardduty_finding_ids", typ: u(undefined, r("GuarddutyFindingIDS")) },
        { json: "iam_users", js: "iam_users", typ: u(undefined, r("Iam")) },
        { json: "quicksight_data_set", js: "quicksight_data_set", typ: u(undefined, r("DataQuicksightDataSet")) },
        { json: "ses_domain_identity", js: "ses_domain_identity", typ: u(undefined, r("SesDomainIdentity")) },
        { json: "vpc_endpoint", js: "vpc_endpoint", typ: u(undefined, r("DataVpcEndpoint")) },
        { json: "sfn_state_machine_versions", js: "sfn_state_machine_versions", typ: u(undefined, r("SfnStateMachineVersions")) },
        { json: "cloudfront_distribution", js: "cloudfront_distribution", typ: u(undefined, r("DataCloudfrontDistribution")) },
        { json: "outposts_outpost", js: "outposts_outpost", typ: u(undefined, r("OutpostsOutpost")) },
        { json: "vpclattice_service", js: "vpclattice_service", typ: u(undefined, r("VpclatticeService")) },
        { json: "ec2_transit_gateway", js: "ec2_transit_gateway", typ: u(undefined, r("Ec2TransitGateway")) },
        { json: "service_discovery_dns_namespace", js: "service_discovery_dns_namespace", typ: u(undefined, r("ServiceDiscoveryDNSNamespace")) },
        { json: "oam_sink", js: "oam_sink", typ: u(undefined, r("OamSink")) },
        { json: "redshiftserverless_workgroup", js: "redshiftserverless_workgroup", typ: u(undefined, r("DataRedshiftserverlessWorkgroup")) },
        { json: "codecatalyst_dev_environment", js: "codecatalyst_dev_environment", typ: u(undefined, r("DataCodecatalystDevEnvironment")) },
        { json: "ec2_transit_gateway_route_table_associations", js: "ec2_transit_gateway_route_table_associations", typ: u(undefined, r("EbsVolumes")) },
        { json: "organizations_delegated_services", js: "organizations_delegated_services", typ: u(undefined, r("OrganizationsDelegatedServices")) },
        { json: "cloudwatch_log_data_protection_policy_document", js: "cloudwatch_log_data_protection_policy_document", typ: u(undefined, r("CloudwatchLogDataProtectionPolicyDocument")) },
        { json: "lambda_function_url", js: "lambda_function_url", typ: u(undefined, r("DataLambdaFunctionURL")) },
        { json: "quicksight_theme", js: "quicksight_theme", typ: u(undefined, r("QuicksightTheme")) },
        { json: "organizations_resource_tags", js: "organizations_resource_tags", typ: u(undefined, r("OrganizationsResourceTags")) },
        { json: "transfer_server", js: "transfer_server", typ: u(undefined, r("DataTransferServer")) },
        { json: "ecs_task_definition", js: "ecs_task_definition", typ: u(undefined, r("DataEcsTaskDefinition")) },
        { json: "mq_broker_instance_type_offerings", js: "mq_broker_instance_type_offerings", typ: u(undefined, r("MqBrokerInstanceTypeOfferings")) },
        { json: "vpcs", js: "vpcs", typ: u(undefined, r("EbsVolumes")) },
        { json: "backup_report_plan", js: "backup_report_plan", typ: u(undefined, r("BackupReportPlan")) },
        { json: "ec2_transit_gateway_attachments", js: "ec2_transit_gateway_attachments", typ: u(undefined, r("Ec2TransitGatewayAttachments")) },
        { json: "glue_catalog_table", js: "glue_catalog_table", typ: u(undefined, r("GlueCatalogTable")) },
        { json: "cloudwatch_event_connection", js: "cloudwatch_event_connection", typ: u(undefined, r("DataCloudwatchEventConnection")) },
        { json: "ec2_local_gateways", js: "ec2_local_gateways", typ: u(undefined, r("EbsVolumes")) },
        { json: "ec2_local_gateway_virtual_interface_groups", js: "ec2_local_gateway_virtual_interface_groups", typ: u(undefined, r("Ec2LocalGatewayVirtualInterfaceGroup")) },
        { json: "ebs_encryption_by_default", js: "ebs_encryption_by_default", typ: u(undefined, r("ServicecatalogOrganizationsAccessClass")) },
        { json: "ses_email_identity", js: "ses_email_identity", typ: u(undefined, r("SesEmailIdentity")) },
        { json: "iot_endpoint", js: "iot_endpoint", typ: u(undefined, r("IotEndpoint")) },
        { json: "route53_resolver_rule", js: "route53_resolver_rule", typ: u(undefined, r("Route53Resolver")) },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, r("AvailabilityZones")) },
        { json: "ce_cost_category", js: "ce_cost_category", typ: u(undefined, r("CeCostCategory")) },
        { json: "ec2_instance_type_offerings", js: "ec2_instance_type_offerings", typ: u(undefined, r("Ec2InstanceTypeOfferings")) },
        { json: "wafregional_subscribed_rule_group", js: "wafregional_subscribed_rule_group", typ: u(undefined, r("WafSubscribedRuleGroup")) },
        { json: "lambda_function", js: "lambda_function", typ: u(undefined, r("DataLambdaFunction")) },
        { json: "opensearchserverless_collection", js: "opensearchserverless_collection", typ: u(undefined, r("OpensearchserverlessCollection")) },
        { json: "vpclattice_resource_policy", js: "vpclattice_resource_policy", typ: u(undefined, r("VpclatticeResourcePolicyClass")) },
        { json: "cognito_user_pool_client", js: "cognito_user_pool_client", typ: u(undefined, r("CognitoUserPoolClient")) },
        { json: "s3_objects", js: "s3_objects", typ: u(undefined, r("S3Objects")) },
        { json: "dynamodb_table_item", js: "dynamodb_table_item", typ: u(undefined, r("DataDynamodbTableItem")) },
        { json: "efs_file_system", js: "efs_file_system", typ: u(undefined, r("DataEFSFileSystem")) },
        { json: "datapipeline_pipeline", js: "datapipeline_pipeline", typ: u(undefined, r("DatapipelinePipeline")) },
        { json: "cloudfront_origin_request_policy", js: "cloudfront_origin_request_policy", typ: u(undefined, r("CloudfrontOriginRequestPolicy")) },
        { json: "eks_cluster", js: "eks_cluster", typ: u(undefined, r("DataEksCluster")) },
        { json: "cloudfront_response_headers_policy", js: "cloudfront_response_headers_policy", typ: u(undefined, r("CloudfrontResponseHeadersPolicy")) },
        { json: "elb_hosted_zone_id", js: "elb_hosted_zone_id", typ: u(undefined, r("CloudfrontLogDeliveryCanonicalUserID")) },
        { json: "ec2_transit_gateway_route_tables", js: "ec2_transit_gateway_route_tables", typ: u(undefined, r("EbsVolumes")) },
        { json: "codecommit_approval_rule_template", js: "codecommit_approval_rule_template", typ: u(undefined, r("CodecommitApprovalRuleTemplate")) },
        { json: "ec2_transit_gateway_route_table", js: "ec2_transit_gateway_route_table", typ: u(undefined, r("DataEc2TransitGatewayRouteTable")) },
        { json: "outposts_outposts", js: "outposts_outposts", typ: u(undefined, r("OutpostsOutposts")) },
        { json: "oam_link", js: "oam_link", typ: u(undefined, r("OamLink")) },
        { json: "prometheus_workspace", js: "prometheus_workspace", typ: u(undefined, r("DataPrometheusWorkspace")) },
        { json: "servicecatalog_constraint", js: "servicecatalog_constraint", typ: u(undefined, r("ServicecatalogConstraint")) },
        { json: "eks_node_group", js: "eks_node_group", typ: u(undefined, r("DataEksNodeGroup")) },
        { json: "ec2_transit_gateway_connect", js: "ec2_transit_gateway_connect", typ: u(undefined, r("DataEc2TransitGatewayConnect")) },
        { json: "instance", js: "instance", typ: u(undefined, r("DataInstance")) },
        { json: "vpc_security_group_rules", js: "vpc_security_group_rules", typ: u(undefined, r("Ec2InstanceTypes")) },
        { json: "canonical_user_id", js: "canonical_user_id", typ: u(undefined, r("CanonicalUserID")) },
        { json: "lakeformation_data_lake_settings", js: "lakeformation_data_lake_settings", typ: u(undefined, r("LakeformationDataLakeSettings")) },
        { json: "iam_policy_document", js: "iam_policy_document", typ: u(undefined, r("IamPolicyDocument")) },
        { json: "rds_clusters", js: "rds_clusters", typ: u(undefined, r("RDSClusters")) },
        { json: "serverlessapplicationrepository_application", js: "serverlessapplicationrepository_application", typ: u(undefined, r("ServerlessapplicationrepositoryApplication")) },
        { json: "ecs_cluster", js: "ecs_cluster", typ: u(undefined, r("DataEcsCluster")) },
        { json: "connect_vocabulary", js: "connect_vocabulary", typ: u(undefined, r("ConnectVocabulary")) },
        { json: "dms_certificate", js: "dms_certificate", typ: u(undefined, r("DataDmsCertificate")) },
        { json: "connect_contact_flow", js: "connect_contact_flow", typ: u(undefined, r("DataConnectContactFlow")) },
        { json: "ec2_transit_gateway_connect_peer", js: "ec2_transit_gateway_connect_peer", typ: u(undefined, r("DataEc2TransitGatewayConnectPeer")) },
        { json: "ec2_transit_gateway_vpc_attachments", js: "ec2_transit_gateway_vpc_attachments", typ: u(undefined, r("Ec2TransitGatewayAttachments")) },
        { json: "identitystore_user", js: "identitystore_user", typ: u(undefined, r("DataIdentitystoreUser")) },
        { json: "networkmanager_connections", js: "networkmanager_connections", typ: u(undefined, r("Networkmanager")) },
        { json: "s3_bucket_policy", js: "s3_bucket_policy", typ: u(undefined, r("S3BucketPolicy")) },
        { json: "dx_router_configuration", js: "dx_router_configuration", typ: u(undefined, r("DxRouterConfiguration")) },
        { json: "kendra_query_suggestions_block_list", js: "kendra_query_suggestions_block_list", typ: u(undefined, r("KendraFAQClass")) },
        { json: "appconfig_environments", js: "appconfig_environments", typ: u(undefined, r("AppconfigEnvironments")) },
        { json: "ec2_local_gateway_route_table", js: "ec2_local_gateway_route_table", typ: u(undefined, r("Ec2LocalGatewayRouteTable")) },
        { json: "efs_mount_target", js: "efs_mount_target", typ: u(undefined, r("EFSMountTarget")) },
        { json: "lex_slot_type", js: "lex_slot_type", typ: u(undefined, r("Lex")) },
        { json: "service_discovery_service", js: "service_discovery_service", typ: u(undefined, r("ServiceDiscoveryService")) },
        { json: "cognito_identity_pool", js: "cognito_identity_pool", typ: u(undefined, r("DataCognitoIdentityPool")) },
        { json: "api_gateway_vpc_link", js: "api_gateway_vpc_link", typ: u(undefined, r("DataAPIGatewayVpcLink")) },
        { json: "ecr_repository", js: "ecr_repository", typ: u(undefined, r("DataEcrRepository")) },
        { json: "route53_delegation_set", js: "route53_delegation_set", typ: u(undefined, r("Route53DelegationSet")) },
        { json: "appmesh_mesh", js: "appmesh_mesh", typ: u(undefined, r("Appmesh")) },
        { json: "ec2_network_insights_analysis", js: "ec2_network_insights_analysis", typ: u(undefined, r("DataEc2NetworkInsightsAnalysis")) },
        { json: "secretsmanager_secrets", js: "secretsmanager_secrets", typ: u(undefined, r("ImagebuilderDistributionConfigurations")) },
        { json: "memorydb_parameter_group", js: "memorydb_parameter_group", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "opensearch_domain", js: "opensearch_domain", typ: u(undefined, r("SearchDomain")) },
        { json: "wafv2_rule_group", js: "wafv2_rule_group", typ: u(undefined, r("DataWafv2RuleGroup")) },
        { json: "redshift_cluster_credentials", js: "redshift_cluster_credentials", typ: u(undefined, r("RedshiftClusterCredentials")) },
        { json: "db_instance", js: "db_instance", typ: u(undefined, r("DataDBInstance")) },
        { json: "ec2_host", js: "ec2_host", typ: u(undefined, r("DataEc2Host")) },
        { json: "networkmanager_link", js: "networkmanager_link", typ: u(undefined, r("NetworkmanagerLink")) },
        { json: "ec2_spot_price", js: "ec2_spot_price", typ: u(undefined, r("Ec2SpotPrice")) },
        { json: "fsx_ontap_storage_virtual_machines", js: "fsx_ontap_storage_virtual_machines", typ: u(undefined, r("FsxOntapStorageVirtualMachines")) },
        { json: "outposts_outpost_instance_type", js: "outposts_outpost_instance_type", typ: u(undefined, r("OutpostsOutpostInstanceType")) },
        { json: "dx_gateway", js: "dx_gateway", typ: u(undefined, r("DxGateway")) },
        { json: "codeartifact_authorization_token", js: "codeartifact_authorization_token", typ: u(undefined, r("CodeartifactAuthorizationToken")) },
        { json: "prefix_list", js: "prefix_list", typ: u(undefined, r("PrefixList")) },
        { json: "ami_ids", js: "ami_ids", typ: u(undefined, r("AmiIDS")) },
        { json: "appmesh_virtual_service", js: "appmesh_virtual_service", typ: u(undefined, r("Appmesh")) },
        { json: "network_interface", js: "network_interface", typ: u(undefined, r("DataNetworkInterface")) },
        { json: "sns_topic", js: "sns_topic", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "wafregional_rate_based_rule", js: "wafregional_rate_based_rule", typ: u(undefined, r("WafIpset")) },
        { json: "ec2_instance_type_offering", js: "ec2_instance_type_offering", typ: u(undefined, r("Ec2InstanceTypeOffering")) },
        { json: "mskconnect_connector", js: "mskconnect_connector", typ: u(undefined, r("ChimesdkvoiceVoiceProfileDomainClass")) },
        { json: "lex_bot_alias", js: "lex_bot_alias", typ: u(undefined, r("Lex")) },
        { json: "servicecatalog_product", js: "servicecatalog_product", typ: u(undefined, r("ServicecatalogProduct")) },
        { json: "connect_queue", js: "connect_queue", typ: u(undefined, r("ConnectQueue")) },
        { json: "ec2_serial_console_access", js: "ec2_serial_console_access", typ: u(undefined, r("ServicecatalogOrganizationsAccessClass")) },
        { json: "iam_access_keys", js: "iam_access_keys", typ: u(undefined, r("IamAccessKeys")) },
        { json: "vpc_security_group_rule", js: "vpc_security_group_rule", typ: u(undefined, r("VpcSecurityGroupRule")) },
        { json: "inspector_rules_packages", js: "inspector_rules_packages", typ: u(undefined, r("InspectorRulesPackages")) },
        { json: "elastic_beanstalk_application", js: "elastic_beanstalk_application", typ: u(undefined, r("ElasticBeanstalkApplication")) },
        { json: "kinesis_firehose_delivery_stream", js: "kinesis_firehose_delivery_stream", typ: u(undefined, r("CloudwatchEventBus")) },
        { json: "kendra_experience", js: "kendra_experience", typ: u(undefined, r("DataKendraExperience")) },
        { json: "ssm_document", js: "ssm_document", typ: u(undefined, r("DataSsmDocument")) },
        { json: "kms_public_key", js: "kms_public_key", typ: u(undefined, r("KmsPublicKey")) },
        { json: "cognito_user_pool_signing_certificate", js: "cognito_user_pool_signing_certificate", typ: u(undefined, r("CognitoUserPoolSigningCertificate")) },
        { json: "iam_roles", js: "iam_roles", typ: u(undefined, r("Iam")) },
        { json: "ec2_transit_gateway_dx_gateway_attachment", js: "ec2_transit_gateway_dx_gateway_attachment", typ: u(undefined, r("Ec2TransitGatewayDxGatewayAttachmentClass")) },
        { json: "regions", js: "regions", typ: u(undefined, r("DataRegions")) },
        { json: "backup_plan", js: "backup_plan", typ: u(undefined, r("DataBackupPlan")) },
        { json: "msk_configuration", js: "msk_configuration", typ: u(undefined, r("MskConfiguration")) },
        { json: "redshift_cluster", js: "redshift_cluster", typ: u(undefined, r("DataRedshiftCluster")) },
        { json: "ssmcontacts_contact", js: "ssmcontacts_contact", typ: u(undefined, r("SsmcontactsContact")) },
        { json: "iam_instance_profile", js: "iam_instance_profile", typ: u(undefined, r("DataIamInstanceProfile")) },
        { json: "memorydb_cluster", js: "memorydb_cluster", typ: u(undefined, r("MemorydbCluster")) },
        { json: "billing_service_account", js: "billing_service_account", typ: u(undefined, r("BillingServiceAccount")) },
        { json: "ssmcontacts_plan", js: "ssmcontacts_plan", typ: u(undefined, r("SsmcontactsPlan")) },
        { json: "cur_report_definition", js: "cur_report_definition", typ: u(undefined, r("CurReportDefinition")) },
        { json: "outposts_sites", js: "outposts_sites", typ: u(undefined, r("OutpostsSites")) },
        { json: "kendra_thesaurus", js: "kendra_thesaurus", typ: u(undefined, r("KendraFAQClass")) },
        { json: "prometheus_workspaces", js: "prometheus_workspaces", typ: u(undefined, r("PrometheusWorkspaces")) },
        { json: "iam_group", js: "iam_group", typ: u(undefined, r("DataIamGroup")) },
        { json: "msk_broker_nodes", js: "msk_broker_nodes", typ: u(undefined, r("MskBrokerNodes")) },
        { json: "sfn_state_machine", js: "sfn_state_machine", typ: u(undefined, r("DataSfnStateMachine")) },
        { json: "kendra_faq", js: "kendra_faq", typ: u(undefined, r("KendraFAQClass")) },
        { json: "auditmanager_framework", js: "auditmanager_framework", typ: u(undefined, r("AuditmanagerFrameworkClass")) },
        { json: "batch_compute_environment", js: "batch_compute_environment", typ: u(undefined, r("DataBatchComputeEnvironment")) },
        { json: "ami", js: "ami", typ: u(undefined, r("DataAmi")) },
        { json: "redshift_subnet_group", js: "redshift_subnet_group", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "ssmincidents_replication_set", js: "ssmincidents_replication_set", typ: u(undefined, r("DataSsmincidentsReplicationSet")) },
        { json: "appconfig_configuration_profiles", js: "appconfig_configuration_profiles", typ: u(undefined, r("AppconfigConfigurationProfiles")) },
        { json: "iam_principal_policy_simulation", js: "iam_principal_policy_simulation", typ: u(undefined, r("IamPrincipalPolicySimulation")) },
        { json: "lambda_invocation", js: "lambda_invocation", typ: u(undefined, r("DataLambdaInvocation")) },
        { json: "lb_listener", js: "lb_listener", typ: u(undefined, r("DataLBListener")) },
        { json: "vpc_peering_connection", js: "vpc_peering_connection", typ: u(undefined, r("DataVpcPeeringConnection")) },
        { json: "servicecatalog_provisioning_artifacts", js: "servicecatalog_provisioning_artifacts", typ: u(undefined, r("ServicecatalogProvisioningArtifacts")) },
        { json: "networkmanager_connection", js: "networkmanager_connection", typ: u(undefined, r("NetworkmanagerConnection")) },
        { json: "sesv2_email_identity_mail_from_attributes", js: "sesv2_email_identity_mail_from_attributes", typ: u(undefined, r("Sesv2EmailIdentityMailFromAttributes")) },
        { json: "dms_replication_task", js: "dms_replication_task", typ: u(undefined, r("DmsReplicationTask")) },
        { json: "ecr_authorization_token", js: "ecr_authorization_token", typ: u(undefined, r("EcrAuthorizationToken")) },
        { json: "connect_user_hierarchy_structure", js: "connect_user_hierarchy_structure", typ: u(undefined, r("ConnectUserHierarchyStructure")) },
        { json: "ecr_pull_through_cache_rule", js: "ecr_pull_through_cache_rule", typ: u(undefined, r("KmsSecretClass")) },
        { json: "iam_role", js: "iam_role", typ: u(undefined, r("DataIamRole")) },
        { json: "internet_gateway", js: "internet_gateway", typ: u(undefined, r("InternetGateway")) },
        { json: "lex_bot", js: "lex_bot", typ: u(undefined, r("DataLexBot")) },
        { json: "location_tracker_association", js: "location_tracker_association", typ: u(undefined, r("LocationTrackerAssociation")) },
        { json: "glue_connection", js: "glue_connection", typ: u(undefined, r("DataGlueConnection")) },
        { json: "imagebuilder_infrastructure_configuration", js: "imagebuilder_infrastructure_configuration", typ: u(undefined, r("DataImagebuilderInfrastructureConfiguration")) },
        { json: "iam_instance_profiles", js: "iam_instance_profiles", typ: u(undefined, r("IamInstanceProfiles")) },
        { json: "route53_resolver_query_log_config", js: "route53_resolver_query_log_config", typ: u(undefined, r("Route53ResolverQueryLogConfig")) },
        { json: "cognito_user_pools", js: "cognito_user_pools", typ: u(undefined, r("CognitoUserPools")) },
        { json: "vpc_ipam_pools", js: "vpc_ipam_pools", typ: u(undefined, r("VpcIPAMPools")) },
        { json: "imagebuilder_image", js: "imagebuilder_image", typ: u(undefined, r("ImagebuilderImage")) },
        { json: "ec2_local_gateway_virtual_interface_group", js: "ec2_local_gateway_virtual_interface_group", typ: u(undefined, r("Ec2LocalGatewayVirtualInterfaceGroup")) },
        { json: "iam_openid_connect_provider", js: "iam_openid_connect_provider", typ: u(undefined, r("IamOpenidConnectProvider")) },
        { json: "identitystore_group", js: "identitystore_group", typ: u(undefined, r("DataIdentitystoreGroup")) },
        { json: "imagebuilder_infrastructure_configurations", js: "imagebuilder_infrastructure_configurations", typ: u(undefined, r("ImagebuilderDistributionConfigurations")) },
        { json: "ssm_instances", js: "ssm_instances", typ: u(undefined, r("Ec2TransitGatewayAttachments")) },
        { json: "auditmanager_control", js: "auditmanager_control", typ: u(undefined, r("AuditmanagerFrameworkClass")) },
        { json: "guardduty_detector", js: "guardduty_detector", typ: u(undefined, r("DataGuarddutyDetector")) },
        { json: "licensemanager_received_license", js: "licensemanager_received_license", typ: u(undefined, r("LicensemanagerReceivedLicense")) },
        { json: "networkfirewall_firewall_policy", js: "networkfirewall_firewall_policy", typ: u(undefined, r("DataNetworkfirewallFirewallPolicy")) },
        { json: "route53_zone", js: "route53_zone", typ: u(undefined, r("DataRoute53Zone")) },
        { json: "route53_resolver_firewall_rules", js: "route53_resolver_firewall_rules", typ: u(undefined, r("Route53ResolverFirewallRules")) },
        { json: "organizations_organizational_unit", js: "organizations_organizational_unit", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "route", js: "route", typ: u(undefined, r("RoutesClass")) },
        { json: "route53_resolver_firewall_domain_list", js: "route53_resolver_firewall_domain_list", typ: u(undefined, r("Route53ResolverFirewallDomainList")) },
        { json: "ebs_snapshot_ids", js: "ebs_snapshot_ids", typ: u(undefined, r("EbsSnapshotIDS")) },
        { json: "launch_template", js: "launch_template", typ: u(undefined, r("Ec2InstanceTypes")) },
        { json: "vpc_endpoint_service", js: "vpc_endpoint_service", typ: u(undefined, r("DataVpcEndpointService")) },
        { json: "opensearchserverless_security_policy", js: "opensearchserverless_security_policy", typ: u(undefined, r("OpensearchserverlessSecurityPolicy")) },
        { json: "controltower_controls", js: "controltower_controls", typ: u(undefined, r("ControltowerControls")) },
        { json: "ec2_network_insights_path", js: "ec2_network_insights_path", typ: u(undefined, r("DataEc2NetworkInsightsPath")) },
        { json: "elb_service_account", js: "elb_service_account", typ: u(undefined, r("ServiceAccount")) },
        { json: "sfn_activity", js: "sfn_activity", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "outposts_site", js: "outposts_site", typ: u(undefined, r("OutpostsSite")) },
    ], false),
    "DataACMCertificate": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "key_types", js: "key_types", typ: u(undefined, "") },
        { json: "statuses", js: "statuses", typ: u(undefined, "") },
        { json: "types", js: "types", typ: u(undefined, "") },
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
        { json: "certificate_chain", js: "certificate_chain", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "AcmpcaCertificateCertificate": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate_authority_arn", js: "certificate_authority_arn", typ: "" },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
        { json: "certificate_chain", js: "certificate_chain", typ: u(undefined, "") },
    ], false),
    "DataAcmpcaCertificateAuthority": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
        { json: "certificate_chain", js: "certificate_chain", typ: u(undefined, "") },
        { json: "certificate_signing_request", js: "certificate_signing_request", typ: u(undefined, "") },
        { json: "usage_mode", js: "usage_mode", typ: u(undefined, "") },
        { json: "not_after", js: "not_after", typ: u(undefined, "") },
        { json: "not_before", js: "not_before", typ: u(undefined, "") },
        { json: "serial", js: "serial", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "DataAmi": o([
        { json: "owners", js: "owners", typ: u(undefined, "") },
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "include_deprecated", js: "include_deprecated", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "architecture", js: "architecture", typ: u(undefined, "") },
        { json: "boot_mode", js: "boot_mode", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "deprecation_time", js: "deprecation_time", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "hypervisor", js: "hypervisor", typ: u(undefined, "") },
        { json: "image_id", js: "image_id", typ: u(undefined, "") },
        { json: "image_location", js: "image_location", typ: u(undefined, "") },
        { json: "image_owner_alias", js: "image_owner_alias", typ: u(undefined, "") },
        { json: "image_type", js: "image_type", typ: u(undefined, "") },
        { json: "imds_support", js: "imds_support", typ: u(undefined, "") },
        { json: "kernel_id", js: "kernel_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "public", js: "public", typ: u(undefined, "") },
        { json: "ramdisk_id", js: "ramdisk_id", typ: u(undefined, "") },
        { json: "root_device_name", js: "root_device_name", typ: u(undefined, "") },
        { json: "root_device_type", js: "root_device_type", typ: u(undefined, "") },
        { json: "root_snapshot_id", js: "root_snapshot_id", typ: u(undefined, "") },
        { json: "sriov_net_support", js: "sriov_net_support", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tpm_support", js: "tpm_support", typ: u(undefined, "") },
        { json: "virtualization_type", js: "virtualization_type", typ: u(undefined, "") },
        { json: "usage_operation", js: "usage_operation", typ: u(undefined, "") },
        { json: "platform_details", js: "platform_details", typ: u(undefined, "") },
        { json: "ena_support", js: "ena_support", typ: u(undefined, "") },
    ], false),
    "AmiIDS": o([
        { json: "owners", js: "owners", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "name_regex", js: "name_regex", typ: u(undefined, "") },
        { json: "sort_ascending", js: "sort_ascending", typ: u(undefined, "") },
        { json: "include_deprecated", js: "include_deprecated", typ: u(undefined, "") },
    ], false),
    "APIGatewayAPIKey": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "customer_id", js: "customer_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "APIGatewayAuthorizer": o([
        { json: "authorizer_id", js: "authorizer_id", typ: u(undefined, "") },
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "authorizer_credentials", js: "authorizer_credentials", typ: u(undefined, "") },
        { json: "authorizer_result_ttl_in_seconds", js: "authorizer_result_ttl_in_seconds", typ: u(undefined, "") },
        { json: "authorizer_uri", js: "authorizer_uri", typ: u(undefined, "") },
        { json: "identity_source", js: "identity_source", typ: u(undefined, "") },
        { json: "identity_validation_expression", js: "identity_validation_expression", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "provider_arns", js: "provider_arns", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "APIGatewayAuthorizers": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "DataAPIGatewayDomainName": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "certificate_name", js: "certificate_name", typ: u(undefined, "") },
        { json: "certificate_upload_date", js: "certificate_upload_date", typ: u(undefined, "") },
        { json: "cloudfront_domain_name", js: "cloudfront_domain_name", typ: u(undefined, "") },
        { json: "cloudfront_zone_id", js: "cloudfront_zone_id", typ: u(undefined, "") },
        { json: "regional_certificate_arn", js: "regional_certificate_arn", typ: u(undefined, "") },
        { json: "regional_certificate_name", js: "regional_certificate_name", typ: u(undefined, "") },
        { json: "regional_domain_name", js: "regional_domain_name", typ: u(undefined, "") },
        { json: "regional_zone_id", js: "regional_zone_id", typ: u(undefined, "") },
        { json: "security_policy", js: "security_policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "APIGateway": o([
        { json: "export_type", js: "export_type", typ: u(undefined, "") },
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "stage_name", js: "stage_name", typ: "" },
        { json: "accepts", js: "accepts", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "body", js: "body", typ: u(undefined, "") },
        { json: "content_type", js: "content_type", typ: u(undefined, "") },
        { json: "content_disposition", js: "content_disposition", typ: u(undefined, "") },
        { json: "sdk_type", js: "sdk_type", typ: u(undefined, "") },
    ], false),
    "APIGatewayResource": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "parent_id", js: "parent_id", typ: u(undefined, "") },
        { json: "path_part", js: "path_part", typ: u(undefined, "") },
    ], false),
    "DataAPIGatewayRESTAPI": o([
        { json: "name", js: "name", typ: "" },
        { json: "api_key_source", js: "api_key_source", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "binary_media_types", js: "binary_media_types", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "endpoint_configuration", js: "endpoint_configuration", typ: u(undefined, "") },
        { json: "execution_arn", js: "execution_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "minimum_compression_size", js: "minimum_compression_size", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "root_resource_id", js: "root_resource_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataAPIGatewayVpcLink": o([
        { json: "name", js: "name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
        { json: "target_arns", js: "target_arns", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataApigatewayv2API": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "api_endpoint", js: "api_endpoint", typ: u(undefined, "") },
        { json: "api_key_selection_expression", js: "api_key_selection_expression", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cors_configuration", js: "cors_configuration", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "disable_execute_api_endpoint", js: "disable_execute_api_endpoint", typ: u(undefined, "") },
        { json: "execution_arn", js: "execution_arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "protocol_type", js: "protocol_type", typ: u(undefined, "") },
        { json: "route_selection_expression", js: "route_selection_expression", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "allow_credentials", js: "allow_credentials", typ: u(undefined, "") },
        { json: "allow_headers", js: "allow_headers", typ: u(undefined, "") },
        { json: "allow_methods", js: "allow_methods", typ: u(undefined, "") },
        { json: "allow_origins", js: "allow_origins", typ: u(undefined, "") },
        { json: "expose_headers", js: "expose_headers", typ: u(undefined, "") },
        { json: "max_age", js: "max_age", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2Apis": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "protocol_type", js: "protocol_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2Export": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "specification", js: "specification", typ: "" },
        { json: "output_type", js: "output_type", typ: "" },
        { json: "export_version", js: "export_version", typ: u(undefined, "") },
        { json: "include_extensions", js: "include_extensions", typ: u(undefined, "") },
        { json: "stage_name", js: "stage_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "body", js: "body", typ: u(undefined, "") },
    ], false),
    "DataAppconfigConfigurationProfile": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "configuration_profile_id", js: "configuration_profile_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "location_uri", js: "location_uri", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "retrieval_role_arn", js: "retrieval_role_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "AppconfigConfigurationProfiles": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "configuration_profile_ids", js: "configuration_profile_ids", typ: u(undefined, "") },
    ], false),
    "DataAppconfigEnvironment": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "environment_id", js: "environment_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "AppconfigEnvironments": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "environment_ids", js: "environment_ids", typ: u(undefined, "") },
    ], false),
    "AppintegrationsEventIntegration": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "eventbridge_bus", js: "eventbridge_bus", typ: u(undefined, "") },
        { json: "event_filter", js: "event_filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "source", js: "source", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Appmesh": o([
        { json: "name", js: "name", typ: "" },
        { json: "mesh_name", js: "mesh_name", typ: u(undefined, "") },
        { json: "virtual_gateway_name", js: "virtual_gateway_name", typ: u(undefined, "") },
        { json: "mesh_owner", js: "mesh_owner", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "spec", js: "spec", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "virtual_router_name", js: "virtual_router_name", typ: u(undefined, "") },
    ], false),
    "Arn": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "partition", js: "partition", typ: u(undefined, "") },
        { json: "service", js: "service", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "account", js: "account", typ: u(undefined, "") },
        { json: "resource", js: "resource", typ: u(undefined, "") },
    ], false),
    "AuditmanagerFrameworkClass": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "AutoscalingGroup": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "default_cool_down", js: "default_cool_down", typ: u(undefined, "") },
        { json: "desired_capacity", js: "desired_capacity", typ: u(undefined, "") },
        { json: "desired_capacity_type", js: "desired_capacity_type", typ: u(undefined, "") },
        { json: "enabled_metrics", js: "enabled_metrics", typ: u(undefined, "") },
        { json: "health_check_grace_period", js: "health_check_grace_period", typ: u(undefined, "") },
        { json: "health_check_type", js: "health_check_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "launch_configuration", js: "launch_configuration", typ: u(undefined, "") },
        { json: "load_balancers", js: "load_balancers", typ: u(undefined, "") },
        { json: "max_instance_lifetime", js: "max_instance_lifetime", typ: u(undefined, "") },
        { json: "max_size", js: "max_size", typ: u(undefined, "") },
        { json: "min_size", js: "min_size", typ: u(undefined, "") },
        { json: "placement_group", js: "placement_group", typ: u(undefined, "") },
        { json: "predicted_capacity", js: "predicted_capacity", typ: u(undefined, "") },
        { json: "service_linked_role_arn", js: "service_linked_role_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "suspended_processes", js: "suspended_processes", typ: u(undefined, "") },
        { json: "target_group_arns", js: "target_group_arns", typ: u(undefined, "") },
        { json: "termination_policies", js: "termination_policies", typ: u(undefined, "") },
        { json: "vpc_zone_identifier", js: "vpc_zone_identifier", typ: u(undefined, "") },
        { json: "warm_pool_size", js: "warm_pool_size", typ: u(undefined, "") },
    ], false),
    "AutoscalingGroups": o([
        { json: "names", js: "names", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AvailabilityZone": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "all_availability_zones", js: "all_availability_zones", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "zone_id", js: "zone_id", typ: u(undefined, "") },
        { json: "group_name", js: "group_name", typ: u(undefined, "") },
        { json: "name_suffix", js: "name_suffix", typ: u(undefined, "") },
        { json: "network_border_group", js: "network_border_group", typ: u(undefined, "") },
        { json: "opt_in_status", js: "opt_in_status", typ: u(undefined, "") },
        { json: "parent_zone_id", js: "parent_zone_id", typ: u(undefined, "") },
        { json: "parent_zone_name", js: "parent_zone_name", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "zone_type", js: "zone_type", typ: u(undefined, "") },
    ], false),
    "AvailabilityZones": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "all_availability_zones", js: "all_availability_zones", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "exclude_names", js: "exclude_names", typ: u(undefined, "") },
        { json: "exclude_zone_ids", js: "exclude_zone_ids", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "names", js: "names", typ: u(undefined, "") },
        { json: "zone_ids", js: "zone_ids", typ: u(undefined, "") },
    ], false),
    "BackupFramework": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "control", js: "control", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "deployment_status", js: "deployment_status", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "input_parameter", js: "input_parameter", typ: u(undefined, "") },
        { json: "scope", js: "scope", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "compliance_resource_ids", js: "compliance_resource_ids", typ: u(undefined, "") },
        { json: "compliance_resource_types", js: "compliance_resource_types", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataBackupPlan": o([
        { json: "plan_id", js: "plan_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "BackupReportPlan": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "deployment_status", js: "deployment_status", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "report_delivery_channel", js: "report_delivery_channel", typ: u(undefined, "") },
        { json: "report_setting", js: "report_setting", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "formats", js: "formats", typ: u(undefined, "") },
        { json: "s3_bucket_name", js: "s3_bucket_name", typ: u(undefined, "") },
        { json: "s3_key_prefix", js: "s3_key_prefix", typ: u(undefined, "") },
        { json: "accounts", js: "accounts", typ: u(undefined, "") },
        { json: "framework_arns", js: "framework_arns", typ: u(undefined, "") },
        { json: "number_of_frameworks", js: "number_of_frameworks", typ: u(undefined, "") },
        { json: "organization_units", js: "organization_units", typ: u(undefined, "") },
        { json: "regions", js: "regions", typ: u(undefined, "") },
        { json: "report_template", js: "report_template", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataBackupSelection": o([
        { json: "plan_id", js: "plan_id", typ: "" },
        { json: "selection_id", js: "selection_id", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "iam_role_arn", js: "iam_role_arn", typ: u(undefined, "") },
        { json: "resources", js: "resources", typ: u(undefined, "") },
    ], false),
    "DataBackupVault": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "recovery_points", js: "recovery_points", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataBatchComputeEnvironment": o([
        { json: "compute_environment_name", js: "compute_environment_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "ecs_cluster_arn", js: "ecs_cluster_arn", typ: u(undefined, "") },
        { json: "service_role", js: "service_role", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_reason", js: "status_reason", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "BatchJobQueue": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "scheduling_policy_arn", js: "scheduling_policy_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_reason", js: "status_reason", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "compute_environments", js: "compute_environments", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "BatchSchedulingPolicy": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "fairshare_policy", js: "fairshare_policy", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "compute_reservation", js: "compute_reservation", typ: u(undefined, "") },
        { json: "share_delay_seconds", js: "share_delay_seconds", typ: u(undefined, "") },
        { json: "share_distribution", js: "share_distribution", typ: u(undefined, "") },
        { json: "share_identifier", js: "share_identifier", typ: u(undefined, "") },
        { json: "weight_factor", js: "weight_factor", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "BillingServiceAccount": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "BudgetsBudget": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "auto_adjust_data", js: "auto_adjust_data", typ: u(undefined, "") },
        { json: "budget_exceeded", js: "budget_exceeded", typ: u(undefined, "") },
        { json: "budget_limit", js: "budget_limit", typ: u(undefined, "") },
        { json: "budget_type", js: "budget_type", typ: u(undefined, "") },
        { json: "calculated_spend", js: "calculated_spend", typ: u(undefined, "") },
        { json: "cost_filter", js: "cost_filter", typ: u(undefined, "") },
        { json: "cost_types", js: "cost_types", typ: u(undefined, "") },
        { json: "notification", js: "notification", typ: u(undefined, "") },
        { json: "planned_limit", js: "planned_limit", typ: u(undefined, "") },
        { json: "time_period_end", js: "time_period_end", typ: u(undefined, "") },
        { json: "time_period_start", js: "time_period_start", typ: u(undefined, "") },
        { json: "time_unit", js: "time_unit", typ: u(undefined, "") },
        { json: "auto_adjust_type", js: "auto_adjust_type", typ: u(undefined, "") },
        { json: "historical_options", js: "historical_options", typ: u(undefined, "") },
        { json: "last_auto_adjust_time", js: "last_auto_adjust_time", typ: u(undefined, "") },
        { json: "comparison_operator", js: "comparison_operator", typ: u(undefined, "") },
        { json: "threshold", js: "threshold", typ: u(undefined, "") },
        { json: "threshold_type", js: "threshold_type", typ: u(undefined, "") },
        { json: "notification_type", js: "notification_type", typ: u(undefined, "") },
        { json: "subscriber_email_addresses", js: "subscriber_email_addresses", typ: u(undefined, "") },
        { json: "subscriber_sns_topic_arns", js: "subscriber_sns_topic_arns", typ: u(undefined, "") },
        { json: "include_credit", js: "include_credit", typ: u(undefined, "") },
        { json: "include_discount", js: "include_discount", typ: u(undefined, "") },
        { json: "include_other_subscription", js: "include_other_subscription", typ: u(undefined, "") },
        { json: "include_recurring", js: "include_recurring", typ: u(undefined, "") },
        { json: "include_refund", js: "include_refund", typ: u(undefined, "") },
        { json: "include_subscription", js: "include_subscription", typ: u(undefined, "") },
        { json: "include_support", js: "include_support", typ: u(undefined, "") },
        { json: "include_tax", js: "include_tax", typ: u(undefined, "") },
        { json: "include_upfront", js: "include_upfront", typ: u(undefined, "") },
        { json: "use_amortized", js: "use_amortized", typ: u(undefined, "") },
        { json: "use_blended", js: "use_blended", typ: u(undefined, "") },
        { json: "budget_adjustment_period", js: "budget_adjustment_period", typ: u(undefined, "") },
        { json: "lookback_available_periods", js: "lookback_available_periods", typ: u(undefined, "") },
        { json: "amount", js: "amount", typ: u(undefined, "") },
        { json: "start_time", js: "start_time", typ: u(undefined, "") },
        { json: "unit", js: "unit", typ: u(undefined, "") },
        { json: "limit_amount", js: "limit_amount", typ: u(undefined, "") },
        { json: "limit_unit", js: "limit_unit", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "CallerIdentity": o([
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "user_id", js: "user_id", typ: u(undefined, "") },
    ], false),
    "CanonicalUserID": o([
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CeCostCategory": o([
        { json: "cost_category_arn", js: "cost_category_arn", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "default_value", js: "default_value", typ: u(undefined, "") },
        { json: "effective_end", js: "effective_end", typ: u(undefined, "") },
        { json: "effective_start", js: "effective_start", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "rule", js: "rule", typ: u(undefined, "") },
        { json: "rule_version", js: "rule_version", typ: u(undefined, "") },
        { json: "split_charge_rule", js: "split_charge_rule", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "inherited_value", js: "inherited_value", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "dimension_key", js: "dimension_key", typ: u(undefined, "") },
        { json: "dimension_name", js: "dimension_name", typ: u(undefined, "") },
        { json: "and", js: "and", typ: u(undefined, "") },
        { json: "cost_category", js: "cost_category", typ: u(undefined, "") },
        { json: "dimension", js: "dimension", typ: u(undefined, "") },
        { json: "not", js: "not", typ: u(undefined, "") },
        { json: "or", js: "or", typ: u(undefined, "") },
        { json: "key", js: "key", typ: u(undefined, "") },
        { json: "match_options", js: "match_options", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
        { json: "method", js: "method", typ: u(undefined, "") },
        { json: "parameter", js: "parameter", typ: u(undefined, "") },
        { json: "source", js: "source", typ: u(undefined, "") },
        { json: "targets", js: "targets", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CeTags": o([
        { json: "time_period", js: "time_period", typ: "" },
        { json: "start", js: "start", typ: "" },
        { json: "end", js: "end", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "search_string", js: "search_string", typ: u(undefined, "") },
        { json: "sort_by", js: "sort_by", typ: u(undefined, "") },
        { json: "tag_key", js: "tag_key", typ: u(undefined, "") },
        { json: "and", js: "and", typ: u(undefined, "") },
        { json: "cost_category", js: "cost_category", typ: u(undefined, "") },
        { json: "dimension", js: "dimension", typ: u(undefined, "") },
        { json: "not", js: "not", typ: u(undefined, "") },
        { json: "or", js: "or", typ: u(undefined, "") },
        { json: "tag", js: "tag", typ: u(undefined, "") },
        { json: "match_options", js: "match_options", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
        { json: "sort_order", js: "sort_order", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataCloudcontrolapiResource": o([
        { json: "identifier", js: "identifier", typ: "" },
        { json: "type_name", js: "type_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "type_version_id", js: "type_version_id", typ: u(undefined, "") },
        { json: "properties", js: "properties", typ: u(undefined, "") },
    ], false),
    "CloudformationExport": o([
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "exporting_stack_id", js: "exporting_stack_id", typ: u(undefined, "") },
    ], false),
    "DataCloudformationStack": o([
        { json: "name", js: "name", typ: "" },
        { json: "capabilities", js: "capabilities", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "disable_rollback", js: "disable_rollback", typ: u(undefined, "") },
        { json: "notification_arns", js: "notification_arns", typ: u(undefined, "") },
        { json: "outputs", js: "outputs", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "template_body", js: "template_body", typ: u(undefined, "") },
        { json: "iam_role_arn", js: "iam_role_arn", typ: u(undefined, "") },
        { json: "timeout_in_minutes", js: "timeout_in_minutes", typ: u(undefined, "") },
    ], false),
    "CloudformationType": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "type_name", js: "type_name", typ: u(undefined, "") },
        { json: "version_id", js: "version_id", typ: u(undefined, "") },
        { json: "default_version_id", js: "default_version_id", typ: u(undefined, "") },
        { json: "deprecated_status", js: "deprecated_status", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "documentation_url", js: "documentation_url", typ: u(undefined, "") },
        { json: "execution_role_arn", js: "execution_role_arn", typ: u(undefined, "") },
        { json: "is_default_version", js: "is_default_version", typ: u(undefined, "") },
        { json: "provisioning_type", js: "provisioning_type", typ: u(undefined, "") },
        { json: "schema", js: "schema", typ: u(undefined, "") },
        { json: "source_url", js: "source_url", typ: u(undefined, "") },
        { json: "visibility", js: "visibility", typ: u(undefined, "") },
        { json: "schema_handler_package", js: "schema_handler_package", typ: u(undefined, "") },
        { json: "logging_config", js: "logging_config", typ: u(undefined, r("LoggingConfig")) },
        { json: "type_arn", js: "type_arn", typ: u(undefined, "") },
    ], false),
    "LoggingConfig": o([
        { json: "log_group_name", js: "log_group_name", typ: "" },
        { json: "log_role_arn", js: "log_role_arn", typ: "" },
    ], false),
    "CloudfrontCachePolicy": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "min_ttl", js: "min_ttl", typ: u(undefined, "") },
        { json: "max_ttl", js: "max_ttl", typ: u(undefined, "") },
        { json: "default_ttl", js: "default_ttl", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "parameters_in_cache_key_and_forwarded_to_origin", js: "parameters_in_cache_key_and_forwarded_to_origin", typ: u(undefined, "") },
        { json: "cookies_config", js: "cookies_config", typ: u(undefined, "") },
        { json: "headers_config", js: "headers_config", typ: u(undefined, "") },
        { json: "query_strings_config", js: "query_strings_config", typ: u(undefined, "") },
        { json: "enable_accept_encoding_brotli", js: "enable_accept_encoding_brotli", typ: u(undefined, "") },
        { json: "enable_accept_encoding_gzip", js: "enable_accept_encoding_gzip", typ: u(undefined, "") },
        { json: "cookie_behavior", js: "cookie_behavior", typ: u(undefined, "") },
        { json: "cookies", js: "cookies", typ: u(undefined, "") },
        { json: "header_behavior", js: "header_behavior", typ: u(undefined, "") },
        { json: "headers", js: "headers", typ: u(undefined, "") },
        { json: "query_string_behavior", js: "query_string_behavior", typ: u(undefined, "") },
        { json: "query_strings", js: "query_strings", typ: u(undefined, "") },
        { json: "items", js: "items", typ: u(undefined, "") },
    ], false),
    "DataCloudfrontDistribution": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "aliases", js: "aliases", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "last_modified_time", js: "last_modified_time", typ: u(undefined, "") },
        { json: "in_progress_validation_batches", js: "in_progress_validation_batches", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
    ], false),
    "CloudfrontFunction": o([
        { json: "name", js: "name", typ: "" },
        { json: "stage", js: "stage", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "code", js: "code", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "last_modified_time", js: "last_modified_time", typ: u(undefined, "") },
        { json: "runtime", js: "runtime", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "publish", js: "publish", typ: u(undefined, "") },
        { json: "live_stage_etag", js: "live_stage_etag", typ: u(undefined, "") },
    ], false),
    "CloudfrontLogDeliveryCanonicalUserID": o([
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CloudfrontOriginAccessIdentities": o([
        { json: "comments", js: "comments", typ: u(undefined, "") },
        { json: "iam_arns", js: "iam_arns", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
        { json: "s3_canonical_user_ids", js: "s3_canonical_user_ids", typ: u(undefined, "") },
    ], false),
    "CloudfrontOriginAccessIdentity": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "caller_reference", js: "caller_reference", typ: u(undefined, "") },
        { json: "cloudfront_access_identity_path", js: "cloudfront_access_identity_path", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "iam_arn", js: "iam_arn", typ: u(undefined, "") },
        { json: "s3_canonical_user_id", js: "s3_canonical_user_id", typ: u(undefined, "") },
    ], false),
    "CloudfrontOriginRequestPolicy": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "cookies_config", js: "cookies_config", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "headers_config", js: "headers_config", typ: u(undefined, "") },
        { json: "query_strings_config", js: "query_strings_config", typ: u(undefined, "") },
    ], false),
    "CloudfrontRealtimeLogConfig": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "fields", js: "fields", typ: u(undefined, "") },
        { json: "sampling_rate", js: "sampling_rate", typ: u(undefined, "") },
        { json: "kinesis_stream_config", js: "kinesis_stream_config", typ: u(undefined, "") },
        { json: "stream_type", js: "stream_type", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "stream_arn", js: "stream_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CloudfrontResponseHeadersPolicy": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "cors_config", js: "cors_config", typ: u(undefined, "") },
        { json: "custom_headers_config", js: "custom_headers_config", typ: u(undefined, "") },
        { json: "remove_headers_config", js: "remove_headers_config", typ: u(undefined, "") },
        { json: "security_headers_config", js: "security_headers_config", typ: u(undefined, "") },
        { json: "server_timing_headers_config", js: "server_timing_headers_config", typ: u(undefined, "") },
        { json: "access_control_allow_credentials", js: "access_control_allow_credentials", typ: u(undefined, "") },
        { json: "access_control_allow_headers", js: "access_control_allow_headers", typ: u(undefined, "") },
        { json: "access_control_allow_methods", js: "access_control_allow_methods", typ: u(undefined, "") },
        { json: "access_control_allow_origins", js: "access_control_allow_origins", typ: u(undefined, "") },
        { json: "access_control_expose_headers", js: "access_control_expose_headers", typ: u(undefined, "") },
        { json: "access_control_max_age_sec", js: "access_control_max_age_sec", typ: u(undefined, "") },
        { json: "header", js: "header", typ: u(undefined, "") },
        { json: "override", js: "override", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "content_security_policy", js: "content_security_policy", typ: u(undefined, "") },
        { json: "content_type_options", js: "content_type_options", typ: u(undefined, "") },
        { json: "frame_options", js: "frame_options", typ: u(undefined, "") },
        { json: "referrer_policy", js: "referrer_policy", typ: u(undefined, "") },
        { json: "strict_transport_security", js: "strict_transport_security", typ: u(undefined, "") },
        { json: "xss_protection", js: "xss_protection", typ: u(undefined, "") },
        { json: "frame_option", js: "frame_option", typ: u(undefined, "") },
        { json: "include_subdomains", js: "include_subdomains", typ: u(undefined, "") },
        { json: "preload", js: "preload", typ: u(undefined, "") },
        { json: "mode_block", js: "mode_block", typ: u(undefined, "") },
        { json: "protection", js: "protection", typ: u(undefined, "") },
        { json: "report_uri", js: "report_uri", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "sampling_rate", js: "sampling_rate", typ: u(undefined, "") },
        { json: "origin_override", js: "origin_override", typ: u(undefined, "") },
    ], false),
    "DataCloudhsmV2Cluster": o([
        { json: "cluster_id", js: "cluster_id", typ: "" },
        { json: "cluster_state", js: "cluster_state", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "security_group_id", js: "security_group_id", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
    ], false),
    "ServiceAccount": o([
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventBus": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "DataCloudwatchEventConnection": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "secret_arn", js: "secret_arn", typ: u(undefined, "") },
        { json: "authorization_type", js: "authorization_type", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventSource": o([
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_by", js: "created_by", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
    ], false),
    "CloudwatchLogDataProtectionPolicyDocument": o([
        { json: "name", js: "name", typ: "" },
        { json: "statement", js: "statement", typ: "" },
        { json: "data_identifiers", js: "data_identifiers", typ: "" },
        { json: "operation", js: "operation", typ: "" },
        { json: "findings_destination", js: "findings_destination", typ: "" },
        { json: "log_group", js: "log_group", typ: "" },
        { json: "delivery_stream", js: "delivery_stream", typ: "" },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "mask_config", js: "mask_config", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "sid", js: "sid", typ: u(undefined, "") },
        { json: "audit", js: "audit", typ: u(undefined, "") },
        { json: "deidentify", js: "deidentify", typ: u(undefined, "") },
        { json: "cloudwatch_logs", js: "cloudwatch_logs", typ: u(undefined, "") },
        { json: "firehose", js: "firehose", typ: u(undefined, "") },
        { json: "s3", js: "s3", typ: u(undefined, "") },
        { json: "json", js: "json", typ: u(undefined, "") },
    ], false),
    "DataCloudwatchLogGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "retention_in_days", js: "retention_in_days", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "CloudwatchLogGroups": o([
        { json: "log_group_name_prefix", js: "log_group_name_prefix", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "log_group_names", js: "log_group_names", typ: u(undefined, "") },
    ], false),
    "CodeartifactAuthorizationToken": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "domain_owner", js: "domain_owner", typ: u(undefined, "") },
        { json: "duration_seconds", js: "duration_seconds", typ: u(undefined, "") },
        { json: "authorization_token", js: "authorization_token", typ: u(undefined, "") },
        { json: "expiration", js: "expiration", typ: u(undefined, "") },
    ], false),
    "CodeartifactRepositoryEndpoint": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "repository", js: "repository", typ: "" },
        { json: "format", js: "format", typ: "" },
        { json: "domain_owner", js: "domain_owner", typ: u(undefined, "") },
        { json: "repository_endpoint", js: "repository_endpoint", typ: u(undefined, "") },
    ], false),
    "DataCodecatalystDevEnvironment": o([
        { json: "env_id", js: "env_id", typ: "" },
        { json: "project_name", js: "project_name", typ: "" },
        { json: "space_name", js: "space_name", typ: "" },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "creator_id", js: "creator_id", typ: u(undefined, "") },
        { json: "ides", js: "ides", typ: u(undefined, "") },
        { json: "inactivity_timeout_minutes", js: "inactivity_timeout_minutes", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "persistent_storage", js: "persistent_storage", typ: u(undefined, "") },
        { json: "repositories", js: "repositories", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_reason", js: "status_reason", typ: u(undefined, "") },
    ], false),
    "CodecommitApprovalRuleTemplate": o([
        { json: "name", js: "name", typ: "" },
        { json: "approval_rule_template_id", js: "approval_rule_template_id", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "last_modified_date", js: "last_modified_date", typ: u(undefined, "") },
        { json: "last_modified_user", js: "last_modified_user", typ: u(undefined, "") },
        { json: "rule_content_sha256", js: "rule_content_sha256", typ: u(undefined, "") },
    ], false),
    "DataCodecommitRepository": o([
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "repository_id", js: "repository_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "clone_url_http", js: "clone_url_http", typ: u(undefined, "") },
        { json: "clone_url_ssh", js: "clone_url_ssh", typ: u(undefined, "") },
    ], false),
    "CodestarconnectionsConnection": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "connection_status", js: "connection_status", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "host_arn", js: "host_arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "provider_type", js: "provider_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataCognitoIdentityPool": o([
        { json: "identity_pool_name", js: "identity_pool_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "allow_unauthenticated_identities", js: "allow_unauthenticated_identities", typ: u(undefined, "") },
        { json: "allow_classic_flow", js: "allow_classic_flow", typ: u(undefined, "") },
        { json: "developer_provider_name", js: "developer_provider_name", typ: u(undefined, "") },
        { json: "cognito_identity_providers", js: "cognito_identity_providers", typ: u(undefined, "") },
        { json: "openid_connect_provider_arns", js: "openid_connect_provider_arns", typ: u(undefined, "") },
        { json: "saml_provider_arns", js: "saml_provider_arns", typ: u(undefined, "") },
        { json: "supported_login_providers", js: "supported_login_providers", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "CognitoUserPoolClient": o([
        { json: "client_id", js: "client_id", typ: u(undefined, "") },
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "access_token_validity", js: "access_token_validity", typ: u(undefined, "") },
        { json: "allowed_oauth_flows_user_pool_client", js: "allowed_oauth_flows_user_pool_client", typ: u(undefined, "") },
        { json: "allowed_oauth_flows", js: "allowed_oauth_flows", typ: u(undefined, "") },
        { json: "allowed_oauth_scopes", js: "allowed_oauth_scopes", typ: u(undefined, "") },
        { json: "analytics_configuration", js: "analytics_configuration", typ: u(undefined, r("AnalyticsConfiguration")) },
        { json: "callback_urls", js: "callback_urls", typ: u(undefined, "") },
        { json: "client_secret", js: "client_secret", typ: u(undefined, "") },
        { json: "default_redirect_uri", js: "default_redirect_uri", typ: u(undefined, "") },
        { json: "enable_token_revocation", js: "enable_token_revocation", typ: u(undefined, "") },
        { json: "explicit_auth_flows", js: "explicit_auth_flows", typ: u(undefined, "") },
        { json: "generate_secret", js: "generate_secret", typ: u(undefined, "") },
        { json: "id_token_validity", js: "id_token_validity", typ: u(undefined, "") },
        { json: "logout_urls", js: "logout_urls", typ: u(undefined, "") },
        { json: "prevent_user_existence_errors", js: "prevent_user_existence_errors", typ: u(undefined, "") },
        { json: "read_attributes", js: "read_attributes", typ: u(undefined, "") },
        { json: "refresh_token_validity", js: "refresh_token_validity", typ: u(undefined, "") },
        { json: "supported_identity_providers", js: "supported_identity_providers", typ: u(undefined, "") },
        { json: "token_validity_units", js: "token_validity_units", typ: u(undefined, r("TokenValidityUnits")) },
        { json: "write_attributes", js: "write_attributes", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "auth_session_validity", js: "auth_session_validity", typ: u(undefined, "") },
        { json: "enable_propagate_additional_user_context_data", js: "enable_propagate_additional_user_context_data", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AnalyticsConfiguration": o([
        { json: "application_arn", js: "application_arn", typ: "" },
        { json: "application_id", js: "application_id", typ: "" },
        { json: "external_id", js: "external_id", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "user_data_shared", js: "user_data_shared", typ: u(undefined, "") },
    ], false),
    "TokenValidityUnits": o([
        { json: "access_token", js: "access_token", typ: "" },
        { json: "id_token", js: "id_token", typ: "" },
        { json: "refresh_token", js: "refresh_token", typ: "" },
    ], false),
    "CognitoUserPoolClients": o([
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "client_ids", js: "client_ids", typ: u(undefined, "") },
        { json: "client_names", js: "client_names", typ: u(undefined, "") },
    ], false),
    "CognitoUserPoolSigningCertificate": o([
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
    ], false),
    "CognitoUserPools": o([
        { json: "name", js: "name", typ: "" },
        { json: "ids", js: "ids", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
    ], false),
    "DataConnectBotAssociation": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "lex_bot", js: "lex_bot", typ: r("ConnectBotAssociationLexBot") },
    ], false),
    "ConnectBotAssociationLexBot": o([
        { json: "name", js: "name", typ: "" },
        { json: "lex_region", js: "lex_region", typ: u(undefined, "") },
    ], false),
    "DataConnectContactFlow": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "contact_flow_id", js: "contact_flow_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "ConnectContactFlowModule": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "contact_flow_module_id", js: "contact_flow_module_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "ConnectHoursOfOperation": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "hours_of_operation_id", js: "hours_of_operation_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "config", js: "config", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "time_zone", js: "time_zone", typ: u(undefined, "") },
        { json: "day", js: "day", typ: u(undefined, "") },
        { json: "end_time", js: "end_time", typ: u(undefined, "") },
        { json: "start_time", js: "start_time", typ: u(undefined, "") },
        { json: "hours", js: "hours", typ: u(undefined, "") },
        { json: "minutes", js: "minutes", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataConnectInstance": o([
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
        { json: "instance_alias", js: "instance_alias", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "identity_management_type", js: "identity_management_type", typ: u(undefined, "") },
        { json: "inbound_calls_enabled", js: "inbound_calls_enabled", typ: u(undefined, "") },
        { json: "outbound_calls_enabled", js: "outbound_calls_enabled", typ: u(undefined, "") },
        { json: "early_media_enabled", js: "early_media_enabled", typ: u(undefined, "") },
        { json: "contact_flow_logs_enabled", js: "contact_flow_logs_enabled", typ: u(undefined, "") },
        { json: "contact_lens_enabled", js: "contact_lens_enabled", typ: u(undefined, "") },
        { json: "auto_resolve_best_voices", js: "auto_resolve_best_voices", typ: u(undefined, "") },
        { json: "multi_party_conference_enabled", js: "multi_party_conference_enabled", typ: u(undefined, "") },
        { json: "use_custom_tts_voices", js: "use_custom_tts_voices", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "service_role", js: "service_role", typ: u(undefined, "") },
    ], false),
    "ConnectInstanceStorageConfig": o([
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "resource_type", js: "resource_type", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "storage_config", js: "storage_config", typ: u(undefined, "") },
        { json: "kinesis_firehose_config", js: "kinesis_firehose_config", typ: u(undefined, "") },
        { json: "kinesis_stream_config", js: "kinesis_stream_config", typ: u(undefined, "") },
        { json: "kinesis_video_stream_config", js: "kinesis_video_stream_config", typ: u(undefined, "") },
        { json: "s3_config", js: "s3_config", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "firehose_arn", js: "firehose_arn", typ: u(undefined, "") },
        { json: "stream_arn", js: "stream_arn", typ: u(undefined, "") },
        { json: "encryption_config", js: "encryption_config", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "retention_period_hours", js: "retention_period_hours", typ: u(undefined, "") },
        { json: "bucket_name", js: "bucket_name", typ: u(undefined, "") },
        { json: "bucket_prefix", js: "bucket_prefix", typ: u(undefined, "") },
        { json: "encryption_type", js: "encryption_type", typ: u(undefined, "") },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
    ], false),
    "ConnectLambdaFunctionAssociation": o([
        { json: "function_arn", js: "function_arn", typ: "" },
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ConnectPrompt": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "prompt_id", js: "prompt_id", typ: u(undefined, "") },
    ], false),
    "ConnectQueue": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "queue_id", js: "queue_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "hours_of_operation_id", js: "hours_of_operation_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "max_contacts", js: "max_contacts", typ: u(undefined, "") },
        { json: "outbound_caller_config", js: "outbound_caller_config", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "outbound_caller_id_name", js: "outbound_caller_id_name", typ: u(undefined, "") },
        { json: "outbound_caller_id_number_id", js: "outbound_caller_id_number_id", typ: u(undefined, "") },
        { json: "outbound_flow_id", js: "outbound_flow_id", typ: u(undefined, "") },
        { json: "quick_connect_ids", js: "quick_connect_ids", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ConnectQuickConnect": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "quick_connect_id", js: "quick_connect_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "quick_connect_config", js: "quick_connect_config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "quick_connect_type", js: "quick_connect_type", typ: u(undefined, "") },
        { json: "phone_config", js: "phone_config", typ: u(undefined, "") },
        { json: "queue_config", js: "queue_config", typ: u(undefined, "") },
        { json: "user_config", js: "user_config", typ: u(undefined, "") },
        { json: "phone_number", js: "phone_number", typ: u(undefined, "") },
        { json: "contact_flow_id", js: "contact_flow_id", typ: u(undefined, "") },
        { json: "queue_id", js: "queue_id", typ: u(undefined, "") },
        { json: "user_id", js: "user_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ConnectRoutingProfile": o([
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "routing_profile_id", js: "routing_profile_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "default_outbound_queue_id", js: "default_outbound_queue_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "media_concurrencies", js: "media_concurrencies", typ: u(undefined, "") },
        { json: "queue_configs", js: "queue_configs", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "channel", js: "channel", typ: u(undefined, "") },
        { json: "concurrency", js: "concurrency", typ: u(undefined, "") },
        { json: "delay", js: "delay", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "queue_arn", js: "queue_arn", typ: u(undefined, "") },
        { json: "queue_id", js: "queue_id", typ: u(undefined, "") },
        { json: "queue_name", js: "queue_name", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ConnectSecurityProfile": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "security_profile_id", js: "security_profile_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "organization_resource_id", js: "organization_resource_id", typ: u(undefined, "") },
        { json: "permissions", js: "permissions", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ConnectUser": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "user_id", js: "user_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "directory_user_id", js: "directory_user_id", typ: u(undefined, "") },
        { json: "hierarchy_group_id", js: "hierarchy_group_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "identity_info", js: "identity_info", typ: u(undefined, "") },
        { json: "phone_config", js: "phone_config", typ: u(undefined, "") },
        { json: "routing_profile_id", js: "routing_profile_id", typ: u(undefined, "") },
        { json: "security_profile_ids", js: "security_profile_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "email", js: "email", typ: u(undefined, "") },
        { json: "first_name", js: "first_name", typ: u(undefined, "") },
        { json: "last_name", js: "last_name", typ: u(undefined, "") },
        { json: "after_contact_work_time_limit", js: "after_contact_work_time_limit", typ: u(undefined, "") },
        { json: "auto_accept", js: "auto_accept", typ: u(undefined, "") },
        { json: "desk_phone_number", js: "desk_phone_number", typ: u(undefined, "") },
        { json: "phone_type", js: "phone_type", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ConnectUserHierarchyGroup": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "hierarchy_group_id", js: "hierarchy_group_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "hierarchy_path", js: "hierarchy_path", typ: u(undefined, "") },
        { json: "level_id", js: "level_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "level_one", js: "level_one", typ: u(undefined, "") },
        { json: "level_two", js: "level_two", typ: u(undefined, "") },
        { json: "level_three", js: "level_three", typ: u(undefined, "") },
        { json: "level_four", js: "level_four", typ: u(undefined, "") },
        { json: "level_five", js: "level_five", typ: u(undefined, "") },
        { json: "parent_group_id", js: "parent_group_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ConnectUserHierarchyStructure": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "hierarchy_structure", js: "hierarchy_structure", typ: u(undefined, "") },
        { json: "level_one", js: "level_one", typ: u(undefined, "") },
        { json: "level_two", js: "level_two", typ: u(undefined, "") },
        { json: "level_three", js: "level_three", typ: u(undefined, "") },
        { json: "level_four", js: "level_four", typ: u(undefined, "") },
        { json: "level_five", js: "level_five", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
    ], false),
    "ConnectVocabulary": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "vocabulary_id", js: "vocabulary_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "failure_reason", js: "failure_reason", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "language_code", js: "language_code", typ: u(undefined, "") },
        { json: "last_modified_time", js: "last_modified_time", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ControltowerControls": o([
        { json: "target_identifier", js: "target_identifier", typ: "" },
        { json: "enabled_controls", js: "enabled_controls", typ: u(undefined, "") },
    ], false),
    "CurReportDefinition": o([
        { json: "report_name", js: "report_name", typ: "" },
        { json: "time_unit", js: "time_unit", typ: u(undefined, "") },
        { json: "format", js: "format", typ: u(undefined, "") },
        { json: "compression", js: "compression", typ: u(undefined, "") },
        { json: "additional_schema_elements", js: "additional_schema_elements", typ: u(undefined, "") },
        { json: "s3_bucket", js: "s3_bucket", typ: u(undefined, "") },
        { json: "s3_prefix", js: "s3_prefix", typ: u(undefined, "") },
        { json: "s3_region", js: "s3_region", typ: u(undefined, "") },
        { json: "additional_artifacts", js: "additional_artifacts", typ: u(undefined, "") },
        { json: "refresh_closed_reports", js: "refresh_closed_reports", typ: u(undefined, "") },
        { json: "report_versioning", js: "report_versioning", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "CustomerGateway": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "bgp_asn", js: "bgp_asn", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "device_name", js: "device_name", typ: u(undefined, "") },
        { json: "ip_address", js: "ip_address", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DatapipelinePipeline": o([
        { json: "pipeline_id", js: "pipeline_id", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DatapipelinePipelineDefinition": o([
        { json: "pipeline_id", js: "pipeline_id", typ: "" },
        { json: "parameter_object", js: "parameter_object", typ: u(undefined, "") },
        { json: "parameter_value", js: "parameter_value", typ: u(undefined, "") },
        { json: "pipeline_object", js: "pipeline_object", typ: u(undefined, "") },
        { json: "attributes", js: "attributes", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "key", js: "key", typ: u(undefined, "") },
        { json: "string_value", js: "string_value", typ: u(undefined, "") },
        { json: "field", js: "field", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "ref_value", js: "ref_value", typ: u(undefined, "") },
        { json: "attribute", js: "attribute", typ: u(undefined, "") },
    ], false),
    "DBClusterSnapshot": o([
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "db_cluster_identifier", js: "db_cluster_identifier", typ: u(undefined, "") },
        { json: "db_cluster_snapshot_identifier", js: "db_cluster_snapshot_identifier", typ: u(undefined, "") },
        { json: "snapshot_type", js: "snapshot_type", typ: u(undefined, "") },
        { json: "include_shared", js: "include_shared", typ: u(undefined, "") },
        { json: "include_public", js: "include_public", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "allocated_storage", js: "allocated_storage", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "db_cluster_snapshot_arn", js: "db_cluster_snapshot_arn", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "snapshot_create_time", js: "snapshot_create_time", typ: u(undefined, "") },
        { json: "source_db_cluster_snapshot_identifier", js: "source_db_cluster_snapshot_identifier", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DBEventCategories": o([
        { json: "source_type", js: "source_type", typ: u(undefined, "") },
        { json: "event_categories", js: "event_categories", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DataDBInstance": o([
        { json: "db_instance_identifier", js: "db_instance_identifier", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "address", js: "address", typ: u(undefined, "") },
        { json: "allocated_storage", js: "allocated_storage", typ: u(undefined, "") },
        { json: "auto_minor_version_upgrade", js: "auto_minor_version_upgrade", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "backup_retention_period", js: "backup_retention_period", typ: u(undefined, "") },
        { json: "db_cluster_identifier", js: "db_cluster_identifier", typ: u(undefined, "") },
        { json: "db_instance_arn", js: "db_instance_arn", typ: u(undefined, "") },
        { json: "db_instance_class", js: "db_instance_class", typ: u(undefined, "") },
        { json: "db_name", js: "db_name", typ: u(undefined, "") },
        { json: "db_parameter_groups", js: "db_parameter_groups", typ: u(undefined, "") },
        { json: "db_subnet_group", js: "db_subnet_group", typ: u(undefined, "") },
        { json: "db_instance_port", js: "db_instance_port", typ: u(undefined, "") },
        { json: "enabled_cloudwatch_logs_exports", js: "enabled_cloudwatch_logs_exports", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "master_username", js: "master_username", typ: u(undefined, "") },
        { json: "master_user_secret", js: "master_user_secret", typ: u(undefined, r("MasterUserSecret")) },
        { json: "max_allocated_storage", js: "max_allocated_storage", typ: u(undefined, "") },
        { json: "monitoring_interval", js: "monitoring_interval", typ: u(undefined, "") },
        { json: "monitoring_role_arn", js: "monitoring_role_arn", typ: u(undefined, "") },
        { json: "multi_az", js: "multi_az", typ: u(undefined, "") },
        { json: "network_type", js: "network_type", typ: u(undefined, "") },
        { json: "option_group_memberships", js: "option_group_memberships", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "preferred_backup_window", js: "preferred_backup_window", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "resource_id", js: "resource_id", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "storage_throughput", js: "storage_throughput", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "timezone", js: "timezone", typ: u(undefined, "") },
        { json: "vpc_security_groups", js: "vpc_security_groups", typ: u(undefined, "") },
        { json: "replicate_source_db", js: "replicate_source_db", typ: u(undefined, "") },
        { json: "ca_cert_identifier", js: "ca_cert_identifier", typ: u(undefined, "") },
    ], false),
    "MasterUserSecret": o([
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "secret_arn", js: "secret_arn", typ: "" },
        { json: "secret_status", js: "secret_status", typ: "" },
    ], false),
    "DBInstances": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "instance_arns", js: "instance_arns", typ: u(undefined, "") },
        { json: "instance_identifiers", js: "instance_identifiers", typ: u(undefined, "") },
    ], false),
    "DataDBProxy": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "auth", js: "auth", typ: u(undefined, "") },
        { json: "debug_logging", js: "debug_logging", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "engine_family", js: "engine_family", typ: u(undefined, "") },
        { json: "idle_client_timeout", js: "idle_client_timeout", typ: u(undefined, "") },
        { json: "require_tls", js: "require_tls", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "vpc_subnet_ids", js: "vpc_subnet_ids", typ: u(undefined, "") },
    ], false),
    "DataDBSnapshot": o([
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "db_instance_identifier", js: "db_instance_identifier", typ: u(undefined, "") },
        { json: "db_snapshot_identifier", js: "db_snapshot_identifier", typ: u(undefined, "") },
        { json: "snapshot_type", js: "snapshot_type", typ: u(undefined, "") },
        { json: "include_shared", js: "include_shared", typ: u(undefined, "") },
        { json: "include_public", js: "include_public", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "allocated_storage", js: "allocated_storage", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "db_snapshot_arn", js: "db_snapshot_arn", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "option_group_name", js: "option_group_name", typ: u(undefined, "") },
        { json: "source_db_snapshot_identifier", js: "source_db_snapshot_identifier", typ: u(undefined, "") },
        { json: "source_region", js: "source_region", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "snapshot_create_time", js: "snapshot_create_time", typ: u(undefined, "") },
    ], false),
    "DataDBSubnetGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "supported_network_types", js: "supported_network_types", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DefaultTags": o([
        { json: "tags", js: "tags", typ: u(undefined, r("EnvironmentClass")) },
    ], false),
    "EnvironmentClass": o([
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
    ], false),
    "DataDirectoryServiceDirectory": o([
        { json: "directory_id", js: "directory_id", typ: "" },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "edition", js: "edition", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "size", js: "size", typ: u(undefined, "") },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "short_name", js: "short_name", typ: u(undefined, "") },
        { json: "enable_sso", js: "enable_sso", typ: u(undefined, "") },
        { json: "access_url", js: "access_url", typ: u(undefined, "") },
        { json: "dns_ip_addresses", js: "dns_ip_addresses", typ: u(undefined, "") },
        { json: "security_group_id", js: "security_group_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "connect_ips", js: "connect_ips", typ: u(undefined, "") },
        { json: "customer_username", js: "customer_username", typ: u(undefined, "") },
        { json: "customer_dns_ips", js: "customer_dns_ips", typ: u(undefined, "") },
        { json: "authentication_protocol", js: "authentication_protocol", typ: u(undefined, "") },
        { json: "display_label", js: "display_label", typ: u(undefined, "") },
        { json: "radius_port", js: "radius_port", typ: u(undefined, "") },
        { json: "radius_retries", js: "radius_retries", typ: u(undefined, "") },
        { json: "radius_servers", js: "radius_servers", typ: u(undefined, "") },
        { json: "radius_timeout", js: "radius_timeout", typ: u(undefined, "") },
        { json: "use_same_username", js: "use_same_username", typ: u(undefined, "") },
    ], false),
    "DataDmsCertificate": o([
        { json: "certificate_id", js: "certificate_id", typ: "" },
        { json: "certificate_creation_date", js: "certificate_creation_date", typ: u(undefined, "") },
        { json: "certificate_pem", js: "certificate_pem", typ: u(undefined, "") },
        { json: "certificate_owner", js: "certificate_owner", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "certificate_wallet", js: "certificate_wallet", typ: u(undefined, "") },
        { json: "key_length", js: "key_length", typ: u(undefined, "") },
        { json: "signing_algorithm", js: "signing_algorithm", typ: u(undefined, "") },
        { json: "valid_from_date", js: "valid_from_date", typ: u(undefined, "") },
        { json: "valid_to_date", js: "valid_to_date", typ: u(undefined, "") },
    ], false),
    "DataDmsEndpoint": o([
        { json: "endpoint_id", js: "endpoint_id", typ: "" },
    ], false),
    "DmsReplicationInstance": o([
        { json: "replication_instance_id", js: "replication_instance_id", typ: "" },
        { json: "allocated_storage", js: "allocated_storage", typ: u(undefined, "") },
        { json: "auto_minor_version_upgrade", js: "auto_minor_version_upgrade", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "multi_az", js: "multi_az", typ: u(undefined, "") },
        { json: "network_type", js: "network_type", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "replication_instance_arn", js: "replication_instance_arn", typ: u(undefined, "") },
        { json: "replication_instance_class", js: "replication_instance_class", typ: u(undefined, "") },
        { json: "replication_instance_private_ips", js: "replication_instance_private_ips", typ: u(undefined, "") },
        { json: "replication_instance_public_ips", js: "replication_instance_public_ips", typ: u(undefined, "") },
        { json: "replication_subnet_group_id", js: "replication_subnet_group_id", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "allow_major_version_upgrade", js: "allow_major_version_upgrade", typ: u(undefined, "") },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataDmsReplicationSubnetGroup": o([
        { json: "replication_subnet_group_id", js: "replication_subnet_group_id", typ: "" },
        { json: "replication_subnet_group_description", js: "replication_subnet_group_description", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DmsReplicationTask": o([
        { json: "replication_task_id", js: "replication_task_id", typ: "" },
        { json: "cdc_start_position", js: "cdc_start_position", typ: u(undefined, "") },
        { json: "cdc_start_time", js: "cdc_start_time", typ: u(undefined, "") },
        { json: "migration_type", js: "migration_type", typ: u(undefined, "") },
        { json: "replication_instance_arn", js: "replication_instance_arn", typ: u(undefined, "") },
        { json: "replication_task_settings", js: "replication_task_settings", typ: u(undefined, "") },
        { json: "source_endpoint_arn", js: "source_endpoint_arn", typ: u(undefined, "") },
        { json: "start_replication_task", js: "start_replication_task", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "table_mappings", js: "table_mappings", typ: u(undefined, "") },
        { json: "target_endpoint_arn", js: "target_endpoint_arn", typ: u(undefined, "") },
        { json: "replication_task_arn", js: "replication_task_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EngineVersion": o([
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "parameter_group_family", js: "parameter_group_family", typ: u(undefined, "") },
        { json: "preferred_versions", js: "preferred_versions", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "engine_description", js: "engine_description", typ: u(undefined, "") },
        { json: "exportable_log_types", js: "exportable_log_types", typ: u(undefined, "") },
        { json: "supports_log_exports_to_cloudwatch", js: "supports_log_exports_to_cloudwatch", typ: u(undefined, "") },
        { json: "valid_upgrade_targets", js: "valid_upgrade_targets", typ: u(undefined, "") },
        { json: "version_description", js: "version_description", typ: u(undefined, "") },
        { json: "supported_timezones", js: "supported_timezones", typ: u(undefined, "") },
        { json: "supports_read_replica", js: "supports_read_replica", typ: u(undefined, "") },
    ], false),
    "DocdbOrderableDBInstance": o([
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "instance_class", js: "instance_class", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "preferred_instance_classes", js: "preferred_instance_classes", typ: u(undefined, "") },
        { json: "vpc", js: "vpc", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
    ], false),
    "DataDxConnection": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "aws_device", js: "aws_device", typ: u(undefined, "") },
        { json: "bandwidth", js: "bandwidth", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
        { json: "partner_name", js: "partner_name", typ: u(undefined, "") },
        { json: "provider_name", js: "provider_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vlan_id", js: "vlan_id", typ: u(undefined, "") },
    ], false),
    "DxGateway": o([
        { json: "name", js: "name", typ: "" },
        { json: "amazon_side_asn", js: "amazon_side_asn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
    ], false),
    "DxLocation": o([
        { json: "location_code", js: "location_code", typ: "" },
        { json: "available_macsec_port_speeds", js: "available_macsec_port_speeds", typ: u(undefined, "") },
        { json: "available_port_speeds", js: "available_port_speeds", typ: u(undefined, "") },
        { json: "available_providers", js: "available_providers", typ: u(undefined, "") },
        { json: "location_name", js: "location_name", typ: u(undefined, "") },
    ], false),
    "DxLocations": o([
        { json: "location_codes", js: "location_codes", typ: u(undefined, "") },
    ], false),
    "DxRouterConfiguration": o([
        { json: "virtual_interface_id", js: "virtual_interface_id", typ: "" },
        { json: "router_type_identifier", js: "router_type_identifier", typ: "" },
        { json: "customer_router_config", js: "customer_router_config", typ: u(undefined, "") },
        { json: "router", js: "router", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "software", js: "software", typ: u(undefined, "") },
        { json: "vendor", js: "vendor", typ: u(undefined, "") },
        { json: "xslt_template_name", js: "xslt_template_name", typ: u(undefined, "") },
        { json: "xslt_template_name_for_mac", js: "xslt_template_name_for_mac", typ: u(undefined, "") },
    ], false),
    "ElbClass": o([
        { json: "name", js: "name", typ: "" },
    ], false),
    "DataDynamodbTableItem": o([
        { json: "table_name", js: "table_name", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "expression_attribute_name", js: "expression_attribute_name", typ: u(undefined, "") },
        { json: "projection_expression", js: "projection_expression", typ: u(undefined, "") },
        { json: "item", js: "item", typ: u(undefined, "") },
    ], false),
    "DataEbsDefaultKmsKey": o([
        { json: "key_arn", js: "key_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ServicecatalogOrganizationsAccessClass": o([
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DataEbsSnapshot": o([
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "owners", js: "owners", typ: u(undefined, "") },
        { json: "snapshot_ids", js: "snapshot_ids", typ: u(undefined, "") },
        { json: "restorable_by_user_ids", js: "restorable_by_user_ids", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "snapshot_id", js: "snapshot_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "owner_alias", js: "owner_alias", typ: u(undefined, "") },
        { json: "volume_id", js: "volume_id", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "volume_size", js: "volume_size", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "data_encryption_key_id", js: "data_encryption_key_id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "storage_tier", js: "storage_tier", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "EbsSnapshotIDS": o([
        { json: "owners", js: "owners", typ: u(undefined, "") },
        { json: "restorable_by_user_ids", js: "restorable_by_user_ids", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "DataEbsVolume": o([
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "volume_id", js: "volume_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "multi_attach_enabled", js: "multi_attach_enabled", typ: u(undefined, "") },
        { json: "size", js: "size", typ: u(undefined, "") },
        { json: "snapshot_id", js: "snapshot_id", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "volume_type", js: "volume_type", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "throughput", js: "throughput", typ: u(undefined, "") },
    ], false),
    "EbsVolumes": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
        { json: "pool_ids", js: "pool_ids", typ: u(undefined, "") },
        { json: "transit_gateway_route_table_id", js: "transit_gateway_route_table_id", typ: u(undefined, "") },
    ], false),
    "DataEc2ClientVPNEndpoint": o([
        { json: "client_vpn_endpoint_id", js: "client_vpn_endpoint_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, r("Ec2ClientVPNEndpointFilter")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "authentication_options", js: "authentication_options", typ: u(undefined, "") },
        { json: "client_cidr_block", js: "client_cidr_block", typ: u(undefined, "") },
        { json: "client_connect_options", js: "client_connect_options", typ: u(undefined, "") },
        { json: "client_login_banner_options", js: "client_login_banner_options", typ: u(undefined, "") },
        { json: "connection_log_options", js: "connection_log_options", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "dns_servers", js: "dns_servers", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "self_service_portal", js: "self_service_portal", typ: u(undefined, "") },
        { json: "server_certificate_arn", js: "server_certificate_arn", typ: u(undefined, "") },
        { json: "session_timeout_hours", js: "session_timeout_hours", typ: u(undefined, "") },
        { json: "split_tunnel", js: "split_tunnel", typ: u(undefined, "") },
        { json: "transport_protocol", js: "transport_protocol", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "vpn_port", js: "vpn_port", typ: u(undefined, "") },
    ], false),
    "Ec2ClientVPNEndpointFilter": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
    ], false),
    "Ec2CoipPool": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "local_gateway_route_table_id", js: "local_gateway_route_table_id", typ: u(undefined, "") },
        { json: "pool_id", js: "pool_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "pool_cidrs", js: "pool_cidrs", typ: u(undefined, "") },
    ], false),
    "DataEc2Host": o([
        { json: "filter", js: "filter", typ: u(undefined, r("Ec2ClientVPNEndpointFilter")) },
        { json: "host_id", js: "host_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "asset_id", js: "asset_id", typ: u(undefined, "") },
        { json: "auto_placement", js: "auto_placement", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "cores", js: "cores", typ: u(undefined, "") },
        { json: "host_recovery", js: "host_recovery", typ: u(undefined, "") },
        { json: "instance_family", js: "instance_family", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "sockets", js: "sockets", typ: u(undefined, "") },
        { json: "total_vcpus", js: "total_vcpus", typ: u(undefined, "") },
    ], false),
    "Ec2InstanceType": o([
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "auto_recovery_supported", js: "auto_recovery_supported", typ: u(undefined, "") },
        { json: "bare_metal", js: "bare_metal", typ: u(undefined, "") },
        { json: "burstable_performance_supported", js: "burstable_performance_supported", typ: u(undefined, "") },
        { json: "current_generation", js: "current_generation", typ: u(undefined, "") },
        { json: "dedicated_hosts_supported", js: "dedicated_hosts_supported", typ: u(undefined, "") },
        { json: "default_cores", js: "default_cores", typ: u(undefined, "") },
        { json: "default_threads_per_core", js: "default_threads_per_core", typ: u(undefined, "") },
        { json: "default_vcpus", js: "default_vcpus", typ: u(undefined, "") },
        { json: "ebs_encryption_support", js: "ebs_encryption_support", typ: u(undefined, "") },
        { json: "ebs_nvme_support", js: "ebs_nvme_support", typ: u(undefined, "") },
        { json: "ebs_optimized_support", js: "ebs_optimized_support", typ: u(undefined, "") },
        { json: "ebs_performance_baseline_bandwidth", js: "ebs_performance_baseline_bandwidth", typ: u(undefined, "") },
        { json: "ebs_performance_baseline_iops", js: "ebs_performance_baseline_iops", typ: u(undefined, "") },
        { json: "ebs_performance_baseline_throughput", js: "ebs_performance_baseline_throughput", typ: u(undefined, "") },
        { json: "ebs_performance_maximum_bandwidth", js: "ebs_performance_maximum_bandwidth", typ: u(undefined, "") },
        { json: "ebs_performance_maximum_iops", js: "ebs_performance_maximum_iops", typ: u(undefined, "") },
        { json: "ebs_performance_maximum_throughput", js: "ebs_performance_maximum_throughput", typ: u(undefined, "") },
        { json: "efa_supported", js: "efa_supported", typ: u(undefined, "") },
        { json: "ena_support", js: "ena_support", typ: u(undefined, "") },
        { json: "encryption_in_transit_supported", js: "encryption_in_transit_supported", typ: u(undefined, "") },
        { json: "free_tier_eligible", js: "free_tier_eligible", typ: u(undefined, "") },
        { json: "hibernation_supported", js: "hibernation_supported", typ: u(undefined, "") },
        { json: "hypervisor", js: "hypervisor", typ: u(undefined, "") },
        { json: "instance_storage_supported", js: "instance_storage_supported", typ: u(undefined, "") },
        { json: "ipv6_supported", js: "ipv6_supported", typ: u(undefined, "") },
        { json: "maximum_ipv4_addresses_per_interface", js: "maximum_ipv4_addresses_per_interface", typ: u(undefined, "") },
        { json: "maximum_ipv6_addresses_per_interface", js: "maximum_ipv6_addresses_per_interface", typ: u(undefined, "") },
        { json: "maximum_network_interfaces", js: "maximum_network_interfaces", typ: u(undefined, "") },
        { json: "memory_size", js: "memory_size", typ: u(undefined, "") },
        { json: "network_performance", js: "network_performance", typ: u(undefined, "") },
        { json: "supported_architectures", js: "supported_architectures", typ: u(undefined, "") },
        { json: "supported_placement_strategies", js: "supported_placement_strategies", typ: u(undefined, "") },
        { json: "supported_root_device_types", js: "supported_root_device_types", typ: u(undefined, "") },
        { json: "supported_usages_classes", js: "supported_usages_classes", typ: u(undefined, "") },
        { json: "supported_virtualization_types", js: "supported_virtualization_types", typ: u(undefined, "") },
        { json: "sustained_clock_speed", js: "sustained_clock_speed", typ: u(undefined, "") },
        { json: "total_fpga_memory", js: "total_fpga_memory", typ: u(undefined, "") },
        { json: "total_gpu_memory", js: "total_gpu_memory", typ: u(undefined, "") },
        { json: "total_instance_storage", js: "total_instance_storage", typ: u(undefined, "") },
        { json: "valid_cores", js: "valid_cores", typ: u(undefined, "") },
        { json: "valid_threads_per_core", js: "valid_threads_per_core", typ: u(undefined, "") },
    ], false),
    "Ec2InstanceTypeOffering": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "location_type", js: "location_type", typ: u(undefined, "") },
        { json: "preferred_instance_types", js: "preferred_instance_types", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
    ], false),
    "Ec2InstanceTypeOfferings": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "location_type", js: "location_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "instance_types", js: "instance_types", typ: u(undefined, "") },
        { json: "locations", js: "locations", typ: u(undefined, "") },
        { json: "location_types", js: "location_types", typ: u(undefined, "") },
    ], false),
    "Ec2InstanceTypes": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "instance_types", js: "instance_types", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "Ec2LocalGateway": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
    ], false),
    "Ec2LocalGatewayRouteTable": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "local_gateway_route_table_id", js: "local_gateway_route_table_id", typ: u(undefined, "") },
        { json: "local_gateway_id", js: "local_gateway_id", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "Ec2LocalGatewayVirtualInterface": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "local_address", js: "local_address", typ: u(undefined, "") },
        { json: "local_bgp_asn", js: "local_bgp_asn", typ: u(undefined, "") },
        { json: "local_gateway_id", js: "local_gateway_id", typ: u(undefined, "") },
        { json: "peer_address", js: "peer_address", typ: u(undefined, "") },
        { json: "peer_bgp_asn", js: "peer_bgp_asn", typ: u(undefined, "") },
        { json: "vlan", js: "vlan", typ: u(undefined, "") },
    ], false),
    "Ec2LocalGatewayVirtualInterfaceGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "local_gateway_id", js: "local_gateway_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "local_gateway_virtual_interface_ids", js: "local_gateway_virtual_interface_ids", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
    ], false),
    "DataEc2ManagedPrefixList": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "entries", js: "entries", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "address_family", js: "address_family", typ: u(undefined, "") },
        { json: "max_entries", js: "max_entries", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataEc2NetworkInsightsAnalysis": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "network_insights_analysis_id", js: "network_insights_analysis_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "alternate_path_hints", js: "alternate_path_hints", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "explanations", js: "explanations", typ: u(undefined, "") },
        { json: "filter_in_arns", js: "filter_in_arns", typ: u(undefined, "") },
        { json: "forward_path_components", js: "forward_path_components", typ: u(undefined, "") },
        { json: "network_insights_path_id", js: "network_insights_path_id", typ: u(undefined, "") },
        { json: "path_found", js: "path_found", typ: u(undefined, "") },
        { json: "return_path_components", js: "return_path_components", typ: u(undefined, "") },
        { json: "start_date", js: "start_date", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
        { json: "warning_message", js: "warning_message", typ: u(undefined, "") },
    ], false),
    "DataEc2NetworkInsightsPath": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "network_insights_path_id", js: "network_insights_path_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "destination", js: "destination", typ: u(undefined, "") },
        { json: "destination_arn", js: "destination_arn", typ: u(undefined, "") },
        { json: "destination_ip", js: "destination_ip", typ: u(undefined, "") },
        { json: "destination_port", js: "destination_port", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "source", js: "source", typ: u(undefined, "") },
        { json: "source_arn", js: "source_arn", typ: u(undefined, "") },
        { json: "source_ip", js: "source_ip", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "Ec2PublicIpv4Pool": o([
        { json: "pool_id", js: "pool_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "network_border_group", js: "network_border_group", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "total_address_count", js: "total_address_count", typ: u(undefined, "") },
        { json: "total_available_address_count", js: "total_available_address_count", typ: u(undefined, "") },
    ], false),
    "Ec2SpotPrice": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "spot_price", js: "spot_price", typ: u(undefined, "") },
        { json: "spot_price_timestamp", js: "spot_price_timestamp", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGateway": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "amazon_side_asn", js: "amazon_side_asn", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "association_default_route_table_id", js: "association_default_route_table_id", typ: u(undefined, "") },
        { json: "auto_accept_shared_attachments", js: "auto_accept_shared_attachments", typ: u(undefined, "") },
        { json: "default_route_table_association", js: "default_route_table_association", typ: u(undefined, "") },
        { json: "default_route_table_propagation", js: "default_route_table_propagation", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "dns_support", js: "dns_support", typ: u(undefined, "") },
        { json: "multicast_support", js: "multicast_support", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "propagation_default_route_table_id", js: "propagation_default_route_table_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_gateway_cidr_blocks", js: "transit_gateway_cidr_blocks", typ: u(undefined, "") },
        { json: "vpn_ecmp_support", js: "vpn_ecmp_support", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayAttachment": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "association_state", js: "association_state", typ: u(undefined, "") },
        { json: "association_transit_gateway_route_table_id", js: "association_transit_gateway_route_table_id", typ: u(undefined, "") },
        { json: "resource_id", js: "resource_id", typ: u(undefined, "") },
        { json: "resource_owner_id", js: "resource_owner_id", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "transit_gateway_owner_id", js: "transit_gateway_owner_id", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayAttachments": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "transit_gateway_route_table_id", js: "transit_gateway_route_table_id", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "DataEc2TransitGatewayConnect": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "transit_gateway_connect_id", js: "transit_gateway_connect_id", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "transport_attachment_id", js: "transport_attachment_id", typ: u(undefined, "") },
    ], false),
    "DataEc2TransitGatewayConnectPeer": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "transit_gateway_connect_peer_id", js: "transit_gateway_connect_peer_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "bgp_asn", js: "bgp_asn", typ: u(undefined, "") },
        { json: "bgp_peer_address", js: "bgp_peer_address", typ: u(undefined, "") },
        { json: "bgp_transit_gateway_addresses", js: "bgp_transit_gateway_addresses", typ: u(undefined, "") },
        { json: "inside_cidr_blocks", js: "inside_cidr_blocks", typ: u(undefined, "") },
        { json: "peer_address", js: "peer_address", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_gateway_address", js: "transit_gateway_address", typ: u(undefined, "") },
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayDxGatewayAttachmentClass": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "dx_gateway_id", js: "dx_gateway_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "vpn_connection_id", js: "vpn_connection_id", typ: u(undefined, "") },
    ], false),
    "DataEc2TransitGatewayMulticastDomain": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "transit_gateway_multicast_domain_id", js: "transit_gateway_multicast_domain_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "auto_accept_shared_associations", js: "auto_accept_shared_associations", typ: u(undefined, "") },
        { json: "igmpv2_support", js: "igmpv2_support", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "static_sources_support", js: "static_sources_support", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
    ], false),
    "DataEc2TransitGatewayPeeringAttachment": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "peer_account_id", js: "peer_account_id", typ: u(undefined, "") },
        { json: "peer_region", js: "peer_region", typ: u(undefined, "") },
        { json: "peer_transit_gateway_id", js: "peer_transit_gateway_id", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
    ], false),
    "DataEc2TransitGatewayRouteTable": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "default_association_route_table", js: "default_association_route_table", typ: u(undefined, "") },
        { json: "default_propagation_route_table", js: "default_propagation_route_table", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayVpcAttachment": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "appliance_mode_support", js: "appliance_mode_support", typ: u(undefined, "") },
        { json: "dns_support", js: "dns_support", typ: u(undefined, "") },
        { json: "ipv6_support", js: "ipv6_support", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "vpc_owner_id", js: "vpc_owner_id", typ: u(undefined, "") },
        { json: "transit_gateway_default_route_table_association", js: "transit_gateway_default_route_table_association", typ: u(undefined, "") },
        { json: "transit_gateway_default_route_table_propagation", js: "transit_gateway_default_route_table_propagation", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: u(undefined, "") },
    ], false),
    "EcrAuthorizationToken": o([
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
        { json: "authorization_token", js: "authorization_token", typ: u(undefined, "") },
        { json: "expires_at", js: "expires_at", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "proxy_endpoint", js: "proxy_endpoint", typ: u(undefined, "") },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
    ], false),
    "EcrImage": o([
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
        { json: "image_digest", js: "image_digest", typ: u(undefined, "") },
        { json: "image_tag", js: "image_tag", typ: u(undefined, "") },
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "image_pushed_at", js: "image_pushed_at", typ: u(undefined, "") },
        { json: "image_size_in_bytes", js: "image_size_in_bytes", typ: u(undefined, "") },
        { json: "image_tags", js: "image_tags", typ: u(undefined, "") },
    ], false),
    "KmsSecretClass": o([
    ], false),
    "DataEcrRepository": o([
        { json: "name", js: "name", typ: "" },
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, "") },
        { json: "image_scanning_configuration", js: "image_scanning_configuration", typ: u(undefined, "") },
        { json: "image_tag_mutability", js: "image_tag_mutability", typ: u(undefined, "") },
        { json: "most_recent_image_tags", js: "most_recent_image_tags", typ: u(undefined, "") },
        { json: "repository_url", js: "repository_url", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "encryption_type", js: "encryption_type", typ: u(undefined, "") },
        { json: "kms_key", js: "kms_key", typ: u(undefined, "") },
        { json: "scan_on_push", js: "scan_on_push", typ: u(undefined, "") },
    ], false),
    "EcrpublicAuthorizationToken": o([
        { json: "authorization_token", js: "authorization_token", typ: u(undefined, "") },
        { json: "expires_at", js: "expires_at", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
    ], false),
    "DataEcsCluster": o([
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "pending_tasks_count", js: "pending_tasks_count", typ: u(undefined, "") },
        { json: "running_tasks_count", js: "running_tasks_count", typ: u(undefined, "") },
        { json: "registered_container_instances_count", js: "registered_container_instances_count", typ: u(undefined, "") },
        { json: "service_connect_defaults", js: "service_connect_defaults", typ: u(undefined, "") },
        { json: "setting", js: "setting", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "EcsContainerDefinition": o([
        { json: "task_definition", js: "task_definition", typ: "" },
        { json: "container_name", js: "container_name", typ: "" },
        { json: "image", js: "image", typ: u(undefined, "") },
        { json: "image_digest", js: "image_digest", typ: u(undefined, "") },
        { json: "cpu", js: "cpu", typ: u(undefined, "") },
        { json: "memory", js: "memory", typ: u(undefined, "") },
        { json: "memory_reservation", js: "memory_reservation", typ: u(undefined, "") },
        { json: "environment", js: "environment", typ: u(undefined, "") },
        { json: "disable_networking", js: "disable_networking", typ: u(undefined, "") },
        { json: "docker_labels", js: "docker_labels", typ: u(undefined, "") },
    ], false),
    "DataEcsService": o([
        { json: "service_name", js: "service_name", typ: "" },
        { json: "cluster_arn", js: "cluster_arn", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "desired_count", js: "desired_count", typ: u(undefined, "") },
        { json: "launch_type", js: "launch_type", typ: u(undefined, "") },
        { json: "scheduling_strategy", js: "scheduling_strategy", typ: u(undefined, "") },
        { json: "task_definition", js: "task_definition", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataEcsTaskDefinition": o([
        { json: "task_definition", js: "task_definition", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "arn_without_revision", js: "arn_without_revision", typ: u(undefined, "") },
        { json: "execution_role_arn", js: "execution_role_arn", typ: u(undefined, "") },
        { json: "family", js: "family", typ: u(undefined, "") },
        { json: "network_mode", js: "network_mode", typ: u(undefined, "") },
        { json: "revision", js: "revision", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "task_role_arn", js: "task_role_arn", typ: u(undefined, "") },
    ], false),
    "EcsTaskExecution": o([
        { json: "cluster", js: "cluster", typ: "" },
        { json: "task_definition", js: "task_definition", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "capacity_provider_strategy", js: "capacity_provider_strategy", typ: u(undefined, r("CapacityProviderStrategy")) },
        { json: "desired_count", js: "desired_count", typ: u(undefined, "") },
        { json: "enable_ecs_managed_tags", js: "enable_ecs_managed_tags", typ: u(undefined, "") },
        { json: "enable_execute_command", js: "enable_execute_command", typ: u(undefined, "") },
        { json: "group", js: "group", typ: u(undefined, "") },
        { json: "launch_type", js: "launch_type", typ: u(undefined, "") },
        { json: "network_configuration", js: "network_configuration", typ: u(undefined, r("NetworkConfiguration")) },
        { json: "overrides", js: "overrides", typ: u(undefined, r("Overrides")) },
        { json: "placement_constraints", js: "placement_constraints", typ: u(undefined, r("PlacementConstraint")) },
        { json: "placement_strategy", js: "placement_strategy", typ: u(undefined, r("PlacementStrategy")) },
        { json: "platform_version", js: "platform_version", typ: u(undefined, "") },
        { json: "propagate_tags", js: "propagate_tags", typ: u(undefined, "") },
        { json: "reference_id", js: "reference_id", typ: u(undefined, "") },
        { json: "started_by", js: "started_by", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "weight", js: "weight", typ: u(undefined, "") },
        { json: "assign_public_ip", js: "assign_public_ip", typ: u(undefined, "") },
        { json: "container_overrides", js: "container_overrides", typ: u(undefined, r("ContainerOverrides")) },
        { json: "inference_accelerator_overrides", js: "inference_accelerator_overrides", typ: u(undefined, r("InferenceAccelerator")) },
        { json: "task_role_arn", js: "task_role_arn", typ: u(undefined, "") },
        { json: "environment", js: "environment", typ: u(undefined, r("EnvironmentClass")) },
        { json: "resource_requirements", js: "resource_requirements", typ: u(undefined, r("ResourceRequirements")) },
        { json: "device_type", js: "device_type", typ: u(undefined, "") },
        { json: "task_arns", js: "task_arns", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CapacityProviderStrategy": o([
        { json: "capacity_provider", js: "capacity_provider", typ: "" },
        { json: "base", js: "base", typ: "" },
        { json: "weight", js: "weight", typ: "" },
    ], false),
    "ContainerOverrides": o([
        { json: "command", js: "command", typ: "" },
        { json: "cpu", js: "cpu", typ: "" },
        { json: "environment", js: "environment", typ: "" },
        { json: "memory", js: "memory", typ: "" },
        { json: "memory_reservation", js: "memory_reservation", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "resource_requirements", js: "resource_requirements", typ: "" },
    ], false),
    "InferenceAccelerator": o([
        { json: "device_name", js: "device_name", typ: "" },
        { json: "device_type", js: "device_type", typ: "" },
    ], false),
    "NetworkConfiguration": o([
        { json: "subnets", js: "subnets", typ: "" },
        { json: "security_groups", js: "security_groups", typ: "" },
        { json: "assign_public_ip", js: "assign_public_ip", typ: "" },
    ], false),
    "Overrides": o([
        { json: "container_overrides", js: "container_overrides", typ: "" },
        { json: "cpu", js: "cpu", typ: "" },
        { json: "execution_role_arn", js: "execution_role_arn", typ: "" },
        { json: "inference_accelerator_overrides", js: "inference_accelerator_overrides", typ: "" },
        { json: "memory", js: "memory", typ: "" },
        { json: "task_role_arn", js: "task_role_arn", typ: "" },
    ], false),
    "PlacementConstraint": o([
        { json: "expression", js: "expression", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "PlacementStrategy": o([
        { json: "field", js: "field", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "ResourceRequirements": o([
        { json: "type", js: "type", typ: "" },
        { json: "value", js: "value", typ: "" },
    ], false),
    "DataEFSAccessPoint": o([
        { json: "access_point_id", js: "access_point_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "file_system_arn", js: "file_system_arn", typ: u(undefined, "") },
        { json: "file_system_id", js: "file_system_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "EFSAccessPoints": o([
        { json: "file_system_id", js: "file_system_id", typ: "" },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "DataEFSFileSystem": o([
        { json: "file_system_id", js: "file_system_id", typ: u(undefined, "") },
        { json: "creation_token", js: "creation_token", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_zone_name", js: "availability_zone_name", typ: u(undefined, "") },
        { json: "availability_zone_id", js: "availability_zone_id", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "lifecycle_policy", js: "lifecycle_policy", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "performance_mode", js: "performance_mode", typ: u(undefined, "") },
        { json: "provisioned_throughput_in_mibps", js: "provisioned_throughput_in_mibps", typ: u(undefined, "") },
        { json: "throughput_mode", js: "throughput_mode", typ: u(undefined, "") },
        { json: "size_in_bytes", js: "size_in_bytes", typ: u(undefined, "") },
    ], false),
    "EFSMountTarget": o([
        { json: "access_point_id", js: "access_point_id", typ: u(undefined, "") },
        { json: "file_system_id", js: "file_system_id", typ: u(undefined, "") },
        { json: "mount_target_id", js: "mount_target_id", typ: u(undefined, "") },
        { json: "file_system_arn", js: "file_system_arn", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "ip_address", js: "ip_address", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "mount_target_dns_name", js: "mount_target_dns_name", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "availability_zone_name", js: "availability_zone_name", typ: u(undefined, "") },
        { json: "availability_zone_id", js: "availability_zone_id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DataEip": o([
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "public_ip", js: "public_ip", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
        { json: "domain", js: "domain", typ: u(undefined, "") },
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "network_interface_owner_id", js: "network_interface_owner_id", typ: u(undefined, "") },
        { json: "private_ip", js: "private_ip", typ: u(undefined, "") },
        { json: "private_dns", js: "private_dns", typ: u(undefined, "") },
        { json: "public_dns", js: "public_dns", typ: u(undefined, "") },
        { json: "public_ipv4_pool", js: "public_ipv4_pool", typ: u(undefined, "") },
        { json: "carrier_ip", js: "carrier_ip", typ: u(undefined, "") },
        { json: "customer_owned_ipv4_pool", js: "customer_owned_ipv4_pool", typ: u(undefined, "") },
        { json: "customer_owned_ip", js: "customer_owned_ip", typ: u(undefined, "") },
    ], false),
    "Eips": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "allocation_ids", js: "allocation_ids", typ: u(undefined, "") },
        { json: "public_ips", js: "public_ips", typ: u(undefined, "") },
    ], false),
    "DataEksAddon": o([
        { json: "addon_name", js: "addon_name", typ: "" },
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "addon_version", js: "addon_version", typ: u(undefined, "") },
        { json: "configuration_values", js: "configuration_values", typ: u(undefined, "") },
        { json: "service_account_role_arn", js: "service_account_role_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "modified_at", js: "modified_at", typ: u(undefined, "") },
    ], false),
    "EksAddonVersion": o([
        { json: "addon_name", js: "addon_name", typ: "" },
        { json: "kubernetes_version", js: "kubernetes_version", typ: "" },
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "DataEksCluster": o([
        { json: "name", js: "name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cluster_id", js: "cluster_id", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "enabled_cluster_log_types", js: "enabled_cluster_log_types", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "platform_version", js: "platform_version", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "EksClusterAuth": o([
        { json: "name", js: "name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "token", js: "token", typ: u(undefined, "") },
    ], false),
    "EksClusters": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "names", js: "names", typ: u(undefined, "") },
    ], false),
    "DataEksNodeGroup": o([
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "node_group_name", js: "node_group_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ami_type", js: "ami_type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "capacity_type", js: "capacity_type", typ: u(undefined, "") },
        { json: "disk_size", js: "disk_size", typ: u(undefined, "") },
        { json: "instance_types", js: "instance_types", typ: u(undefined, "") },
        { json: "labels", js: "labels", typ: u(undefined, "") },
        { json: "node_role_arn", js: "node_role_arn", typ: u(undefined, "") },
        { json: "release_version", js: "release_version", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "EksNodeGroups": o([
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "names", js: "names", typ: u(undefined, "") },
    ], false),
    "ElasticBeanstalkApplication": o([
        { json: "name", js: "name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "service_role", js: "service_role", typ: u(undefined, "") },
        { json: "max_count", js: "max_count", typ: u(undefined, "") },
        { json: "max_age_in_days", js: "max_age_in_days", typ: u(undefined, "") },
        { json: "delete_source_from_s3", js: "delete_source_from_s3", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ElasticBeanstalkSolutionStack": o([
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
    ], false),
    "DataElasticacheCluster": o([
        { json: "cluster_id", js: "cluster_id", typ: "" },
        { json: "node_type", js: "node_type", typ: u(undefined, "") },
        { json: "num_cache_nodes", js: "num_cache_nodes", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "ip_discovery", js: "ip_discovery", typ: u(undefined, "") },
        { json: "network_type", js: "network_type", typ: u(undefined, "") },
        { json: "subnet_group_name", js: "subnet_group_name", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "parameter_group_name", js: "parameter_group_name", typ: u(undefined, "") },
        { json: "replication_group_id", js: "replication_group_id", typ: u(undefined, "") },
        { json: "log_delivery_configuration", js: "log_delivery_configuration", typ: u(undefined, "") },
        { json: "maintenance_window", js: "maintenance_window", typ: u(undefined, "") },
        { json: "snapshot_window", js: "snapshot_window", typ: u(undefined, "") },
        { json: "snapshot_retention_limit", js: "snapshot_retention_limit", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "notification_topic_arn", js: "notification_topic_arn", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "configuration_endpoint", js: "configuration_endpoint", typ: u(undefined, "") },
        { json: "cluster_address", js: "cluster_address", typ: u(undefined, "") },
        { json: "preferred_outpost_arn", js: "preferred_outpost_arn", typ: u(undefined, "") },
        { json: "cache_nodes", js: "cache_nodes", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataElasticacheReplicationGroup": o([
        { json: "replication_group_id", js: "replication_group_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "auth_token_enabled", js: "auth_token_enabled", typ: u(undefined, "") },
        { json: "automatic_failover_enabled", js: "automatic_failover_enabled", typ: u(undefined, "") },
        { json: "node_type", js: "node_type", typ: u(undefined, "") },
        { json: "num_cache_clusters", js: "num_cache_clusters", typ: u(undefined, "") },
        { json: "num_node_groups", js: "num_node_groups", typ: u(undefined, "") },
        { json: "member_clusters", js: "member_clusters", typ: u(undefined, "") },
        { json: "multi_az_enabled", js: "multi_az_enabled", typ: u(undefined, "") },
        { json: "replicas_per_node_group", js: "replicas_per_node_group", typ: u(undefined, "") },
        { json: "log_delivery_configuration", js: "log_delivery_configuration", typ: u(undefined, "") },
        { json: "snapshot_window", js: "snapshot_window", typ: u(undefined, "") },
        { json: "snapshot_retention_limit", js: "snapshot_retention_limit", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "configuration_endpoint_address", js: "configuration_endpoint_address", typ: u(undefined, "") },
        { json: "primary_endpoint_address", js: "primary_endpoint_address", typ: u(undefined, "") },
        { json: "reader_endpoint_address", js: "reader_endpoint_address", typ: u(undefined, "") },
    ], false),
    "ElasticacheSubnetGroup": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "family", js: "family", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "http_name", js: "http_name", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "asset_type", js: "asset_type", typ: u(undefined, "") },
        { json: "network_services", js: "network_services", typ: u(undefined, "") },
        { json: "volume_id", js: "volume_id", typ: u(undefined, "") },
        { json: "registry_name", js: "registry_name", typ: u(undefined, "") },
        { json: "channel_id", js: "channel_id", typ: u(undefined, "") },
        { json: "parent_id", js: "parent_id", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "source_arn", js: "source_arn", typ: u(undefined, "") },
        { json: "auth_type", js: "auth_type", typ: u(undefined, "") },
    ], false),
    "DataElasticacheUser": o([
        { json: "user_id", js: "user_id", typ: "" },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
        { json: "access_string", js: "access_string", typ: u(undefined, "") },
    ], false),
    "SearchDomain": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "access_policies", js: "access_policies", typ: u(undefined, "") },
        { json: "advanced_options", js: "advanced_options", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created", js: "created", typ: u(undefined, "") },
        { json: "deleted", js: "deleted", typ: u(undefined, "") },
        { json: "domain_id", js: "domain_id", typ: u(undefined, "") },
        { json: "elasticsearch_version", js: "elasticsearch_version", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "kibana_endpoint", js: "kibana_endpoint", typ: u(undefined, "") },
        { json: "processing", js: "processing", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "dashboard_endpoint", js: "dashboard_endpoint", typ: u(undefined, "") },
    ], false),
    "EmrReleaseLabels": o([
        { json: "filters", js: "filters", typ: u(undefined, "") },
        { json: "application", js: "application", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "release_labels", js: "release_labels", typ: u(undefined, "") },
    ], false),
    "DataEmrcontainersVirtualCluster": o([
        { json: "virtual_cluster_id", js: "virtual_cluster_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataFsxOntapStorageVirtualMachine": o([
        { json: "filter", js: "filter", typ: u(undefined, r("Ec2ClientVPNEndpointFilter")) },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "FsxOntapStorageVirtualMachines": o([
        { json: "filter", js: "filter", typ: u(undefined, r("Ec2ClientVPNEndpointFilter")) },
    ], false),
    "FsxOpenzfsSnapshot": o([
        { json: "most_recent", js: "most_recent", typ: u(undefined, "") },
        { json: "snapshot_ids", js: "snapshot_ids", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "snapshot_id", js: "snapshot_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "volume_id", js: "volume_id", typ: u(undefined, "") },
    ], false),
    "DataFsxWindowsFileSystem": o([
        { json: "id", js: "id", typ: "" },
        { json: "active_directory_id", js: "active_directory_id", typ: u(undefined, "") },
        { json: "aliases", js: "aliases", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "audit_log_configuration", js: "audit_log_configuration", typ: u(undefined, "") },
        { json: "automatic_backup_retention_days", js: "automatic_backup_retention_days", typ: u(undefined, "") },
        { json: "copy_tags_to_backups", js: "copy_tags_to_backups", typ: u(undefined, "") },
        { json: "daily_automatic_backup_start_time", js: "daily_automatic_backup_start_time", typ: u(undefined, "") },
        { json: "deployment_type", js: "deployment_type", typ: u(undefined, "") },
        { json: "disk_iops_configuration", js: "disk_iops_configuration", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "preferred_subnet_id", js: "preferred_subnet_id", typ: u(undefined, "") },
        { json: "preferred_file_server_ip", js: "preferred_file_server_ip", typ: u(undefined, "") },
        { json: "storage_capacity", js: "storage_capacity", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "throughput_capacity", js: "throughput_capacity", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "weekly_maintenance_start_time", js: "weekly_maintenance_start_time", typ: u(undefined, "") },
    ], false),
    "GlobalacceleratorAccelerator": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "GlueCatalogTable": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "database_name", js: "database_name", typ: u(undefined, "") },
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "transaction_id", js: "transaction_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "partition_index", js: "partition_index", typ: u(undefined, r("PartitionIndex")) },
        { json: "partition_keys", js: "partition_keys", typ: u(undefined, r("PartitionKeys")) },
        { json: "retention", js: "retention", typ: u(undefined, "") },
        { json: "storage_descriptor", js: "storage_descriptor", typ: u(undefined, r("StorageDescriptor")) },
        { json: "table_type", js: "table_type", typ: u(undefined, "") },
        { json: "target_table", js: "target_table", typ: u(undefined, r("Table")) },
        { json: "view_expanded_text", js: "view_expanded_text", typ: u(undefined, "") },
        { json: "view_original_text", js: "view_original_text", typ: u(undefined, "") },
        { json: "keys", js: "keys", typ: u(undefined, "") },
        { json: "skewed_column_values", js: "skewed_column_values", typ: u(undefined, "") },
        { json: "metadata_operation", js: "metadata_operation", typ: u(undefined, "") },
        { json: "open_table_format_input", js: "open_table_format_input", typ: u(undefined, r("OpenTableFormatInput")) },
    ], false),
    "OpenTableFormatInput": o([
        { json: "iceberg_input", js: "iceberg_input", typ: "" },
    ], false),
    "PartitionIndex": o([
        { json: "index_name", js: "index_name", typ: "" },
        { json: "keys", js: "keys", typ: "" },
    ], false),
    "PartitionKeys": o([
        { json: "comment", js: "comment", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "StorageDescriptor": o([
        { json: "bucket_columns", js: "bucket_columns", typ: "" },
        { json: "columns", js: "columns", typ: "" },
        { json: "compressed", js: "compressed", typ: "" },
        { json: "input_format", js: "input_format", typ: "" },
        { json: "location", js: "location", typ: "" },
        { json: "number_of_buckets", js: "number_of_buckets", typ: "" },
        { json: "output_format", js: "output_format", typ: "" },
        { json: "parameters", js: "parameters", typ: "" },
        { json: "schema_reference", js: "schema_reference", typ: "" },
        { json: "ser_de_info", js: "ser_de_info", typ: "" },
        { json: "skewed_info", js: "skewed_info", typ: "" },
        { json: "sort_columns", js: "sort_columns", typ: "" },
        { json: "stored_as_sub_directories", js: "stored_as_sub_directories", typ: "" },
        { json: "comment", js: "comment", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "schema_id", js: "schema_id", typ: "" },
        { json: "schema_version_id", js: "schema_version_id", typ: "" },
        { json: "schema_version_number", js: "schema_version_number", typ: "" },
        { json: "registry_name", js: "registry_name", typ: "" },
        { json: "schema_arn", js: "schema_arn", typ: "" },
        { json: "schema_name", js: "schema_name", typ: "" },
        { json: "serialization_library", js: "serialization_library", typ: "" },
        { json: "column", js: "column", typ: "" },
        { json: "sort_order", js: "sort_order", typ: "" },
        { json: "skewed_column_names", js: "skewed_column_names", typ: "" },
        { json: "skewed_column_value_location_maps", js: "skewed_column_value_location_maps", typ: "" },
        { json: "skewed_column_values", js: "skewed_column_values", typ: "" },
    ], false),
    "Table": o([
        { json: "catalog_id", js: "catalog_id", typ: "" },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "wildcard", js: "wildcard", typ: u(undefined, "") },
    ], false),
    "DataGlueConnection": o([
        { json: "id", js: "id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "connection_type", js: "connection_type", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "match_criteria", js: "match_criteria", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "physical_connection_requirements", js: "physical_connection_requirements", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "GlueDataCatalogEncryptionSettings": o([
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "data_catalog_encryption_settings", js: "data_catalog_encryption_settings", typ: u(undefined, r("DataCatalogEncryptionSettings")) },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "connection_password_encryption", js: "connection_password_encryption", typ: u(undefined, r("ConnectionPasswordEncryption")) },
        { json: "encryption_at_rest", js: "encryption_at_rest", typ: u(undefined, r("EncryptionAtREST")) },
        { json: "aws_kms_key_id", js: "aws_kms_key_id", typ: u(undefined, "") },
    ], false),
    "ConnectionPasswordEncryption": o([
        { json: "return_connection_password_encrypted", js: "return_connection_password_encrypted", typ: "" },
        { json: "aws_kms_key_id", js: "aws_kms_key_id", typ: u(undefined, "") },
    ], false),
    "DataCatalogEncryptionSettings": o([
        { json: "connection_password_encryption", js: "connection_password_encryption", typ: "" },
        { json: "encryption_at_rest", js: "encryption_at_rest", typ: "" },
    ], false),
    "EncryptionAtREST": o([
        { json: "catalog_encryption_mode", js: "catalog_encryption_mode", typ: "" },
        { json: "sse_aws_kms_key_id", js: "sse_aws_kms_key_id", typ: u(undefined, "") },
    ], false),
    "GlueScript": o([
        { json: "dag_edge", js: "dag_edge", typ: "" },
        { json: "dag_node", js: "dag_node", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "args", js: "args", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "node_type", js: "node_type", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "language", js: "language", typ: u(undefined, "") },
        { json: "target_parameter", js: "target_parameter", typ: u(undefined, "") },
        { json: "line_number", js: "line_number", typ: u(undefined, "") },
        { json: "param", js: "param", typ: u(undefined, "") },
        { json: "python_script", js: "python_script", typ: u(undefined, "") },
        { json: "scala_code", js: "scala_code", typ: u(undefined, "") },
    ], false),
    "DataGrafanaWorkspace": o([
        { json: "workspace_id", js: "workspace_id", typ: "" },
        { json: "account_access_type", js: "account_access_type", typ: u(undefined, "") },
        { json: "authentication_providers", js: "authentication_providers", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "data_sources", js: "data_sources", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "grafana_version", js: "grafana_version", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "notification_destinations", js: "notification_destinations", typ: u(undefined, "") },
        { json: "organization_role_name", js: "organization_role_name", typ: u(undefined, "") },
        { json: "organizational_units", js: "organizational_units", typ: u(undefined, "") },
        { json: "permission_type", js: "permission_type", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "stack_set_name", js: "stack_set_name", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataGuarddutyDetector": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "finding_publishing_frequency", js: "finding_publishing_frequency", typ: u(undefined, "") },
        { json: "service_role_arn", js: "service_role_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "GuarddutyFindingIDS": o([
        { json: "detector_id", js: "detector_id", typ: "" },
        { json: "has_findings", js: "has_findings", typ: u(undefined, "") },
        { json: "finding_ids", js: "finding_ids", typ: u(undefined, "") },
    ], false),
    "IamAccessKeys": o([
        { json: "user", js: "user", typ: "" },
        { json: "access_keys", js: "access_keys", typ: u(undefined, "") },
        { json: "access_key_id", js: "access_key_id", typ: u(undefined, "") },
        { json: "create_date", js: "create_date", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "DataIamAccountAlias": o([
        { json: "account_alias", js: "account_alias", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DataIamGroup": o([
        { json: "group_name", js: "group_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "group_id", js: "group_id", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "users", js: "users", typ: u(undefined, "") },
        { json: "user_id", js: "user_id", typ: u(undefined, "") },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
    ], false),
    "DataIamInstanceProfile": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "create_date", js: "create_date", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "role_id", js: "role_id", typ: u(undefined, "") },
        { json: "role_name", js: "role_name", typ: u(undefined, "") },
    ], false),
    "IamInstanceProfiles": o([
        { json: "role_name", js: "role_name", typ: "" },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "names", js: "names", typ: u(undefined, "") },
        { json: "paths", js: "paths", typ: u(undefined, "") },
    ], false),
    "IamOpenidConnectProvider": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "client_id_list", js: "client_id_list", typ: u(undefined, "") },
        { json: "thumbprint_list", js: "thumbprint_list", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataIamPolicy": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "path_prefix", js: "path_prefix", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "policy_id", js: "policy_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "IamPolicyDocument": o([
        { json: "override_policy_documents", js: "override_policy_documents", typ: u(undefined, "") },
        { json: "policy_id", js: "policy_id", typ: u(undefined, "") },
        { json: "source_policy_documents", js: "source_policy_documents", typ: u(undefined, "") },
        { json: "statement", js: "statement", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "condition", js: "condition", typ: u(undefined, "") },
        { json: "effect", js: "effect", typ: u(undefined, "") },
        { json: "principals", js: "principals", typ: u(undefined, "") },
        { json: "resources", js: "resources", typ: u(undefined, "") },
        { json: "json", js: "json", typ: u(undefined, "") },
    ], false),
    "IamPrincipalPolicySimulation": o([
        { json: "action_names", js: "action_names", typ: "" },
        { json: "policy_source_arn", js: "policy_source_arn", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "caller_arn", js: "caller_arn", typ: u(undefined, "") },
        { json: "context", js: "context", typ: u(undefined, "") },
        { json: "additional_policies_json", js: "additional_policies_json", typ: u(undefined, "") },
        { json: "permissions_boundary_policies_json", js: "permissions_boundary_policies_json", typ: u(undefined, "") },
        { json: "resource_arns", js: "resource_arns", typ: u(undefined, "") },
        { json: "resource_handling_option", js: "resource_handling_option", typ: u(undefined, "") },
        { json: "resource_owner_account_id", js: "resource_owner_account_id", typ: u(undefined, "") },
        { json: "resource_policy_json", js: "resource_policy_json", typ: u(undefined, "") },
        { json: "all_allowed", js: "all_allowed", typ: u(undefined, "") },
    ], false),
    "DataIamRole": o([
        { json: "name", js: "name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "assume_role_policy", js: "assume_role_policy", typ: u(undefined, "") },
        { json: "create_date", js: "create_date", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "max_session_duration", js: "max_session_duration", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "permissions_boundary", js: "permissions_boundary", typ: u(undefined, "") },
        { json: "role_last_used", js: "role_last_used", typ: u(undefined, r("RoleLastUsed")) },
        { json: "unique_id", js: "unique_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "RoleLastUsed": o([
        { json: "region", js: "region", typ: "" },
        { json: "last_used_date", js: "last_used_date", typ: "" },
    ], false),
    "Iam": o([
        { json: "name_regex", js: "name_regex", typ: u(undefined, "") },
        { json: "path_prefix", js: "path_prefix", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "names", js: "names", typ: u(undefined, "") },
    ], false),
    "IamSamlProvider": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "create_date", js: "create_date", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "saml_metadata_document", js: "saml_metadata_document", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "valid_until", js: "valid_until", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataIamServerCertificate": o([
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "path_prefix", js: "path_prefix", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "latest", js: "latest", typ: u(undefined, "") },
    ], false),
    "IamSessionContext": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "issuer_arn", js: "issuer_arn", typ: u(undefined, "") },
        { json: "issuer_id", js: "issuer_id", typ: u(undefined, "") },
        { json: "issuer_name", js: "issuer_name", typ: u(undefined, "") },
        { json: "session_name", js: "session_name", typ: u(undefined, "") },
    ], false),
    "DataIamUser": o([
        { json: "user_name", js: "user_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "permissions_boundary", js: "permissions_boundary", typ: u(undefined, "") },
        { json: "user_id", js: "user_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "IamUserSSHKey": o([
        { json: "encoding", js: "encoding", typ: "" },
        { json: "ssh_public_key_id", js: "ssh_public_key_id", typ: u(undefined, "") },
        { json: "username", js: "username", typ: "" },
        { json: "fingerprint", js: "fingerprint", typ: u(undefined, "") },
        { json: "public_key", js: "public_key", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "DataIdentitystoreGroup": o([
        { json: "identity_store_id", js: "identity_store_id", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "issuer", js: "issuer", typ: "" },
        { json: "attribute_path", js: "attribute_path", typ: "" },
        { json: "attribute_value", js: "attribute_value", typ: "" },
        { json: "group_id", js: "group_id", typ: u(undefined, "") },
        { json: "external_id", js: "external_id", typ: u(undefined, "") },
        { json: "unique_attribute", js: "unique_attribute", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
    ], false),
    "DataIdentitystoreUser": o([
        { json: "identity_store_id", js: "identity_store_id", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "issuer", js: "issuer", typ: "" },
        { json: "attribute_path", js: "attribute_path", typ: "" },
        { json: "attribute_value", js: "attribute_value", typ: "" },
        { json: "user_id", js: "user_id", typ: u(undefined, "") },
        { json: "external_id", js: "external_id", typ: u(undefined, "") },
        { json: "unique_attribute", js: "unique_attribute", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "locale", js: "locale", typ: u(undefined, "") },
        { json: "nickname", js: "nickname", typ: u(undefined, "") },
        { json: "preferred_language", js: "preferred_language", typ: u(undefined, "") },
        { json: "profile_url", js: "profile_url", typ: u(undefined, "") },
        { json: "timezone", js: "timezone", typ: u(undefined, "") },
        { json: "title", js: "title", typ: u(undefined, "") },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
        { json: "user_type", js: "user_type", typ: u(undefined, "") },
    ], false),
    "ImagebuilderComponent": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "change_description", js: "change_description", typ: u(undefined, "") },
        { json: "data", js: "data", typ: u(undefined, "") },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "supported_os_versions", js: "supported_os_versions", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "skip_destroy", js: "skip_destroy", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Imagebuilder": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "names", js: "names", typ: u(undefined, "") },
    ], false),
    "DataImagebuilderContainerRecipe": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "container_type", js: "container_type", typ: u(undefined, "") },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "dockerfile_template_data", js: "dockerfile_template_data", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "parent_image", js: "parent_image", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "working_directory", js: "working_directory", typ: u(undefined, "") },
    ], false),
    "DataImagebuilderDistributionConfiguration": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "date_updated", js: "date_updated", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "ImagebuilderDistributionConfigurations": o([
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "names", js: "names", typ: u(undefined, "") },
    ], false),
    "ImagebuilderImage": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "build_version_arn", js: "build_version_arn", typ: u(undefined, "") },
        { json: "container_recipe_arn", js: "container_recipe_arn", typ: u(undefined, "") },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "distribution_configuration_arn", js: "distribution_configuration_arn", typ: u(undefined, "") },
        { json: "enhanced_image_metadata_enabled", js: "enhanced_image_metadata_enabled", typ: u(undefined, "") },
        { json: "image_recipe_arn", js: "image_recipe_arn", typ: u(undefined, "") },
        { json: "infrastructure_configuration_arn", js: "infrastructure_configuration_arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "os_version", js: "os_version", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "image_tests_configuration", js: "image_tests_configuration", typ: u(undefined, r("ImageTestsConfiguration")) },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ImageTestsConfiguration": o([
        { json: "image_tests_enabled", js: "image_tests_enabled", typ: "" },
        { json: "timeout_minutes", js: "timeout_minutes", typ: "" },
    ], false),
    "DataImagebuilderImagePipeline": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "container_recipe_arn", js: "container_recipe_arn", typ: u(undefined, "") },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "date_last_run", js: "date_last_run", typ: u(undefined, "") },
        { json: "date_next_run", js: "date_next_run", typ: u(undefined, "") },
        { json: "date_updated", js: "date_updated", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "distribution_configuration_arn", js: "distribution_configuration_arn", typ: u(undefined, "") },
        { json: "enhanced_image_metadata_enabled", js: "enhanced_image_metadata_enabled", typ: u(undefined, "") },
        { json: "image_recipe_arn", js: "image_recipe_arn", typ: u(undefined, "") },
        { json: "infrastructure_configuration_arn", js: "infrastructure_configuration_arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataImagebuilderImageRecipe": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "parent_image", js: "parent_image", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "user_data_base64", js: "user_data_base64", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "working_directory", js: "working_directory", typ: u(undefined, "") },
    ], false),
    "DataImagebuilderInfrastructureConfiguration": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "instance_profile_name", js: "instance_profile_name", typ: u(undefined, "") },
        { json: "instance_types", js: "instance_types", typ: u(undefined, "") },
        { json: "key_pair", js: "key_pair", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "resource_tags", js: "resource_tags", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "sns_topic_arn", js: "sns_topic_arn", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "terminate_instance_on_failure", js: "terminate_instance_on_failure", typ: u(undefined, "") },
    ], false),
    "InspectorRulesPackages": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
    ], false),
    "DataInstance": o([
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
        { json: "instance_tags", js: "instance_tags", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "get_password_data", js: "get_password_data", typ: u(undefined, "") },
        { json: "ami", js: "ami", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "associate_public_ip_address", js: "associate_public_ip_address", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "credit_specification", js: "credit_specification", typ: u(undefined, "") },
        { json: "disable_api_stop", js: "disable_api_stop", typ: u(undefined, "") },
        { json: "disable_api_termination", js: "disable_api_termination", typ: u(undefined, "") },
        { json: "ebs_optimized", js: "ebs_optimized", typ: u(undefined, "") },
        { json: "host_id", js: "host_id", typ: u(undefined, "") },
        { json: "host_resource_group_arn", js: "host_resource_group_arn", typ: u(undefined, "") },
        { json: "iam_instance_profile", js: "iam_instance_profile", typ: u(undefined, "") },
        { json: "instance_state", js: "instance_state", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "key_name", js: "key_name", typ: u(undefined, "") },
        { json: "monitoring", js: "monitoring", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "password_data", js: "password_data", typ: u(undefined, "") },
        { json: "placement_group", js: "placement_group", typ: u(undefined, "") },
        { json: "placement_partition_number", js: "placement_partition_number", typ: u(undefined, "") },
        { json: "private_dns", js: "private_dns", typ: u(undefined, "") },
        { json: "private_ip", js: "private_ip", typ: u(undefined, "") },
        { json: "public_dns", js: "public_dns", typ: u(undefined, "") },
        { json: "secondary_private_ips", js: "secondary_private_ips", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "source_dest_check", js: "source_dest_check", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tenancy", js: "tenancy", typ: u(undefined, "") },
        { json: "user_data", js: "user_data", typ: u(undefined, "") },
        { json: "user_data_base64", js: "user_data_base64", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
    ], false),
    "Instances": o([
        { json: "instance_tags", js: "instance_tags", typ: u(undefined, "") },
        { json: "instance_state_names", js: "instance_state_names", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
        { json: "private_ips", js: "private_ips", typ: u(undefined, "") },
        { json: "public_ips", js: "public_ips", typ: u(undefined, "") },
        { json: "ipv6_addresses", js: "ipv6_addresses", typ: u(undefined, "") },
    ], false),
    "InternetGateway": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "internet_gateway_id", js: "internet_gateway_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "IotEndpoint": o([
        { json: "endpoint_type", js: "endpoint_type", typ: u(undefined, "") },
    ], false),
    "IPRanges": o([
        { json: "regions", js: "regions", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "cidr_blocks", js: "cidr_blocks", typ: u(undefined, "") },
        { json: "ipv6_cidr_blocks", js: "ipv6_cidr_blocks", typ: u(undefined, "") },
        { json: "create_date", js: "create_date", typ: u(undefined, "") },
        { json: "sync_token", js: "sync_token", typ: u(undefined, "") },
    ], false),
    "IvsStreamKey": o([
        { json: "channel_arn", js: "channel_arn", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
    ], false),
    "DataKendraExperience": o([
        { json: "experience_id", js: "experience_id", typ: "" },
        { json: "index_id", js: "index_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "configuration", js: "configuration", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "endpoints", js: "endpoints", typ: u(undefined, "") },
        { json: "error_message", js: "error_message", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "updated_at", js: "updated_at", typ: u(undefined, "") },
        { json: "content_source_configuration", js: "content_source_configuration", typ: u(undefined, "") },
        { json: "user_identity_configuration", js: "user_identity_configuration", typ: u(undefined, "") },
        { json: "data_source_ids", js: "data_source_ids", typ: u(undefined, "") },
        { json: "direct_put_content", js: "direct_put_content", typ: u(undefined, "") },
        { json: "faq_ids", js: "faq_ids", typ: u(undefined, "") },
        { json: "identity_attribute_name", js: "identity_attribute_name", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "endpoint_type", js: "endpoint_type", typ: u(undefined, "") },
    ], false),
    "KendraFAQClass": o([
        { json: "faq_id", js: "faq_id", typ: u(undefined, "") },
        { json: "index_id", js: "index_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "error_message", js: "error_message", typ: u(undefined, "") },
        { json: "file_format", js: "file_format", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "language_code", js: "language_code", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "s3_path", js: "s3_path", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "updated_at", js: "updated_at", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "key", js: "key", typ: u(undefined, "") },
        { json: "query_suggestions_block_list_id", js: "query_suggestions_block_list_id", typ: u(undefined, "") },
        { json: "file_size_bytes", js: "file_size_bytes", typ: u(undefined, "") },
        { json: "item_count", js: "item_count", typ: u(undefined, "") },
        { json: "source_s3_path", js: "source_s3_path", typ: u(undefined, "") },
        { json: "thesaurus_id", js: "thesaurus_id", typ: u(undefined, "") },
        { json: "synonym_rule_count", js: "synonym_rule_count", typ: u(undefined, "") },
        { json: "term_count", js: "term_count", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "KendraIndex": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "capacity_units", js: "capacity_units", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "document_metadata_configuration_updates", js: "document_metadata_configuration_updates", typ: u(undefined, "") },
        { json: "edition", js: "edition", typ: u(undefined, "") },
        { json: "error_message", js: "error_message", typ: u(undefined, "") },
        { json: "index_statistics", js: "index_statistics", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "server_side_encryption_configuration", js: "server_side_encryption_configuration", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "updated_at", js: "updated_at", typ: u(undefined, "") },
        { json: "user_context_policy", js: "user_context_policy", typ: u(undefined, "") },
        { json: "user_group_resolution_configuration", js: "user_group_resolution_configuration", typ: u(undefined, "") },
        { json: "user_token_configurations", js: "user_token_configurations", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "query_capacity_units", js: "query_capacity_units", typ: u(undefined, "") },
        { json: "storage_capacity_units", js: "storage_capacity_units", typ: u(undefined, "") },
        { json: "relevance", js: "relevance", typ: u(undefined, "") },
        { json: "search", js: "search", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "duration", js: "duration", typ: u(undefined, "") },
        { json: "freshness", js: "freshness", typ: u(undefined, "") },
        { json: "importance", js: "importance", typ: u(undefined, "") },
        { json: "rank_order", js: "rank_order", typ: u(undefined, "") },
        { json: "values_importance_map", js: "values_importance_map", typ: u(undefined, "") },
        { json: "displayable", js: "displayable", typ: u(undefined, "") },
        { json: "facetable", js: "facetable", typ: u(undefined, "") },
        { json: "searchable", js: "searchable", typ: u(undefined, "") },
        { json: "sortable", js: "sortable", typ: u(undefined, "") },
        { json: "faq_statistics", js: "faq_statistics", typ: u(undefined, "") },
        { json: "text_document_statistics", js: "text_document_statistics", typ: u(undefined, "") },
        { json: "indexed_question_answers_count", js: "indexed_question_answers_count", typ: u(undefined, "") },
        { json: "indexed_text_bytes", js: "indexed_text_bytes", typ: u(undefined, "") },
        { json: "indexed_text_documents_count", js: "indexed_text_documents_count", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "user_group_resolution_mode", js: "user_group_resolution_mode", typ: u(undefined, "") },
        { json: "json_token_type_configuration", js: "json_token_type_configuration", typ: u(undefined, "") },
        { json: "jwt_token_type_configuration", js: "jwt_token_type_configuration", typ: u(undefined, "") },
        { json: "group_attribute_field", js: "group_attribute_field", typ: u(undefined, "") },
        { json: "user_name_attribute_field", js: "user_name_attribute_field", typ: u(undefined, "") },
        { json: "claim_regex", js: "claim_regex", typ: u(undefined, "") },
        { json: "issuer", js: "issuer", typ: u(undefined, "") },
        { json: "key_location", js: "key_location", typ: u(undefined, "") },
        { json: "secrets_manager_arn", js: "secrets_manager_arn", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataKeyPair": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "key_pair_id", js: "key_pair_id", typ: u(undefined, "") },
        { json: "key_name", js: "key_name", typ: u(undefined, "") },
        { json: "include_public_key", js: "include_public_key", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "fingerprint", js: "fingerprint", typ: u(undefined, "") },
        { json: "key_type", js: "key_type", typ: u(undefined, "") },
        { json: "public_key", js: "public_key", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataKinesisStream": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_timestamp", js: "creation_timestamp", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "retention_period", js: "retention_period", typ: u(undefined, "") },
        { json: "open_shards", js: "open_shards", typ: u(undefined, "") },
        { json: "closed_shards", js: "closed_shards", typ: u(undefined, "") },
        { json: "shard_level_metrics", js: "shard_level_metrics", typ: u(undefined, "") },
        { json: "stream_mode_details", js: "stream_mode_details", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "stream_mode", js: "stream_mode", typ: u(undefined, "") },
    ], false),
    "KinesisStreamConsumer": o([
        { json: "stream_arn", js: "stream_arn", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "creation_timestamp", js: "creation_timestamp", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "KmsAlias": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "target_key_id", js: "target_key_id", typ: u(undefined, "") },
        { json: "target_key_arn", js: "target_key_arn", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
    ], false),
    "KmsCiphertext": o([
        { json: "plaintext", js: "plaintext", typ: "" },
        { json: "key_id", js: "key_id", typ: "" },
        { json: "context", js: "context", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ciphertext_blob", js: "ciphertext_blob", typ: u(undefined, "") },
    ], false),
    "DataKmsCustomKeyStore": o([
        { json: "custom_key_store_id", js: "custom_key_store_id", typ: u(undefined, "") },
        { json: "custom_key_store_name", js: "custom_key_store_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "cloudhsm_cluster_id", js: "cloudhsm_cluster_id", typ: u(undefined, "") },
        { json: "connection_state", js: "connection_state", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "trust_anchor_certificate", js: "trust_anchor_certificate", typ: u(undefined, "") },
    ], false),
    "DataKmsKey": o([
        { json: "grant_tokens", js: "grant_tokens", typ: u(undefined, "") },
    ], false),
    "KmsPublicKey": o([
        { json: "grant_tokens", js: "grant_tokens", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "customer_master_key_spec", js: "customer_master_key_spec", typ: u(undefined, "") },
        { json: "encryption_algorithms", js: "encryption_algorithms", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "key_usage", js: "key_usage", typ: u(undefined, "") },
        { json: "public_key", js: "public_key", typ: u(undefined, "") },
        { json: "public_key_pem", js: "public_key_pem", typ: u(undefined, "") },
        { json: "signing_algorithms", js: "signing_algorithms", typ: u(undefined, "") },
    ], false),
    "KmsSecrets": o([
        { json: "secret", js: "secret", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "payload", js: "payload", typ: "" },
        { json: "context", js: "context", typ: u(undefined, "") },
        { json: "encryption_algorithm", js: "encryption_algorithm", typ: u(undefined, "") },
        { json: "plaintext", js: "plaintext", typ: u(undefined, "") },
    ], false),
    "LakeformationDataLakeSettings": o([
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "admins", js: "admins", typ: u(undefined, "") },
        { json: "read_only_admins", js: "read_only_admins", typ: u(undefined, "") },
        { json: "create_database_default_permissions", js: "create_database_default_permissions", typ: u(undefined, r("CreateEDefaultPermissions")) },
        { json: "create_table_default_permissions", js: "create_table_default_permissions", typ: u(undefined, r("CreateEDefaultPermissions")) },
        { json: "trusted_resource_owners", js: "trusted_resource_owners", typ: u(undefined, "") },
        { json: "allow_external_data_filtering", js: "allow_external_data_filtering", typ: u(undefined, "") },
        { json: "external_data_filtering_allow_list", js: "external_data_filtering_allow_list", typ: u(undefined, "") },
        { json: "authorized_session_tag_value_list", js: "authorized_session_tag_value_list", typ: u(undefined, "") },
    ], false),
    "CreateEDefaultPermissions": o([
        { json: "permissions", js: "permissions", typ: "" },
        { json: "principal", js: "principal", typ: "" },
    ], false),
    "DataLakeformationPermissions": o([
        { json: "principal", js: "principal", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "catalog_resource", js: "catalog_resource", typ: u(undefined, "") },
        { json: "data_location", js: "data_location", typ: u(undefined, r("DataLocation")) },
        { json: "database", js: "database", typ: u(undefined, r("LakeformationPermissionsDatabase")) },
        { json: "lf_tag", js: "lf_tag", typ: u(undefined, r("LakeformationLFTagClass")) },
        { json: "lf_tag_policy", js: "lf_tag_policy", typ: u(undefined, r("LFTagPolicy")) },
        { json: "table", js: "table", typ: u(undefined, r("Table")) },
        { json: "table_with_columns", js: "table_with_columns", typ: u(undefined, r("TableWithColumns")) },
        { json: "wildcard", js: "wildcard", typ: u(undefined, "") },
        { json: "permissions", js: "permissions", typ: u(undefined, "") },
        { json: "permissions_with_grant_option", js: "permissions_with_grant_option", typ: u(undefined, "") },
    ], false),
    "DataLocation": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: "" },
    ], false),
    "LakeformationPermissionsDatabase": o([
        { json: "name", js: "name", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: "" },
    ], false),
    "LakeformationLFTagClass": o([
        { json: "key", js: "key", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LFTagPolicy": o([
        { json: "resource_type", js: "resource_type", typ: "" },
        { json: "expression", js: "expression", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "values", js: "values", typ: "" },
    ], false),
    "TableWithColumns": o([
        { json: "database_name", js: "database_name", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: "" },
        { json: "column_names", js: "column_names", typ: "" },
        { json: "excluded_column_names", js: "excluded_column_names", typ: "" },
        { json: "wildcard", js: "wildcard", typ: u(undefined, "") },
    ], false),
    "DataLakeformationResource": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "last_modified", js: "last_modified", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
    ], false),
    "LambdaAlias": o([
        { json: "function_name", js: "function_name", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "function_version", js: "function_version", typ: u(undefined, "") },
        { json: "invoke_arn", js: "invoke_arn", typ: u(undefined, "") },
        { json: "routing_config", js: "routing_config", typ: u(undefined, "") },
        { json: "additional_version_weights", js: "additional_version_weights", typ: u(undefined, "") },
    ], false),
    "LambdaCodeSigningConfig": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "allowed_publishers", js: "allowed_publishers", typ: u(undefined, "") },
        { json: "config_id", js: "config_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "last_modified", js: "last_modified", typ: u(undefined, "") },
        { json: "policies", js: "policies", typ: u(undefined, "") },
        { json: "signing_profile_version_arns", js: "signing_profile_version_arns", typ: u(undefined, "") },
        { json: "untrusted_artifact_on_deployment", js: "untrusted_artifact_on_deployment", typ: u(undefined, "") },
    ], false),
    "DataLambdaFunction": o([
        { json: "function_name", js: "function_name", typ: "" },
        { json: "qualifier", js: "qualifier", typ: u(undefined, "") },
        { json: "architectures", js: "architectures", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "code_signing_config_arn", js: "code_signing_config_arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "environment", js: "environment", typ: u(undefined, "") },
        { json: "ephemeral_storage", js: "ephemeral_storage", typ: u(undefined, "") },
        { json: "file_system_config", js: "file_system_config", typ: u(undefined, "") },
        { json: "handler", js: "handler", typ: u(undefined, "") },
        { json: "image_uri", js: "image_uri", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "last_modified", js: "last_modified", typ: u(undefined, "") },
        { json: "layers", js: "layers", typ: u(undefined, "") },
        { json: "memory_size", js: "memory_size", typ: u(undefined, "") },
        { json: "qualified_arn", js: "qualified_arn", typ: u(undefined, "") },
        { json: "qualified_invoke_arn", js: "qualified_invoke_arn", typ: u(undefined, "") },
        { json: "reserved_concurrent_executions", js: "reserved_concurrent_executions", typ: u(undefined, "") },
        { json: "role", js: "role", typ: u(undefined, "") },
        { json: "runtime", js: "runtime", typ: u(undefined, "") },
        { json: "signing_job_arn", js: "signing_job_arn", typ: u(undefined, "") },
        { json: "signing_profile_version_arn", js: "signing_profile_version_arn", typ: u(undefined, "") },
        { json: "source_code_hash", js: "source_code_hash", typ: u(undefined, "") },
        { json: "source_code_size", js: "source_code_size", typ: u(undefined, "") },
        { json: "timeout", js: "timeout", typ: u(undefined, "") },
        { json: "tracing_config", js: "tracing_config", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "vpc_config", js: "vpc_config", typ: u(undefined, "") },
    ], false),
    "DataLambdaFunctionURL": o([
        { json: "function_name", js: "function_name", typ: "" },
        { json: "qualifier", js: "qualifier", typ: u(undefined, "") },
        { json: "authorization_type", js: "authorization_type", typ: u(undefined, "") },
        { json: "cors", js: "cors", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "function_arn", js: "function_arn", typ: u(undefined, "") },
        { json: "function_url", js: "function_url", typ: u(undefined, "") },
        { json: "invoke_mode", js: "invoke_mode", typ: u(undefined, "") },
        { json: "last_modified_time", js: "last_modified_time", typ: u(undefined, "") },
        { json: "url_id", js: "url_id", typ: u(undefined, "") },
    ], false),
    "LambdaFunctions": o([
        { json: "function_names", js: "function_names", typ: u(undefined, "") },
        { json: "function_arns", js: "function_arns", typ: u(undefined, "") },
    ], false),
    "DataLambdaInvocation": o([
        { json: "function_name", js: "function_name", typ: "" },
        { json: "input", js: "input", typ: "" },
        { json: "qualifier", js: "qualifier", typ: u(undefined, "") },
        { json: "result", js: "result", typ: u(undefined, "") },
    ], false),
    "LambdaLayerVersion": o([
        { json: "layer_name", js: "layer_name", typ: "" },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "license_info", js: "license_info", typ: u(undefined, "") },
        { json: "compatible_runtimes", js: "compatible_runtimes", typ: u(undefined, "") },
        { json: "compatible_architectures", js: "compatible_architectures", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "layer_arn", js: "layer_arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "signing_job_arn", js: "signing_job_arn", typ: u(undefined, "") },
        { json: "signing_profile_version_arn", js: "signing_profile_version_arn", typ: u(undefined, "") },
        { json: "source_code_hash", js: "source_code_hash", typ: u(undefined, "") },
        { json: "source_code_size", js: "source_code_size", typ: u(undefined, "") },
        { json: "s3_bucket", js: "s3_bucket", typ: u(undefined, "") },
        { json: "s3_key", js: "s3_key", typ: u(undefined, "") },
        { json: "s3_object_version", js: "s3_object_version", typ: u(undefined, "") },
        { json: "skip_destroy", js: "skip_destroy", typ: u(undefined, "") },
    ], false),
    "DataLaunchConfiguration": o([
        { json: "name", js: "name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "image_id", js: "image_id", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "iam_instance_profile", js: "iam_instance_profile", typ: u(undefined, "") },
        { json: "key_name", js: "key_name", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "associate_public_ip_address", js: "associate_public_ip_address", typ: u(undefined, "") },
        { json: "user_data", js: "user_data", typ: u(undefined, "") },
        { json: "enable_monitoring", js: "enable_monitoring", typ: u(undefined, "") },
        { json: "ebs_optimized", js: "ebs_optimized", typ: u(undefined, "") },
        { json: "root_block_device", js: "root_block_device", typ: u(undefined, "") },
        { json: "ebs_block_device", js: "ebs_block_device", typ: u(undefined, "") },
        { json: "ephemeral_block_device", js: "ephemeral_block_device", typ: u(undefined, "") },
        { json: "spot_price", js: "spot_price", typ: u(undefined, "") },
        { json: "placement_tenancy", js: "placement_tenancy", typ: u(undefined, "") },
        { json: "delete_on_termination", js: "delete_on_termination", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "throughput", js: "throughput", typ: u(undefined, "") },
        { json: "volume_size", js: "volume_size", typ: u(undefined, "") },
        { json: "volume_type", js: "volume_type", typ: u(undefined, "") },
        { json: "device_name", js: "device_name", typ: u(undefined, "") },
        { json: "no_device", js: "no_device", typ: u(undefined, "") },
        { json: "snapshot_id", js: "snapshot_id", typ: u(undefined, "") },
        { json: "virtual_name", js: "virtual_name", typ: u(undefined, "") },
    ], false),
    "LBHostedZoneID": o([
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "load_balancer_type", js: "load_balancer_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DataLBListener": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "load_balancer_arn", js: "load_balancer_arn", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
    ], false),
    "Lbs": o([
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
    ], false),
    "DataLexBot": o([
        { json: "name", js: "name", typ: "" },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "checksum", js: "checksum", typ: u(undefined, "") },
        { json: "child_directed", js: "child_directed", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "detect_sentiment", js: "detect_sentiment", typ: u(undefined, "") },
        { json: "enable_model_improvements", js: "enable_model_improvements", typ: u(undefined, "") },
        { json: "failure_reason", js: "failure_reason", typ: u(undefined, "") },
        { json: "idle_session_ttl_in_seconds", js: "idle_session_ttl_in_seconds", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "locale", js: "locale", typ: u(undefined, "") },
        { json: "nlu_intent_confidence_threshold", js: "nlu_intent_confidence_threshold", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "voice_id", js: "voice_id", typ: u(undefined, "") },
    ], false),
    "Lex": o([
        { json: "bot_name", js: "bot_name", typ: u(undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "bot_version", js: "bot_version", typ: u(undefined, "") },
        { json: "checksum", js: "checksum", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "parent_intent_signature", js: "parent_intent_signature", typ: u(undefined, "") },
        { json: "enumeration_value", js: "enumeration_value", typ: u(undefined, "") },
        { json: "value_selection_strategy", js: "value_selection_strategy", typ: u(undefined, "") },
        { json: "conversation_logs", js: "conversation_logs", typ: u(undefined, r("ConversationLogs")) },
        { json: "log_settings", js: "log_settings", typ: u(undefined, r("LogSettings")) },
    ], false),
    "ConversationLogs": o([
        { json: "iam_role_arn", js: "iam_role_arn", typ: "" },
        { json: "log_settings", js: "log_settings", typ: "" },
    ], false),
    "LogSettings": o([
        { json: "destination", js: "destination", typ: "" },
        { json: "kms_key_arn", js: "kms_key_arn", typ: "" },
        { json: "log_type", js: "log_type", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "resource_prefix", js: "resource_prefix", typ: "" },
    ], false),
    "LicensemanagerReceivedLicense": o([
        { json: "license_arn", js: "license_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "beneficiary", js: "beneficiary", typ: u(undefined, "") },
        { json: "consumption_configuration", js: "consumption_configuration", typ: u(undefined, r("ConsumptionConfiguration")) },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "entitlements", js: "entitlements", typ: u(undefined, r("Entitlements")) },
        { json: "home_region", js: "home_region", typ: u(undefined, "") },
        { json: "issuer", js: "issuer", typ: u(undefined, r("Issuer")) },
        { json: "license_name", js: "license_name", typ: u(undefined, "") },
        { json: "product_name", js: "product_name", typ: u(undefined, "") },
        { json: "product_sku ", js: "product_sku ", typ: u(undefined, "") },
        { json: "received_metadata", js: "received_metadata", typ: u(undefined, r("ReceivedMetadata")) },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "validity", js: "validity", typ: u(undefined, r("Validity")) },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "max_time_to_live_in_minutes", js: "max_time_to_live_in_minutes", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "sign_key", js: "sign_key", typ: u(undefined, "") },
        { json: "received_status_reason", js: "received_status_reason", typ: u(undefined, "") },
    ], false),
    "ConsumptionConfiguration": o([
        { json: "borrow_configuration", js: "borrow_configuration", typ: "" },
        { json: "provisional_configuration", js: "provisional_configuration", typ: "" },
        { json: "renewal_frequency", js: "renewal_frequency", typ: "" },
        { json: "allow_early_check_in", js: "allow_early_check_in", typ: "" },
        { json: "max_time_to_live_in_minutes", js: "max_time_to_live_in_minutes", typ: "" },
    ], false),
    "Entitlements": o([
        { json: "allow_check_in", js: "allow_check_in", typ: "" },
        { json: "max_count", js: "max_count", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "overage", js: "overage", typ: "" },
        { json: "unit", js: "unit", typ: "" },
        { json: "value", js: "value", typ: "" },
    ], false),
    "Issuer": o([
        { json: "key_fingerprint", js: "key_fingerprint", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "sign_key", js: "sign_key", typ: "" },
    ], false),
    "ReceivedMetadata": o([
        { json: "allowed_operations", js: "allowed_operations", typ: "" },
        { json: "received_status", js: "received_status", typ: "" },
        { json: "received_status_reason", js: "received_status_reason", typ: "" },
    ], false),
    "Validity": o([
        { json: "begin", js: "begin", typ: "" },
        { json: "end", js: "end", typ: "" },
    ], false),
    "LocationGeofenceCollection": o([
        { json: "collection_name", js: "collection_name", typ: "" },
        { json: "collection_arn", js: "collection_arn", typ: u(undefined, "") },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "update_time", js: "update_time", typ: u(undefined, "") },
    ], false),
    "LocationMap": o([
        { json: "map_name", js: "map_name", typ: "" },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "map_arn", js: "map_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "update_time", js: "update_time", typ: u(undefined, "") },
        { json: "configuration", js: "configuration", typ: u(undefined, r("LocationMapConfiguration")) },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LocationMapConfiguration": o([
        { json: "style", js: "style", typ: "" },
    ], false),
    "DataLocationPlaceIndex": o([
        { json: "index_name", js: "index_name", typ: "" },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "data_source", js: "data_source", typ: u(undefined, "") },
        { json: "data_source_configuration", js: "data_source_configuration", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "index_arn", js: "index_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "update_time", js: "update_time", typ: u(undefined, "") },
    ], false),
    "LocationRouteCalculator": o([
        { json: "calculator_name", js: "calculator_name", typ: "" },
        { json: "calculator_arn", js: "calculator_arn", typ: u(undefined, "") },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "data_source", js: "data_source", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "update_time", js: "update_time", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LocationTracker": o([
        { json: "tracker_name", js: "tracker_name", typ: "" },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "position_filtering", js: "position_filtering", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tracker_arn", js: "tracker_arn", typ: u(undefined, "") },
        { json: "update_time", js: "update_time", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LocationTrackerAssociation": o([
        { json: "consumer_arn", js: "consumer_arn", typ: "" },
        { json: "tracker_name", js: "tracker_name", typ: "" },
    ], false),
    "LocationTrackerAssociations": o([
        { json: "tracker_name", js: "tracker_name", typ: "" },
        { json: "consumer_arns", js: "consumer_arns", typ: u(undefined, "") },
    ], false),
    "MemorydbACL": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "minimum_engine_version", js: "minimum_engine_version", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "user_names", js: "user_names", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "workflow_execution_retention_period_in_days", js: "workflow_execution_retention_period_in_days", typ: u(undefined, "") },
    ], false),
    "MemorydbCluster": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "acl_name", js: "acl_name", typ: u(undefined, "") },
        { json: "auto_minor_version_upgrade", js: "auto_minor_version_upgrade", typ: u(undefined, "") },
        { json: "data_tiering", js: "data_tiering", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "engine_patch_version", js: "engine_patch_version", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "final_snapshot_name", js: "final_snapshot_name", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "maintenance_window", js: "maintenance_window", typ: u(undefined, "") },
        { json: "node_type", js: "node_type", typ: u(undefined, "") },
        { json: "num_replicas_per_shard", js: "num_replicas_per_shard", typ: u(undefined, "") },
        { json: "num_shards", js: "num_shards", typ: u(undefined, "") },
        { json: "parameter_group_name", js: "parameter_group_name", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "snapshot_retention_limit", js: "snapshot_retention_limit", typ: u(undefined, "") },
        { json: "snapshot_window", js: "snapshot_window", typ: u(undefined, "") },
        { json: "sns_topic_arn", js: "sns_topic_arn", typ: u(undefined, "") },
        { json: "tls_enabled", js: "tls_enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "snapshot_arns", js: "snapshot_arns", typ: u(undefined, "") },
        { json: "snapshot_name", js: "snapshot_name", typ: u(undefined, "") },
        { json: "subnet_group_name", js: "subnet_group_name", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "MemorydbSnapshot": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cluster_name", js: "cluster_name", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "source", js: "source", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataMemorydbUser": o([
        { json: "user_name", js: "user_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "access_string", js: "access_string", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "minimum_engine_version", js: "minimum_engine_version", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DataMqBroker": o([
        { json: "broker_id", js: "broker_id", typ: u(undefined, "") },
        { json: "broker_name", js: "broker_name", typ: u(undefined, "") },
    ], false),
    "MqBrokerInstanceTypeOfferings": o([
        { json: "engine_type", js: "engine_type", typ: u(undefined, "") },
        { json: "host_instance_type", js: "host_instance_type", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "broker_instance_options", js: "broker_instance_options", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "supported_deployment_modes", js: "supported_deployment_modes", typ: u(undefined, "") },
        { json: "supported_engine_versions", js: "supported_engine_versions", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
    ], false),
    "MskBrokerNodes": o([
        { json: "cluster_arn", js: "cluster_arn", typ: "" },
        { json: "attached_eni_id", js: "attached_eni_id", typ: u(undefined, "") },
        { json: "broker_id", js: "broker_id", typ: u(undefined, "") },
        { json: "client_subnet", js: "client_subnet", typ: u(undefined, "") },
        { json: "client_vpc_ip_address", js: "client_vpc_ip_address", typ: u(undefined, "") },
        { json: "endpoints", js: "endpoints", typ: u(undefined, "") },
        { json: "node_arn", js: "node_arn", typ: u(undefined, "") },
    ], false),
    "DataMskCluster": o([
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "bootstrap_brokers", js: "bootstrap_brokers", typ: u(undefined, "") },
        { json: "bootstrap_brokers_public_sasl_iam", js: "bootstrap_brokers_public_sasl_iam", typ: u(undefined, "") },
        { json: "bootstrap_brokers_public_sasl_scram", js: "bootstrap_brokers_public_sasl_scram", typ: u(undefined, "") },
        { json: "bootstrap_brokers_public_tls", js: "bootstrap_brokers_public_tls", typ: u(undefined, "") },
        { json: "bootstrap_brokers_sasl_iam", js: "bootstrap_brokers_sasl_iam", typ: u(undefined, "") },
        { json: "bootstrap_brokers_sasl_scram", js: "bootstrap_brokers_sasl_scram", typ: u(undefined, "") },
        { json: "bootstrap_brokers_tls", js: "bootstrap_brokers_tls", typ: u(undefined, "") },
        { json: "kafka_version", js: "kafka_version", typ: u(undefined, "") },
        { json: "number_of_broker_nodes", js: "number_of_broker_nodes", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "zookeeper_connect_string", js: "zookeeper_connect_string", typ: u(undefined, "") },
        { json: "zookeeper_connect_string_tls", js: "zookeeper_connect_string_tls", typ: u(undefined, "") },
    ], false),
    "MskConfiguration": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "latest_revision", js: "latest_revision", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "kafka_versions", js: "kafka_versions", typ: u(undefined, "") },
        { json: "server_properties", js: "server_properties", typ: u(undefined, "") },
    ], false),
    "MskKafkaVersion": o([
        { json: "preferred_versions", js: "preferred_versions", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "MskVpcConnection": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "authentication", js: "authentication", typ: u(undefined, "") },
        { json: "client_subnets", js: "client_subnets", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "target_cluster_arn", js: "target_cluster_arn", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ChimesdkvoiceVoiceProfileDomainClass": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "identifier", js: "identifier", typ: u(undefined, "") },
        { json: "regex_pattern_strings", js: "regex_pattern_strings", typ: u(undefined, "") },
        { json: "xss_match_tuples", js: "xss_match_tuples", typ: u(undefined, "") },
    ], false),
    "Mskconnect": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "latest_revision", js: "latest_revision", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "properties_file_content", js: "properties_file_content", typ: u(undefined, "") },
    ], false),
    "DataNatGateway": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "allocation_id", js: "allocation_id", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
        { json: "connectivity_type", js: "connectivity_type", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "private_ip", js: "private_ip", typ: u(undefined, "") },
        { json: "public_ip", js: "public_ip", typ: u(undefined, "") },
        { json: "secondary_allocation_ids", js: "secondary_allocation_ids", typ: u(undefined, "") },
        { json: "secondary_private_ip_address_count", js: "secondary_private_ip_address_count", typ: u(undefined, "") },
        { json: "secondary_private_ip_addresses", js: "secondary_private_ip_addresses", typ: u(undefined, "") },
    ], false),
    "NeptuneOrderableDBInstance": o([
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "instance_class", js: "instance_class", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "preferred_instance_classes", js: "preferred_instance_classes", typ: u(undefined, "") },
        { json: "vpc", js: "vpc", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "max_iops_per_db_instance", js: "max_iops_per_db_instance", typ: u(undefined, "") },
        { json: "max_iops_per_gib", js: "max_iops_per_gib", typ: u(undefined, "") },
        { json: "max_storage_size", js: "max_storage_size", typ: u(undefined, "") },
        { json: "min_iops_per_db_instance", js: "min_iops_per_db_instance", typ: u(undefined, "") },
        { json: "min_iops_per_gib", js: "min_iops_per_gib", typ: u(undefined, "") },
        { json: "min_storage_size", js: "min_storage_size", typ: u(undefined, "") },
        { json: "multi_az_capable", js: "multi_az_capable", typ: u(undefined, "") },
        { json: "read_replica_capable", js: "read_replica_capable", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "supports_enhanced_monitoring", js: "supports_enhanced_monitoring", typ: u(undefined, "") },
        { json: "supports_iam_database_authentication", js: "supports_iam_database_authentication", typ: u(undefined, "") },
        { json: "supports_iops", js: "supports_iops", typ: u(undefined, "") },
        { json: "supports_performance_insights", js: "supports_performance_insights", typ: u(undefined, "") },
        { json: "supports_storage_encryption", js: "supports_storage_encryption", typ: u(undefined, "") },
    ], false),
    "DataNetworkInterface": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "association", js: "association", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "interface_type", js: "interface_type", typ: u(undefined, "") },
        { json: "ipv6_addresses", js: "ipv6_addresses", typ: u(undefined, "") },
        { json: "mac_address", js: "mac_address", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "private_dns_name", js: "private_dns_name", typ: u(undefined, "") },
        { json: "private_ip", js: "private_ip", typ: u(undefined, "") },
        { json: "private_ips", js: "private_ips", typ: u(undefined, "") },
        { json: "requester_id", js: "requester_id", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "allocation_id", js: "allocation_id", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
        { json: "carrier_ip", js: "carrier_ip", typ: u(undefined, "") },
        { json: "customer_owned_ip", js: "customer_owned_ip", typ: u(undefined, "") },
        { json: "ip_owner_id", js: "ip_owner_id", typ: u(undefined, "") },
        { json: "public_dns_name", js: "public_dns_name", typ: u(undefined, "") },
        { json: "public_ip", js: "public_ip", typ: u(undefined, "") },
    ], false),
    "DataNetworkfirewallFirewall": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "delete_protection", js: "delete_protection", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "firewall_policy_arn", js: "firewall_policy_arn", typ: u(undefined, "") },
        { json: "firewall_policy_change_protection", js: "firewall_policy_change_protection", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "subnet_change_protection", js: "subnet_change_protection", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "update_token", js: "update_token", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DataNetworkfirewallFirewallPolicy": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "firewall_policy", js: "firewall_policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "update_token", js: "update_token", typ: u(undefined, "") },
    ], false),
    "ResourcePolicy": o([
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerConnection": o([
        { json: "global_network_id", js: "global_network_id", typ: "" },
        { json: "connection_id", js: "connection_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "connected_device_id", js: "connected_device_id", typ: u(undefined, "") },
        { json: "connected_link_id", js: "connected_link_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "device_id", js: "device_id", typ: u(undefined, "") },
        { json: "link_id", js: "link_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Networkmanager": o([
        { json: "global_network_id", js: "global_network_id", typ: "" },
        { json: "device_id", js: "device_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
        { json: "site_id", js: "site_id", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerCoreNetworkPolicyDocument": o([
        { json: "core_network_configuration", js: "core_network_configuration", typ: "" },
        { json: "segments", js: "segments", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "conditions", js: "conditions", typ: "" },
        { json: "rule_number", js: "rule_number", typ: "" },
        { json: "association_method", js: "association_method", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "asn_ranges", js: "asn_ranges", typ: "" },
        { json: "edge_locations", js: "edge_locations", typ: "" },
        { json: "locations", js: "locations", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "attachment_policies", js: "attachment_policies", typ: u(undefined, "") },
        { json: "segment_actions", js: "segment_actions", typ: u(undefined, "") },
        { json: "condition_logic", js: "condition_logic", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "segment", js: "segment", typ: u(undefined, "") },
        { json: "tag_value_of_key", js: "tag_value_of_key", typ: u(undefined, "") },
        { json: "require_acceptance", js: "require_acceptance", typ: u(undefined, "") },
        { json: "operator", js: "operator", typ: u(undefined, "") },
        { json: "key", js: "key", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "inside_cidr_blocks", js: "inside_cidr_blocks", typ: u(undefined, "") },
        { json: "vpn_ecmp_support", js: "vpn_ecmp_support", typ: u(undefined, "") },
        { json: "asn", js: "asn", typ: u(undefined, "") },
        { json: "allow_filter", js: "allow_filter", typ: u(undefined, "") },
        { json: "deny_filter", js: "deny_filter", typ: u(undefined, "") },
        { json: "isolate_attachments", js: "isolate_attachments", typ: u(undefined, "") },
        { json: "destination_cidr_blocks", js: "destination_cidr_blocks", typ: u(undefined, "") },
        { json: "destinations", js: "destinations", typ: u(undefined, "") },
        { json: "mode", js: "mode", typ: u(undefined, "") },
        { json: "share_with_except", js: "share_with_except", typ: u(undefined, "") },
        { json: "json", js: "json", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerDevice": o([
        { json: "device_id", js: "device_id", typ: u(undefined, "") },
        { json: "global_network_id", js: "global_network_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "aws_location", js: "aws_location", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "model", js: "model", typ: u(undefined, "") },
        { json: "serial_number", js: "serial_number", typ: u(undefined, "") },
        { json: "site_id", js: "site_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "vendor", js: "vendor", typ: u(undefined, "") },
        { json: "subnet_arn", js: "subnet_arn", typ: u(undefined, "") },
        { json: "zone", js: "zone", typ: u(undefined, "") },
        { json: "address", js: "address", typ: u(undefined, "") },
        { json: "latitude", js: "latitude", typ: u(undefined, "") },
        { json: "longitude", js: "longitude", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerGlobalNetwork": o([
        { json: "global_network_id", js: "global_network_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerGlobalNetworks": o([
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerLink": o([
        { json: "global_network_id", js: "global_network_id", typ: "" },
        { json: "link_id", js: "link_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "bandwidth", js: "bandwidth", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "provider_name", js: "provider_name", typ: u(undefined, "") },
        { json: "site_id", js: "site_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "download_speed", js: "download_speed", typ: u(undefined, "") },
        { json: "upload_speed", js: "upload_speed", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerLinks": o([
        { json: "global_network_id", js: "global_network_id", typ: "" },
        { json: "provider_name", js: "provider_name", typ: u(undefined, "") },
        { json: "site_id", js: "site_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerSite": o([
        { json: "global_network_id", js: "global_network_id", typ: "" },
        { json: "site_id", js: "site_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "address", js: "address", typ: u(undefined, "") },
        { json: "latitude", js: "latitude", typ: u(undefined, "") },
        { json: "longitude", js: "longitude", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "OamLink": o([
        { json: "link_identifier", js: "link_identifier", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "label", js: "label", typ: u(undefined, "") },
        { json: "label_template", js: "label_template", typ: u(undefined, "") },
        { json: "link_id", js: "link_id", typ: u(undefined, "") },
        { json: "resource_types", js: "resource_types", typ: u(undefined, "") },
        { json: "sink_arn", js: "sink_arn", typ: u(undefined, "") },
        { json: "sink_identifier", js: "sink_identifier", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "OamInks": o([
        { json: "arns", js: "arns", typ: u(undefined, "") },
    ], false),
    "OamSink": o([
        { json: "sink_identifier", js: "sink_identifier", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "sink_id", js: "sink_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "OpensearchserverlessPolicy": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "policy_version", js: "policy_version", typ: u(undefined, "") },
    ], false),
    "OpensearchserverlessCollection": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "collection_endpoint", js: "collection_endpoint", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "dashboard_endpoint", js: "dashboard_endpoint", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "last_modified_date", js: "last_modified_date", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "DataOpensearchserverlessSecurityConfig": o([
        { json: "id", js: "id", typ: "" },
        { json: "config_version", js: "config_version", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "last_modified_date", js: "last_modified_date", typ: u(undefined, "") },
        { json: "saml_options", js: "saml_options", typ: u(undefined, r("OpensearchserverlessSecurityConfigSamlOptions")) },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "OpensearchserverlessSecurityConfigSamlOptions": o([
        { json: "group_attribute", js: "group_attribute", typ: u(undefined, "") },
        { json: "metadata", js: "metadata", typ: "" },
        { json: "session_timeout", js: "session_timeout", typ: u(undefined, "") },
        { json: "user_attribute", js: "user_attribute", typ: u(undefined, "") },
    ], false),
    "OpensearchserverlessSecurityPolicy": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "last_modified_date", js: "last_modified_date", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "policy_version", js: "policy_version", typ: u(undefined, "") },
    ], false),
    "OpensearchserverlessVpcEndpoint": o([
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: "" },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "OrganizationsDelegatedAdministrators": o([
        { json: "service_principal", js: "service_principal", typ: u(undefined, "") },
    ], false),
    "OrganizationsDelegatedServices": o([
        { json: "account_id", js: "account_id", typ: "" },
    ], false),
    "OrganizationsOrganization": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "feature_set", js: "feature_set", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "master_account_arn", js: "master_account_arn", typ: u(undefined, "") },
        { json: "master_account_email", js: "master_account_email", typ: u(undefined, "") },
        { json: "master_account_id", js: "master_account_id", typ: u(undefined, "") },
        { json: "aws_service_access_principals", js: "aws_service_access_principals", typ: u(undefined, "") },
        { json: "enabled_policy_types", js: "enabled_policy_types", typ: u(undefined, "") },
    ], false),
    "OrganizationsOrganizationalUnitClass": o([
        { json: "parent_id", js: "parent_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "geo_match_constraint", js: "geo_match_constraint", typ: u(undefined, "") },
        { json: "ip_set_descriptors", js: "ip_set_descriptors", typ: u(undefined, "") },
        { json: "size_constraints", js: "size_constraints", typ: u(undefined, "") },
        { json: "ip_set_descriptor", js: "ip_set_descriptor", typ: u(undefined, "") },
    ], false),
    "OrganizationsOrganizationalUnitChildAccountsClass": o([
        { json: "parent_id", js: "parent_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "OrganizationsPolicies": o([
        { json: "filter", js: "filter", typ: "" },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "OrganizationsPoliciesForTarget": o([
        { json: "target_id", js: "target_id", typ: "" },
        { json: "filter", js: "filter", typ: "" },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "OrganizationsPolicy": o([
        { json: "policy_id", js: "policy_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "aws_managed", js: "aws_managed", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "OrganizationsResourceTags": o([
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "OutpostsAsset": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "asset_id", js: "asset_id", typ: "" },
        { json: "asset_type", js: "asset_type", typ: u(undefined, "") },
        { json: "host_id", js: "host_id", typ: u(undefined, "") },
        { json: "rack_elevation", js: "rack_elevation", typ: u(undefined, "") },
        { json: "rack_id", js: "rack_id", typ: u(undefined, "") },
    ], false),
    "OutpostsAssets": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "host_id_filter", js: "host_id_filter", typ: u(undefined, "") },
        { json: "status_id_filter", js: "status_id_filter", typ: u(undefined, "") },
        { json: "asset_ids", js: "asset_ids", typ: u(undefined, "") },
    ], false),
    "OutpostsOutpost": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "availability_zone_id", js: "availability_zone_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "lifecycle_status", js: "lifecycle_status", typ: u(undefined, "") },
        { json: "site_arn", js: "site_arn", typ: u(undefined, "") },
        { json: "site_id", js: "site_id", typ: u(undefined, "") },
        { json: "supported_hardware_type", js: "supported_hardware_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "OutpostsOutpostInstanceType": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "preferred_instance_types", js: "preferred_instance_types", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "OutpostsOutpostInstanceTypes": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "instance_types", js: "instance_types", typ: u(undefined, "") },
    ], false),
    "OutpostsOutposts": o([
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "availability_zone_id", js: "availability_zone_id", typ: u(undefined, "") },
        { json: "site_id", js: "site_id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "OutpostsSite": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
    ], false),
    "OutpostsSites": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "Partition": o([
        { json: "dns_suffix", js: "dns_suffix", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "partition", js: "partition", typ: u(undefined, "") },
        { json: "reverse_dns_prefix", js: "reverse_dns_prefix", typ: u(undefined, "") },
    ], false),
    "PrefixList": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "prefix_list_id", js: "prefix_list_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "cidr_blocks", js: "cidr_blocks", typ: u(undefined, "") },
    ], false),
    "PricingProduct": o([
        { json: "service_code", js: "service_code", typ: "" },
        { json: "filters", js: "filters", typ: "" },
        { json: "result", js: "result", typ: u(undefined, "") },
    ], false),
    "DataPrometheusWorkspace": o([
        { json: "workspace_id", js: "workspace_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "prometheus_endpoint", js: "prometheus_endpoint", typ: u(undefined, "") },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "PrometheusWorkspaces": o([
        { json: "alias_prefix", js: "alias_prefix", typ: u(undefined, "") },
        { json: "aliases", js: "aliases", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "workspace_ids", js: "workspace_ids", typ: u(undefined, "") },
    ], false),
    "DataQuicksightDataSet": o([
        { json: "data_set_id", js: "data_set_id", typ: "" },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
    ], false),
    "QuicksightGroup": o([
        { json: "group_name", js: "group_name", typ: "" },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "namespace", js: "namespace", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "principal_id", js: "principal_id", typ: u(undefined, "") },
    ], false),
    "QuicksightTheme": o([
        { json: "theme_id", js: "theme_id", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "base_theme_id", js: "base_theme_id", typ: u(undefined, "") },
        { json: "configuration", js: "configuration", typ: u(undefined, r("QuicksightThemeConfiguration")) },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "permissions", js: "permissions", typ: u(undefined, r("Permissions")) },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version_description", js: "version_description", typ: u(undefined, "") },
        { json: "version_number", js: "version_number", typ: u(undefined, "") },
        { json: "principal", js: "principal", typ: u(undefined, "") },
        { json: "data_color_palette", js: "data_color_palette", typ: u(undefined, r("DataColorPalette")) },
        { json: "sheet", js: "sheet", typ: u(undefined, r("Sheet")) },
        { json: "typography", js: "typography", typ: u(undefined, r("Typography")) },
        { json: "ui_color_palette", js: "ui_color_palette", typ: u(undefined, r("UIColorPalette")) },
        { json: "min_max_gradient", js: "min_max_gradient", typ: u(undefined, "") },
        { json: "tile", js: "tile", typ: u(undefined, r("Tile")) },
        { json: "tile_layout", js: "tile_layout", typ: u(undefined, r("TileLayout")) },
        { json: "border", js: "border", typ: u(undefined, r("Border")) },
        { json: "show", js: "show", typ: u(undefined, "") },
        { json: "gutter", js: "gutter", typ: u(undefined, r("Border")) },
        { json: "margin", js: "margin", typ: u(undefined, r("Border")) },
        { json: "font_families", js: "font_families", typ: u(undefined, r("FontFamilies")) },
        { json: "font_family", js: "font_family", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Border": o([
        { json: "show", js: "show", typ: "" },
    ], false),
    "QuicksightThemeConfiguration": o([
        { json: "data_color_palette", js: "data_color_palette", typ: "" },
        { json: "sheet", js: "sheet", typ: "" },
        { json: "typography", js: "typography", typ: "" },
        { json: "ui_color_palette", js: "ui_color_palette", typ: "" },
    ], false),
    "DataColorPalette": o([
        { json: "colors", js: "colors", typ: "" },
        { json: "empty_fill_color", js: "empty_fill_color", typ: "" },
        { json: "min_max_gradient", js: "min_max_gradient", typ: "" },
    ], false),
    "FontFamilies": o([
        { json: "font_family", js: "font_family", typ: "" },
    ], false),
    "Permissions": o([
        { json: "actions", js: "actions", typ: "" },
        { json: "principal", js: "principal", typ: "" },
    ], false),
    "Sheet": o([
        { json: "tile", js: "tile", typ: "" },
        { json: "tile_layout", js: "tile_layout", typ: "" },
    ], false),
    "Tile": o([
        { json: "border", js: "border", typ: "" },
    ], false),
    "TileLayout": o([
        { json: "gutter", js: "gutter", typ: "" },
        { json: "margin", js: "margin", typ: "" },
    ], false),
    "Typography": o([
        { json: "font_families", js: "font_families", typ: "" },
    ], false),
    "UIColorPalette": o([
        { json: "accent", js: "accent", typ: "" },
        { json: "accent_foreground", js: "accent_foreground", typ: "" },
        { json: "danger", js: "danger", typ: "" },
        { json: "danger_foreground", js: "danger_foreground", typ: "" },
        { json: "dimension", js: "dimension", typ: "" },
        { json: "dimension_foreground", js: "dimension_foreground", typ: "" },
        { json: "measure", js: "measure", typ: "" },
        { json: "measure_foreground", js: "measure_foreground", typ: "" },
        { json: "primary_background", js: "primary_background", typ: "" },
        { json: "primary_foreground", js: "primary_foreground", typ: "" },
        { json: "secondary_background", js: "secondary_background", typ: "" },
        { json: "secondary_foreground", js: "secondary_foreground", typ: "" },
        { json: "success", js: "success", typ: "" },
        { json: "success_foreground", js: "success_foreground", typ: "" },
        { json: "warning", js: "warning", typ: "" },
        { json: "warning_foreground", js: "warning_foreground", typ: "" },
    ], false),
    "DataQuicksightUser": o([
        { json: "user_name", js: "user_name", typ: "" },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "namespace", js: "namespace", typ: u(undefined, "") },
        { json: "active", js: "active", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "email", js: "email", typ: u(undefined, "") },
        { json: "identity_type", js: "identity_type", typ: u(undefined, "") },
        { json: "principal_id", js: "principal_id", typ: u(undefined, "") },
        { json: "user_role", js: "user_role", typ: u(undefined, "") },
    ], false),
    "DataRAMResourceShare": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owning_account_id", js: "owning_account_id", typ: u(undefined, "") },
        { json: "resource_arns", js: "resource_arns", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "RDSCertificate": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "latest_valid_till", js: "latest_valid_till", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate_type", js: "certificate_type", typ: u(undefined, "") },
        { json: "customer_override", js: "customer_override", typ: u(undefined, "") },
        { json: "customer_override_valid_till", js: "customer_override_valid_till", typ: u(undefined, "") },
        { json: "thumbprint", js: "thumbprint", typ: u(undefined, "") },
        { json: "valid_from", js: "valid_from", typ: u(undefined, "") },
        { json: "valid_till", js: "valid_till", typ: u(undefined, "") },
    ], false),
    "DataRDSCluster": o([
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "RDSClusters": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "cluster_arns", js: "cluster_arns", typ: u(undefined, "") },
        { json: "cluster_identifiers", js: "cluster_identifiers", typ: u(undefined, "") },
    ], false),
    "RDSEngineVersion": o([
        { json: "engine", js: "engine", typ: "" },
        { json: "default_only", js: "default_only", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "include_all", js: "include_all", typ: u(undefined, "") },
        { json: "parameter_group_family", js: "parameter_group_family", typ: u(undefined, "") },
        { json: "preferred_versions", js: "preferred_versions", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "default_character_set", js: "default_character_set", typ: u(undefined, "") },
        { json: "engine_description", js: "engine_description", typ: u(undefined, "") },
        { json: "exportable_log_types", js: "exportable_log_types", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "supported_character_sets", js: "supported_character_sets", typ: u(undefined, "") },
        { json: "supported_feature_names", js: "supported_feature_names", typ: u(undefined, "") },
        { json: "supported_modes", js: "supported_modes", typ: u(undefined, "") },
        { json: "supported_timezones", js: "supported_timezones", typ: u(undefined, "") },
        { json: "supports_global_databases", js: "supports_global_databases", typ: u(undefined, "") },
        { json: "supports_log_exports_to_cloudwatch", js: "supports_log_exports_to_cloudwatch", typ: u(undefined, "") },
        { json: "supports_parallel_query", js: "supports_parallel_query", typ: u(undefined, "") },
        { json: "supports_read_replica", js: "supports_read_replica", typ: u(undefined, "") },
        { json: "valid_upgrade_targets", js: "valid_upgrade_targets", typ: u(undefined, "") },
        { json: "version_description", js: "version_description", typ: u(undefined, "") },
    ], false),
    "RDSOrderableDBInstance": o([
        { json: "engine", js: "engine", typ: "" },
        { json: "availability_zone_group", js: "availability_zone_group", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "instance_class", js: "instance_class", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "preferred_instance_classes", js: "preferred_instance_classes", typ: u(undefined, "") },
        { json: "preferred_engine_versions", js: "preferred_engine_versions", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "supports_enhanced_monitoring", js: "supports_enhanced_monitoring", typ: u(undefined, "") },
        { json: "supports_global_databases", js: "supports_global_databases", typ: u(undefined, "") },
        { json: "supports_iam_database_authentication", js: "supports_iam_database_authentication", typ: u(undefined, "") },
        { json: "supports_iops", js: "supports_iops", typ: u(undefined, "") },
        { json: "supports_kerberos_authentication", js: "supports_kerberos_authentication", typ: u(undefined, "") },
        { json: "supports_performance_insights", js: "supports_performance_insights", typ: u(undefined, "") },
        { json: "supports_storage_autoscaling", js: "supports_storage_autoscaling", typ: u(undefined, "") },
        { json: "supports_storage_encryption", js: "supports_storage_encryption", typ: u(undefined, "") },
        { json: "vpc", js: "vpc", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "max_iops_per_db_instance", js: "max_iops_per_db_instance", typ: u(undefined, "") },
        { json: "max_iops_per_gib", js: "max_iops_per_gib", typ: u(undefined, "") },
        { json: "max_storage_size", js: "max_storage_size", typ: u(undefined, "") },
        { json: "min_iops_per_db_instance", js: "min_iops_per_db_instance", typ: u(undefined, "") },
        { json: "min_iops_per_gib", js: "min_iops_per_gib", typ: u(undefined, "") },
        { json: "min_storage_size", js: "min_storage_size", typ: u(undefined, "") },
        { json: "multi_az_capable", js: "multi_az_capable", typ: u(undefined, "") },
        { json: "outpost_capable", js: "outpost_capable", typ: u(undefined, "") },
        { json: "read_replica_capable", js: "read_replica_capable", typ: u(undefined, "") },
        { json: "supported_engine_modes", js: "supported_engine_modes", typ: u(undefined, "") },
        { json: "supported_network_types", js: "supported_network_types", typ: u(undefined, "") },
    ], false),
    "RDSReservedInstanceOffering": o([
        { json: "db_instance_class", js: "db_instance_class", typ: "" },
        { json: "duration", js: "duration", typ: "" },
        { json: "multi_az", js: "multi_az", typ: "" },
        { json: "offering_type", js: "offering_type", typ: "" },
        { json: "product_description", js: "product_description", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "currency_code", js: "currency_code", typ: u(undefined, "") },
        { json: "fixed_price", js: "fixed_price", typ: u(undefined, "") },
        { json: "offering_id", js: "offering_id", typ: u(undefined, "") },
    ], false),
    "DataRedshiftCluster": o([
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "allow_version_upgrade", js: "allow_version_upgrade", typ: u(undefined, "") },
        { json: "automated_snapshot_retention_period", js: "automated_snapshot_retention_period", typ: u(undefined, "") },
        { json: "aqua_configuration_status", js: "aqua_configuration_status", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "availability_zone_relocation_enabled", js: "availability_zone_relocation_enabled", typ: u(undefined, "") },
        { json: "bucket_name", js: "bucket_name", typ: u(undefined, "") },
        { json: "cluster_nodes", js: "cluster_nodes", typ: u(undefined, "") },
        { json: "cluster_parameter_group_name", js: "cluster_parameter_group_name", typ: u(undefined, "") },
        { json: "cluster_public_key", js: "cluster_public_key", typ: u(undefined, "") },
        { json: "cluster_revision_number", js: "cluster_revision_number", typ: u(undefined, "") },
        { json: "cluster_subnet_group_name", js: "cluster_subnet_group_name", typ: u(undefined, "") },
        { json: "cluster_type", js: "cluster_type", typ: u(undefined, "") },
        { json: "cluster_namespace_arn", js: "cluster_namespace_arn", typ: u(undefined, "") },
        { json: "database_name", js: "database_name", typ: u(undefined, "") },
        { json: "default_iam_role_arn", js: "default_iam_role_arn", typ: u(undefined, "") },
        { json: "elastic_ip", js: "elastic_ip", typ: u(undefined, "") },
        { json: "enable_logging", js: "enable_logging", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "enhanced_vpc_routing", js: "enhanced_vpc_routing", typ: u(undefined, "") },
        { json: "iam_roles", js: "iam_roles", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "master_username", js: "master_username", typ: u(undefined, "") },
        { json: "node_type", js: "node_type", typ: u(undefined, "") },
        { json: "number_of_nodes", js: "number_of_nodes", typ: u(undefined, "") },
        { json: "maintenance_track_name", js: "maintenance_track_name", typ: u(undefined, "") },
        { json: "manual_snapshot_retention_period", js: "manual_snapshot_retention_period", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "s3_key_prefix", js: "s3_key_prefix", typ: u(undefined, "") },
        { json: "log_destination_type", js: "log_destination_type", typ: u(undefined, "") },
        { json: "log_exports", js: "log_exports", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "node_role", js: "node_role", typ: u(undefined, "") },
        { json: "private_ip_address", js: "private_ip_address", typ: u(undefined, "") },
        { json: "public_ip_address", js: "public_ip_address", typ: u(undefined, "") },
    ], false),
    "RedshiftClusterCredentials": o([
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "db_user", js: "db_user", typ: "" },
        { json: "auto_create", js: "auto_create", typ: u(undefined, "") },
        { json: "db_name", js: "db_name", typ: u(undefined, "") },
        { json: "db_groups", js: "db_groups", typ: u(undefined, "") },
        { json: "duration_seconds", js: "duration_seconds", typ: u(undefined, "") },
        { json: "db_password", js: "db_password", typ: u(undefined, "") },
        { json: "expiration", js: "expiration", typ: u(undefined, "") },
    ], false),
    "RedshiftOrderableCluster": o([
        { json: "cluster_type", js: "cluster_type", typ: u(undefined, "") },
        { json: "cluster_version", js: "cluster_version", typ: u(undefined, "") },
        { json: "node_type", js: "node_type", typ: u(undefined, "") },
        { json: "preferred_node_types", js: "preferred_node_types", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
    ], false),
    "RedshiftserverlessCredentials": o([
        { json: "workgroup_name", js: "workgroup_name", typ: "" },
        { json: "db_name", js: "db_name", typ: u(undefined, "") },
        { json: "duration_seconds", js: "duration_seconds", typ: u(undefined, "") },
        { json: "db_password", js: "db_password", typ: u(undefined, "") },
        { json: "db_user", js: "db_user", typ: u(undefined, "") },
        { json: "expiration", js: "expiration", typ: u(undefined, "") },
    ], false),
    "DataRedshiftserverlessNamespace": o([
        { json: "namespace_name", js: "namespace_name", typ: "" },
        { json: "admin_username", js: "admin_username", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "db_name", js: "db_name", typ: u(undefined, "") },
        { json: "default_iam_role_arn", js: "default_iam_role_arn", typ: u(undefined, "") },
        { json: "iam_roles", js: "iam_roles", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "log_exports", js: "log_exports", typ: u(undefined, "") },
        { json: "namespace_id", js: "namespace_id", typ: u(undefined, "") },
    ], false),
    "DataRedshiftserverlessWorkgroup": o([
        { json: "workgroup_name", js: "workgroup_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "enhanced_vpc_routing", js: "enhanced_vpc_routing", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "workgroup_id", js: "workgroup_id", typ: u(undefined, "") },
        { json: "address", js: "address", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "vpc_endpoint", js: "vpc_endpoint", typ: u(undefined, "") },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "network_interface", js: "network_interface", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "private_ip_address", js: "private_ip_address", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
    ], false),
    "Region": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
    ], false),
    "DataRegions": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "all_regions", js: "all_regions", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "names", js: "names", typ: u(undefined, "") },
    ], false),
    "ResourcegroupstaggingapiResources": o([
        { json: "key", js: "key", typ: "" },
        { json: "exclude_compliant_resources", js: "exclude_compliant_resources", typ: u(undefined, "") },
        { json: "include_compliance_details", js: "include_compliance_details", typ: u(undefined, "") },
        { json: "tag_filter", js: "tag_filter", typ: u(undefined, "") },
        { json: "resource_type_filters", js: "resource_type_filters", typ: u(undefined, "") },
        { json: "resource_arn_list", js: "resource_arn_list", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
    ], false),
    "RoutesClass": o([
        { json: "route_table_id", js: "route_table_id", typ: u(undefined, "") },
        { json: "carrier_gateway_id", js: "carrier_gateway_id", typ: u(undefined, "") },
        { json: "core_network_arn", js: "core_network_arn", typ: u(undefined, "") },
        { json: "destination_cidr_block", js: "destination_cidr_block", typ: u(undefined, "") },
        { json: "destination_ipv6_cidr_block", js: "destination_ipv6_cidr_block", typ: u(undefined, "") },
        { json: "destination_prefix_list_id", js: "destination_prefix_list_id", typ: u(undefined, "") },
        { json: "egress_only_gateway_id", js: "egress_only_gateway_id", typ: u(undefined, "") },
        { json: "gateway_id", js: "gateway_id", typ: u(undefined, "") },
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
        { json: "local_gateway_id", js: "local_gateway_id", typ: u(undefined, "") },
        { json: "nat_gateway_id", js: "nat_gateway_id", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "vpc_peering_connection_id", js: "vpc_peering_connection_id", typ: u(undefined, "") },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "ipv6_cidr_block", js: "ipv6_cidr_block", typ: u(undefined, "") },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: u(undefined, "") },
    ], false),
    "Route53DelegationSet": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "caller_reference", js: "caller_reference", typ: u(undefined, "") },
        { json: "name_servers", js: "name_servers", typ: u(undefined, "") },
        { json: "reference_name", js: "reference_name", typ: u(undefined, "") },
    ], false),
    "DataRoute53ResolverEndpoint": o([
        { json: "resolver_endpoint_id", js: "resolver_endpoint_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "direction", js: "direction", typ: u(undefined, "") },
        { json: "ip_addresses", js: "ip_addresses", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "Route53ResolverConfig": o([
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "firewall_fail_open", js: "firewall_fail_open", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "autodefined_reverse_flag", js: "autodefined_reverse_flag", typ: u(undefined, "") },
    ], false),
    "Route53ResolverFirewallDomainList": o([
        { json: "firewall_domain_list_id", js: "firewall_domain_list_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "creator_request_id", js: "creator_request_id", typ: u(undefined, "") },
        { json: "domain_count", js: "domain_count", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "managed_owner_name", js: "managed_owner_name", typ: u(undefined, "") },
        { json: "modification_time", js: "modification_time", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
    ], false),
    "Route53ResolverFirewallRuleGroup": o([
        { json: "firewall_rule_group_id", js: "firewall_rule_group_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "creator_request_id", js: "creator_request_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "modification_time", js: "modification_time", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "rule_count", js: "rule_count", typ: u(undefined, "") },
        { json: "share_status", js: "share_status", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
    ], false),
    "DataRoute53ResolverFirewallRuleGroupAssociation": o([
        { json: "firewall_rule_group_association_id", js: "firewall_rule_group_association_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "creator_request_id", js: "creator_request_id", typ: u(undefined, "") },
        { json: "firewall_rule_group_id", js: "firewall_rule_group_id", typ: u(undefined, "") },
        { json: "managed_owner_name", js: "managed_owner_name", typ: u(undefined, "") },
        { json: "modification_time", js: "modification_time", typ: u(undefined, "") },
        { json: "mutation_protection", js: "mutation_protection", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "Route53ResolverFirewallRules": o([
        { json: "firewall_rule_group_id", js: "firewall_rule_group_id", typ: "" },
        { json: "action", js: "action", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "firewall_rules", js: "firewall_rules", typ: u(undefined, "") },
        { json: "block_override_dns_type", js: "block_override_dns_type", typ: u(undefined, "") },
        { json: "block_override_domain", js: "block_override_domain", typ: u(undefined, "") },
        { json: "block_override_ttl", js: "block_override_ttl", typ: u(undefined, "") },
        { json: "block_response", js: "block_response", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "creator_request_id", js: "creator_request_id", typ: u(undefined, "") },
        { json: "firewall_domain_list_id", js: "firewall_domain_list_id", typ: u(undefined, "") },
        { json: "modification_time", js: "modification_time", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
    ], false),
    "Route53ResolverQueryLogConfig": o([
        { json: "resolver_query_log_config_id", js: "resolver_query_log_config_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "destination_arn", js: "destination_arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "share_status", js: "share_status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53Resolver": o([
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "rule_type", js: "rule_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "share_status", js: "share_status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53ResolverRules": o([
        { json: "name_regex", js: "name_regex", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "resolver_rule_ids", js: "resolver_rule_ids", typ: u(undefined, "") },
    ], false),
    "Route53TrafficPolicyDocument": o([
        { json: "id", js: "id", typ: "" },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "record_type", js: "record_type", typ: u(undefined, "") },
        { json: "rule", js: "rule", typ: u(undefined, "") },
        { json: "start_endpoint", js: "start_endpoint", typ: u(undefined, "") },
        { json: "start_rule", js: "start_rule", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "primary", js: "primary", typ: u(undefined, "") },
        { json: "secondary", js: "secondary", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "geo_proximity_location", js: "geo_proximity_location", typ: u(undefined, "") },
        { json: "regions", js: "regions", typ: u(undefined, "") },
        { json: "items", js: "items", typ: u(undefined, "") },
        { json: "endpoint_reference", js: "endpoint_reference", typ: u(undefined, "") },
        { json: "evaluate_target_health", js: "evaluate_target_health", typ: u(undefined, "") },
        { json: "health_check", js: "health_check", typ: u(undefined, "") },
        { json: "rule_reference", js: "rule_reference", typ: u(undefined, "") },
        { json: "continent", js: "continent", typ: u(undefined, "") },
        { json: "country", js: "country", typ: u(undefined, "") },
        { json: "is_default", js: "is_default", typ: u(undefined, "") },
        { json: "subdivision", js: "subdivision", typ: u(undefined, "") },
        { json: "bias", js: "bias", typ: u(undefined, "") },
        { json: "latitude", js: "latitude", typ: u(undefined, "") },
        { json: "longitude", js: "longitude", typ: u(undefined, "") },
        { json: "json", js: "json", typ: u(undefined, "") },
    ], false),
    "DataRoute53Zone": o([
        { json: "zone_id", js: "zone_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "private_zone", js: "private_zone", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "caller_reference", js: "caller_reference", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "name_servers", js: "name_servers", typ: u(undefined, "") },
        { json: "primary_name_server", js: "primary_name_server", typ: u(undefined, "") },
        { json: "resource_record_set_count", js: "resource_record_set_count", typ: u(undefined, "") },
        { json: "linked_service_principal", js: "linked_service_principal", typ: u(undefined, "") },
        { json: "linked_service_description", js: "linked_service_description", typ: u(undefined, "") },
    ], false),
    "DataRouteTable": o([
        { json: "filter", js: "filter", typ: u(undefined, r("Ec2ClientVPNEndpointFilter")) },
        { json: "gateway_id", js: "gateway_id", typ: u(undefined, "") },
        { json: "route_table_id", js: "route_table_id", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "associations", js: "associations", typ: u(undefined, r("Associations")) },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "routes", js: "routes", typ: u(undefined, r("RoutesClass")) },
        { json: "vpc_peering_connection_id", js: "vpc_peering_connection_id", typ: u(undefined, "") },
    ], false),
    "Associations": o([
        { json: "gateway_id", js: "gateway_id", typ: "" },
        { json: "main", js: "main", typ: "" },
        { json: "route_table_association_id", js: "route_table_association_id", typ: "" },
        { json: "route_table_id", js: "route_table_id", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: "" },
    ], false),
    "S3AccountPublicAccessBlock": o([
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "block_public_acls", js: "block_public_acls", typ: u(undefined, "") },
        { json: "block_public_policy", js: "block_public_policy", typ: u(undefined, "") },
        { json: "ignore_public_acls", js: "ignore_public_acls", typ: u(undefined, "") },
        { json: "restrict_public_buckets", js: "restrict_public_buckets", typ: u(undefined, "") },
    ], false),
    "DataS3Bucket": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "bucket_domain_name", js: "bucket_domain_name", typ: u(undefined, "") },
        { json: "bucket_regional_domain_name", js: "bucket_regional_domain_name", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "website_endpoint", js: "website_endpoint", typ: u(undefined, "") },
        { json: "website_domain", js: "website_domain", typ: u(undefined, "") },
    ], false),
    "DataS3BucketObject": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "version_id", js: "version_id", typ: u(undefined, "") },
        { json: "bucket_key_enabled", js: "bucket_key_enabled", typ: u(undefined, "") },
        { json: "cache_control", js: "cache_control", typ: u(undefined, "") },
        { json: "content_disposition", js: "content_disposition", typ: u(undefined, "") },
        { json: "content_encoding", js: "content_encoding", typ: u(undefined, "") },
        { json: "content_language", js: "content_language", typ: u(undefined, "") },
        { json: "content_length", js: "content_length", typ: u(undefined, "") },
        { json: "content_type", js: "content_type", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "expiration", js: "expiration", typ: u(undefined, "") },
        { json: "expires", js: "expires", typ: u(undefined, "") },
        { json: "last_modified", js: "last_modified", typ: u(undefined, "") },
        { json: "metadata", js: "metadata", typ: u(undefined, "") },
        { json: "object_lock_legal_hold_status", js: "object_lock_legal_hold_status", typ: u(undefined, "") },
        { json: "object_lock_mode", js: "object_lock_mode", typ: u(undefined, "") },
        { json: "object_lock_retain_until_date", js: "object_lock_retain_until_date", typ: u(undefined, "") },
        { json: "server_side_encryption", js: "server_side_encryption", typ: u(undefined, "") },
        { json: "sse_kms_key_id", js: "sse_kms_key_id", typ: u(undefined, "") },
        { json: "storage_class", js: "storage_class", typ: u(undefined, "") },
        { json: "website_redirect_location", js: "website_redirect_location", typ: u(undefined, "") },
        { json: "checksum_mode", js: "checksum_mode", typ: u(undefined, "") },
        { json: "checksum_crc32", js: "checksum_crc32", typ: u(undefined, "") },
        { json: "checksum_crc32c", js: "checksum_crc32c", typ: u(undefined, "") },
        { json: "checksum_sha1", js: "checksum_sha1", typ: u(undefined, "") },
        { json: "checksum_sha256", js: "checksum_sha256", typ: u(undefined, "") },
    ], false),
    "S3Objects": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "delimiter", js: "delimiter", typ: u(undefined, "") },
        { json: "encoding_type", js: "encoding_type", typ: u(undefined, "") },
        { json: "max_keys", js: "max_keys", typ: u(undefined, "") },
        { json: "start_after", js: "start_after", typ: u(undefined, "") },
        { json: "fetch_owner", js: "fetch_owner", typ: u(undefined, "") },
        { json: "keys", js: "keys", typ: u(undefined, "") },
        { json: "common_prefixes", js: "common_prefixes", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owners", js: "owners", typ: u(undefined, "") },
        { json: "request_payer", js: "request_payer", typ: u(undefined, "") },
        { json: "request_charged", js: "request_charged", typ: u(undefined, "") },
    ], false),
    "S3BucketPolicy": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "policy", js: "policy", typ: u(undefined, "") },
    ], false),
    "DataS3ControlMultiRegionAccessPoint": o([
        { json: "name", js: "name", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "public_access_block", js: "public_access_block", typ: u(undefined, "") },
        { json: "regions", js: "regions", typ: u(undefined, r("S3ControlMultiRegionAccessPointRegions")) },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "S3ControlMultiRegionAccessPointRegions": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "bucket_account_id", js: "bucket_account_id", typ: "" },
        { json: "region", js: "region", typ: "" },
    ], false),
    "SagemakerPrebuiltEcrImage": o([
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "dns_suffix", js: "dns_suffix", typ: u(undefined, "") },
        { json: "image_tag", js: "image_tag", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
        { json: "registry_path", js: "registry_path", typ: u(undefined, "") },
    ], false),
    "SecretsmanagerRandomPassword": o([
        { json: "exclude_characters", js: "exclude_characters", typ: u(undefined, "") },
        { json: "exclude_lowercase", js: "exclude_lowercase", typ: u(undefined, "") },
        { json: "exclude_numbers", js: "exclude_numbers", typ: u(undefined, "") },
        { json: "exclude_uppercase", js: "exclude_uppercase", typ: u(undefined, "") },
        { json: "include_space", js: "include_space", typ: u(undefined, "") },
        { json: "password_length", js: "password_length", typ: u(undefined, "") },
        { json: "require_each_included_type", js: "require_each_included_type", typ: u(undefined, "") },
        { json: "random_password", js: "random_password", typ: u(undefined, "") },
    ], false),
    "DataSecretsmanagerSecret": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
    ], false),
    "DataSecretsmanagerSecretRotation": o([
        { json: "secret_id", js: "secret_id", typ: "" },
        { json: "rotation_enabled", js: "rotation_enabled", typ: u(undefined, "") },
        { json: "rotation_lambda_arn", js: "rotation_lambda_arn", typ: u(undefined, "") },
        { json: "rotation_rules", js: "rotation_rules", typ: u(undefined, "") },
    ], false),
    "SecretsmanagerSecretVersion": o([
        { json: "secret_id", js: "secret_id", typ: "" },
        { json: "version_id", js: "version_id", typ: u(undefined, "") },
        { json: "version_stage", js: "version_stage", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "secret_string", js: "secret_string", typ: u(undefined, "") },
        { json: "secret_binary", js: "secret_binary", typ: u(undefined, "") },
    ], false),
    "SecurityGroups": o([
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ids", js: "ids", typ: u(undefined, "") },
    ], false),
    "ServerlessapplicationrepositoryApplication": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "semantic_version", js: "semantic_version", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "required_capabilities", js: "required_capabilities", typ: u(undefined, "") },
        { json: "source_code_url", js: "source_code_url", typ: u(undefined, "") },
        { json: "template_url", js: "template_url", typ: u(undefined, "") },
    ], false),
    "DataService": o([
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "partition", js: "partition", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "reverse_dns_name", js: "reverse_dns_name", typ: u(undefined, "") },
        { json: "reverse_dns_prefix", js: "reverse_dns_prefix", typ: u(undefined, "") },
        { json: "service_id", js: "service_id", typ: u(undefined, "") },
        { json: "supported", js: "supported", typ: u(undefined, "") },
    ], false),
    "ServiceDiscoveryDNSNamespace": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "hosted_zone", js: "hosted_zone", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc", js: "vpc", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ServiceDiscoveryService": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "namespace_id", js: "namespace_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "dns_config", js: "dns_config", typ: u(undefined, r("DNSConfig")) },
        { json: "health_check_config", js: "health_check_config", typ: u(undefined, r("HealthCheckConfig")) },
        { json: "health_check_custom_config", js: "health_check_custom_config", typ: u(undefined, r("HealthCheckCustomConfig")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DNSConfig": o([
        { json: "namespace_id", js: "namespace_id", typ: "" },
        { json: "dns_records", js: "dns_records", typ: "" },
        { json: "routing_policy", js: "routing_policy", typ: "" },
        { json: "ttl", js: "ttl", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "HealthCheckConfig": o([
        { json: "failure_threshold", js: "failure_threshold", typ: "" },
        { json: "resource_path", js: "resource_path", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "HealthCheckCustomConfig": o([
        { json: "failure_threshold", js: "failure_threshold", typ: "" },
    ], false),
    "ServicecatalogConstraint": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "portfolio_id", js: "portfolio_id", typ: u(undefined, "") },
        { json: "product_id", js: "product_id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "ServicecatalogLaunchPaths": o([
        { json: "product_id", js: "product_id", typ: "" },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "summaries", js: "summaries", typ: u(undefined, r("Summaries")) },
        { json: "constraint_summaries", js: "constraint_summaries", typ: u(undefined, r("ConstraintSummaries")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "ConstraintSummaries": o([
        { json: "description", js: "description", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "Summaries": o([
        { json: "constraint_summaries", js: "constraint_summaries", typ: "" },
        { json: "path_id", js: "path_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "tags", js: "tags", typ: "" },
    ], false),
    "ServicecatalogPortfolio": o([
        { json: "id", js: "id", typ: "" },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "provider_name", js: "provider_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "ServicecatalogPortfolioConstraints": o([
        { json: "portfolio_id", js: "portfolio_id", typ: "" },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "product_id", js: "product_id", typ: u(undefined, "") },
        { json: "details", js: "details", typ: u(undefined, r("Details")) },
    ], false),
    "Details": o([
        { json: "constraint_id", js: "constraint_id", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "portfolio_id", js: "portfolio_id", typ: "" },
        { json: "product_id", js: "product_id", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "ServicecatalogProduct": o([
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "distributor", js: "distributor", typ: u(undefined, "") },
        { json: "has_default_path", js: "has_default_path", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "support_description", js: "support_description", typ: u(undefined, "") },
        { json: "support_email", js: "support_email", typ: u(undefined, "") },
        { json: "support_url", js: "support_url", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "provisioning_artifact_parameters", js: "provisioning_artifact_parameters", typ: u(undefined, r("ProvisioningArtifactParameters")) },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ProvisioningArtifactParameters": o([
        { json: "description", js: "description", typ: "" },
        { json: "disable_template_validation", js: "disable_template_validation", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "template_physical_id", js: "template_physical_id", typ: "" },
        { json: "template_url", js: "template_url", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "ServicecatalogProvisioningArtifacts": o([
        { json: "product_id", js: "product_id", typ: "" },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "provisioning_artifact_details", js: "provisioning_artifact_details", typ: u(undefined, r("ProvisioningArtifactDetails")) },
    ], false),
    "ProvisioningArtifactDetails": o([
        { json: "active", js: "active", typ: "" },
        { json: "created_time", js: "created_time", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "guidance", js: "guidance", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "ServicequotasService": o([
        { json: "service_name", js: "service_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "service_code", js: "service_code", typ: u(undefined, "") },
    ], false),
    "ServicequotasServiceQuota": o([
        { json: "service_code", js: "service_code", typ: "" },
        { json: "quota_code", js: "quota_code", typ: u(undefined, "") },
        { json: "quota_name", js: "quota_name", typ: u(undefined, "") },
        { json: "adjustable", js: "adjustable", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "default_value", js: "default_value", typ: u(undefined, "") },
        { json: "global_quota", js: "global_quota", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "service_name", js: "service_name", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
    ], false),
    "SesActiveReceiptRuleSet": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "rule_set_name", js: "rule_set_name", typ: u(undefined, "") },
    ], false),
    "SesDomainIdentity": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "domain", js: "domain", typ: u(undefined, "") },
        { json: "verification_token", js: "verification_token", typ: u(undefined, "") },
    ], false),
    "SesEmailIdentity": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "email", js: "email", typ: u(undefined, "") },
    ], false),
    "DataSesv2ConfigurationSet": o([
        { json: "configuration_set_name", js: "configuration_set_name", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "Sesv2DedicatedIPPool": o([
        { json: "pool_name", js: "pool_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "dedicated_ips", js: "dedicated_ips", typ: u(undefined, r("DedicatedIPS")) },
        { json: "scaling_mode", js: "scaling_mode", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "DedicatedIPS": o([
        { json: "ip", js: "ip", typ: "" },
        { json: "warmup_percentage", js: "warmup_percentage", typ: "" },
        { json: "warmup_status", js: "warmup_status", typ: "" },
    ], false),
    "DataSesv2EmailIdentity": o([
        { json: "email_identity", js: "email_identity", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "identity_type", js: "identity_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "verified_for_sending_status", js: "verified_for_sending_status", typ: u(undefined, "") },
    ], false),
    "Sesv2EmailIdentityMailFromAttributes": o([
        { json: "email_identity", js: "email_identity", typ: "" },
        { json: "behavior_on_mx_failure", js: "behavior_on_mx_failure", typ: u(undefined, "") },
        { json: "mail_from_domain", js: "mail_from_domain", typ: u(undefined, "") },
    ], false),
    "DataSfnAlias": o([
        { json: "name", js: "name", typ: "" },
        { json: "statemachine_arn", js: "statemachine_arn", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "routing_configuration", js: "routing_configuration", typ: u(undefined, "") },
    ], false),
    "DataSfnStateMachine": o([
        { json: "name", js: "name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "definition", js: "definition", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "revision_id", js: "revision_id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "SfnStateMachineVersions": o([
        { json: "statemachine_arn", js: "statemachine_arn", typ: "" },
        { json: "statemachine_versions", js: "statemachine_versions", typ: u(undefined, "") },
    ], false),
    "DataSignerSigningJob": o([
        { json: "job_id", js: "job_id", typ: "" },
        { json: "completed_at", js: "completed_at", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "job_invoker", js: "job_invoker", typ: u(undefined, "") },
        { json: "job_owner", js: "job_owner", typ: u(undefined, "") },
        { json: "platform_display_name", js: "platform_display_name", typ: u(undefined, "") },
        { json: "platform_id", js: "platform_id", typ: u(undefined, "") },
        { json: "profile_name", js: "profile_name", typ: u(undefined, "") },
        { json: "profile_version", js: "profile_version", typ: u(undefined, "") },
        { json: "requested_by", js: "requested_by", typ: u(undefined, "") },
        { json: "revocation_record", js: "revocation_record", typ: u(undefined, "") },
        { json: "signature_expires_at", js: "signature_expires_at", typ: u(undefined, "") },
        { json: "signed_object", js: "signed_object", typ: u(undefined, "") },
        { json: "source", js: "source", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_reason", js: "status_reason", typ: u(undefined, "") },
    ], false),
    "SignerSigningProfile": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "platform_display_name", js: "platform_display_name", typ: u(undefined, "") },
        { json: "platform_id", js: "platform_id", typ: u(undefined, "") },
        { json: "revocation_record", js: "revocation_record", typ: u(undefined, "") },
        { json: "signature_validity_period", js: "signature_validity_period", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "version_arn", js: "version_arn", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventBusClass": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "default_job_timeout_minutes", js: "default_job_timeout_minutes", typ: u(undefined, "") },
        { json: "deprecated", js: "deprecated", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "monitoring_schedule_config", js: "monitoring_schedule_config", typ: u(undefined, r("MonitoringScheduleConfig")) },
        { json: "group_id", js: "group_id", typ: u(undefined, "") },
    ], false),
    "MonitoringScheduleConfig": o([
        { json: "monitoring_job_definition_name", js: "monitoring_job_definition_name", typ: "" },
        { json: "monitoring_type", js: "monitoring_type", typ: "" },
        { json: "schedule_config", js: "schedule_config", typ: u(undefined, "") },
    ], false),
    "SqsQueues": o([
        { json: "queue_name_prefix", js: "queue_name_prefix", typ: u(undefined, "") },
        { json: "queue_urls", js: "queue_urls", typ: u(undefined, "") },
    ], false),
    "DataSsmDocument": o([
        { json: "name", js: "name", typ: "" },
        { json: "document_format", js: "document_format", typ: u(undefined, "") },
        { json: "document_version", js: "document_version", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "document_type", js: "document_type", typ: u(undefined, "") },
    ], false),
    "DataSsmParameter": o([
        { json: "name", js: "name", typ: "" },
        { json: "with_decryption", js: "with_decryption", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "SsmParametersByPath": o([
        { json: "path", js: "path", typ: "" },
        { json: "with_decryption", js: "with_decryption", typ: u(undefined, "") },
        { json: "recursive", js: "recursive", typ: u(undefined, "") },
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "names", js: "names", typ: u(undefined, "") },
        { json: "types", js: "types", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
    ], false),
    "DataSsmPatchBaseline": o([
        { json: "owner", js: "owner", typ: "" },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "default_baseline", js: "default_baseline", typ: u(undefined, "") },
        { json: "operating_system", js: "operating_system", typ: u(undefined, "") },
        { json: "approved_patches", js: "approved_patches", typ: u(undefined, "") },
        { json: "approved_patches_compliance_level", js: "approved_patches_compliance_level", typ: u(undefined, "") },
        { json: "approved_patches_enable_non_security", js: "approved_patches_enable_non_security", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "rejected_patches", js: "rejected_patches", typ: u(undefined, "") },
        { json: "rejected_patches_action", js: "rejected_patches_action", typ: u(undefined, "") },
    ], false),
    "SsmcontactsContact": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "SsmcontactsPlan": o([
        { json: "contact_id", js: "contact_id", typ: "" },
        { json: "stage", js: "stage", typ: u(undefined, "") },
    ], false),
    "DataSsmincidentsReplicationSet": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "created_by", js: "created_by", typ: u(undefined, "") },
        { json: "deletion_protected", js: "deletion_protected", typ: u(undefined, "") },
        { json: "last_modified_by", js: "last_modified_by", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
    ], false),
    "SsmincidentsResponsePlan": o([
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "chat_channel", js: "chat_channel", typ: u(undefined, "") },
        { json: "engagements", js: "engagements", typ: u(undefined, "") },
        { json: "title", js: "title", typ: u(undefined, "") },
        { json: "dedupe_string", js: "dedupe_string", typ: u(undefined, "") },
        { json: "incident_tags", js: "incident_tags", typ: u(undefined, "") },
        { json: "summary", js: "summary", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SsoadminInstances": o([
        { json: "arns", js: "arns", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "identity_store_ids", js: "identity_store_ids", typ: u(undefined, "") },
    ], false),
    "SsoadminPermissionSet": o([
        { json: "instance_arn", js: "instance_arn", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "relay_state", js: "relay_state", typ: u(undefined, "") },
        { json: "session_duration", js: "session_duration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "StoragegatewayLocalDiskClass": o([
        { json: "gateway_arn", js: "gateway_arn", typ: "" },
        { json: "disk_node", js: "disk_node", typ: u(undefined, "") },
        { json: "disk_path", js: "disk_path", typ: u(undefined, "") },
        { json: "disk_id", js: "disk_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Subnet": o([
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "availability_zone_id", js: "availability_zone_id", typ: u(undefined, "") },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "default_for_az", js: "default_for_az", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, r("Ec2ClientVPNEndpointFilter")) },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ipv6_cidr_block", js: "ipv6_cidr_block", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "assign_ipv6_address_on_creation", js: "assign_ipv6_address_on_creation", typ: u(undefined, "") },
        { json: "available_ip_address_count", js: "available_ip_address_count", typ: u(undefined, "") },
        { json: "customer_owned_ipv4_pool", js: "customer_owned_ipv4_pool", typ: u(undefined, "") },
        { json: "enable_dns64", js: "enable_dns64", typ: u(undefined, "") },
        { json: "enable_lni_at_device_index", js: "enable_lni_at_device_index", typ: u(undefined, "") },
        { json: "enable_resource_name_dns_aaaa_record_on_launch", js: "enable_resource_name_dns_aaaa_record_on_launch", typ: u(undefined, "") },
        { json: "enable_resource_name_dns_a_record_on_launch", js: "enable_resource_name_dns_a_record_on_launch", typ: u(undefined, "") },
        { json: "ipv6_cidr_block_association_id", js: "ipv6_cidr_block_association_id", typ: u(undefined, "") },
        { json: "ipv6_native", js: "ipv6_native", typ: u(undefined, "") },
        { json: "map_customer_owned_ip_on_launch", js: "map_customer_owned_ip_on_launch", typ: u(undefined, "") },
        { json: "map_public_ip_on_launch", js: "map_public_ip_on_launch", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "private_dns_hostname_type_on_launch", js: "private_dns_hostname_type_on_launch", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataTransferServer": o([
        { json: "server_id", js: "server_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
        { json: "domain", js: "domain", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "endpoint_type", js: "endpoint_type", typ: u(undefined, "") },
        { json: "identity_provider_type", js: "identity_provider_type", typ: u(undefined, "") },
        { json: "invocation_role", js: "invocation_role", typ: u(undefined, "") },
        { json: "logging_role", js: "logging_role", typ: u(undefined, "") },
        { json: "protocols", js: "protocols", typ: u(undefined, "") },
        { json: "security_policy_name", js: "security_policy_name", typ: u(undefined, "") },
        { json: "structured_log_destinations", js: "structured_log_destinations", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
    ], false),
    "DataVpc": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "dhcp_options_id", js: "dhcp_options_id", typ: u(undefined, "") },
        { json: "default", js: "default", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "enable_dns_support", js: "enable_dns_support", typ: u(undefined, "") },
        { json: "enable_network_address_usage_metrics", js: "enable_network_address_usage_metrics", typ: u(undefined, "") },
        { json: "enable_dns_hostnames", js: "enable_dns_hostnames", typ: u(undefined, "") },
        { json: "instance_tenancy", js: "instance_tenancy", typ: u(undefined, "") },
        { json: "ipv6_association_id", js: "ipv6_association_id", typ: u(undefined, "") },
        { json: "ipv6_cidr_block", js: "ipv6_cidr_block", typ: u(undefined, "") },
        { json: "main_route_table_id", js: "main_route_table_id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
    ], false),
    "VpcDHCPOptions": o([
        { json: "dhcp_options_id", js: "dhcp_options_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, r("Ec2ClientVPNEndpointFilter")) },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "domain_name_servers", js: "domain_name_servers", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "netbios_name_servers", js: "netbios_name_servers", typ: u(undefined, "") },
        { json: "netbios_node_type", js: "netbios_node_type", typ: u(undefined, "") },
        { json: "ntp_servers", js: "ntp_servers", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataVpcEndpoint": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "service_name", js: "service_name", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cidr_blocks", js: "cidr_blocks", typ: u(undefined, "") },
        { json: "dns_entry", js: "dns_entry", typ: u(undefined, "") },
        { json: "dns_options", js: "dns_options", typ: u(undefined, "") },
        { json: "network_interface_ids", js: "network_interface_ids", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "prefix_list_id", js: "prefix_list_id", typ: u(undefined, "") },
        { json: "private_dns_enabled", js: "private_dns_enabled", typ: u(undefined, "") },
        { json: "requester_managed", js: "requester_managed", typ: u(undefined, "") },
        { json: "route_table_ids", js: "route_table_ids", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "vpc_endpoint_type", js: "vpc_endpoint_type", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
        { json: "dns_record_ip_type", js: "dns_record_ip_type", typ: u(undefined, "") },
        { json: "private_dns_only_for_inbound_resolver_endpoint", js: "private_dns_only_for_inbound_resolver_endpoint", typ: u(undefined, "") },
    ], false),
    "DataVpcEndpointService": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "service", js: "service", typ: u(undefined, "") },
        { json: "service_name", js: "service_name", typ: u(undefined, "") },
        { json: "service_type", js: "service_type", typ: u(undefined, "") },
        { json: "acceptance_required", js: "acceptance_required", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "base_endpoint_dns_names", js: "base_endpoint_dns_names", typ: u(undefined, "") },
        { json: "manages_vpc_endpoints", js: "manages_vpc_endpoints", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "private_dns_name", js: "private_dns_name", typ: u(undefined, "") },
        { json: "service_id", js: "service_id", typ: u(undefined, "") },
        { json: "supported_ip_address_types", js: "supported_ip_address_types", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_endpoint_policy_supported", js: "vpc_endpoint_policy_supported", typ: u(undefined, "") },
    ], false),
    "VpcIPAMPool": o([
        { json: "ipam_pool_id", js: "ipam_pool_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, r("Ec2ClientVPNEndpointFilter")) },
        { json: "address_family", js: "address_family", typ: u(undefined, "") },
        { json: "allocation_default_netmask_length", js: "allocation_default_netmask_length", typ: u(undefined, "") },
        { json: "allocation_max_netmask_length", js: "allocation_max_netmask_length", typ: u(undefined, "") },
        { json: "allocation_min_netmask_length", js: "allocation_min_netmask_length", typ: u(undefined, "") },
        { json: "allocation_resource_tags", js: "allocation_resource_tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "auto_import", js: "auto_import", typ: u(undefined, "") },
        { json: "aws_service", js: "aws_service", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ipam_scope_id", js: "ipam_scope_id", typ: u(undefined, "") },
        { json: "locale", js: "locale", typ: u(undefined, "") },
        { json: "publicly_advertisable", js: "publicly_advertisable", typ: u(undefined, "") },
        { json: "source_ipam_pool_id", js: "source_ipam_pool_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "public_ip_source", js: "public_ip_source", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VpcIPAMPoolCidrs": o([
        { json: "ipam_pool_id", js: "ipam_pool_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "ipam_pool_cidrs", js: "ipam_pool_cidrs", typ: u(undefined, r("IPAMPoolCidrs")) },
    ], false),
    "IPAMPoolCidrs": o([
        { json: "cidr", js: "cidr", typ: "" },
        { json: "state", js: "state", typ: "" },
    ], false),
    "VpcIPAMPools": o([
        { json: "filter", js: "filter", typ: r("Ec2ClientVPNEndpointFilter") },
        { json: "ipam_pools", js: "ipam_pools", typ: u(undefined, r("VpcIPAMPool")) },
    ], false),
    "VpcIPAMPreviewNextCIDR": o([
        { json: "ipam_pool_id", js: "ipam_pool_id", typ: "" },
        { json: "disallowed_cidrs", js: "disallowed_cidrs", typ: u(undefined, "") },
        { json: "netmask_length", js: "netmask_length", typ: u(undefined, "") },
        { json: "cidr", js: "cidr", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DataVpcPeeringConnection": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "peer_vpc_id", js: "peer_vpc_id", typ: u(undefined, "") },
        { json: "peer_owner_id", js: "peer_owner_id", typ: u(undefined, "") },
        { json: "peer_cidr_block", js: "peer_cidr_block", typ: u(undefined, "") },
        { json: "peer_region", js: "peer_region", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "accepter", js: "accepter", typ: u(undefined, "") },
        { json: "cidr_block_set", js: "cidr_block_set", typ: u(undefined, "") },
        { json: "peer_cidr_block_set", js: "peer_cidr_block_set", typ: u(undefined, "") },
        { json: "requester", js: "requester", typ: u(undefined, "") },
        { json: "allow_remote_vpc_dns_resolution", js: "allow_remote_vpc_dns_resolution", typ: u(undefined, "") },
    ], false),
    "VpcSecurityGroupRule": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
        { json: "security_group_rule_id", js: "security_group_rule_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cidr_ipv4", js: "cidr_ipv4", typ: u(undefined, "") },
        { json: "cidr_ipv6", js: "cidr_ipv6", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "from_port", js: "from_port", typ: u(undefined, "") },
        { json: "is_egress", js: "is_egress", typ: u(undefined, "") },
        { json: "ip_protocol", js: "ip_protocol", typ: u(undefined, "") },
        { json: "prefix_list_id", js: "prefix_list_id", typ: u(undefined, "") },
        { json: "referenced_security_group_id", js: "referenced_security_group_id", typ: u(undefined, "") },
        { json: "security_group_id", js: "security_group_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "to_port", js: "to_port", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VpclatticeAuthPolicy": o([
        { json: "resource_identifier", js: "resource_identifier", typ: "" },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
    ], false),
    "DataVpclatticeListener": o([
        { json: "service_identifier", js: "service_identifier", typ: "" },
        { json: "listener_identifier", js: "listener_identifier", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "default_action", js: "default_action", typ: u(undefined, "") },
        { json: "last_updated_at", js: "last_updated_at", typ: u(undefined, "") },
        { json: "listener_id", js: "listener_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "service_arn", js: "service_arn", typ: u(undefined, "") },
        { json: "service_id", js: "service_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "VpclatticeResourcePolicyClass": o([
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "policy", js: "policy", typ: u(undefined, "") },
    ], false),
    "VpclatticeService": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "service_identifier", js: "service_identifier", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "auth_type", js: "auth_type", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "custom_domain_name", js: "custom_domain_name", typ: u(undefined, "") },
        { json: "dns_entry", js: "dns_entry", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VpclatticeServiceNetwork": o([
        { json: "service_network_identifier", js: "service_network_identifier", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "auth_type", js: "auth_type", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_at", js: "last_updated_at", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "number_of_associated_services", js: "number_of_associated_services", typ: u(undefined, "") },
        { json: "number_of_associated_vpcs", js: "number_of_associated_vpcs", typ: u(undefined, "") },
    ], false),
    "DataVPNGateway": o([
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "attached_vpc_id", js: "attached_vpc_id", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "amazon_side_asn", js: "amazon_side_asn", typ: u(undefined, "") },
    ], false),
    "WafIpset": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "WafSubscribedRuleGroup": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "metric_name", js: "metric_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Wafv2Set": o([
        { json: "name", js: "name", typ: "" },
        { json: "scope", js: "scope", typ: "" },
        { json: "addresses", js: "addresses", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ip_address_version", js: "ip_address_version", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "regex_string", js: "regex_string", typ: u(undefined, "") },
        { json: "regular_expression", js: "regular_expression", typ: u(undefined, "") },
    ], false),
    "Wafv2RegexPatternSet": o([
        { json: "name", js: "name", typ: "" },
        { json: "scope", js: "scope", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "regular_expression", js: "regular_expression", typ: u(undefined, "") },
        { json: "regex_string", js: "regex_string", typ: u(undefined, "") },
    ], false),
    "DataWafv2RuleGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "scope", js: "scope", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "WorkspacesBundle": o([
        { json: "bundle_id", js: "bundle_id", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "compute_type", js: "compute_type", typ: u(undefined, "") },
        { json: "root_storage", js: "root_storage", typ: u(undefined, "") },
        { json: "user_storage", js: "user_storage", typ: u(undefined, "") },
        { json: "capacity", js: "capacity", typ: u(undefined, "") },
    ], false),
    "WorkspacesDirectory": o([
        { json: "directory_id", js: "directory_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "customer_user_name", js: "customer_user_name", typ: u(undefined, "") },
        { json: "directory_name", js: "directory_name", typ: u(undefined, "") },
        { json: "directory_type", js: "directory_type", typ: u(undefined, "") },
        { json: "dns_ip_addresses", js: "dns_ip_addresses", typ: u(undefined, "") },
        { json: "iam_role_id", js: "iam_role_id", typ: u(undefined, "") },
        { json: "ip_group_ids", js: "ip_group_ids", typ: u(undefined, "") },
        { json: "registration_code", js: "registration_code", typ: u(undefined, "") },
        { json: "self_service_permissions", js: "self_service_permissions", typ: u(undefined, r("SelfServicePermissions")) },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "workspace_creation_properties", js: "workspace_creation_properties", typ: u(undefined, r("WorkspaceCreationProperties")) },
        { json: "workspace_access_properties", js: "workspace_access_properties", typ: u(undefined, r("WorkspaceAccessProperties")) },
        { json: "workspace_security_group_id", js: "workspace_security_group_id", typ: u(undefined, "") },
        { json: "switch_running_mode", js: "switch_running_mode", typ: u(undefined, "") },
        { json: "device_type_zeroclient", js: "device_type_zeroclient", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SelfServicePermissions": o([
        { json: "change_compute_type", js: "change_compute_type", typ: "" },
        { json: "increase_volume_size", js: "increase_volume_size", typ: "" },
        { json: "rebuild_workspace", js: "rebuild_workspace", typ: "" },
        { json: "restart_workspace", js: "restart_workspace", typ: "" },
        { json: "switch_running_mode", js: "switch_running_mode", typ: "" },
    ], false),
    "WorkspaceAccessProperties": o([
        { json: "device_type_android", js: "device_type_android", typ: "" },
        { json: "device_type_chromeos", js: "device_type_chromeos", typ: "" },
        { json: "device_type_ios", js: "device_type_ios", typ: "" },
        { json: "device_type_linux", js: "device_type_linux", typ: "" },
        { json: "device_type_osx", js: "device_type_osx", typ: "" },
        { json: "device_type_web", js: "device_type_web", typ: "" },
        { json: "device_type_windows", js: "device_type_windows", typ: "" },
        { json: "device_type_zeroclient", js: "device_type_zeroclient", typ: "" },
    ], false),
    "WorkspaceCreationProperties": o([
        { json: "custom_security_group_id", js: "custom_security_group_id", typ: "" },
        { json: "default_ou", js: "default_ou", typ: "" },
        { json: "enable_internet_access", js: "enable_internet_access", typ: "" },
        { json: "enable_maintenance_mode", js: "enable_maintenance_mode", typ: "" },
        { json: "user_enabled_as_local_administrator", js: "user_enabled_as_local_administrator", typ: "" },
    ], false),
    "WorkspacesImage": o([
        { json: "image_id", js: "image_id", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "os", js: "os", typ: u(undefined, "") },
        { json: "required_tenancy", js: "required_tenancy", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
    ], false),
    "WorkspacesWorkspace": o([
        { json: "bundle_id", js: "bundle_id", typ: u(undefined, "") },
        { json: "directory_id", js: "directory_id", typ: u(undefined, "") },
        { json: "root_volume_encryption_enabled", js: "root_volume_encryption_enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
        { json: "user_volume_encryption_enabled", js: "user_volume_encryption_enabled", typ: u(undefined, "") },
        { json: "volume_encryption_key", js: "volume_encryption_key", typ: u(undefined, "") },
        { json: "workspace_id", js: "workspace_id", typ: u(undefined, "") },
        { json: "workspace_properties", js: "workspace_properties", typ: u(undefined, "") },
        { json: "compute_type_name", js: "compute_type_name", typ: u(undefined, "") },
        { json: "root_volume_size_gib", js: "root_volume_size_gib", typ: u(undefined, "") },
        { json: "running_mode", js: "running_mode", typ: u(undefined, "") },
        { json: "running_mode_auto_stop_timeout_in_minutes", js: "running_mode_auto_stop_timeout_in_minutes", typ: u(undefined, "") },
        { json: "user_volume_size_gib", js: "user_volume_size_gib", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ip_address", js: "ip_address", typ: u(undefined, "") },
        { json: "computer_name", js: "computer_name", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Resource": o([
        { json: "s3_bucket_request_payment_configuration", js: "s3_bucket_request_payment_configuration", typ: u(undefined, r("S3Bucket")) },
        { json: "transfer_agreement", js: "transfer_agreement", typ: u(undefined, r("TransferAgreement")) },
        { json: "vpc_ipam_organization_admin_account", js: "vpc_ipam_organization_admin_account", typ: u(undefined, r("VpcIPAMOrganizationAdminAccount")) },
        { json: "api_gateway_gateway_response", js: "api_gateway_gateway_response", typ: u(undefined, r("APIGatewayGatewayResponse")) },
        { json: "fsx_lustre_file_system", js: "fsx_lustre_file_system", typ: u(undefined, r("FsxLustreFileSystem")) },
        { json: "mq_broker", js: "mq_broker", typ: u(undefined, r("ResourceMqBroker")) },
        { json: "s3control_object_lambda_access_point_policy", js: "s3control_object_lambda_access_point_policy", typ: u(undefined, r("S3ControlObjectLambdaAccessPointPolicy")) },
        { json: "controltower_control", js: "controltower_control", typ: u(undefined, r("ControltowerControl")) },
        { json: "appautoscaling_target", js: "appautoscaling_target", typ: u(undefined, r("AppautoscalingTarget")) },
        { json: "vpc_endpoint_policy", js: "vpc_endpoint_policy", typ: u(undefined, r("VpcEndpointPolicy")) },
        { json: "cloudhsm_v2_cluster", js: "cloudhsm_v2_cluster", typ: u(undefined, r("ResourceCloudhsmV2Cluster")) },
        { json: "ec2_client_vpn_network_association", js: "ec2_client_vpn_network_association", typ: u(undefined, r("Ec2ClientVPNNetworkAssociation")) },
        { json: "fsx_backup", js: "fsx_backup", typ: u(undefined, r("FsxBackup")) },
        { json: "lightsail_certificate", js: "lightsail_certificate", typ: u(undefined, r("LightsailCertificate")) },
        { json: "api_gateway_client_certificate", js: "api_gateway_client_certificate", typ: u(undefined, r("APIGatewayClientCertificate")) },
        { json: "apigatewayv2_integration", js: "apigatewayv2_integration", typ: u(undefined, r("Apigatewayv2Integration")) },
        { json: "appflow_connector_profile", js: "appflow_connector_profile", typ: u(undefined, r("AppflowConnectorProfile")) },
        { json: "opensearch_domain_saml_options", js: "opensearch_domain_saml_options", typ: u(undefined, r("SearchDomainSamlOptions")) },
        { json: "workspaces_workspace", js: "workspaces_workspace", typ: u(undefined, r("WorkspacesWorkspace")) },
        { json: "iot_logging_options", js: "iot_logging_options", typ: u(undefined, r("IotLoggingOptions")) },
        { json: "opsworks_custom_layer", js: "opsworks_custom_layer", typ: u(undefined, r("OpsworksCustomLayer")) },
        { json: "organizations_organization", js: "organizations_organization", typ: u(undefined, r("OrganizationsOrganization")) },
        { json: "sagemaker_servicecatalog_portfolio_status", js: "sagemaker_servicecatalog_portfolio_status", typ: u(undefined, r("SagemakerServicecatalogPortfolioStatus")) },
        { json: "api_gateway_integration_response", js: "api_gateway_integration_response", typ: u(undefined, r("APIGatewayIntegrationResponse")) },
        { json: "dataexchange_revision", js: "dataexchange_revision", typ: u(undefined, r("DataexchangeRevision")) },
        { json: "wafregional_rate_based_rule", js: "wafregional_rate_based_rule", typ: u(undefined, r("Waf")) },
        { json: "route53recoveryreadiness_resource_set", js: "route53recoveryreadiness_resource_set", typ: u(undefined, r("Route53RecoveryreadinessResourceSet")) },
        { json: "sagemaker_app_image_config", js: "sagemaker_app_image_config", typ: u(undefined, r("SagemakerAppImageConfig")) },
        { json: "appmesh_mesh", js: "appmesh_mesh", typ: u(undefined, r("AppmeshMesh")) },
        { json: "connect_instance_storage_config", js: "connect_instance_storage_config", typ: u(undefined, r("ConnectInstanceStorageConfig")) },
        { json: "lightsail_lb", js: "lightsail_lb", typ: u(undefined, r("LightsailLB")) },
        { json: "wafregional_web_acl", js: "wafregional_web_acl", typ: u(undefined, r("WafWebACL")) },
        { json: "route53_query_log", js: "route53_query_log", typ: u(undefined, r("Route53QueryLog")) },
        { json: "gamelift_game_server_group", js: "gamelift_game_server_group", typ: u(undefined, r("GameliftGameServerGroup")) },
        { json: "datasync_location_object_storage", js: "datasync_location_object_storage", typ: u(undefined, r("DatasyncLocationObjectStorage")) },
        { json: "glue_schema", js: "glue_schema", typ: u(undefined, r("GlueSchema")) },
        { json: "macie2_invitation_accepter", js: "macie2_invitation_accepter", typ: u(undefined, r("Macie2InvitationAccepter")) },
        { json: "network_acl_association", js: "network_acl_association", typ: u(undefined, r("NetworkACLAssociation")) },
        { json: "lakeformation_data_lake_settings", js: "lakeformation_data_lake_settings", typ: u(undefined, r("LakeformationDataLakeSettings")) },
        { json: "lightsail_key_pair", js: "lightsail_key_pair", typ: u(undefined, r("LightsailKeyPair")) },
        { json: "lambda_code_signing_config", js: "lambda_code_signing_config", typ: u(undefined, r("LambdaCodeSigningConfig")) },
        { json: "ses_receipt_filter", js: "ses_receipt_filter", typ: u(undefined, r("SesReceiptFilter")) },
        { json: "imagebuilder_image_recipe", js: "imagebuilder_image_recipe", typ: u(undefined, r("ResourceImagebuilderImageRecipe")) },
        { json: "dynamodb_kinesis_streaming_destination", js: "dynamodb_kinesis_streaming_destination", typ: u(undefined, r("DynamodbKinesisStreamingDestination")) },
        { json: "fsx_openzfs_volume", js: "fsx_openzfs_volume", typ: u(undefined, r("FsxOpenzfsVolume")) },
        { json: "identitystore_group_membership", js: "identitystore_group_membership", typ: u(undefined, r("IdentitystoreGroupMembership")) },
        { json: "ec2_network_insights_analysis", js: "ec2_network_insights_analysis", typ: u(undefined, r("ResourceEc2NetworkInsightsAnalysis")) },
        { json: "cleanrooms_collaboration", js: "cleanrooms_collaboration", typ: u(undefined, r("CleanroomsCollaboration")) },
        { json: "cloudfront_response_headers_policy", js: "cloudfront_response_headers_policy", typ: u(undefined, r("CloudfrontResponseHeadersPolicy")) },
        { json: "ec2_transit_gateway_connect_peer", js: "ec2_transit_gateway_connect_peer", typ: u(undefined, r("ResourceEc2TransitGatewayConnectPeer")) },
        { json: "db_event_subscription", js: "db_event_subscription", typ: u(undefined, r("DBEventSubscriptionClass")) },
        { json: "ssmcontacts_contact_channel", js: "ssmcontacts_contact_channel", typ: u(undefined, r("KmsSecretClass")) },
        { json: "appmesh_route", js: "appmesh_route", typ: u(undefined, r("AppmeshRoute")) },
        { json: "dynamodb_contributor_insights", js: "dynamodb_contributor_insights", typ: u(undefined, r("DynamodbContributorInsights")) },
        { json: "vpc_endpoint_service", js: "vpc_endpoint_service", typ: u(undefined, r("ResourceVpcEndpointService")) },
        { json: "db_instance", js: "db_instance", typ: u(undefined, r("ResourceDBInstance")) },
        { json: "msk_cluster", js: "msk_cluster", typ: u(undefined, r("ResourceMskCluster")) },
        { json: "networkmanager_transit_gateway_registration", js: "networkmanager_transit_gateway_registration", typ: u(undefined, r("NetworkmanagerTransitGatewayRegistration")) },
        { json: "ec2_transit_gateway_peering_attachment_accepter", js: "ec2_transit_gateway_peering_attachment_accepter", typ: u(undefined, r("Ec2TransitGatewayPeeringAttachmentAccepterClass")) },
        { json: "lightsail_lb_attachment", js: "lightsail_lb_attachment", typ: u(undefined, r("LightsailLBAttachment")) },
        { json: "route53_resolver_query_log_config", js: "route53_resolver_query_log_config", typ: u(undefined, r("Route53ResolverQueryLogConfig")) },
        { json: "cognito_user_pool_ui_customization", js: "cognito_user_pool_ui_customization", typ: u(undefined, r("CognitoUserPoolUICustomization")) },
        { json: "mskconnect_worker_configuration", js: "mskconnect_worker_configuration", typ: u(undefined, r("Mskconnect")) },
        { json: "worklink_website_certificate_authority_association", js: "worklink_website_certificate_authority_association", typ: u(undefined, r("WorklinkWebsiteCertificateAuthorityAssociation")) },
        { json: "quicksight_folder", js: "quicksight_folder", typ: u(undefined, r("QuicksightFolder")) },
        { json: "route53_traffic_policy_instance", js: "route53_traffic_policy_instance", typ: u(undefined, r("Route53TrafficPolicyInstance")) },
        { json: "ssoadmin_managed_policy_attachment", js: "ssoadmin_managed_policy_attachment", typ: u(undefined, r("SsoadminManagedPolicyAttachment")) },
        { json: "vpc_endpoint", js: "vpc_endpoint", typ: u(undefined, r("ResourceVpcEndpoint")) },
        { json: "cloudwatch_metric_stream", js: "cloudwatch_metric_stream", typ: u(undefined, r("CloudwatchMetricStream")) },
        { json: "macie2_custom_data_identifier", js: "macie2_custom_data_identifier", typ: u(undefined, r("Macie2CustomDataIdentifier")) },
        { json: "securityhub_standards_control", js: "securityhub_standards_control", typ: u(undefined, r("SecurityhubStandardsControl")) },
        { json: "wafv2_rule_group", js: "wafv2_rule_group", typ: u(undefined, r("ResourceWafv2RuleGroup")) },
        { json: "evidently_project", js: "evidently_project", typ: u(undefined, r("EvidentlyProject")) },
        { json: "gamelift_build", js: "gamelift_build", typ: u(undefined, r("Gamelift")) },
        { json: "service_discovery_public_dns_namespace", js: "service_discovery_public_dns_namespace", typ: u(undefined, r("ServiceDiscoveryDNSNamespace")) },
        { json: "ssoadmin_permission_set_inline_policy", js: "ssoadmin_permission_set_inline_policy", typ: u(undefined, r("SsoadminPermissionSetInlinePolicy")) },
        { json: "ecs_task_definition", js: "ecs_task_definition", typ: u(undefined, r("ResourceEcsTaskDefinition")) },
        { json: "glue_data_quality_ruleset", js: "glue_data_quality_ruleset", typ: u(undefined, r("GlueDataQualityRuleset")) },
        { json: "kendra_thesaurus", js: "kendra_thesaurus", typ: u(undefined, r("PurpleKendra")) },
        { json: "cloudwatch_log_metric_filter", js: "cloudwatch_log_metric_filter", typ: u(undefined, r("CloudwatchLogMetricFilter")) },
        { json: "ec2_transit_gateway_route", js: "ec2_transit_gateway_route", typ: u(undefined, r("Ec2TransitGatewayPrefixListReferenceClass")) },
        { json: "lightsail_domain_entry", js: "lightsail_domain_entry", typ: u(undefined, r("LightsailDomainEntry")) },
        { json: "opsworks_static_web_layer", js: "opsworks_static_web_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "route53_delegation_set", js: "route53_delegation_set", typ: u(undefined, r("Route53DelegationSet")) },
        { json: "ssm_default_patch_baseline", js: "ssm_default_patch_baseline", typ: u(undefined, r("SsmDefaultPatchBaseline")) },
        { json: "codestarconnections_connection", js: "codestarconnections_connection", typ: u(undefined, r("CodestarconnectionsConnection")) },
        { json: "ec2_local_gateway_route", js: "ec2_local_gateway_route", typ: u(undefined, r("Ec2LocalGatewayRoute")) },
        { json: "location_route_calculator", js: "location_route_calculator", typ: u(undefined, r("LocationRouteCalculator")) },
        { json: "opensearchserverless_security_config", js: "opensearchserverless_security_config", typ: u(undefined, r("ResourceOpensearchserverlessSecurityConfig")) },
        { json: "apigatewayv2_api_mapping", js: "apigatewayv2_api_mapping", typ: u(undefined, r("Apigatewayv2APIMapping")) },
        { json: "gamelift_fleet", js: "gamelift_fleet", typ: u(undefined, r("GameliftFleet")) },
        { json: "lightsail_static_ip_attachment", js: "lightsail_static_ip_attachment", typ: u(undefined, r("LightsailStaticIPAttachment")) },
        { json: "mq_configuration", js: "mq_configuration", typ: u(undefined, r("MqConfiguration")) },
        { json: "keyspaces_keyspace", js: "keyspaces_keyspace", typ: u(undefined, r("DatapipelinePipelineClass")) },
        { json: "directory_service_shared_directory_accepter", js: "directory_service_shared_directory_accepter", typ: u(undefined, r("DirectoryServiceSharedDirectoryAccepter")) },
        { json: "finspace_kx_cluster", js: "finspace_kx_cluster", typ: u(undefined, r("FinspaceKxCluster")) },
        { json: "iam_role_policy", js: "iam_role_policy", typ: u(undefined, r("IamPolicy")) },
        { json: "rum_metrics_destination", js: "rum_metrics_destination", typ: u(undefined, r("RumMetricsDestination")) },
        { json: "lightsail_container_service", js: "lightsail_container_service", typ: u(undefined, r("LightsailContainerService")) },
        { json: "ec2_availability_zone_group", js: "ec2_availability_zone_group", typ: u(undefined, r("Ec2AvailabilityZoneGroup")) },
        { json: "iam_account_alias", js: "iam_account_alias", typ: u(undefined, r("ResourceIamAccountAlias")) },
        { json: "lightsail_lb_stickiness_policy", js: "lightsail_lb_stickiness_policy", typ: u(undefined, r("LightsailLBPolicy")) },
        { json: "appstream_fleet_stack_association", js: "appstream_fleet_stack_association", typ: u(undefined, r("AppstreamFleetStackAssociation")) },
        { json: "dms_replication_task", js: "dms_replication_task", typ: u(undefined, r("DmsReplicationTask")) },
        { json: "resourcegroups_resource", js: "resourcegroups_resource", typ: u(undefined, r("ResourcegroupsResource")) },
        { json: "mwaa_environment", js: "mwaa_environment", typ: u(undefined, r("MwaaEnvironment")) },
        { json: "appsync_datasource", js: "appsync_datasource", typ: u(undefined, r("AppsyncDatasource")) },
        { json: "ec2_tag", js: "ec2_tag", typ: u(undefined, r("Tag")) },
        { json: "lakeformation_lf_tag", js: "lakeformation_lf_tag", typ: u(undefined, r("LakeformationLFTagClass")) },
        { json: "route53_cidr_location", js: "route53_cidr_location", typ: u(undefined, r("Route53CIDRLocation")) },
        { json: "s3_object_copy", js: "s3_object_copy", typ: u(undefined, r("S3ObjectCopy")) },
        { json: "apigatewayv2_stage", js: "apigatewayv2_stage", typ: u(undefined, r("Apigatewayv2Stage")) },
        { json: "oam_sink_policy", js: "oam_sink_policy", typ: u(undefined, r("OamSinkPolicy")) },
        { json: "eks_identity_provider_config", js: "eks_identity_provider_config", typ: u(undefined, r("EksIdentityProviderConfig")) },
        { json: "emr_cluster", js: "emr_cluster", typ: u(undefined, r("EmrCluster")) },
        { json: "codepipeline", js: "codepipeline", typ: u(undefined, r("Codepipeline")) },
        { json: "pinpoint_gcm_channel", js: "pinpoint_gcm_channel", typ: u(undefined, r("PinpointChannel")) },
        { json: "dx_hosted_transit_virtual_interface", js: "dx_hosted_transit_virtual_interface", typ: u(undefined, r("DxVirtualInterface")) },
        { json: "storagegateway_working_storage", js: "storagegateway_working_storage", typ: u(undefined, r("StoragegatewayCacheClass")) },
        { json: "autoscaling_group", js: "autoscaling_group", typ: u(undefined, r("KmsSecretClass")) },
        { json: "internetmonitor_monitor", js: "internetmonitor_monitor", typ: u(undefined, r("InternetmonitorMonitor")) },
        { json: "codebuild_resource_policy", js: "codebuild_resource_policy", typ: u(undefined, r("ResourcePolicy")) },
        { json: "dms_event_subscription", js: "dms_event_subscription", typ: u(undefined, r("DmsEventSubscriptionClass")) },
        { json: "service_discovery_instance", js: "service_discovery_instance", typ: u(undefined, r("ServiceDiscoveryInstance")) },
        { json: "route53_zone_association", js: "route53_zone_association", typ: u(undefined, r("Route53Ation")) },
        { json: "ssm_resource_data_sync", js: "ssm_resource_data_sync", typ: u(undefined, r("SsmResourceDataSync")) },
        { json: "api_gateway_method_response", js: "api_gateway_method_response", typ: u(undefined, r("APIGatewayMethodResponse")) },
        { json: "db_parameter_group", js: "db_parameter_group", typ: u(undefined, r("ParameterGroup")) },
        { json: "kms_alias", js: "kms_alias", typ: u(undefined, r("KmsAlias")) },
        { json: "rds_cluster", js: "rds_cluster", typ: u(undefined, r("ResourceRDSCluster")) },
        { json: "budgets_budget_action", js: "budgets_budget_action", typ: u(undefined, r("BudgetsBudgetAction")) },
        { json: "connect_contact_flow_module", js: "connect_contact_flow_module", typ: u(undefined, r("ConnectContactFlowModuleClass")) },
        { json: "kinesis_analytics_application", js: "kinesis_analytics_application", typ: u(undefined, r("KinesisAnalyticsApplication")) },
        { json: "waf_size_constraint_set", js: "waf_size_constraint_set", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "api_gateway_documentation_part", js: "api_gateway_documentation_part", typ: u(undefined, r("APIGatewayDocumentationPart")) },
        { json: "elasticache_user_group", js: "elasticache_user_group", typ: u(undefined, r("ElasticacheUserGroup")) },
        { json: "cloud9_environment_ec2", js: "cloud9_environment_ec2", typ: u(undefined, r("Cloud9EnvironmentEc2")) },
        { json: "ecr_registry_policy", js: "ecr_registry_policy", typ: u(undefined, r("EcrRegistryPolicy")) },
        { json: "vpc_endpoint_security_group_association", js: "vpc_endpoint_security_group_association", typ: u(undefined, r("VpcEndpointSecurityGroupAssociation")) },
        { json: "ec2_subnet_cidr_reservation", js: "ec2_subnet_cidr_reservation", typ: u(undefined, r("Ec2SubnetCIDRReservation")) },
        { json: "ec2_transit_gateway_route_table_association", js: "ec2_transit_gateway_route_table_association", typ: u(undefined, r("Ec2TransitGatewayRouteTableAtion")) },
        { json: "iot_thing_group_membership", js: "iot_thing_group_membership", typ: u(undefined, r("IotThingGroupMembership")) },
        { json: "apprunner_connection", js: "apprunner_connection", typ: u(undefined, r("ApprunnerConnection")) },
        { json: "backup_region_settings", js: "backup_region_settings", typ: u(undefined, r("BackupRegionSettings")) },
        { json: "autoscaling_group_tag", js: "autoscaling_group_tag", typ: u(undefined, r("AutoscalingGroupTag")) },
        { json: "glue_crawler", js: "glue_crawler", typ: u(undefined, r("GlueCrawler")) },
        { json: "connect_user_hierarchy_group", js: "connect_user_hierarchy_group", typ: u(undefined, r("ConnectUserHierarchyGroup")) },
        { json: "ses_receipt_rule_set", js: "ses_receipt_rule_set", typ: u(undefined, r("SesReceiptRuleSet")) },
        { json: "emrserverless_application", js: "emrserverless_application", typ: u(undefined, r("EmrserverlessApplication")) },
        { json: "codestarconnections_host", js: "codestarconnections_host", typ: u(undefined, r("CodestarconnectionsHost")) },
        { json: "efs_mount_target", js: "efs_mount_target", typ: u(undefined, r("EFSMountTarget")) },
        { json: "db_proxy_target", js: "db_proxy_target", typ: u(undefined, r("DBProxyTarget")) },
        { json: "dx_gateway_association", js: "dx_gateway_association", typ: u(undefined, r("DxGatewayAssociation")) },
        { json: "dx_hosted_private_virtual_interface", js: "dx_hosted_private_virtual_interface", typ: u(undefined, r("DxVirtualInterface")) },
        { json: "flow_log", js: "flow_log", typ: u(undefined, r("FlowLog")) },
        { json: "appautoscaling_scheduled_action", js: "appautoscaling_scheduled_action", typ: u(undefined, r("AppautoscalingScheduledAction")) },
        { json: "appconfig_configuration_profile", js: "appconfig_configuration_profile", typ: u(undefined, r("ResourceAppconfigConfigurationProfile")) },
        { json: "connect_security_profile", js: "connect_security_profile", typ: u(undefined, r("ConnectSecurityProfile")) },
        { json: "redshift_cluster_iam_roles", js: "redshift_cluster_iam_roles", typ: u(undefined, r("RedshiftClusterIamRoles")) },
        { json: "pinpoint_apns_voip_sandbox_channel", js: "pinpoint_apns_voip_sandbox_channel", typ: u(undefined, r("PinpointApnsChannel")) },
        { json: "config_configuration_recorder_status", js: "config_configuration_recorder_status", typ: u(undefined, r("ConfigConfigurationRecorderStatus")) },
        { json: "db_proxy_endpoint", js: "db_proxy_endpoint", typ: u(undefined, r("DBProxyEndpoint")) },
        { json: "opsworks_rails_app_layer", js: "opsworks_rails_app_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "ram_sharing_with_organization", js: "ram_sharing_with_organization", typ: u(undefined, r("CanonicalUserID")) },
        { json: "ec2_transit_gateway_prefix_list_reference", js: "ec2_transit_gateway_prefix_list_reference", typ: u(undefined, r("Ec2TransitGatewayPrefixListReferenceClass")) },
        { json: "cloudwatch_event_bus_policy", js: "cloudwatch_event_bus_policy", typ: u(undefined, r("CloudwatchEventBusPolicy")) },
        { json: "cloudwatch_log_destination_policy", js: "cloudwatch_log_destination_policy", typ: u(undefined, r("CloudwatchLogDestinationPolicy")) },
        { json: "dx_gateway", js: "dx_gateway", typ: u(undefined, r("DxGateway")) },
        { json: "docdb_event_subscription", js: "docdb_event_subscription", typ: u(undefined, r("DBEventSubscriptionClass")) },
        { json: "iam_user_login_profile", js: "iam_user_login_profile", typ: u(undefined, r("IamUserLoginProfile")) },
        { json: "redshift_cluster_snapshot", js: "redshift_cluster_snapshot", typ: u(undefined, r("RedshiftClusterSnapshot")) },
        { json: "networkmanager_device", js: "networkmanager_device", typ: u(undefined, r("NetworkmanagerDevice")) },
        { json: "cloudfront_origin_request_policy", js: "cloudfront_origin_request_policy", typ: u(undefined, r("CloudfrontOriginRequestPolicy")) },
        { json: "cloudwatch_dashboard", js: "cloudwatch_dashboard", typ: u(undefined, r("CloudwatchDashboard")) },
        { json: "vpc_dhcp_options_association", js: "vpc_dhcp_options_association", typ: u(undefined, r("VpcDHCPOptionsAssociation")) },
        { json: "iam_user", js: "iam_user", typ: u(undefined, r("ResourceIamUser")) },
        { json: "kms_custom_key_store", js: "kms_custom_key_store", typ: u(undefined, r("ResourceKmsCustomKeyStore")) },
        { json: "networkmanager_connect_attachment", js: "networkmanager_connect_attachment", typ: u(undefined, r("KmsSecretClass")) },
        { json: "nat_gateway", js: "nat_gateway", typ: u(undefined, r("ResourceNatGateway")) },
        { json: "networkmanager_site_to_site_vpn_attachment", js: "networkmanager_site_to_site_vpn_attachment", typ: u(undefined, r("KmsSecretClass")) },
        { json: "route53_vpc_association_authorization", js: "route53_vpc_association_authorization", typ: u(undefined, r("Route53Ation")) },
        { json: "redshift_event_subscription", js: "redshift_event_subscription", typ: u(undefined, r("DmsEventSubscriptionClass")) },
        { json: "chime_voice_connector_origination", js: "chime_voice_connector_origination", typ: u(undefined, r("ChimeVoiceConnectorOrigination")) },
        { json: "chime_voice_connector_termination_credentials", js: "chime_voice_connector_termination_credentials", typ: u(undefined, r("ChimeVoiceConnectorTerminationCredentials")) },
        { json: "globalaccelerator_accelerator", js: "globalaccelerator_accelerator", typ: u(undefined, r("ResourceGlobalacceleratorAccelerator")) },
        { json: "schemas_discoverer", js: "schemas_discoverer", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "wafregional_geo_match_set", js: "wafregional_geo_match_set", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "iam_group_membership", js: "iam_group_membership", typ: u(undefined, r("IamGroupMembership")) },
        { json: "msk_scram_secret_association", js: "msk_scram_secret_association", typ: u(undefined, r("MskScramSecretAssociation")) },
        { json: "quicksight_group", js: "quicksight_group", typ: u(undefined, r("QuicksightGroup")) },
        { json: "rds_cluster_endpoint", js: "rds_cluster_endpoint", typ: u(undefined, r("ClusterEndpoint")) },
        { json: "elastictranscoder_preset", js: "elastictranscoder_preset", typ: u(undefined, r("ElastictranscoderPreset")) },
        { json: "spot_fleet_request", js: "spot_fleet_request", typ: u(undefined, r("SpotFleetRequest")) },
        { json: "backup_vault", js: "backup_vault", typ: u(undefined, r("ResourceBackupVault")) },
        { json: "macie2_classification_export_configuration", js: "macie2_classification_export_configuration", typ: u(undefined, r("Macie2ClassificationExportConfiguration")) },
        { json: "iot_thing_type", js: "iot_thing_type", typ: u(undefined, r("CloudwatchEventBusClass")) },
        { json: "route53recoveryreadiness_recovery_group", js: "route53recoveryreadiness_recovery_group", typ: u(undefined, r("Route53RecoveryreadinessRecoveryGroup")) },
        { json: "service_discovery_http_namespace", js: "service_discovery_http_namespace", typ: u(undefined, r("Apigatewayv2VpcLink")) },
        { json: "chimesdkmediapipelines_media_insights_pipeline_configuration", js: "chimesdkmediapipelines_media_insights_pipeline_configuration", typ: u(undefined, r("ChimesdkmediapipelinesMediaInsightsPipelineConfiguration")) },
        { json: "verifiedaccess_trust_provider", js: "verifiedaccess_trust_provider", typ: u(undefined, r("VerifiedaccessTrustProvider")) },
        { json: "db_option_group", js: "db_option_group", typ: u(undefined, r("DBOptionGroup")) },
        { json: "network_acl_rule", js: "network_acl_rule", typ: u(undefined, r("NetworkACLRule")) },
        { json: "ami_copy", js: "ami_copy", typ: u(undefined, r("AmiCopy")) },
        { json: "appsync_api_cache", js: "appsync_api_cache", typ: u(undefined, r("AppsyncAPICache")) },
        { json: "acm_certificate", js: "acm_certificate", typ: u(undefined, r("ResourceACMCertificate")) },
        { json: "rds_cluster_parameter_group", js: "rds_cluster_parameter_group", typ: u(undefined, r("ParameterGroup")) },
        { json: "load_balancer_policy", js: "load_balancer_policy", typ: u(undefined, r("LoadBalancerPolicy")) },
        { json: "default_subnet", js: "default_subnet", typ: u(undefined, r("DefaultSubnet")) },
        { json: "ec2_traffic_mirror_filter_rule", js: "ec2_traffic_mirror_filter_rule", typ: u(undefined, r("Ec2TrafficMirrorFilterRule")) },
        { json: "iam_user_policy", js: "iam_user_policy", typ: u(undefined, r("IamPolicy")) },
        { json: "lakeformation_resource", js: "lakeformation_resource", typ: u(undefined, r("ResourceLakeformationResource")) },
        { json: "cognito_resource_server", js: "cognito_resource_server", typ: u(undefined, r("CognitoResourceServer")) },
        { json: "docdb_cluster", js: "docdb_cluster", typ: u(undefined, r("DocdbCluster")) },
        { json: "iam_account_password_policy", js: "iam_account_password_policy", typ: u(undefined, r("IamAccountPasswordPolicy")) },
        { json: "secretsmanager_secret_version", js: "secretsmanager_secret_version", typ: u(undefined, r("SecretsmanagerSecretVersion")) },
        { json: "ecr_lifecycle_policy", js: "ecr_lifecycle_policy", typ: u(undefined, r("EcrPolicy")) },
        { json: "storagegateway_cached_iscsi_volume", js: "storagegateway_cached_iscsi_volume", typ: u(undefined, r("StoragegatewayEdIscsiVolume")) },
        { json: "api_gateway_documentation_version", js: "api_gateway_documentation_version", typ: u(undefined, r("APIGatewayDocumentationVersion")) },
        { json: "directory_service_region", js: "directory_service_region", typ: u(undefined, r("DirectoryServiceRegion")) },
        { json: "cognito_user_in_group", js: "cognito_user_in_group", typ: u(undefined, r("CognitoUserInGroup")) },
        { json: "eip", js: "eip", typ: u(undefined, r("ResourceEip")) },
        { json: "macie2_organization_admin_account", js: "macie2_organization_admin_account", typ: u(undefined, r("OrganizationAdminAccount")) },
        { json: "athena_workgroup", js: "athena_workgroup", typ: u(undefined, r("AthenaWorkgroup")) },
        { json: "cloudformation_stack_set", js: "cloudformation_stack_set", typ: u(undefined, r("CloudformationStackSet")) },
        { json: "apigatewayv2_authorizer", js: "apigatewayv2_authorizer", typ: u(undefined, r("Apigatewayv2Authorizer")) },
        { json: "placement_group", js: "placement_group", typ: u(undefined, r("PlacementGroup")) },
        { json: "ce_anomaly_monitor", js: "ce_anomaly_monitor", typ: u(undefined, r("CeAnomalyMonitor")) },
        { json: "cloudsearch_domain_service_access_policy", js: "cloudsearch_domain_service_access_policy", typ: u(undefined, r("CloudsearchDomainServiceAccessPolicy")) },
        { json: "connect_vocabulary", js: "connect_vocabulary", typ: u(undefined, r("ConnectVocabulary")) },
        { json: "sagemaker_model_package_group", js: "sagemaker_model_package_group", typ: u(undefined, r("SagemakerModelPackageGroup")) },
        { json: "iam_policy_attachment", js: "iam_policy_attachment", typ: u(undefined, r("WafIpset")) },
        { json: "sagemaker_device", js: "sagemaker_device", typ: u(undefined, r("SagemakerDevice")) },
        { json: "ebs_snapshot_copy", js: "ebs_snapshot_copy", typ: u(undefined, r("EbsSnapshotCopyClass")) },
        { json: "glue_catalog_database", js: "glue_catalog_database", typ: u(undefined, r("GlueCatalogDatabase")) },
        { json: "cloudfront_realtime_log_config", js: "cloudfront_realtime_log_config", typ: u(undefined, r("CloudfrontRealtimeLogConfig")) },
        { json: "ec2_transit_gateway_policy_table", js: "ec2_transit_gateway_policy_table", typ: u(undefined, r("Ec2TransitGatewayPolicyTable")) },
        { json: "iot_policy", js: "iot_policy", typ: u(undefined, r("IotPolicy")) },
        { json: "ce_cost_category", js: "ce_cost_category", typ: u(undefined, r("CeCostCategory")) },
        { json: "ecs_cluster_capacity_providers", js: "ecs_cluster_capacity_providers", typ: u(undefined, r("EcsClusterCapacityProviders")) },
        { json: "appconfig_environment", js: "appconfig_environment", typ: u(undefined, r("ResourceAppconfigEnvironment")) },
        { json: "dynamodb_table_replica", js: "dynamodb_table_replica", typ: u(undefined, r("DynamodbTableReplica")) },
        { json: "networkfirewall_firewall_policy", js: "networkfirewall_firewall_policy", typ: u(undefined, r("ResourceNetworkfirewallFirewallPolicy")) },
        { json: "scheduler_schedule_group", js: "scheduler_schedule_group", typ: u(undefined, r("SchedulerScheduleGroup")) },
        { json: "pinpoint_apns_voip_channel", js: "pinpoint_apns_voip_channel", typ: u(undefined, r("PinpointApnsChannel")) },
        { json: "securityhub_invite_accepter", js: "securityhub_invite_accepter", typ: u(undefined, r("SecurityhubInviteAccepter")) },
        { json: "appsync_function", js: "appsync_function", typ: u(undefined, r("AppsyncFunction")) },
        { json: "db_instance_automated_backups_replication", js: "db_instance_automated_backups_replication", typ: u(undefined, r("DBInstanceAutomatedBackupsReplication")) },
        { json: "route53_resolver_firewall_rule_group_association", js: "route53_resolver_firewall_rule_group_association", typ: u(undefined, r("ResourceRoute53ResolverFirewallRuleGroupAssociation")) },
        { json: "servicecatalog_constraint", js: "servicecatalog_constraint", typ: u(undefined, r("ServicecatalogConstraint")) },
        { json: "cloudwatch_log_group", js: "cloudwatch_log_group", typ: u(undefined, r("ResourceCloudwatchLogGroup")) },
        { json: "route53recoverycontrolconfig_control_panel", js: "route53recoverycontrolconfig_control_panel", typ: u(undefined, r("Route53RecoverycontrolconfigControlPanel")) },
        { json: "vpc_dhcp_options", js: "vpc_dhcp_options", typ: u(undefined, r("VpcDHCPOptions")) },
        { json: "fsx_ontap_volume", js: "fsx_ontap_volume", typ: u(undefined, r("FsxOntapVolume")) },
        { json: "scheduler_schedule", js: "scheduler_schedule", typ: u(undefined, r("SchedulerSchedule")) },
        { json: "cloudwatch_log_resource_policy", js: "cloudwatch_log_resource_policy", typ: u(undefined, r("CloudwatchLogResourcePolicy")) },
        { json: "ec2_transit_gateway_vpc_attachment_accepter", js: "ec2_transit_gateway_vpc_attachment_accepter", typ: u(undefined, r("Ec2TransitGatewayVpcAttachment")) },
        { json: "resourceexplorer2_index", js: "resourceexplorer2_index", typ: u(undefined, r("NetworkmanagerGlobalNetwork")) },
        { json: "dx_connection_confirmation", js: "dx_connection_confirmation", typ: u(undefined, r("CanonicalUserID")) },
        { json: "ivschat_logging_configuration", js: "ivschat_logging_configuration", typ: u(undefined, r("IvsRecordingConfiguration")) },
        { json: "licensemanager_association", js: "licensemanager_association", typ: u(undefined, r("LicensemanagerAssociation")) },
        { json: "redshift_endpoint_authorization", js: "redshift_endpoint_authorization", typ: u(undefined, r("RedshiftEndpointAuthorization")) },
        { json: "wafregional_size_constraint_set", js: "wafregional_size_constraint_set", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "lexv2models_bot", js: "lexv2models_bot", typ: u(undefined, r("Lexv2ModelsBot")) },
        { json: "quicksight_iam_policy_assignment", js: "quicksight_iam_policy_assignment", typ: u(undefined, r("QuicksightIamPolicyAssignment")) },
        { json: "transfer_user", js: "transfer_user", typ: u(undefined, r("Transfer")) },
        { json: "redshift_parameter_group", js: "redshift_parameter_group", typ: u(undefined, r("ParameterGroup")) },
        { json: "synthetics_canary", js: "synthetics_canary", typ: u(undefined, r("SyntheticsCanary")) },
        { json: "fsx_openzfs_file_system", js: "fsx_openzfs_file_system", typ: u(undefined, r("FsxOpenzfsFileSystem")) },
        { json: "kms_replica_key", js: "kms_replica_key", typ: u(undefined, r("KmsReplicaKey")) },
        { json: "lb_listener", js: "lb_listener", typ: u(undefined, r("ResourceLBListener")) },
        { json: "rds_reserved_instance", js: "rds_reserved_instance", typ: u(undefined, r("RDSReservedInstance")) },
        { json: "comprehend_entity_recognizer", js: "comprehend_entity_recognizer", typ: u(undefined, r("Comprehend")) },
        { json: "networkmanager_attachment_accepter", js: "networkmanager_attachment_accepter", typ: u(undefined, r("KmsSecretClass")) },
        { json: "shield_drt_access_log_bucket_association", js: "shield_drt_access_log_bucket_association", typ: u(undefined, r("ShieldDrtAccessLogBucketAssociation")) },
        { json: "ec2_managed_prefix_list_entry", js: "ec2_managed_prefix_list_entry", typ: u(undefined, r("Ec2ManagedPrefixListEntry")) },
        { json: "imagebuilder_image_pipeline", js: "imagebuilder_image_pipeline", typ: u(undefined, r("ResourceImagebuilderImagePipeline")) },
        { json: "route53_resolver_rule_association", js: "route53_resolver_rule_association", typ: u(undefined, r("Route53ResolverRuleAssociation")) },
        { json: "memorydb_snapshot", js: "memorydb_snapshot", typ: u(undefined, r("MemorydbSnapshot")) },
        { json: "quicksight_data_set", js: "quicksight_data_set", typ: u(undefined, r("ResourceQuicksightDataSet")) },
        { json: "redshift_scheduled_action", js: "redshift_scheduled_action", typ: u(undefined, r("RedshiftScheduledAction")) },
        { json: "vpc_peering_connection_options", js: "vpc_peering_connection_options", typ: u(undefined, r("VpcPeeringConnectionOptions")) },
        { json: "opsworks_ecs_cluster_layer", js: "opsworks_ecs_cluster_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "route_table", js: "route_table", typ: u(undefined, r("ResourceRouteTable")) },
        { json: "appstream_fleet", js: "appstream_fleet", typ: u(undefined, r("AppstreamFleet")) },
        { json: "cloudwatch_log_data_protection_policy", js: "cloudwatch_log_data_protection_policy", typ: u(undefined, r("CloudwatchLogDataProtectionPolicy")) },
        { json: "cur_report_definition", js: "cur_report_definition", typ: u(undefined, r("CurReportDefinition")) },
        { json: "opensearchserverless_security_policy", js: "opensearchserverless_security_policy", typ: u(undefined, r("OpensearchserverlessPolicy")) },
        { json: "route", js: "route", typ: u(undefined, r("ResourceRoute")) },
        { json: "apigatewayv2_domain_name", js: "apigatewayv2_domain_name", typ: u(undefined, r("Apigatewayv2DomainName")) },
        { json: "appsync_api_key", js: "appsync_api_key", typ: u(undefined, r("AppsyncAPIKey")) },
        { json: "auditmanager_assessment_report", js: "auditmanager_assessment_report", typ: u(undefined, r("AuditmanagerAssessmentReport")) },
        { json: "ssm_maintenance_window_target", js: "ssm_maintenance_window_target", typ: u(undefined, r("SsmMaintenanceWindowTarget")) },
        { json: "worklink_fleet", js: "worklink_fleet", typ: u(undefined, r("WorklinkFleet")) },
        { json: "amplify_app", js: "amplify_app", typ: u(undefined, r("AmplifyApp")) },
        { json: "chime_voice_connector", js: "chime_voice_connector", typ: u(undefined, r("ChimeVoiceConnector")) },
        { json: "iam_virtual_mfa_device", js: "iam_virtual_mfa_device", typ: u(undefined, r("IamVirtualMfaDevice")) },
        { json: "servicecatalog_provisioning_artifact", js: "servicecatalog_provisioning_artifact", typ: u(undefined, r("ServicecatalogProvisioningArtifact")) },
        { json: "mskconnect_connector", js: "mskconnect_connector", typ: u(undefined, r("PurpleMskconnectConnector")) },
        { json: "networkmanager_core_network", js: "networkmanager_core_network", typ: u(undefined, r("NetworkmanagerCoreNetwork")) },
        { json: "api_gateway_method_settings", js: "api_gateway_method_settings", typ: u(undefined, r("APIGatewayMethodSettings")) },
        { json: "networkmanager_transit_gateway_connect_peer_association", js: "networkmanager_transit_gateway_connect_peer_association", typ: u(undefined, r("NetworkmanagerAssociation")) },
        { json: "securityhub_standards_subscription", js: "securityhub_standards_subscription", typ: u(undefined, r("SecurityhubStandardsSubscription")) },
        { json: "api_gateway_rest_api", js: "api_gateway_rest_api", typ: u(undefined, r("ResourceAPIGatewayRESTAPI")) },
        { json: "redshiftserverless_usage_limit", js: "redshiftserverless_usage_limit", typ: u(undefined, r("RedshiftserverlessUsageLimit")) },
        { json: "sagemaker_notebook_instance", js: "sagemaker_notebook_instance", typ: u(undefined, r("SagemakerNotebookInstance")) },
        { json: "ec2_transit_gateway_policy_table_association", js: "ec2_transit_gateway_policy_table_association", typ: u(undefined, r("Ec2TransitGatewayPolicyTableAssociation")) },
        { json: "budgets_budget", js: "budgets_budget", typ: u(undefined, r("BudgetsBudget")) },
        { json: "ec2_transit_gateway_multicast_group_source", js: "ec2_transit_gateway_multicast_group_source", typ: u(undefined, r("Ec2TransitGatewayMulticastGroup")) },
        { json: "iam_service_linked_role", js: "iam_service_linked_role", typ: u(undefined, r("IamServiceLinkedRole")) },
        { json: "neptune_cluster_instance", js: "neptune_cluster_instance", typ: u(undefined, r("ClusterInstance")) },
        { json: "pinpoint_email_channel", js: "pinpoint_email_channel", typ: u(undefined, r("PinpointEmailChannel")) },
        { json: "route_table_association", js: "route_table_association", typ: u(undefined, r("RouteTableAssociation")) },
        { json: "amplify_branch", js: "amplify_branch", typ: u(undefined, r("AmplifyBranch")) },
        { json: "ivs_playback_key_pair", js: "ivs_playback_key_pair", typ: u(undefined, r("IvsPlaybackKeyPair")) },
        { json: "route53recoveryreadiness_cell", js: "route53recoveryreadiness_cell", typ: u(undefined, r("Route53RecoveryreadinessCell")) },
        { json: "athena_database", js: "athena_database", typ: u(undefined, r("AthenaDatabase")) },
        { json: "cloudhsm_v2_hsm", js: "cloudhsm_v2_hsm", typ: u(undefined, r("CloudhsmV2HSM")) },
        { json: "ses_configuration_set", js: "ses_configuration_set", typ: u(undefined, r("SesConfigurationSet")) },
        { json: "vpc_security_group_egress_rule", js: "vpc_security_group_egress_rule", typ: u(undefined, r("VpcSecurityGroupRule")) },
        { json: "apigatewayv2_api", js: "apigatewayv2_api", typ: u(undefined, r("ResourceApigatewayv2API")) },
        { json: "appstream_user", js: "appstream_user", typ: u(undefined, r("AppstreamUser")) },
        { json: "codeartifact_domain", js: "codeartifact_domain", typ: u(undefined, r("CodeartifactDomain")) },
        { json: "redshift_usage_limit", js: "redshift_usage_limit", typ: u(undefined, r("RedshiftUsageLimit")) },
        { json: "s3_bucket_analytics_configuration", js: "s3_bucket_analytics_configuration", typ: u(undefined, r("S3BucketAnalyticsConfiguration")) },
        { json: "athena_data_catalog", js: "athena_data_catalog", typ: u(undefined, r("KmsSecretClass")) },
        { json: "kms_replica_external_key", js: "kms_replica_external_key", typ: u(undefined, r("KmsExternalKey")) },
        { json: "devicefarm_instance_profile", js: "devicefarm_instance_profile", typ: u(undefined, r("DevicefarmInstanceProfile")) },
        { json: "pinpoint_apns_sandbox_channel", js: "pinpoint_apns_sandbox_channel", typ: u(undefined, r("PinpointApnsChannel")) },
        { json: "vpclattice_listener", js: "vpclattice_listener", typ: u(undefined, r("ResourceVpclatticeListener")) },
        { json: "auditmanager_framework_share", js: "auditmanager_framework_share", typ: u(undefined, r("AuditmanagerFrameworkShare")) },
        { json: "detective_member", js: "detective_member", typ: u(undefined, r("DetectiveMember")) },
        { json: "apigatewayv2_deployment", js: "apigatewayv2_deployment", typ: u(undefined, r("Apigatewayv2Deployment")) },
        { json: "sagemaker_endpoint_configuration", js: "sagemaker_endpoint_configuration", typ: u(undefined, r("SagemakerEndpointConfiguration")) },
        { json: "medialive_input", js: "medialive_input", typ: u(undefined, r("MedialiveInput")) },
        { json: "networkmanager_global_network", js: "networkmanager_global_network", typ: u(undefined, r("NetworkmanagerGlobalNetwork")) },
        { json: "volume_attachment", js: "volume_attachment", typ: u(undefined, r("VolumeAttachment")) },
        { json: "cloudwatch_event_connection", js: "cloudwatch_event_connection", typ: u(undefined, r("ResourceCloudwatchEventConnection")) },
        { json: "cloudwatch_log_stream", js: "cloudwatch_log_stream", typ: u(undefined, r("CloudwatchLogStream")) },
        { json: "evidently_segment", js: "evidently_segment", typ: u(undefined, r("EvidentlySegment")) },
        { json: "imagebuilder_image", js: "imagebuilder_image", typ: u(undefined, r("ImagebuilderImage")) },
        { json: "lambda_event_source_mapping", js: "lambda_event_source_mapping", typ: u(undefined, r("LambdaEventSourceMapping")) },
        { json: "pinpoint_baidu_channel", js: "pinpoint_baidu_channel", typ: u(undefined, r("PinpointChannel")) },
        { json: "docdb_global_cluster", js: "docdb_global_cluster", typ: u(undefined, r("GlobalCluster")) },
        { json: "workspaces_connection_alias", js: "workspaces_connection_alias", typ: u(undefined, r("WorkspacesConnectionAlias")) },
        { json: "ec2_instance_state", js: "ec2_instance_state", typ: u(undefined, r("Ec2InstanceState")) },
        { json: "vpc_ipv6_cidr_block_association", js: "vpc_ipv6_cidr_block_association", typ: u(undefined, r("VpcIpv6CIDRBlockAssociation")) },
        { json: "ami_from_instance", js: "ami_from_instance", typ: u(undefined, r("AmiFromInstance")) },
        { json: "quicksight_namespace", js: "quicksight_namespace", typ: u(undefined, r("QuicksightNamespace")) },
        { json: "ssmcontacts_plan", js: "ssmcontacts_plan", typ: u(undefined, r("SsmcontactsPlan")) },
        { json: "inspector_assessment_template", js: "inspector_assessment_template", typ: u(undefined, r("InspectorAssessmentTemplate")) },
        { json: "lambda_alias", js: "lambda_alias", typ: u(undefined, r("LambdaAlias")) },
        { json: "pinpoint_app", js: "pinpoint_app", typ: u(undefined, r("PinpointApp")) },
        { json: "proxy_protocol_policy", js: "proxy_protocol_policy", typ: u(undefined, r("ProxyProtocolPolicy")) },
        { json: "redshift_hsm_configuration", js: "redshift_hsm_configuration", typ: u(undefined, r("RedshiftHSMConfiguration")) },
        { json: "sesv2_contact_list", js: "sesv2_contact_list", typ: u(undefined, r("Sesv2ContactList")) },
        { json: "snapshot_create_volume_permission", js: "snapshot_create_volume_permission", typ: u(undefined, r("SnapshotCreateVolumePermission")) },
        { json: "emrcontainers_job_template", js: "emrcontainers_job_template", typ: u(undefined, r("EmrcontainersJobTemplate")) },
        { json: "glue_ml_transform", js: "glue_ml_transform", typ: u(undefined, r("GlueMlTransform")) },
        { json: "neptune_cluster_endpoint", js: "neptune_cluster_endpoint", typ: u(undefined, r("ClusterEndpoint")) },
        { json: "glue_partition", js: "glue_partition", typ: u(undefined, r("GluePartition")) },
        { json: "imagebuilder_component", js: "imagebuilder_component", typ: u(undefined, r("ImagebuilderComponent")) },
        { json: "db_proxy", js: "db_proxy", typ: u(undefined, r("ResourceDBProxy")) },
        { json: "msk_cluster_policy", js: "msk_cluster_policy", typ: u(undefined, r("MskClusterPolicy")) },
        { json: "appsync_graphql_api", js: "appsync_graphql_api", typ: u(undefined, r("AppsyncGraphqlAPI")) },
        { json: "datasync_location_fsx_openzfs_file_system", js: "datasync_location_fsx_openzfs_file_system", typ: u(undefined, r("DatasyncLocationFsxFileSystem")) },
        { json: "identitystore_user", js: "identitystore_user", typ: u(undefined, r("ResourceIdentitystoreUser")) },
        { json: "sagemaker_model_package_group_policy", js: "sagemaker_model_package_group_policy", typ: u(undefined, r("SagemakerModelPackageGroupPolicy")) },
        { json: "kms_key_policy", js: "kms_key_policy", typ: u(undefined, r("KmsKeyPolicy")) },
        { json: "transfer_workflow", js: "transfer_workflow", typ: u(undefined, r("TransferWorkflow")) },
        { json: "cloudwatch_event_permission", js: "cloudwatch_event_permission", typ: u(undefined, r("CloudwatchEventPermission")) },
        { json: "sagemaker_workteam", js: "sagemaker_workteam", typ: u(undefined, r("SagemakerWorkteam")) },
        { json: "iot_provisioning_template", js: "iot_provisioning_template", typ: u(undefined, r("IotProvisioningTemplate")) },
        { json: "opsworks_stack", js: "opsworks_stack", typ: u(undefined, r("OpsworksStack")) },
        { json: "sesv2_configuration_set_event_destination", js: "sesv2_configuration_set_event_destination", typ: u(undefined, r("Sesv2ConfigurationSetEventDestination")) },
        { json: "connect_queue", js: "connect_queue", typ: u(undefined, r("ConnectQueue")) },
        { json: "eks_cluster", js: "eks_cluster", typ: u(undefined, r("ResourceEksCluster")) },
        { json: "iam_openid_connect_provider", js: "iam_openid_connect_provider", typ: u(undefined, r("IamOpenidConnectProvider")) },
        { json: "appmesh_virtual_gateway", js: "appmesh_virtual_gateway", typ: u(undefined, r("AppmeshVirtualGateway")) },
        { json: "shield_application_layer_automatic_response", js: "shield_application_layer_automatic_response", typ: u(undefined, r("ShieldApplicationLayerAutomaticResponse")) },
        { json: "guardduty_threatintelset", js: "guardduty_threatintelset", typ: u(undefined, r("GuarddutySet")) },
        { json: "cloudfront_continuous_deployment_policy", js: "cloudfront_continuous_deployment_policy", typ: u(undefined, r("CloudfrontContinuousDeploymentPolicy")) },
        { json: "cloudfront_field_level_encryption_profile", js: "cloudfront_field_level_encryption_profile", typ: u(undefined, r("CloudfrontFieldLevelEncryptionProfile")) },
        { json: "glue_connection", js: "glue_connection", typ: u(undefined, r("ResourceGlueConnection")) },
        { json: "guardduty_ipset", js: "guardduty_ipset", typ: u(undefined, r("GuarddutySet")) },
        { json: "dx_hosted_transit_virtual_interface_accepter", js: "dx_hosted_transit_virtual_interface_accepter", typ: u(undefined, r("DxHostedVirtualInterfaceAccepter")) },
        { json: "iot_policy_attachment", js: "iot_policy_attachment", typ: u(undefined, r("IotPolicyAttachment")) },
        { json: "networkmanager_site", js: "networkmanager_site", typ: u(undefined, r("NetworkmanagerSite")) },
        { json: "config_organization_managed_rule", js: "config_organization_managed_rule", typ: u(undefined, r("ConfigOrganizationRule")) },
        { json: "finspace_kx_environment", js: "finspace_kx_environment", typ: u(undefined, r("FinspaceKxEnvironment")) },
        { json: "vpc_ipam_preview_next_cidr", js: "vpc_ipam_preview_next_cidr", typ: u(undefined, r("VpcIPAMPreviewNextCIDR")) },
        { json: "iam_group_policy_attachment", js: "iam_group_policy_attachment", typ: u(undefined, r("KmsSecretClass")) },
        { json: "identitystore_group", js: "identitystore_group", typ: u(undefined, r("ResourceIdentitystoreGroup")) },
        { json: "networkmanager_transit_gateway_peering", js: "networkmanager_transit_gateway_peering", typ: u(undefined, r("NetworkmanagerTransitGatewayPeering")) },
        { json: "vpn_connection", js: "vpn_connection", typ: u(undefined, r("VPNConnection")) },
        { json: "media_store_container_policy", js: "media_store_container_policy", typ: u(undefined, r("MediaStoreContainerPolicy")) },
        { json: "quicksight_refresh_schedule", js: "quicksight_refresh_schedule", typ: u(undefined, r("QuicksightRefreshSchedule")) },
        { json: "rum_app_monitor", js: "rum_app_monitor", typ: u(undefined, r("RumAppMonitor")) },
        { json: "ssm_patch_group", js: "ssm_patch_group", typ: u(undefined, r("SsmPatchGroup")) },
        { json: "api_gateway_model", js: "api_gateway_model", typ: u(undefined, r("APIModel")) },
        { json: "cloudcontrolapi_resource", js: "cloudcontrolapi_resource", typ: u(undefined, r("ResourceCloudcontrolapiResource")) },
        { json: "instance", js: "instance", typ: u(undefined, r("ResourceInstance")) },
        { json: "media_convert_queue", js: "media_convert_queue", typ: u(undefined, r("MediaConvertQueue")) },
        { json: "redshift_subnet_group", js: "redshift_subnet_group", typ: u(undefined, r("Apigatewayv2VpcLink")) },
        { json: "grafana_workspace_saml_configuration", js: "grafana_workspace_saml_configuration", typ: u(undefined, r("GrafanaWorkspaceSamlConfiguration")) },
        { json: "sagemaker_code_repository", js: "sagemaker_code_repository", typ: u(undefined, r("SagemakerCodeRepository")) },
        { json: "auditmanager_control", js: "auditmanager_control", typ: u(undefined, r("ResourceAuditmanagerControl")) },
        { json: "macie2_findings_filter", js: "macie2_findings_filter", typ: u(undefined, r("Macie2FindingsFilter")) },
        { json: "dms_replication_instance", js: "dms_replication_instance", typ: u(undefined, r("DmsReplicationInstance")) },
        { json: "ec2_managed_prefix_list", js: "ec2_managed_prefix_list", typ: u(undefined, r("ResourceEc2ManagedPrefixList")) },
        { json: "inspector_resource_group", js: "inspector_resource_group", typ: u(undefined, r("InspectorResourceGroup")) },
        { json: "quicksight_ingestion", js: "quicksight_ingestion", typ: u(undefined, r("QuicksightIngestion")) },
        { json: "account_primary_contact", js: "account_primary_contact", typ: u(undefined, r("AccountPrimaryContact")) },
        { json: "ec2_traffic_mirror_target", js: "ec2_traffic_mirror_target", typ: u(undefined, r("Ec2TrafficMirrorTarget")) },
        { json: "sns_topic_policy", js: "sns_topic_policy", typ: u(undefined, r("SnsTopicPolicy")) },
        { json: "vpc_network_performance_metric_subscription", js: "vpc_network_performance_metric_subscription", typ: u(undefined, r("VpcNetworkPerformanceMetricSubscription")) },
        { json: "dx_hosted_connection", js: "dx_hosted_connection", typ: u(undefined, r("DxHostedConnection")) },
        { json: "waf_sql_injection_match_set", js: "waf_sql_injection_match_set", typ: u(undefined, r("WafSQLInjectionMatchSet")) },
        { json: "iam_role", js: "iam_role", typ: u(undefined, r("ResourceIamRole")) },
        { json: "cloudfront_function", js: "cloudfront_function", typ: u(undefined, r("CloudfrontFunction")) },
        { json: "eks_fargate_profile", js: "eks_fargate_profile", typ: u(undefined, r("EksFargateProfile")) },
        { json: "ami_launch_permission", js: "ami_launch_permission", typ: u(undefined, r("AmiLaunchPermission")) },
        { json: "lightsail_bucket_access_key", js: "lightsail_bucket_access_key", typ: u(undefined, r("LightsailBucketAccessKey")) },
        { json: "opensearch_domain", js: "opensearch_domain", typ: u(undefined, r("OpensearchDomain")) },
        { json: "sns_topic_data_protection_policy", js: "sns_topic_data_protection_policy", typ: u(undefined, r("SnsTopicDataProtectionPolicy")) },
        { json: "s3_bucket", js: "s3_bucket", typ: u(undefined, r("ResourceS3Bucket")) },
        { json: "ses_active_receipt_rule_set", js: "ses_active_receipt_rule_set", typ: u(undefined, r("SesReceiptRuleSet")) },
        { json: "cloudwatch_log_destination", js: "cloudwatch_log_destination", typ: u(undefined, r("CloudwatchLogDestination")) },
        { json: "appmesh_gateway_route", js: "appmesh_gateway_route", typ: u(undefined, r("AppmeshGatewayRoute")) },
        { json: "config_aggregate_authorization", js: "config_aggregate_authorization", typ: u(undefined, r("ConfigAggregateAuthorization")) },
        { json: "lb_cookie_stickiness_policy", js: "lb_cookie_stickiness_policy", typ: u(undefined, r("AppCookieStickinessPolicyClass")) },
        { json: "kinesis_firehose_delivery_stream", js: "kinesis_firehose_delivery_stream", typ: u(undefined, r("KinesisFirehoseDeliveryStream")) },
        { json: "auditmanager_framework", js: "auditmanager_framework", typ: u(undefined, r("AuditmanagerFramework")) },
        { json: "datapipeline_pipeline_definition", js: "datapipeline_pipeline_definition", typ: u(undefined, r("DatapipelinePipelineDefinition")) },
        { json: "organizations_resource_policy", js: "organizations_resource_policy", typ: u(undefined, r("DatapipelinePipelineClass")) },
        { json: "appconfig_application", js: "appconfig_application", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "connect_phone_number", js: "connect_phone_number", typ: u(undefined, r("ConnectPhoneNumber")) },
        { json: "ec2_transit_gateway_multicast_domain", js: "ec2_transit_gateway_multicast_domain", typ: u(undefined, r("ResourceEc2TransitGatewayMulticastDomain")) },
        { json: "iam_group", js: "iam_group", typ: u(undefined, r("ResourceIamGroup")) },
        { json: "quicksight_folder_membership", js: "quicksight_folder_membership", typ: u(undefined, r("QuicksightFolderMembership")) },
        { json: "wafregional_web_acl_association", js: "wafregional_web_acl_association", typ: u(undefined, r("WafregionalWebACLAssociation")) },
        { json: "networkmanager_connection", js: "networkmanager_connection", typ: u(undefined, r("NetworkmanagerConnection")) },
        { json: "sagemaker_human_task_ui", js: "sagemaker_human_task_ui", typ: u(undefined, r("SagemakerHumanTaskUI")) },
        { json: "codecommit_approval_rule_template", js: "codecommit_approval_rule_template", typ: u(undefined, r("CodecommitApprovalRuleTemplate")) },
        { json: "glue_job", js: "glue_job", typ: u(undefined, r("GlueJob")) },
        { json: "storagegateway_smb_file_share", js: "storagegateway_smb_file_share", typ: u(undefined, r("StoragegatewaySMBFileShare")) },
        { json: "redshift_cluster", js: "redshift_cluster", typ: u(undefined, r("ResourceRedshiftCluster")) },
        { json: "api_gateway_integration", js: "api_gateway_integration", typ: u(undefined, r("APIGatewayIntegration")) },
        { json: "autoscaling_lifecycle_hook", js: "autoscaling_lifecycle_hook", typ: u(undefined, r("AutoscalingLifecycleHook")) },
        { json: "msk_serverless_cluster", js: "msk_serverless_cluster", typ: u(undefined, r("MskServerlessCluster")) },
        { json: "api_gateway_domain_name", js: "api_gateway_domain_name", typ: u(undefined, r("ResourceAPIGatewayDomainName")) },
        { json: "cloudtrail_event_data_store", js: "cloudtrail_event_data_store", typ: u(undefined, r("KmsSecretClass")) },
        { json: "network_acl", js: "network_acl", typ: u(undefined, r("NetworkACL")) },
        { json: "appsync_resolver", js: "appsync_resolver", typ: u(undefined, r("AppsyncResolver")) },
        { json: "ecr_replication_configuration", js: "ecr_replication_configuration", typ: u(undefined, r("EcrReplicationConfiguration")) },
        { json: "gamelift_alias", js: "gamelift_alias", typ: u(undefined, r("GameliftAlias")) },
        { json: "lex_bot_alias", js: "lex_bot_alias", typ: u(undefined, r("Lex")) },
        { json: "sagemaker_image", js: "sagemaker_image", typ: u(undefined, r("SagemakerImage")) },
        { json: "gamelift_game_session_queue", js: "gamelift_game_session_queue", typ: u(undefined, r("GameliftGameSessionQueue")) },
        { json: "codedeploy_deployment_config", js: "codedeploy_deployment_config", typ: u(undefined, r("CodedeployDeploymentConfig")) },
        { json: "ebs_default_kms_key", js: "ebs_default_kms_key", typ: u(undefined, r("ResourceEbsDefaultKmsKey")) },
        { json: "iam_security_token_service_preferences", js: "iam_security_token_service_preferences", typ: u(undefined, r("IamSecurityTokenServicePreferences")) },
        { json: "media_package_channel", js: "media_package_channel", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "sagemaker_space", js: "sagemaker_space", typ: u(undefined, r("SagemakerSpace")) },
        { json: "shield_protection_health_check_association", js: "shield_protection_health_check_association", typ: u(undefined, r("ShieldProtectionHealthCheckAssociation")) },
        { json: "batch_job_definition", js: "batch_job_definition", typ: u(undefined, r("BatchJobDefinition")) },
        { json: "rds_cluster_instance", js: "rds_cluster_instance", typ: u(undefined, r("RDSClusterInstance")) },
        { json: "synthetics_group_association", js: "synthetics_group_association", typ: u(undefined, r("SyntheticsGroupAssociation")) },
        { json: "waf_rule", js: "waf_rule", typ: u(undefined, r("Waf")) },
        { json: "appstream_image_builder", js: "appstream_image_builder", typ: u(undefined, r("AppstreamImageBuilder")) },
        { json: "connect_contact_flow", js: "connect_contact_flow", typ: u(undefined, r("ConnectContactFlowModuleClass")) },
        { json: "sagemaker_image_version", js: "sagemaker_image_version", typ: u(undefined, r("SagemakerImageVersion")) },
        { json: "launch_configuration", js: "launch_configuration", typ: u(undefined, r("ResourceLaunchConfiguration")) },
        { json: "iam_server_certificate", js: "iam_server_certificate", typ: u(undefined, r("ResourceIamServerCertificate")) },
        { json: "sagemaker_workforce", js: "sagemaker_workforce", typ: u(undefined, r("SagemakerWorkforce")) },
        { json: "swf_domain", js: "swf_domain", typ: u(undefined, r("MemorydbACL")) },
        { json: "vpc_peering_connection", js: "vpc_peering_connection", typ: u(undefined, r("VpcPeeringConnectionAccepterClass")) },
        { json: "quicksight_theme", js: "quicksight_theme", typ: u(undefined, r("QuicksightTheme")) },
        { json: "vpc_ipam_scope", js: "vpc_ipam_scope", typ: u(undefined, r("VpcIPAMScope")) },
        { json: "app_cookie_stickiness_policy", js: "app_cookie_stickiness_policy", typ: u(undefined, r("AppCookieStickinessPolicyClass")) },
        { json: "globalaccelerator_listener", js: "globalaccelerator_listener", typ: u(undefined, r("GlobalacceleratorListener")) },
        { json: "iot_indexing_configuration", js: "iot_indexing_configuration", typ: u(undefined, r("IotIndexingConfiguration")) },
        { json: "ec2_transit_gateway_vpc_attachment", js: "ec2_transit_gateway_vpc_attachment", typ: u(undefined, r("Ec2TransitGatewayVpcAttachment")) },
        { json: "ecr_repository", js: "ecr_repository", typ: u(undefined, r("ResourceEcrRepository")) },
        { json: "servicecatalog_principal_portfolio_association", js: "servicecatalog_principal_portfolio_association", typ: u(undefined, r("ServicecatalogPrincipalPortfolioAssociation")) },
        { json: "xray_sampling_rule", js: "xray_sampling_rule", typ: u(undefined, r("XraySamplingRule")) },
        { json: "default_network_acl", js: "default_network_acl", typ: u(undefined, r("NetworkACL")) },
        { json: "gamelift_script", js: "gamelift_script", typ: u(undefined, r("Gamelift")) },
        { json: "rds_cluster_activity_stream", js: "rds_cluster_activity_stream", typ: u(undefined, r("RDSClusterActivityStream")) },
        { json: "datasync_location_s3", js: "datasync_location_s3", typ: u(undefined, r("DatasyncLocationS3")) },
        { json: "ec2_transit_gateway", js: "ec2_transit_gateway", typ: u(undefined, r("Ec2TransitGateway")) },
        { json: "lightsail_instance_public_ports", js: "lightsail_instance_public_ports", typ: u(undefined, r("LightsailInstancePublicPorts")) },
        { json: "efs_backup_policy", js: "efs_backup_policy", typ: u(undefined, r("EFSBackupPolicy")) },
        { json: "globalaccelerator_custom_routing_accelerator", js: "globalaccelerator_custom_routing_accelerator", typ: u(undefined, r("ResourceGlobalacceleratorAccelerator")) },
        { json: "ssoadmin_instance_access_control_attributes", js: "ssoadmin_instance_access_control_attributes", typ: u(undefined, r("SsoadminInstanceAccessControlAttributes")) },
        { json: "vpc_endpoint_service_allowed_principal", js: "vpc_endpoint_service_allowed_principal", typ: u(undefined, r("VpcEndpointServiceAllowedPrincipal")) },
        { json: "db_cluster_snapshot", js: "db_cluster_snapshot", typ: u(undefined, r("ClusterSnapshot")) },
        { json: "appstream_directory_config", js: "appstream_directory_config", typ: u(undefined, r("AppstreamDirectoryConfig")) },
        { json: "config_conformance_pack", js: "config_conformance_pack", typ: u(undefined, r("ConfigConformancePack")) },
        { json: "apigatewayv2_model", js: "apigatewayv2_model", typ: u(undefined, r("APIModel")) },
        { json: "lb_ssl_negotiation_policy", js: "lb_ssl_negotiation_policy", typ: u(undefined, r("AppCookieStickinessPolicyClass")) },
        { json: "spot_datafeed_subscription", js: "spot_datafeed_subscription", typ: u(undefined, r("SpotDatafeedSubscription")) },
        { json: "opensearch_inbound_connection_accepter", js: "opensearch_inbound_connection_accepter", typ: u(undefined, r("OpensearchInboundConnectionAccepter")) },
        { json: "cloudformation_stack", js: "cloudformation_stack", typ: u(undefined, r("ResourceCloudformationStack")) },
        { json: "directory_service_conditional_forwarder", js: "directory_service_conditional_forwarder", typ: u(undefined, r("DirectoryServiceConditionalForwarder")) },
        { json: "dlm_lifecycle_policy", js: "dlm_lifecycle_policy", typ: u(undefined, r("DlmLifecyclePolicy")) },
        { json: "security_group_rule", js: "security_group_rule", typ: u(undefined, r("SecurityGroupRule")) },
        { json: "acm_certificate_validation", js: "acm_certificate_validation", typ: u(undefined, r("ACMCertificateValidation")) },
        { json: "apigatewayv2_route_response", js: "apigatewayv2_route_response", typ: u(undefined, r("Apigatewayv2RouteResponse")) },
        { json: "iam_instance_profile", js: "iam_instance_profile", typ: u(undefined, r("ResourceIamInstanceProfile")) },
        { json: "codecatalyst_source_repository", js: "codecatalyst_source_repository", typ: u(undefined, r("Codecatalyst")) },
        { json: "glacier_vault", js: "glacier_vault", typ: u(undefined, r("GlacierVault")) },
        { json: "securityhub_action_target", js: "securityhub_action_target", typ: u(undefined, r("ChimesdkvoiceVoiceProfileDomainClass")) },
        { json: "backup_vault_notifications", js: "backup_vault_notifications", typ: u(undefined, r("BackupVaultNotifications")) },
        { json: "resourcegroups_group", js: "resourcegroups_group", typ: u(undefined, r("ResourcegroupsGroup")) },
        { json: "datasync_location_nfs", js: "datasync_location_nfs", typ: u(undefined, r("DatasyncLocationNFS")) },
        { json: "location_map", js: "location_map", typ: u(undefined, r("LocationMap")) },
        { json: "spot_instance_request", js: "spot_instance_request", typ: u(undefined, r("SpotInstanceRequest")) },
        { json: "route53_cidr_collection", js: "route53_cidr_collection", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "servicecatalog_portfolio_share", js: "servicecatalog_portfolio_share", typ: u(undefined, r("ServicecatalogPortfolioShare")) },
        { json: "dax_cluster", js: "dax_cluster", typ: u(undefined, r("DaxCluster")) },
        { json: "security_group", js: "security_group", typ: u(undefined, r("SecurityGroup")) },
        { json: "chimesdkvoice_global_settings", js: "chimesdkvoice_global_settings", typ: u(undefined, r("ChimesdkvoiceGlobalSettings")) },
        { json: "elastic_beanstalk_application_version", js: "elastic_beanstalk_application_version", typ: u(undefined, r("ElasticBeanstalkApplicationVersion")) },
        { json: "licensemanager_grant", js: "licensemanager_grant", typ: u(undefined, r("LicensemanagerGrant")) },
        { json: "sagemaker_app", js: "sagemaker_app", typ: u(undefined, r("SagemakerApp")) },
        { json: "cognito_identity_pool_provider_principal_tag", js: "cognito_identity_pool_provider_principal_tag", typ: u(undefined, r("CognitoIdentityPoolProviderPrincipalTag")) },
        { json: "glue_workflow", js: "glue_workflow", typ: u(undefined, r("Apigatewayv2VpcLink")) },
        { json: "cloudwatch_metric_alarm", js: "cloudwatch_metric_alarm", typ: u(undefined, r("CloudwatchMetricAlarm")) },
        { json: "guardduty_publishing_destination", js: "guardduty_publishing_destination", typ: u(undefined, r("GuarddutyPublishingDestination")) },
        { json: "sagemaker_feature_group", js: "sagemaker_feature_group", typ: u(undefined, r("SagemakerFeatureGroup")) },
        { json: "vpc_ipam", js: "vpc_ipam", typ: u(undefined, r("VpcIPAM")) },
        { json: "wafregional_rule_group", js: "wafregional_rule_group", typ: u(undefined, r("Waf")) },
        { json: "lambda_function_event_invoke_config", js: "lambda_function_event_invoke_config", typ: u(undefined, r("LambdaFunctionEventInvokeConfig")) },
        { json: "rolesanywhere_profile", js: "rolesanywhere_profile", typ: u(undefined, r("RolesanywhereProfile")) },
        { json: "autoscaling_notification", js: "autoscaling_notification", typ: u(undefined, r("AutoscalingNotification")) },
        { json: "devicefarm_upload", js: "devicefarm_upload", typ: u(undefined, r("DevicefarmUpload")) },
        { json: "location_tracker", js: "location_tracker", typ: u(undefined, r("LocationTracker")) },
        { json: "transcribe_vocabulary", js: "transcribe_vocabulary", typ: u(undefined, r("TranscribeVocabulary")) },
        { json: "verifiedaccess_instance", js: "verifiedaccess_instance", typ: u(undefined, r("VerifiedaccessInstance")) },
        { json: "ec2_traffic_mirror_filter", js: "ec2_traffic_mirror_filter", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "dx_connection", js: "dx_connection", typ: u(undefined, r("ResourceDxConnection")) },
        { json: "dx_hosted_public_virtual_interface_accepter", js: "dx_hosted_public_virtual_interface_accepter", typ: u(undefined, r("DxHostedPublicVirtualInterfaceAccepter")) },
        { json: "apprunner_observability_configuration", js: "apprunner_observability_configuration", typ: u(undefined, r("ApprunnerObservabilityConfiguration")) },
        { json: "emr_managed_scaling_policy", js: "emr_managed_scaling_policy", typ: u(undefined, r("EmrManagedScalingPolicy")) },
        { json: "network_interface_attachment", js: "network_interface_attachment", typ: u(undefined, r("NetworkInterfaceAttachment")) },
        { json: "egress_only_internet_gateway", js: "egress_only_internet_gateway", typ: u(undefined, r("Ec2LocalGatewayRouteTableVpcAssociation")) },
        { json: "memorydb_parameter_group", js: "memorydb_parameter_group", typ: u(undefined, r("ParameterGroup")) },
        { json: "networkmanager_link_association", js: "networkmanager_link_association", typ: u(undefined, r("NetworkmanagerAssociation")) },
        { json: "glue_data_catalog_encryption_settings", js: "glue_data_catalog_encryption_settings", typ: u(undefined, r("GlueDataCatalogEncryptionSettings")) },
        { json: "iot_authorizer", js: "iot_authorizer", typ: u(undefined, r("IotAuthorizer")) },
        { json: "applicationinsights_application", js: "applicationinsights_application", typ: u(undefined, r("ApplicationinsightsApplication")) },
        { json: "cloudwatch_event_target", js: "cloudwatch_event_target", typ: u(undefined, r("CloudwatchEventTarget")) },
        { json: "ec2_transit_gateway_connect", js: "ec2_transit_gateway_connect", typ: u(undefined, r("ResourceEc2TransitGatewayConnect")) },
        { json: "secretsmanager_secret_rotation", js: "secretsmanager_secret_rotation", typ: u(undefined, r("ResourceSecretsmanagerSecretRotation")) },
        { json: "launch_template", js: "launch_template", typ: u(undefined, r("ResourceLaunchTemplate")) },
        { json: "networkmanager_connect_peer", js: "networkmanager_connect_peer", typ: u(undefined, r("KmsSecretClass")) },
        { json: "pipes_pipe", js: "pipes_pipe", typ: u(undefined, r("PipesPipe")) },
        { json: "lambda_layer_version_permission", js: "lambda_layer_version_permission", typ: u(undefined, r("LambdaLayerVersionPermission")) },
        { json: "amplify_backend_environment", js: "amplify_backend_environment", typ: u(undefined, r("AmplifyBackendEnvironment")) },
        { json: "ecs_account_setting_default", js: "ecs_account_setting_default", typ: u(undefined, r("EcsAccountSettingDefault")) },
        { json: "globalaccelerator_custom_routing_endpoint_group", js: "globalaccelerator_custom_routing_endpoint_group", typ: u(undefined, r("GlobalacceleratorCustomRoutingEndpointGroup")) },
        { json: "lakeformation_resource_lf_tags", js: "lakeformation_resource_lf_tags", typ: u(undefined, r("LakeformationResourceLFTags")) },
        { json: "backup_selection", js: "backup_selection", typ: u(undefined, r("ResourceBackupSelection")) },
        { json: "directory_service_shared_directory", js: "directory_service_shared_directory", typ: u(undefined, r("DirectoryServiceSharedDirectory")) },
        { json: "appconfig_extension_association", js: "appconfig_extension_association", typ: u(undefined, r("AppconfigExtensionAssociation")) },
        { json: "config_organization_custom_rule", js: "config_organization_custom_rule", typ: u(undefined, r("ConfigOrganizationRule")) },
        { json: "ec2_transit_gateway_route_table_propagation", js: "ec2_transit_gateway_route_table_propagation", typ: u(undefined, r("Ec2TransitGatewayRouteTableAtion")) },
        { json: "vpc_endpoint_subnet_association", js: "vpc_endpoint_subnet_association", typ: u(undefined, r("VpcEndpointSubnetAssociation")) },
        { json: "vpn_connection_route", js: "vpn_connection_route", typ: u(undefined, r("VPNConnectionRoute")) },
        { json: "route53_resolver_config", js: "route53_resolver_config", typ: u(undefined, r("Route53ResolverConfig")) },
        { json: "timestreamwrite_database", js: "timestreamwrite_database", typ: u(undefined, r("TimestreamwriteDatabase")) },
        { json: "emrcontainers_virtual_cluster", js: "emrcontainers_virtual_cluster", typ: u(undefined, r("ResourceEmrcontainersVirtualCluster")) },
        { json: "imagebuilder_infrastructure_configuration", js: "imagebuilder_infrastructure_configuration", typ: u(undefined, r("ResourceImagebuilderInfrastructureConfiguration")) },
        { json: "opsworks_ganglia_layer", js: "opsworks_ganglia_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "dx_lag", js: "dx_lag", typ: u(undefined, r("DxLag")) },
        { json: "s3_bucket_policy", js: "s3_bucket_policy", typ: u(undefined, r("S3BucketPolicy")) },
        { json: "schemas_registry_policy", js: "schemas_registry_policy", typ: u(undefined, r("SchemasRegistryPolicy")) },
        { json: "ses_domain_identity_verification", js: "ses_domain_identity_verification", typ: u(undefined, r("SesDomainIdentityVerification")) },
        { json: "memorydb_acl", js: "memorydb_acl", typ: u(undefined, r("MemorydbACL")) },
        { json: "vpn_gateway_attachment", js: "vpn_gateway_attachment", typ: u(undefined, r("VPNGatewayAttachment")) },
        { json: "codegurureviewer_repository_association", js: "codegurureviewer_repository_association", typ: u(undefined, r("CodegurureviewerRepositoryAssociation")) },
        { json: "inspector2_enabler", js: "inspector2_enabler", typ: u(undefined, r("Inspector2Enabler")) },
        { json: "ssm_parameter", js: "ssm_parameter", typ: u(undefined, r("ResourceSsmParameter")) },
        { json: "iot_thing_principal_attachment", js: "iot_thing_principal_attachment", typ: u(undefined, r("IotThingPrincipalAttachment")) },
        { json: "route53_resolver_firewall_rule", js: "route53_resolver_firewall_rule", typ: u(undefined, r("Route53ResolverFirewallRule")) },
        { json: "ses_template", js: "ses_template", typ: u(undefined, r("SesTemplate")) },
        { json: "cognito_user_pool_domain", js: "cognito_user_pool_domain", typ: u(undefined, r("CognitoUserPoolDomain")) },
        { json: "internet_gateway", js: "internet_gateway", typ: u(undefined, r("Gateway")) },
        { json: "appsync_domain_name_api_association", js: "appsync_domain_name_api_association", typ: u(undefined, r("AppsyncDomainNameAPIAssociation")) },
        { json: "lb_target_group", js: "lb_target_group", typ: u(undefined, r("LBTargetGroup")) },
        { json: "ec2_network_insights_path", js: "ec2_network_insights_path", typ: u(undefined, r("ResourceEc2NetworkInsightsPath")) },
        { json: "fsx_ontap_file_system", js: "fsx_ontap_file_system", typ: u(undefined, r("FsxOntapFileSystem")) },
        { json: "qldb_stream", js: "qldb_stream", typ: u(undefined, r("QldbStream")) },
        { json: "s3control_bucket_lifecycle_configuration", js: "s3control_bucket_lifecycle_configuration", typ: u(undefined, r("S3")) },
        { json: "sns_platform_application", js: "sns_platform_application", typ: u(undefined, r("SnsPlatformApplication")) },
        { json: "ssmincidents_replication_set", js: "ssmincidents_replication_set", typ: u(undefined, r("ResourceSsmincidentsReplicationSet")) },
        { json: "s3_bucket_cors_configuration", js: "s3_bucket_cors_configuration", typ: u(undefined, r("S3Bucket")) },
        { json: "s3control_storage_lens_configuration", js: "s3control_storage_lens_configuration", typ: u(undefined, r("S3ControlStorageLensConfiguration")) },
        { json: "appintegrations_event_integration", js: "appintegrations_event_integration", typ: u(undefined, r("AppintegrationsEventIntegration")) },
        { json: "route53_resolver_firewall_config", js: "route53_resolver_firewall_config", typ: u(undefined, r("Route53ResolverConfig")) },
        { json: "s3_bucket_versioning", js: "s3_bucket_versioning", typ: u(undefined, r("S3Bucket")) },
        { json: "wafregional_xss_match_set", js: "wafregional_xss_match_set", typ: u(undefined, r("WafMatchSet")) },
        { json: "api_gateway_deployment", js: "api_gateway_deployment", typ: u(undefined, r("APIGatewayDeployment")) },
        { json: "db_snapshot", js: "db_snapshot", typ: u(undefined, r("ResourceDBSnapshot")) },
        { json: "iam_user_policy_attachment", js: "iam_user_policy_attachment", typ: u(undefined, r("KmsSecretClass")) },
        { json: "load_balancer_backend_server_policy", js: "load_balancer_backend_server_policy", typ: u(undefined, r("LoadBalancerBackendServerPolicy")) },
        { json: "ssoadmin_permission_set", js: "ssoadmin_permission_set", typ: u(undefined, r("SsoadminPermissionSet")) },
        { json: "macie2_classification_job", js: "macie2_classification_job", typ: u(undefined, r("Macie2ClassificationJob")) },
        { json: "xray_group", js: "xray_group", typ: u(undefined, r("XrayGroup")) },
        { json: "ses_identity_notification_topic", js: "ses_identity_notification_topic", typ: u(undefined, r("SesIdentityNotificationTopic")) },
        { json: "fsx_windows_file_system", js: "fsx_windows_file_system", typ: u(undefined, r("ResourceFsxWindowsFileSystem")) },
        { json: "keyspaces_table", js: "keyspaces_table", typ: u(undefined, r("KeyspacesTable")) },
        { json: "licensemanager_grant_accepter", js: "licensemanager_grant_accepter", typ: u(undefined, r("LicensemanagerGrant")) },
        { json: "cloudtrail", js: "cloudtrail", typ: u(undefined, r("Cloudtrail")) },
        { json: "route53domains_registered_domain", js: "route53domains_registered_domain", typ: u(undefined, r("Route53DomainsRegisteredDomain")) },
        { json: "securityhub_member", js: "securityhub_member", typ: u(undefined, r("SecurityhubMember")) },
        { json: "ses_event_destination", js: "ses_event_destination", typ: u(undefined, r("SesEventDestination")) },
        { json: "appconfig_extension", js: "appconfig_extension", typ: u(undefined, r("AppconfigExtension")) },
        { json: "iam_service_specific_credential", js: "iam_service_specific_credential", typ: u(undefined, r("IamServiceSpecificCredential")) },
        { json: "cloud9_environment_membership", js: "cloud9_environment_membership", typ: u(undefined, r("Cloud9EnvironmentMembership")) },
        { json: "emr_instance_fleet", js: "emr_instance_fleet", typ: u(undefined, r("EmrInstanceFleet")) },
        { json: "chime_voice_connector_termination", js: "chime_voice_connector_termination", typ: u(undefined, r("ChimeVoiceConnectorTermination")) },
        { json: "schemas_registry", js: "schemas_registry", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "glue_dev_endpoint", js: "glue_dev_endpoint", typ: u(undefined, r("GlueDevEndpoint")) },
        { json: "lightsail_bucket", js: "lightsail_bucket", typ: u(undefined, r("LightsailBucket")) },
        { json: "organizations_delegated_administrator", js: "organizations_delegated_administrator", typ: u(undefined, r("OrganizationsDelegatedAdministrator")) },
        { json: "route53recoverycontrolconfig_cluster", js: "route53recoverycontrolconfig_cluster", typ: u(undefined, r("Route53RecoverycontrolconfigCluster")) },
        { json: "fsx_ontap_storage_virtual_machine", js: "fsx_ontap_storage_virtual_machine", typ: u(undefined, r("ResourceFsxOntapStorageVirtualMachine")) },
        { json: "emr_instance_group", js: "emr_instance_group", typ: u(undefined, r("EmrInstanceGroup")) },
        { json: "lightsail_container_service_deployment_version", js: "lightsail_container_service_deployment_version", typ: u(undefined, r("LightsailContainerServiceDeploymentVersion")) },
        { json: "acmpca_certificate_authority_certificate", js: "acmpca_certificate_authority_certificate", typ: u(undefined, r("AcmpcaCertificateCertificate")) },
        { json: "ecs_task_set", js: "ecs_task_set", typ: u(undefined, r("EcsTaskSet")) },
        { json: "datasync_task", js: "datasync_task", typ: u(undefined, r("DatasyncTask")) },
        { json: "devicefarm_network_profile", js: "devicefarm_network_profile", typ: u(undefined, r("DevicefarmNetworkProfile")) },
        { json: "devicefarm_test_grid_project", js: "devicefarm_test_grid_project", typ: u(undefined, r("DevicefarmTestGridProject")) },
        { json: "redshiftserverless_resource_policy", js: "redshiftserverless_resource_policy", typ: u(undefined, r("ResourcePolicy")) },
        { json: "route53_resolver_firewall_rule_group", js: "route53_resolver_firewall_rule_group", typ: u(undefined, r("Route53Resolver")) },
        { json: "service_discovery_service", js: "service_discovery_service", typ: u(undefined, r("ServiceDiscoveryService")) },
        { json: "vpc_ipam_pool_cidr_allocation", js: "vpc_ipam_pool_cidr_allocation", typ: u(undefined, r("VpcIPAMPoolCIDRAllocation")) },
        { json: "cognito_user_pool", js: "cognito_user_pool", typ: u(undefined, r("CognitoUserPool")) },
        { json: "ec2_transit_gateway_multicast_domain_association", js: "ec2_transit_gateway_multicast_domain_association", typ: u(undefined, r("Ec2TransitGatewayMulticastDomainAssociation")) },
        { json: "s3_bucket_object", js: "s3_bucket_object", typ: u(undefined, r("ResourceS3BucketObject")) },
        { json: "organizations_organizational_unit", js: "organizations_organizational_unit", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "pinpoint_apns_channel", js: "pinpoint_apns_channel", typ: u(undefined, r("PinpointApnsChannel")) },
        { json: "servicecatalog_organizations_access", js: "servicecatalog_organizations_access", typ: u(undefined, r("ServicecatalogOrganizationsAccessClass")) },
        { json: "servicecatalog_provisioned_product", js: "servicecatalog_provisioned_product", typ: u(undefined, r("ServicecatalogProvisionedProduct")) },
        { json: "wafregional_regex_match_set", js: "wafregional_regex_match_set", typ: u(undefined, r("WafMatchSet")) },
        { json: "cognito_risk_configuration", js: "cognito_risk_configuration", typ: u(undefined, r("CognitoRiskConfiguration")) },
        { json: "lex_bot", js: "lex_bot", typ: u(undefined, r("ResourceLexBot")) },
        { json: "quicksight_template", js: "quicksight_template", typ: u(undefined, r("QuicksightTemplate")) },
        { json: "ivs_channel", js: "ivs_channel", typ: u(undefined, r("IvsChannel")) },
        { json: "lightsail_domain", js: "lightsail_domain", typ: u(undefined, r("LightsailDomain")) },
        { json: "dynamodb_tag", js: "dynamodb_tag", typ: u(undefined, r("Tag")) },
        { json: "ssm_maintenance_window", js: "ssm_maintenance_window", typ: u(undefined, r("SsmMaintenanceWindow")) },
        { json: "api_gateway_authorizer", js: "api_gateway_authorizer", typ: u(undefined, r("APIGatewayAuthorizer")) },
        { json: "transfer_ssh_key", js: "transfer_ssh_key", typ: u(undefined, r("TransferSSHKey")) },
        { json: "codedeploy_app", js: "codedeploy_app", typ: u(undefined, r("CodedeployApp")) },
        { json: "docdb_cluster_instance", js: "docdb_cluster_instance", typ: u(undefined, r("ClusterInstance")) },
        { json: "neptune_global_cluster", js: "neptune_global_cluster", typ: u(undefined, r("NeptuneGlobalCluster")) },
        { json: "cloudformation_type", js: "cloudformation_type", typ: u(undefined, r("CloudformationType")) },
        { json: "kendra_index", js: "kendra_index", typ: u(undefined, r("KendraIndex")) },
        { json: "s3outposts_endpoint", js: "s3outposts_endpoint", typ: u(undefined, r("S3OutpostsEndpoint")) },
        { json: "networkmanager_transit_gateway_route_table_attachment", js: "networkmanager_transit_gateway_route_table_attachment", typ: u(undefined, r("NetworkmanagerAttachment")) },
        { json: "wafregional_ipset", js: "wafregional_ipset", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "config_configuration_aggregator", js: "config_configuration_aggregator", typ: u(undefined, r("ConfigConfigurationAggregator")) },
        { json: "dx_bgp_peer", js: "dx_bgp_peer", typ: u(undefined, r("DxBGPPeer")) },
        { json: "elastictranscoder_pipeline", js: "elastictranscoder_pipeline", typ: u(undefined, r("ElastictranscoderPipeline")) },
        { json: "securityhub_organization_configuration", js: "securityhub_organization_configuration", typ: u(undefined, r("SecurityhubOrganizationConfiguration")) },
        { json: "chime_voice_connector_streaming", js: "chime_voice_connector_streaming", typ: u(undefined, r("ChimeVoiceConnectorStreaming")) },
        { json: "cloudfront_origin_access_control", js: "cloudfront_origin_access_control", typ: u(undefined, r("CloudfrontOriginAccessControl")) },
        { json: "efs_file_system_policy", js: "efs_file_system_policy", typ: u(undefined, r("EFSFileSystemPolicy")) },
        { json: "appconfig_deployment_strategy", js: "appconfig_deployment_strategy", typ: u(undefined, r("AppconfigDeploymentStrategy")) },
        { json: "appmesh_virtual_router", js: "appmesh_virtual_router", typ: u(undefined, r("AppmeshVirtualRouter")) },
        { json: "dx_public_virtual_interface", js: "dx_public_virtual_interface", typ: u(undefined, r("DxVirtualInterface")) },
        { json: "cloudwatch_event_rule", js: "cloudwatch_event_rule", typ: u(undefined, r("CloudwatchEventRule")) },
        { json: "prometheus_rule_group_namespace", js: "prometheus_rule_group_namespace", typ: u(undefined, r("PrometheusRuleGroupNamespace")) },
        { json: "apprunner_custom_domain_association", js: "apprunner_custom_domain_association", typ: u(undefined, r("ApprunnerCustomDomainAssociation")) },
        { json: "lambda_invocation", js: "lambda_invocation", typ: u(undefined, r("ResourceLambdaInvocation")) },
        { json: "networkmanager_link", js: "networkmanager_link", typ: u(undefined, r("NetworkmanagerLink")) },
        { json: "shield_protection", js: "shield_protection", typ: u(undefined, r("IvsRecordingConfiguration")) },
        { json: "securityhub_finding_aggregator", js: "securityhub_finding_aggregator", typ: u(undefined, r("KmsSecretClass")) },
        { json: "guardduty_organization_admin_account", js: "guardduty_organization_admin_account", typ: u(undefined, r("OrganizationAdminAccount")) },
        { json: "transfer_connector", js: "transfer_connector", typ: u(undefined, r("TransferConnector")) },
        { json: "finspace_kx_user", js: "finspace_kx_user", typ: u(undefined, r("FinspaceKxUser")) },
        { json: "waf_regex_match_set", js: "waf_regex_match_set", typ: u(undefined, r("WafMatchSet")) },
        { json: "api_gateway_stage", js: "api_gateway_stage", typ: u(undefined, r("APIGatewayStage")) },
        { json: "elasticache_replication_group", js: "elasticache_replication_group", typ: u(undefined, r("ResourceElasticacheReplicationGroup")) },
        { json: "securityhub_account", js: "securityhub_account", typ: u(undefined, r("SecurityhubAccount")) },
        { json: "kinesis_video_stream", js: "kinesis_video_stream", typ: u(undefined, r("KinesisVideoStream")) },
        { json: "networkfirewall_firewall", js: "networkfirewall_firewall", typ: u(undefined, r("ResourceNetworkfirewallFirewall")) },
        { json: "s3_bucket_intelligent_tiering_configuration", js: "s3_bucket_intelligent_tiering_configuration", typ: u(undefined, r("S3BucketIntelligentTieringConfiguration")) },
        { json: "vpn_gateway_route_propagation", js: "vpn_gateway_route_propagation", typ: u(undefined, r("VPNGatewayRoutePropagation")) },
        { json: "api_gateway_rest_api_policy", js: "api_gateway_rest_api_policy", typ: u(undefined, r("APIGatewayRESTAPIPolicy")) },
        { json: "appintegrations_data_integration", js: "appintegrations_data_integration", typ: u(undefined, r("AppintegrationsDataIntegration")) },
        { json: "apprunner_auto_scaling_configuration_version", js: "apprunner_auto_scaling_configuration_version", typ: u(undefined, r("ApprunnerAutoScalingConfigurationVersion")) },
        { json: "guardduty_organization_configuration", js: "guardduty_organization_configuration", typ: u(undefined, r("GuarddutyOrganizationConfiguration")) },
        { json: "quicksight_template_alias", js: "quicksight_template_alias", typ: u(undefined, r("QuicksightTemplateAlias")) },
        { json: "ram_resource_share", js: "ram_resource_share", typ: u(undefined, r("ResourceRAMResourceShare")) },
        { json: "sqs_queue_policy", js: "sqs_queue_policy", typ: u(undefined, r("SqsQueuePolicy")) },
        { json: "lightsail_lb_certificate_attachment", js: "lightsail_lb_certificate_attachment", typ: u(undefined, r("LightsailLBCertificateAttachment")) },
        { json: "neptune_event_subscription", js: "neptune_event_subscription", typ: u(undefined, r("DBEventSubscriptionClass")) },
        { json: "quicksight_account_subscription", js: "quicksight_account_subscription", typ: u(undefined, r("QuicksightAccountSubscription")) },
        { json: "cognito_user_pool_client", js: "cognito_user_pool_client", typ: u(undefined, r("CognitoUserPoolClient")) },
        { json: "ecrpublic_repository", js: "ecrpublic_repository", typ: u(undefined, r("EcrpublicRepository")) },
        { json: "vpc_ipam_resource_discovery", js: "vpc_ipam_resource_discovery", typ: u(undefined, r("VpcIPAMResourceDiscovery")) },
        { json: "ec2_local_gateway_route_table_vpc_association", js: "ec2_local_gateway_route_table_vpc_association", typ: u(undefined, r("Ec2LocalGatewayRouteTableVpcAssociation")) },
        { json: "macie2_member", js: "macie2_member", typ: u(undefined, r("Macie2Member")) },
        { json: "elasticache_global_replication_group", js: "elasticache_global_replication_group", typ: u(undefined, r("ElasticacheGlobalReplicationGroup")) },
        { json: "location_geofence_collection", js: "location_geofence_collection", typ: u(undefined, r("LocationGeofenceCollection")) },
        { json: "memorydb_subnet_group", js: "memorydb_subnet_group", typ: u(undefined, r("MemorydbSubnetGroupClass")) },
        { json: "cloudfront_key_group", js: "cloudfront_key_group", typ: u(undefined, r("CloudfrontKeyGroup")) },
        { json: "cognito_user_group", js: "cognito_user_group", typ: u(undefined, r("CognitoUserGroup")) },
        { json: "ssm_document", js: "ssm_document", typ: u(undefined, r("ResourceSsmDocument")) },
        { json: "vpc_peering_connection_accepter", js: "vpc_peering_connection_accepter", typ: u(undefined, r("VpcPeeringConnectionAccepterClass")) },
        { json: "location_tracker_association", js: "location_tracker_association", typ: u(undefined, r("LocationTrackerAssociation")) },
        { json: "s3_bucket_inventory", js: "s3_bucket_inventory", typ: u(undefined, r("S3BucketInventory")) },
        { json: "dx_transit_virtual_interface", js: "dx_transit_virtual_interface", typ: u(undefined, r("DxVirtualInterface")) },
        { json: "wafregional_sql_injection_match_set", js: "wafregional_sql_injection_match_set", typ: u(undefined, r("WafMatchSet")) },
        { json: "s3_bucket_accelerate_configuration", js: "s3_bucket_accelerate_configuration", typ: u(undefined, r("S3Bucket")) },
        { json: "connect_bot_association", js: "connect_bot_association", typ: u(undefined, r("ResourceConnectBotAssociation")) },
        { json: "lambda_permission", js: "lambda_permission", typ: u(undefined, r("LambdaPermission")) },
        { json: "redshift_snapshot_schedule", js: "redshift_snapshot_schedule", typ: u(undefined, r("RedshiftSnapshotSchedule")) },
        { json: "secretsmanager_secret_policy", js: "secretsmanager_secret_policy", typ: u(undefined, r("SecretsmanagerSecretPolicy")) },
        { json: "default_route_table", js: "default_route_table", typ: u(undefined, r("DefaultRouteTable")) },
        { json: "ecs_tag", js: "ecs_tag", typ: u(undefined, r("Tag")) },
        { json: "s3_access_point", js: "s3_access_point", typ: u(undefined, r("S3AccessPoint")) },
        { json: "wafv2_web_acl_association", js: "wafv2_web_acl_association", typ: u(undefined, r("Wafv2WebACLAssociation")) },
        { json: "memorydb_user", js: "memorydb_user", typ: u(undefined, r("ResourceMemorydbUser")) },
        { json: "s3_bucket_ownership_controls", js: "s3_bucket_ownership_controls", typ: u(undefined, r("S3BucketOwnershipControls")) },
        { json: "signer_signing_profile", js: "signer_signing_profile", typ: u(undefined, r("SignerSigningProfile")) },
        { json: "detective_graph", js: "detective_graph", typ: u(undefined, r("DetectiveGraph")) },
        { json: "ec2_carrier_gateway", js: "ec2_carrier_gateway", typ: u(undefined, r("Gateway")) },
        { json: "elasticsearch_domain_saml_options", js: "elasticsearch_domain_saml_options", typ: u(undefined, r("SearchDomainSamlOptions")) },
        { json: "inspector2_organization_configuration", js: "inspector2_organization_configuration", typ: u(undefined, r("Inspector2OrganizationConfiguration")) },
        { json: "lb", js: "lb", typ: u(undefined, r("LB")) },
        { json: "schemas_schema", js: "schemas_schema", typ: u(undefined, r("SchemasSchema")) },
        { json: "batch_compute_environment", js: "batch_compute_environment", typ: u(undefined, r("ResourceBatchComputeEnvironment")) },
        { json: "docdb_cluster_parameter_group", js: "docdb_cluster_parameter_group", typ: u(undefined, r("ParameterGroup")) },
        { json: "ecs_service", js: "ecs_service", typ: u(undefined, r("ResourceEcsService")) },
        { json: "vpclattice_service_network", js: "vpclattice_service_network", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "elb_attachment", js: "elb_attachment", typ: u(undefined, r("ElbAttachment")) },
        { json: "networkmanager_core_network_policy_attachment", js: "networkmanager_core_network_policy_attachment", typ: u(undefined, r("NetworkmanagerCoreNetworkPolicyAttachment")) },
        { json: "s3control_multi_region_access_point", js: "s3control_multi_region_access_point", typ: u(undefined, r("ResourceS3ControlMultiRegionAccessPoint")) },
        { json: "transfer_profile", js: "transfer_profile", typ: u(undefined, r("TransferProfile")) },
        { json: "internet_gateway_attachment", js: "internet_gateway_attachment", typ: u(undefined, r("InternetGatewayAttachment")) },
        { json: "vpclattice_service_network_service_association", js: "vpclattice_service_network_service_association", typ: u(undefined, r("VpclatticeServiceNetworkAssociation")) },
        { json: "vpc_ipv4_cidr_block_association", js: "vpc_ipv4_cidr_block_association", typ: u(undefined, r("VpcIpv4CIDRBlockAssociation")) },
        { json: "lightsail_bucket_resource_access", js: "lightsail_bucket_resource_access", typ: u(undefined, r("LightsailBucketResourceAccess")) },
        { json: "api_gateway_base_path_mapping", js: "api_gateway_base_path_mapping", typ: u(undefined, r("APIGatewayBasePathMapping")) },
        { json: "api_gateway_usage_plan_key", js: "api_gateway_usage_plan_key", typ: u(undefined, r("APIGatewayUsagePlanKey")) },
        { json: "apprunner_vpc_connector", js: "apprunner_vpc_connector", typ: u(undefined, r("ApprunnerVpcConnector")) },
        { json: "globalaccelerator_custom_routing_listener", js: "globalaccelerator_custom_routing_listener", typ: u(undefined, r("GlobalacceleratorCustomRoutingListener")) },
        { json: "redshift_endpoint_access", js: "redshift_endpoint_access", typ: u(undefined, r("RedshiftEndpointAccess")) },
        { json: "sfn_alias", js: "sfn_alias", typ: u(undefined, r("ResourceSfnAlias")) },
        { json: "default_security_group", js: "default_security_group", typ: u(undefined, r("DefaultSecurityGroup")) },
        { json: "signer_signing_profile_permission", js: "signer_signing_profile_permission", typ: u(undefined, r("SignerSigningProfilePermission")) },
        { json: "apigatewayv2_integration_response", js: "apigatewayv2_integration_response", typ: u(undefined, r("Apigatewayv2IntegrationResponse")) },
        { json: "appautoscaling_policy", js: "appautoscaling_policy", typ: u(undefined, r("AppautoscalingPolicy")) },
        { json: "cloudwatch_event_archive", js: "cloudwatch_event_archive", typ: u(undefined, r("CloudwatchEventArchive")) },
        { json: "autoscaling_attachment", js: "autoscaling_attachment", typ: u(undefined, r("AutoscalingAttachment")) },
        { json: "ebs_encryption_by_default", js: "ebs_encryption_by_default", typ: u(undefined, r("SoftwareTokenMfaConfigurationClass")) },
        { json: "msk_vpc_connection", js: "msk_vpc_connection", typ: u(undefined, r("MskVpcConnection")) },
        { json: "redshiftserverless_workgroup", js: "redshiftserverless_workgroup", typ: u(undefined, r("ResourceRedshiftserverlessWorkgroup")) },
        { json: "db_proxy_default_target_group", js: "db_proxy_default_target_group", typ: u(undefined, r("DBProxyDefaultTargetGroup")) },
        { json: "transcribe_vocabulary_filter", js: "transcribe_vocabulary_filter", typ: u(undefined, r("TranscribeVocabularyFilter")) },
        { json: "eks_addon", js: "eks_addon", typ: u(undefined, r("ResourceEksAddon")) },
        { json: "kendra_experience", js: "kendra_experience", typ: u(undefined, r("ResourceKendraExperience")) },
        { json: "neptune_parameter_group", js: "neptune_parameter_group", typ: u(undefined, r("ParameterGroup")) },
        { json: "s3control_multi_region_access_point_policy", js: "s3control_multi_region_access_point_policy", typ: u(undefined, r("S3ControlMultiRegionAccessPointPolicy")) },
        { json: "apprunner_vpc_ingress_connection", js: "apprunner_vpc_ingress_connection", typ: u(undefined, r("ApprunnerVpcIngressConnection")) },
        { json: "iam_group_policy", js: "iam_group_policy", typ: u(undefined, r("IamPolicy")) },
        { json: "storagegateway_cache", js: "storagegateway_cache", typ: u(undefined, r("StoragegatewayCacheClass")) },
        { json: "emr_studio", js: "emr_studio", typ: u(undefined, r("EmrStudio")) },
        { json: "sesv2_dedicated_ip_pool", js: "sesv2_dedicated_ip_pool", typ: u(undefined, r("Sesv2DedicatedIPPool")) },
        { json: "codecatalyst_project", js: "codecatalyst_project", typ: u(undefined, r("Codecatalyst")) },
        { json: "grafana_license_association", js: "grafana_license_association", typ: u(undefined, r("GrafanaLicenseAssociation")) },
        { json: "lambda_provisioned_concurrency_config", js: "lambda_provisioned_concurrency_config", typ: u(undefined, r("LambdaProvisionedConcurrencyConfig")) },
        { json: "vpc_security_group_ingress_rule", js: "vpc_security_group_ingress_rule", typ: u(undefined, r("VpcSecurityGroupRule")) },
        { json: "lambda_layer_version", js: "lambda_layer_version", typ: u(undefined, r("LambdaLayerVersion")) },
        { json: "redshift_partner", js: "redshift_partner", typ: u(undefined, r("RedshiftPartner")) },
        { json: "s3_bucket_logging", js: "s3_bucket_logging", typ: u(undefined, r("S3BucketLogging")) },
        { json: "neptune_cluster_parameter_group", js: "neptune_cluster_parameter_group", typ: u(undefined, r("ParameterGroup")) },
        { json: "rds_cluster_role_association", js: "rds_cluster_role_association", typ: u(undefined, r("RoleAssociation")) },
        { json: "sagemaker_studio_lifecycle_config", js: "sagemaker_studio_lifecycle_config", typ: u(undefined, r("SagemakerStudioLifecycleConfig")) },
        { json: "apprunner_service", js: "apprunner_service", typ: u(undefined, r("ApprunnerService")) },
        { json: "devicefarm_project", js: "devicefarm_project", typ: u(undefined, r("CloudwatchEventBusClass")) },
        { json: "fms_policy", js: "fms_policy", typ: u(undefined, r("FmsPolicy")) },
        { json: "vpclattice_access_log_subscription", js: "vpclattice_access_log_subscription", typ: u(undefined, r("VpclatticeAccessLogSubscription")) },
        { json: "cognito_identity_pool_roles_attachment", js: "cognito_identity_pool_roles_attachment", typ: u(undefined, r("CognitoIdentityPoolRolesAttachment")) },
        { json: "cognito_identity_provider", js: "cognito_identity_provider", typ: u(undefined, r("CognitoIdentityProvider")) },
        { json: "datapipeline_pipeline", js: "datapipeline_pipeline", typ: u(undefined, r("DatapipelinePipelineClass")) },
        { json: "kinesisanalyticsv2_application_snapshot", js: "kinesisanalyticsv2_application_snapshot", typ: u(undefined, r("Kinesisanalyticsv2ApplicationSnapshot")) },
        { json: "acmpca_policy", js: "acmpca_policy", typ: u(undefined, r("VpclatticeResourcePolicyClass")) },
        { json: "ce_anomaly_subscription", js: "ce_anomaly_subscription", typ: u(undefined, r("CeAnomalySubscription")) },
        { json: "connect_quick_connect", js: "connect_quick_connect", typ: u(undefined, r("ConnectQuickConnect")) },
        { json: "quicksight_analysis", js: "quicksight_analysis", typ: u(undefined, r("QuicksightAnalysis")) },
        { json: "codepipeline_webhook", js: "codepipeline_webhook", typ: u(undefined, r("CodepipelineWebhook")) },
        { json: "ec2_transit_gateway_route_table", js: "ec2_transit_gateway_route_table", typ: u(undefined, r("ResourceEc2TransitGatewayRouteTable")) },
        { json: "storagegateway_upload_buffer", js: "storagegateway_upload_buffer", typ: u(undefined, r("StoragegatewayLocalDiskClass")) },
        { json: "ebs_volume", js: "ebs_volume", typ: u(undefined, r("ResourceEbsVolume")) },
        { json: "pinpoint_event_stream", js: "pinpoint_event_stream", typ: u(undefined, r("PinpointEventStream")) },
        { json: "storagegateway_file_system_association", js: "storagegateway_file_system_association", typ: u(undefined, r("StoragegatewayFileSystemAssociation")) },
        { json: "cloudfront_origin_access_identity", js: "cloudfront_origin_access_identity", typ: u(undefined, r("CloudfrontOriginAccessIdentity")) },
        { json: "inspector2_delegated_admin_account", js: "inspector2_delegated_admin_account", typ: u(undefined, r("Inspector2DelegatedAdminAccount")) },
        { json: "service_discovery_private_dns_namespace", js: "service_discovery_private_dns_namespace", typ: u(undefined, r("ServiceDiscoveryDNSNamespace")) },
        { json: "glue_partition_index", js: "glue_partition_index", typ: u(undefined, r("GluePartitionIndex")) },
        { json: "kms_external_key", js: "kms_external_key", typ: u(undefined, r("KmsExternalKey")) },
        { json: "route53_resolver_rule", js: "route53_resolver_rule", typ: u(undefined, r("Route53ResolverRule")) },
        { json: "lb_target_group_attachment", js: "lb_target_group_attachment", typ: u(undefined, r("LBTargetGroupAttachment")) },
        { json: "evidently_launch", js: "evidently_launch", typ: u(undefined, r("EvidentlyLaunch")) },
        { json: "efs_replication_configuration", js: "efs_replication_configuration", typ: u(undefined, r("EFSReplicationConfiguration")) },
        { json: "opsworks_permission", js: "opsworks_permission", typ: u(undefined, r("OpsworksPermission")) },
        { json: "sagemaker_notebook_instance_lifecycle_configuration", js: "sagemaker_notebook_instance_lifecycle_configuration", typ: u(undefined, r("SagemakerNotebookInstanceLifecycleConfiguration")) },
        { json: "kendra_data_source", js: "kendra_data_source", typ: u(undefined, r("KendraDataSource")) },
        { json: "neptune_cluster_snapshot", js: "neptune_cluster_snapshot", typ: u(undefined, r("ClusterSnapshot")) },
        { json: "sns_topic", js: "sns_topic", typ: u(undefined, r("SnsTopic")) },
        { json: "networkfirewall_logging_configuration", js: "networkfirewall_logging_configuration", typ: u(undefined, r("NetworkfirewallLoggingConfiguration")) },
        { json: "cloudfront_field_level_encryption_config", js: "cloudfront_field_level_encryption_config", typ: u(undefined, r("CloudfrontFieldLevelEncryptionConfig")) },
        { json: "s3_account_public_access_block", js: "s3_account_public_access_block", typ: u(undefined, r("FmsAdminAccount")) },
        { json: "ssm_association", js: "ssm_association", typ: u(undefined, r("SsmAssociation")) },
        { json: "storagegateway_stored_iscsi_volume", js: "storagegateway_stored_iscsi_volume", typ: u(undefined, r("StoragegatewayEdIscsiVolume")) },
        { json: "ecr_repository_policy", js: "ecr_repository_policy", typ: u(undefined, r("EcrPolicy")) },
        { json: "ses_domain_mail_from", js: "ses_domain_mail_from", typ: u(undefined, r("SesDomainMailFrom")) },
        { json: "apigatewayv2_route", js: "apigatewayv2_route", typ: u(undefined, r("Apigatewayv2Route")) },
        { json: "storagegateway_gateway", js: "storagegateway_gateway", typ: u(undefined, r("StoragegatewayGateway")) },
        { json: "storagegateway_tape_pool", js: "storagegateway_tape_pool", typ: u(undefined, r("StoragegatewayTapePool")) },
        { json: "sesv2_configuration_set", js: "sesv2_configuration_set", typ: u(undefined, r("ResourceSesv2ConfigurationSet")) },
        { json: "ssmincidents_response_plan", js: "ssmincidents_response_plan", typ: u(undefined, r("SsmincidentsResponsePlan")) },
        { json: "autoscalingplans_scaling_plan", js: "autoscalingplans_scaling_plan", typ: u(undefined, r("AutoscalingplansScalingPlan")) },
        { json: "efs_file_system", js: "efs_file_system", typ: u(undefined, r("ResourceEFSFileSystem")) },
        { json: "licensemanager_license_configuration", js: "licensemanager_license_configuration", typ: u(undefined, r("LicensemanagerLicenseConfiguration")) },
        { json: "sagemaker_flow_definition", js: "sagemaker_flow_definition", typ: u(undefined, r("SagemakerFlowDefinition")) },
        { json: "codecommit_trigger", js: "codecommit_trigger", typ: u(undefined, r("CodecommitTrigger")) },
        { json: "iam_role_policy_attachment", js: "iam_role_policy_attachment", typ: u(undefined, r("IamRolePolicyAttachment")) },
        { json: "kinesis_stream_consumer", js: "kinesis_stream_consumer", typ: u(undefined, r("KinesisStreamConsumer")) },
        { json: "waf_xss_match_set", js: "waf_xss_match_set", typ: u(undefined, r("ChimesdkvoiceVoiceProfileDomainClass")) },
        { json: "ebs_snapshot", js: "ebs_snapshot", typ: u(undefined, r("EbsSnapshotCopyClass")) },
        { json: "redshiftserverless_snapshot", js: "redshiftserverless_snapshot", typ: u(undefined, r("RedshiftserverlessSnapshot")) },
        { json: "iam_user_ssh_key", js: "iam_user_ssh_key", typ: u(undefined, r("IamUserSSHKey")) },
        { json: "iot_role_alias", js: "iot_role_alias", typ: u(undefined, r("IotRoleAlias")) },
        { json: "route53_traffic_policy", js: "route53_traffic_policy", typ: u(undefined, r("Route53TrafficPolicy")) },
        { json: "dms_s3_endpoint", js: "dms_s3_endpoint", typ: u(undefined, r("DmsS3Endpoint")) },
        { json: "eip_association", js: "eip_association", typ: u(undefined, r("EipAssociation")) },
        { json: "s3_bucket_server_side_encryption_configuration", js: "s3_bucket_server_side_encryption_configuration", typ: u(undefined, r("S3BucketServerSideEncryptionConfiguration")) },
        { json: "s3_object", js: "s3_object", typ: u(undefined, r("ResourceS3BucketObject")) },
        { json: "signer_signing_job", js: "signer_signing_job", typ: u(undefined, r("ResourceSignerSigningJob")) },
        { json: "waf_web_acl", js: "waf_web_acl", typ: u(undefined, r("WafWebACL")) },
        { json: "resourceexplorer2_view", js: "resourceexplorer2_view", typ: u(undefined, r("Resourceexplorer2View")) },
        { json: "servicecatalog_product_portfolio_association", js: "servicecatalog_product_portfolio_association", typ: u(undefined, r("ServicecatalogProductPortfolioAssociation")) },
        { json: "ec2_client_vpn_authorization_rule", js: "ec2_client_vpn_authorization_rule", typ: u(undefined, r("Ec2ClientVPNAuthorizationRule")) },
        { json: "servicecatalog_tag_option_resource_association", js: "servicecatalog_tag_option_resource_association", typ: u(undefined, r("ServicecatalogTagOptionResourceAssociation")) },
        { json: "glue_resource_policy", js: "glue_resource_policy", typ: u(undefined, r("GlueResourcePolicy")) },
        { json: "sagemaker_pipeline", js: "sagemaker_pipeline", typ: u(undefined, r("SagemakerPipeline")) },
        { json: "iam_signing_certificate", js: "iam_signing_certificate", typ: u(undefined, r("IamSigningCertificate")) },
        { json: "servicecatalog_product", js: "servicecatalog_product", typ: u(undefined, r("ServicecatalogProduct")) },
        { json: "cleanrooms_configured_table", js: "cleanrooms_configured_table", typ: u(undefined, r("CleanroomsConfiguredTable")) },
        { json: "opensearch_domain_policy", js: "opensearch_domain_policy", typ: u(undefined, r("SearchDomainPolicy")) },
        { json: "amplify_webhook", js: "amplify_webhook", typ: u(undefined, r("AmplifyWebhook")) },
        { json: "grafana_workspace", js: "grafana_workspace", typ: u(undefined, r("ResourceGrafanaWorkspace")) },
        { json: "medialive_multiplex", js: "medialive_multiplex", typ: u(undefined, r("MedialiveMultiplex")) },
        { json: "ses_email_identity", js: "ses_email_identity", typ: u(undefined, r("SesEmailIdentity")) },
        { json: "ec2_client_vpn_route", js: "ec2_client_vpn_route", typ: u(undefined, r("Ec2ClientVPNRoute")) },
        { json: "guardduty_member", js: "guardduty_member", typ: u(undefined, r("GuarddutyMember")) },
        { json: "redshift_snapshot_schedule_association", js: "redshift_snapshot_schedule_association", typ: u(undefined, r("RedshiftSnapshotScheduleAssociation")) },
        { json: "backup_report_plan", js: "backup_report_plan", typ: u(undefined, r("BackupReportPlan")) },
        { json: "dms_replication_subnet_group", js: "dms_replication_subnet_group", typ: u(undefined, r("ResourceDmsReplicationSubnetGroup")) },
        { json: "datasync_agent", js: "datasync_agent", typ: u(undefined, r("DatasyncAgent")) },
        { json: "elastic_beanstalk_configuration_template", js: "elastic_beanstalk_configuration_template", typ: u(undefined, r("ElasticBeanstalkConfigurationTemplate")) },
        { json: "inspector2_member_association", js: "inspector2_member_association", typ: u(undefined, r("Inspector2MemberAssociation")) },
        { json: "main_route_table_association", js: "main_route_table_association", typ: u(undefined, r("MainRouteTableAssociation")) },
        { json: "quicksight_group_membership", js: "quicksight_group_membership", typ: u(undefined, r("QuicksightGroupMembership")) },
        { json: "quicksight_user", js: "quicksight_user", typ: u(undefined, r("ResourceQuicksightUser")) },
        { json: "db_subnet_group", js: "db_subnet_group", typ: u(undefined, r("MemorydbSubnetGroupClass")) },
        { json: "fms_admin_account", js: "fms_admin_account", typ: u(undefined, r("FmsAdminAccount")) },
        { json: "lightsail_disk", js: "lightsail_disk", typ: u(undefined, r("LightsailDisk")) },
        { json: "wafv2_web_acl_logging_configuration", js: "wafv2_web_acl_logging_configuration", typ: u(undefined, r("Wafv2WebACLLoggingConfiguration")) },
        { json: "appstream_user_stack_association", js: "appstream_user_stack_association", typ: u(undefined, r("AppstreamUserStackAssociation")) },
        { json: "emr_block_public_access_configuration", js: "emr_block_public_access_configuration", typ: u(undefined, r("EmrBlockPublicAccessConfiguration")) },
        { json: "kinesisanalyticsv2_application", js: "kinesisanalyticsv2_application", typ: u(undefined, r("Kinesisanalyticsv2Application")) },
        { json: "cognito_identity_pool", js: "cognito_identity_pool", typ: u(undefined, r("ResourceCognitoIdentityPool")) },
        { json: "wafregional_rule", js: "wafregional_rule", typ: u(undefined, r("Waf")) },
        { json: "api_gateway_usage_plan", js: "api_gateway_usage_plan", typ: u(undefined, r("APIGatewayUsagePlan")) },
        { json: "codebuild_source_credential", js: "codebuild_source_credential", typ: u(undefined, r("CodebuildSourceCredential")) },
        { json: "waf_rule_group", js: "waf_rule_group", typ: u(undefined, r("Waf")) },
        { json: "codedeploy_deployment_group", js: "codedeploy_deployment_group", typ: u(undefined, r("CodedeployDeploymentGroup")) },
        { json: "comprehend_document_classifier", js: "comprehend_document_classifier", typ: u(undefined, r("Comprehend")) },
        { json: "glue_security_configuration", js: "glue_security_configuration", typ: u(undefined, r("GlueSecurityConfiguration")) },
        { json: "appsync_type", js: "appsync_type", typ: u(undefined, r("AppsyncType")) },
        { json: "medialive_multiplex_program", js: "medialive_multiplex_program", typ: u(undefined, r("MedialiveMultiplexProgram")) },
        { json: "redshift_snapshot_copy_grant", js: "redshift_snapshot_copy_grant", typ: u(undefined, r("RedshiftSnapshotCopyGrant")) },
        { json: "codepipeline_custom_action_type", js: "codepipeline_custom_action_type", typ: u(undefined, r("CodepipelineCustomActionType")) },
        { json: "efs_access_point", js: "efs_access_point", typ: u(undefined, r("ResourceEFSAccessPoint")) },
        { json: "servicecatalog_service_action", js: "servicecatalog_service_action", typ: u(undefined, r("ServicecatalogServiceAction")) },
        { json: "sesv2_dedicated_ip_assignment", js: "sesv2_dedicated_ip_assignment", typ: u(undefined, r("Sesv2DedicatedIPAssignment")) },
        { json: "appconfig_deployment", js: "appconfig_deployment", typ: u(undefined, r("AppconfigDeployment")) },
        { json: "batch_job_queue", js: "batch_job_queue", typ: u(undefined, r("BatchJobQueue")) },
        { json: "cloudfront_monitoring_subscription", js: "cloudfront_monitoring_subscription", typ: u(undefined, r("CloudfrontMonitoringSubscription")) },
        { json: "elasticache_user_group_association", js: "elasticache_user_group_association", typ: u(undefined, r("ElasticacheUserGroupAssociation")) },
        { json: "opsworks_instance", js: "opsworks_instance", typ: u(undefined, r("OpsworksInstance")) },
        { json: "accessanalyzer_archive_rule", js: "accessanalyzer_archive_rule", typ: u(undefined, r("AccessanalyzerArchiveRule")) },
        { json: "imagebuilder_distribution_configuration", js: "imagebuilder_distribution_configuration", typ: u(undefined, r("ResourceImagebuilderDistributionConfiguration")) },
        { json: "iot_topic_rule_destination", js: "iot_topic_rule_destination", typ: u(undefined, r("IotTopicRuleDestination")) },
        { json: "mskconnect_custom_plugin", js: "mskconnect_custom_plugin", typ: u(undefined, r("MskconnectCustomPlugin")) },
        { json: "opensearchserverless_collection", js: "opensearchserverless_collection", typ: u(undefined, r("OpensearchserverlessCollection")) },
        { json: "dynamodb_table_item", js: "dynamodb_table_item", typ: u(undefined, r("ResourceDynamodbTableItem")) },
        { json: "backup_vault_policy", js: "backup_vault_policy", typ: u(undefined, r("BackupVaultPolicy")) },
        { json: "lb_listener_certificate", js: "lb_listener_certificate", typ: u(undefined, r("LBListenerCertificate")) },
        { json: "networkfirewall_rule_group", js: "networkfirewall_rule_group", typ: u(undefined, r("NetworkfirewallRuleGroup")) },
        { json: "vpclattice_resource_policy", js: "vpclattice_resource_policy", typ: u(undefined, r("VpclatticeResourcePolicyClass")) },
        { json: "cloudwatch_query_definition", js: "cloudwatch_query_definition", typ: u(undefined, r("CloudwatchQueryDefinition")) },
        { json: "config_delivery_channel", js: "config_delivery_channel", typ: u(undefined, r("ConfigDeliveryChannel")) },
        { json: "route53recoveryreadiness_readiness_check", js: "route53recoveryreadiness_readiness_check", typ: u(undefined, r("Route53RecoveryreadinessReadinessCheck")) },
        { json: "wafv2_ip_set", js: "wafv2_ip_set", typ: u(undefined, r("Wafv2Set")) },
        { json: "ses_domain_dkim", js: "ses_domain_dkim", typ: u(undefined, r("SesDomainDKIM")) },
        { json: "kms_key", js: "kms_key", typ: u(undefined, r("ResourceKmsKey")) },
        { json: "opensearch_vpc_endpoint", js: "opensearch_vpc_endpoint", typ: u(undefined, r("OpensearchVpcEndpoint")) },
        { json: "opsworks_java_app_layer", js: "opsworks_java_app_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "amplify_domain_association", js: "amplify_domain_association", typ: u(undefined, r("AmplifyDomainAssociation")) },
        { json: "glue_user_defined_function", js: "glue_user_defined_function", typ: u(undefined, r("GlueUserDefinedFunction")) },
        { json: "dx_gateway_association_proposal", js: "dx_gateway_association_proposal", typ: u(undefined, r("DxGatewayAssociation")) },
        { json: "grafana_role_association", js: "grafana_role_association", typ: u(undefined, r("GrafanaRoleAssociation")) },
        { json: "iam_policy", js: "iam_policy", typ: u(undefined, r("ResourceIamPolicy")) },
        { json: "ssm_patch_baseline", js: "ssm_patch_baseline", typ: u(undefined, r("ResourceSsmPatchBaseline")) },
        { json: "chimesdkvoice_sip_media_application", js: "chimesdkvoice_sip_media_application", typ: u(undefined, r("ChimesdkvoiceSIPMediaApplication")) },
        { json: "cloudsearch_domain", js: "cloudsearch_domain", typ: u(undefined, r("CloudsearchDomain")) },
        { json: "appmesh_virtual_node", js: "appmesh_virtual_node", typ: u(undefined, r("AppmeshVirtualNode")) },
        { json: "codecommit_repository", js: "codecommit_repository", typ: u(undefined, r("ResourceCodecommitRepository")) },
        { json: "xray_encryption_config", js: "xray_encryption_config", typ: u(undefined, r("XrayEncryptionConfig")) },
        { json: "connect_routing_profile", js: "connect_routing_profile", typ: u(undefined, r("ConnectRoutingProfile")) },
        { json: "kendra_faq", js: "kendra_faq", typ: u(undefined, r("KendraFAQClass")) },
        { json: "s3_bucket_lifecycle_configuration", js: "s3_bucket_lifecycle_configuration", typ: u(undefined, r("S3BucketLifecycleConfiguration")) },
        { json: "fsx_openzfs_snapshot", js: "fsx_openzfs_snapshot", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "sagemaker_user_profile", js: "sagemaker_user_profile", typ: u(undefined, r("SagemakerUserProfile")) },
        { json: "shield_protection_group", js: "shield_protection_group", typ: u(undefined, r("ShieldProtectionGroup")) },
        { json: "apigatewayv2_vpc_link", js: "apigatewayv2_vpc_link", typ: u(undefined, r("Apigatewayv2VpcLink")) },
        { json: "backup_framework", js: "backup_framework", typ: u(undefined, r("BackupFramework")) },
        { json: "batch_scheduling_policy", js: "batch_scheduling_policy", typ: u(undefined, r("BatchSchedulingPolicy")) },
        { json: "codeartifact_repository", js: "codeartifact_repository", typ: u(undefined, r("CodeartifactRepository")) },
        { json: "redshiftdata_statement", js: "redshiftdata_statement", typ: u(undefined, r("RedshiftdataStatement")) },
        { json: "s3_bucket_notification", js: "s3_bucket_notification", typ: u(undefined, r("S3BucketNotification")) },
        { json: "ec2_transit_gateway_multicast_group_member", js: "ec2_transit_gateway_multicast_group_member", typ: u(undefined, r("Ec2TransitGatewayMulticastGroup")) },
        { json: "opsworks_nodejs_app_layer", js: "opsworks_nodejs_app_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "ce_cost_allocation_tag", js: "ce_cost_allocation_tag", typ: u(undefined, r("CeCostAllocationTag")) },
        { json: "transfer_tag", js: "transfer_tag", typ: u(undefined, r("Tag")) },
        { json: "redshift_hsm_client_certificate", js: "redshift_hsm_client_certificate", typ: u(undefined, r("RedshiftHSMClientCertificate")) },
        { json: "datasync_location_smb", js: "datasync_location_smb", typ: u(undefined, r("DatasyncLocationSMB")) },
        { json: "directory_service_log_subscription", js: "directory_service_log_subscription", typ: u(undefined, r("DirectoryServiceLogSubscription")) },
        { json: "ram_principal_association", js: "ram_principal_association", typ: u(undefined, r("RAMPrincipalAssociation")) },
        { json: "sagemaker_domain", js: "sagemaker_domain", typ: u(undefined, r("SagemakerDomain")) },
        { json: "organizations_policy_attachment", js: "organizations_policy_attachment", typ: u(undefined, r("OrganizationsPolicyAttachment")) },
        { json: "networkmanager_vpc_attachment", js: "networkmanager_vpc_attachment", typ: u(undefined, r("NetworkmanagerAttachment")) },
        { json: "accessanalyzer_analyzer", js: "accessanalyzer_analyzer", typ: u(undefined, r("AccessanalyzerAnalyzer")) },
        { json: "elastic_beanstalk_environment", js: "elastic_beanstalk_environment", typ: u(undefined, r("ElasticBeanstalkEnvironment")) },
        { json: "rds_export_task", js: "rds_export_task", typ: u(undefined, r("RDSExportTask")) },
        { json: "s3_bucket_acl", js: "s3_bucket_acl", typ: u(undefined, r("S3BucketACL")) },
        { json: "vpclattice_target_group", js: "vpclattice_target_group", typ: u(undefined, r("VpclatticeTargetGroup")) },
        { json: "prometheus_alert_manager_definition", js: "prometheus_alert_manager_definition", typ: u(undefined, r("PrometheusAlertManagerDefinition")) },
        { json: "redshift_authentication_profile", js: "redshift_authentication_profile", typ: u(undefined, r("RedshiftAuthenticationProfile")) },
        { json: "sesv2_email_identity_mail_from_attributes", js: "sesv2_email_identity_mail_from_attributes", typ: u(undefined, r("Sesv2EmailIdentityMailFromAttributes")) },
        { json: "chimesdkvoice_sip_rule", js: "chimesdkvoice_sip_rule", typ: u(undefined, r("ChimesdkvoiceSIPRule")) },
        { json: "lambda_function", js: "lambda_function", typ: u(undefined, r("ResourceLambdaFunction")) },
        { json: "customer_gateway", js: "customer_gateway", typ: u(undefined, r("CustomerGateway")) },
        { json: "ec2_capacity_reservation", js: "ec2_capacity_reservation", typ: u(undefined, r("Ec2CapacityReservation")) },
        { json: "lex_intent", js: "lex_intent", typ: u(undefined, r("LexIntent")) },
        { json: "route53_hosted_zone_dnssec", js: "route53_hosted_zone_dnssec", typ: u(undefined, r("Route53HostedZoneDnssec")) },
        { json: "workspaces_directory", js: "workspaces_directory", typ: u(undefined, r("WorkspacesDirectory")) },
        { json: "chimesdkvoice_voice_profile_domain", js: "chimesdkvoice_voice_profile_domain", typ: u(undefined, r("ChimesdkvoiceVoiceProfileDomainClass")) },
        { json: "fsx_file_cache", js: "fsx_file_cache", typ: u(undefined, r("FsxFileCache")) },
        { json: "auditmanager_assessment", js: "auditmanager_assessment", typ: u(undefined, r("AuditmanagerAssessment")) },
        { json: "cloudwatch_log_subscription_filter", js: "cloudwatch_log_subscription_filter", typ: u(undefined, r("CloudwatchLogSubscriptionFilter")) },
        { json: "db_instance_role_association", js: "db_instance_role_association", typ: u(undefined, r("RoleAssociation")) },
        { json: "dx_macsec_key_association", js: "dx_macsec_key_association", typ: u(undefined, r("DxMacsecKeyAssociation")) },
        { json: "emr_security_configuration", js: "emr_security_configuration", typ: u(undefined, r("EmrSecurityConfiguration")) },
        { json: "dx_hosted_public_virtual_interface", js: "dx_hosted_public_virtual_interface", typ: u(undefined, r("DxVirtualInterface")) },
        { json: "elasticache_parameter_group", js: "elasticache_parameter_group", typ: u(undefined, r("ParameterGroup")) },
        { json: "opsworks_user_profile", js: "opsworks_user_profile", typ: u(undefined, r("OpsworksUserProfile")) },
        { json: "ec2_client_vpn_endpoint", js: "ec2_client_vpn_endpoint", typ: u(undefined, r("ResourceEc2ClientVPNEndpoint")) },
        { json: "oam_link", js: "oam_link", typ: u(undefined, r("OamLink")) },
        { json: "sagemaker_endpoint", js: "sagemaker_endpoint", typ: u(undefined, r("SagemakerEndpoint")) },
        { json: "oam_sink", js: "oam_sink", typ: u(undefined, r("OamSink")) },
        { json: "pinpoint_adm_channel", js: "pinpoint_adm_channel", typ: u(undefined, r("PinpointAdmChannel")) },
        { json: "vpc_endpoint_connection_notification", js: "vpc_endpoint_connection_notification", typ: u(undefined, r("VpcEndpointConnectionNotification")) },
        { json: "dx_private_virtual_interface", js: "dx_private_virtual_interface", typ: u(undefined, r("DxPrivateVirtualInterface")) },
        { json: "key_pair", js: "key_pair", typ: u(undefined, r("ResourceKeyPair")) },
        { json: "cloudwatch_event_endpoint", js: "cloudwatch_event_endpoint", typ: u(undefined, r("CloudwatchEventEndpoint")) },
        { json: "connect_hours_of_operation", js: "connect_hours_of_operation", typ: u(undefined, r("ConnectHoursOfOperation")) },
        { json: "synthetics_group", js: "synthetics_group", typ: u(undefined, r("CloudwatchEventBusClass")) },
        { json: "autoscaling_schedule", js: "autoscaling_schedule", typ: u(undefined, r("AutoscalingSchedule")) },
        { json: "memorydb_cluster", js: "memorydb_cluster", typ: u(undefined, r("MemorydbCluster")) },
        { json: "config_config_rule", js: "config_config_rule", typ: u(undefined, r("ConfigConfigRule")) },
        { json: "ecr_pull_through_cache_rule", js: "ecr_pull_through_cache_rule", typ: u(undefined, r("PurpleEcrPullThroughCacheRule")) },
        { json: "rolesanywhere_trust_anchor", js: "rolesanywhere_trust_anchor", typ: u(undefined, r("RolesanywhereTrustAnchor")) },
        { json: "cognito_user", js: "cognito_user", typ: u(undefined, r("CognitoUser")) },
        { json: "wafregional_byte_match_set", js: "wafregional_byte_match_set", typ: u(undefined, r("WafregionalByteMatchSet")) },
        { json: "secretsmanager_secret", js: "secretsmanager_secret", typ: u(undefined, r("ResourceSecretsmanagerSecret")) },
        { json: "subnet", js: "subnet", typ: u(undefined, r("Subnet")) },
        { json: "codecatalyst_dev_environment", js: "codecatalyst_dev_environment", typ: u(undefined, r("ResourceCodecatalystDevEnvironment")) },
        { json: "ecs_cluster", js: "ecs_cluster", typ: u(undefined, r("ResourceEcsCluster")) },
        { json: "api_gateway_request_validator", js: "api_gateway_request_validator", typ: u(undefined, r("APIGatewayRequestValidator")) },
        { json: "s3control_bucket_policy", js: "s3control_bucket_policy", typ: u(undefined, r("S3ControlBucketPolicy")) },
        { json: "sqs_queue_redrive_policy", js: "sqs_queue_redrive_policy", typ: u(undefined, r("SqsQueueRedrivePolicy")) },
        { json: "cloudfront_public_key", js: "cloudfront_public_key", typ: u(undefined, r("CloudfrontPublicKey")) },
        { json: "ebs_snapshot_import", js: "ebs_snapshot_import", typ: u(undefined, r("EbsSnapshotImport")) },
        { json: "backup_global_settings", js: "backup_global_settings", typ: u(undefined, r("BackupGlobalSettings")) },
        { json: "ecr_registry_scanning_configuration", js: "ecr_registry_scanning_configuration", typ: u(undefined, r("EcrRegistryScanningConfiguration")) },
        { json: "s3_bucket_public_access_block", js: "s3_bucket_public_access_block", typ: u(undefined, r("S3")) },
        { json: "ssm_service_setting", js: "ssm_service_setting", typ: u(undefined, r("SsmServiceSetting")) },
        { json: "lightsail_lb_certificate", js: "lightsail_lb_certificate", typ: u(undefined, r("LightsailCertificate")) },
        { json: "serverlessapplicationrepository_cloudformation_stack", js: "serverlessapplicationrepository_cloudformation_stack", typ: u(undefined, r("ServerlessapplicationrepositoryCloudformationStack")) },
        { json: "redshiftserverless_namespace", js: "redshiftserverless_namespace", typ: u(undefined, r("ResourceRedshiftserverlessNamespace")) },
        { json: "vpc_ipam_resource_discovery_association", js: "vpc_ipam_resource_discovery_association", typ: u(undefined, r("VpcIPAMResourceDiscoveryAssociation")) },
        { json: "vpclattice_service_network_vpc_association", js: "vpclattice_service_network_vpc_association", typ: u(undefined, r("VpclatticeServiceNetworkAssociation")) },
        { json: "datasync_location_hdfs", js: "datasync_location_hdfs", typ: u(undefined, r("DatasyncLocationHdfs")) },
        { json: "elasticsearch_domain", js: "elasticsearch_domain", typ: u(undefined, r("ElasticsearchDomain")) },
        { json: "route53_key_signing_key", js: "route53_key_signing_key", typ: u(undefined, r("Route53KeySigningKey")) },
        { json: "ssoadmin_account_assignment", js: "ssoadmin_account_assignment", typ: u(undefined, r("SsoadminAccountAssignment")) },
        { json: "config_organization_custom_policy_rule", js: "config_organization_custom_policy_rule", typ: u(undefined, r("ConfigOrganizationRule")) },
        { json: "datasync_location_efs", js: "datasync_location_efs", typ: u(undefined, r("DatasyncLocationEFS")) },
        { json: "codecommit_approval_rule_template_association", js: "codecommit_approval_rule_template_association", typ: u(undefined, r("CodecommitApprovalRuleTemplateAssociation")) },
        { json: "datasync_location_fsx_windows_file_system", js: "datasync_location_fsx_windows_file_system", typ: u(undefined, r("DatasyncLocationFsxFileSystem")) },
        { json: "s3control_bucket", js: "s3control_bucket", typ: u(undefined, r("S3ControlBucket")) },
        { json: "db_snapshot_copy", js: "db_snapshot_copy", typ: u(undefined, r("DBSnapshotCopy")) },
        { json: "dax_subnet_group", js: "dax_subnet_group", typ: u(undefined, r("DaxSubnetGroup")) },
        { json: "sqs_queue", js: "sqs_queue", typ: u(undefined, r("PurpleSqsQueue")) },
        { json: "backup_plan", js: "backup_plan", typ: u(undefined, r("ResourceBackupPlan")) },
        { json: "account_alternate_contact", js: "account_alternate_contact", typ: u(undefined, r("AccountAlternateContact")) },
        { json: "securityhub_insight", js: "securityhub_insight", typ: u(undefined, r("SecurityhubInsight")) },
        { json: "route53_zone", js: "route53_zone", typ: u(undefined, r("ResourceRoute53Zone")) },
        { json: "waf_ipset", js: "waf_ipset", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "guardduty_filter", js: "guardduty_filter", typ: u(undefined, r("GuarddutyFilter")) },
        { json: "wafv2_regex_pattern_set", js: "wafv2_regex_pattern_set", typ: u(undefined, r("Wafv2Set")) },
        { json: "dataexchange_data_set", js: "dataexchange_data_set", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "sesv2_email_identity", js: "sesv2_email_identity", typ: u(undefined, r("ResourceSesv2EmailIdentity")) },
        { json: "storagegateway_nfs_file_share", js: "storagegateway_nfs_file_share", typ: u(undefined, r("StoragegatewayNFSFileShare")) },
        { json: "msk_configuration", js: "msk_configuration", typ: u(undefined, r("MskConfiguration")) },
        { json: "location_place_index", js: "location_place_index", typ: u(undefined, r("ResourceLocationPlaceIndex")) },
        { json: "vpc_ipam_pool_cidr", js: "vpc_ipam_pool_cidr", typ: u(undefined, r("VpcIPAMPoolCIDR")) },
        { json: "iot_certificate", js: "iot_certificate", typ: u(undefined, r("IotCertificate")) },
        { json: "lightsail_disk_attachment", js: "lightsail_disk_attachment", typ: u(undefined, r("LightsailDiskAttachment")) },
        { json: "sagemaker_project", js: "sagemaker_project", typ: u(undefined, r("SagemakerProject")) },
        { json: "cognito_managed_user_pool_client", js: "cognito_managed_user_pool_client", typ: u(undefined, r("CognitoManagedUserPoolClient")) },
        { json: "appsync_domain_name", js: "appsync_domain_name", typ: u(undefined, r("AppsyncDomainName")) },
        { json: "cloudwatch_event_bus", js: "cloudwatch_event_bus", typ: u(undefined, r("CloudwatchEventBusClass")) },
        { json: "datasync_location_fsx_lustre_file_system", js: "datasync_location_fsx_lustre_file_system", typ: u(undefined, r("DatasyncLocationFsxFileSystem")) },
        { json: "lakeformation_permissions", js: "lakeformation_permissions", typ: u(undefined, r("ResourceLakeformationPermissions")) },
        { json: "glacier_vault_lock", js: "glacier_vault_lock", typ: u(undefined, r("GlacierVaultLock")) },
        { json: "iam_access_key", js: "iam_access_key", typ: u(undefined, r("IamAccessKey")) },
        { json: "acmpca_certificate_authority", js: "acmpca_certificate_authority", typ: u(undefined, r("ResourceAcmpcaCertificateAuthority")) },
        { json: "codebuild_webhook", js: "codebuild_webhook", typ: u(undefined, r("CodebuildWebhook")) },
        { json: "dx_hosted_private_virtual_interface_accepter", js: "dx_hosted_private_virtual_interface_accepter", typ: u(undefined, r("DxHostedVirtualInterfaceAccepter")) },
        { json: "waf_rate_based_rule", js: "waf_rate_based_rule", typ: u(undefined, r("Waf")) },
        { json: "qldb_ledger", js: "qldb_ledger", typ: u(undefined, r("QldbLedger")) },
        { json: "wafregional_regex_pattern_set", js: "wafregional_regex_pattern_set", typ: u(undefined, r("ChimesdkvoiceVoiceProfileDomainClass")) },
        { json: "codebuild_report_group", js: "codebuild_report_group", typ: u(undefined, r("CodebuildReportGroup")) },
        { json: "iam_user_group_membership", js: "iam_user_group_membership", typ: u(undefined, r("IamUserGroupMembership")) },
        { json: "opensearch_outbound_connection", js: "opensearch_outbound_connection", typ: u(undefined, r("OpensearchOutboundConnection")) },
        { json: "iot_thing", js: "iot_thing", typ: u(undefined, r("IotThing")) },
        { json: "lightsail_static_ip", js: "lightsail_static_ip", typ: u(undefined, r("LightsailStaticIP")) },
        { json: "athena_named_query", js: "athena_named_query", typ: u(undefined, r("AthenaNamedQuery")) },
        { json: "ec2_host", js: "ec2_host", typ: u(undefined, r("ResourceEc2Host")) },
        { json: "guardduty_invite_accepter", js: "guardduty_invite_accepter", typ: u(undefined, r("GuarddutyInviteAccepter")) },
        { json: "route53_record", js: "route53_record", typ: u(undefined, r("Route53Record")) },
        { json: "vpclattice_service", js: "vpclattice_service", typ: u(undefined, r("VpclatticeService")) },
        { json: "opensearchserverless_access_policy", js: "opensearchserverless_access_policy", typ: u(undefined, r("OpensearchserverlessPolicy")) },
        { json: "route53_resolver_dnssec_config", js: "route53_resolver_dnssec_config", typ: u(undefined, r("Route53ResolverDnssecConfig")) },
        { json: "dms_endpoint", js: "dms_endpoint", typ: u(undefined, r("ResourceDmsEndpoint")) },
        { json: "lightsail_database", js: "lightsail_database", typ: u(undefined, r("LightsailDatabase")) },
        { json: "vpc_ipam_pool", js: "vpc_ipam_pool", typ: u(undefined, r("VpcIPAMPool")) },
        { json: "ecs_capacity_provider", js: "ecs_capacity_provider", typ: u(undefined, r("EcsCapacityProvider")) },
        { json: "glue_catalog_table", js: "glue_catalog_table", typ: u(undefined, r("GlueCatalogTable")) },
        { json: "ivs_recording_configuration", js: "ivs_recording_configuration", typ: u(undefined, r("IvsRecordingConfiguration")) },
        { json: "dx_connection_association", js: "dx_connection_association", typ: u(undefined, r("DxConnectionAssociation")) },
        { json: "servicecatalog_tag_option", js: "servicecatalog_tag_option", typ: u(undefined, r("ServicecatalogTagOption")) },
        { json: "transfer_certificate", js: "transfer_certificate", typ: u(undefined, r("TransferCertificate")) },
        { json: "s3_bucket_object_lock_configuration", js: "s3_bucket_object_lock_configuration", typ: u(undefined, r("S3BucketObjectLockConfiguration")) },
        { json: "auditmanager_organization_admin_account_registration", js: "auditmanager_organization_admin_account_registration", typ: u(undefined, r("AuditmanagerOrganizationAdminAccountRegistration")) },
        { json: "autoscaling_traffic_source_attachment", js: "autoscaling_traffic_source_attachment", typ: u(undefined, r("KmsSecretClass")) },
        { json: "eks_node_group", js: "eks_node_group", typ: u(undefined, r("ResourceEksNodeGroup")) },
        { json: "networkmanager_customer_gateway_association", js: "networkmanager_customer_gateway_association", typ: u(undefined, r("NetworkmanagerAssociation")) },
        { json: "codebuild_project", js: "codebuild_project", typ: u(undefined, r("CodebuildProject")) },
        { json: "connect_user", js: "connect_user", typ: u(undefined, r("ConnectUser")) },
        { json: "elb", js: "elb", typ: u(undefined, r("Elb")) },
        { json: "ami", js: "ami", typ: u(undefined, r("ResourceAmi")) },
        { json: "ivschat_room", js: "ivschat_room", typ: u(undefined, r("IvschatRoom")) },
        { json: "kms_grant", js: "kms_grant", typ: u(undefined, r("KmsGrant")) },
        { json: "api_gateway_account", js: "api_gateway_account", typ: u(undefined, r("APIGatewayAccount")) },
        { json: "cloudwatch_event_api_destination", js: "cloudwatch_event_api_destination", typ: u(undefined, r("CloudwatchEventAPIDestination")) },
        { json: "dms_certificate", js: "dms_certificate", typ: u(undefined, r("ResourceDmsCertificate")) },
        { json: "dynamodb_table", js: "dynamodb_table", typ: u(undefined, r("ResourceDynamodbTable")) },
        { json: "elastic_beanstalk_application", js: "elastic_beanstalk_application", typ: u(undefined, r("ElasticBeanstalkApplication")) },
        { json: "inspector_assessment_target", js: "inspector_assessment_target", typ: u(undefined, r("CloudwatchEventBus")) },
        { json: "codeartifact_domain_permissions_policy", js: "codeartifact_domain_permissions_policy", typ: u(undefined, r("CodeartifactPermissionsPolicy")) },
        { json: "ssmcontacts_contact", js: "ssmcontacts_contact", typ: u(undefined, r("KmsSecretClass")) },
        { json: "auditmanager_assessment_delegation", js: "auditmanager_assessment_delegation", typ: u(undefined, r("AuditmanagerAssessmentDelegation")) },
        { json: "s3control_access_point_policy", js: "s3control_access_point_policy", typ: u(undefined, r("S3ControlAccessPointPolicy")) },
        { json: "ssoadmin_permissions_boundary_attachment", js: "ssoadmin_permissions_boundary_attachment", typ: u(undefined, r("SsoadminYAttachment")) },
        { json: "vpc_endpoint_connection_accepter", js: "vpc_endpoint_connection_accepter", typ: u(undefined, r("VpcEndpointConnectionAccepter")) },
        { json: "sagemaker_device_fleet", js: "sagemaker_device_fleet", typ: u(undefined, r("SagemakerDeviceFleet")) },
        { json: "timestreamwrite_table", js: "timestreamwrite_table", typ: u(undefined, r("TimestreamwriteTable")) },
        { json: "appflow_flow", js: "appflow_flow", typ: u(undefined, r("AppflowFlow")) },
        { json: "route53recoverycontrolconfig_safety_rule", js: "route53recoverycontrolconfig_safety_rule", typ: u(undefined, r("Route53RecoverycontrolconfigSafetyRule")) },
        { json: "transcribe_medical_vocabulary", js: "transcribe_medical_vocabulary", typ: u(undefined, r("TranscribeVocabulary")) },
        { json: "rbin_rule", js: "rbin_rule", typ: u(undefined, r("RbinRule")) },
        { json: "lex_slot_type", js: "lex_slot_type", typ: u(undefined, r("LexSlotType")) },
        { json: "opensearch_package", js: "opensearch_package", typ: u(undefined, r("OpensearchPackage")) },
        { json: "codestarnotifications_notification_rule", js: "codestarnotifications_notification_rule", typ: u(undefined, r("CodestarnotificationsNotificationRule")) },
        { json: "vpclattice_listener_rule", js: "vpclattice_listener_rule", typ: u(undefined, r("VpclatticeListenerRule")) },
        { json: "ssm_maintenance_window_task", js: "ssm_maintenance_window_task", typ: u(undefined, r("SsmMaintenanceWindowTask")) },
        { json: "waf_regex_pattern_set", js: "waf_regex_pattern_set", typ: u(undefined, r("ChimesdkvoiceVoiceProfileDomainClass")) },
        { json: "route53_resolver_firewall_domain_list", js: "route53_resolver_firewall_domain_list", typ: u(undefined, r("IvsRecordingConfiguration")) },
        { json: "vpclattice_target_group_attachment", js: "vpclattice_target_group_attachment", typ: u(undefined, r("KmsSecretClass")) },
        { json: "globalaccelerator_endpoint_group", js: "globalaccelerator_endpoint_group", typ: u(undefined, r("GlobalacceleratorEndpointGroup")) },
        { json: "lambda_function_url", js: "lambda_function_url", typ: u(undefined, r("ResourceLambdaFunctionURL")) },
        { json: "organizations_policy", js: "organizations_policy", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "pinpoint_sms_channel", js: "pinpoint_sms_channel", typ: u(undefined, r("PinpointSMSChannel")) },
        { json: "lightsail_distribution", js: "lightsail_distribution", typ: u(undefined, r("LightsailDistribution")) },
        { json: "datasync_location_azure_blob", js: "datasync_location_azure_blob", typ: u(undefined, r("DatasyncLocationAzureBlob")) },
        { json: "redshiftserverless_endpoint_access", js: "redshiftserverless_endpoint_access", typ: u(undefined, r("RedshiftEndpointAccess")) },
        { json: "opensearch_package_association", js: "opensearch_package_association", typ: u(undefined, r("OpensearchPackageAssociation")) },
        { json: "rds_global_cluster", js: "rds_global_cluster", typ: u(undefined, r("GlobalCluster")) },
        { json: "servicecatalog_budget_resource_association", js: "servicecatalog_budget_resource_association", typ: u(undefined, r("ServicecatalogBudgetResourceAssociation")) },
        { json: "dynamodb_global_table", js: "dynamodb_global_table", typ: u(undefined, r("DynamodbGlobalTable")) },
        { json: "ec2_serial_console_access", js: "ec2_serial_console_access", typ: u(undefined, r("SoftwareTokenMfaConfigurationClass")) },
        { json: "ecrpublic_repository_policy", js: "ecrpublic_repository_policy", typ: u(undefined, r("EcrpublicRepositoryPolicy")) },
        { json: "transfer_server", js: "transfer_server", typ: u(undefined, r("ResourceTransferServer")) },
        { json: "lb_listener_rule", js: "lb_listener_rule", typ: u(undefined, r("LBListenerRule")) },
        { json: "transfer_access", js: "transfer_access", typ: u(undefined, r("Transfer")) },
        { json: "directory_service_directory", js: "directory_service_directory", typ: u(undefined, r("ResourceDirectoryServiceDirectory")) },
        { json: "medialive_channel", js: "medialive_channel", typ: u(undefined, r("MedialiveChannel")) },
        { json: "shield_drt_access_role_arn_association", js: "shield_drt_access_role_arn_association", typ: u(undefined, r("ShieldDrtAccessRoleArnAssociation")) },
        { json: "ssoadmin_customer_managed_policy_attachment", js: "ssoadmin_customer_managed_policy_attachment", typ: u(undefined, r("SsoadminYAttachment")) },
        { json: "cloudformation_stack_set_instance", js: "cloudformation_stack_set_instance", typ: u(undefined, r("CloudformationStackSetInstance")) },
        { json: "dax_parameter_group", js: "dax_parameter_group", typ: u(undefined, r("OutpostsSite")) },
        { json: "securityhub_organization_admin_account", js: "securityhub_organization_admin_account", typ: u(undefined, r("OrganizationAdminAccount")) },
        { json: "vpc_endpoint_route_table_association", js: "vpc_endpoint_route_table_association", typ: u(undefined, r("VpcEndpointRouteTableAssociation")) },
        { json: "cloudfront_cache_policy", js: "cloudfront_cache_policy", typ: u(undefined, r("CloudfrontCachePolicy")) },
        { json: "route53recoverycontrolconfig_routing_control", js: "route53recoverycontrolconfig_routing_control", typ: u(undefined, r("Route53RecoverycontrolconfigRoutingControl")) },
        { json: "acmpca_permission", js: "acmpca_permission", typ: u(undefined, r("AcmpcaPermission")) },
        { json: "api_gateway_vpc_link", js: "api_gateway_vpc_link", typ: u(undefined, r("DatapipelinePipelineClass")) },
        { json: "securityhub_product_subscription", js: "securityhub_product_subscription", typ: u(undefined, r("SecurityhubProductSubscription")) },
        { json: "connect_user_hierarchy_structure", js: "connect_user_hierarchy_structure", typ: u(undefined, r("ConnectUserHierarchyStructure")) },
        { json: "detective_invitation_accepter", js: "detective_invitation_accepter", typ: u(undefined, r("DetectiveInvitationAccepter")) },
        { json: "ec2_fleet", js: "ec2_fleet", typ: u(undefined, r("Ec2Fleet")) },
        { json: "ec2_traffic_mirror_session", js: "ec2_traffic_mirror_session", typ: u(undefined, r("Ec2TrafficMirrorSession")) },
        { json: "ses_identity_policy", js: "ses_identity_policy", typ: u(undefined, r("SesIdentityPolicy")) },
        { json: "ses_receipt_rule", js: "ses_receipt_rule", typ: u(undefined, r("SesReceiptRule")) },
        { json: "media_store_container", js: "media_store_container", typ: u(undefined, r("CloudwatchEventBusClass")) },
        { json: "quicksight_vpc_connection", js: "quicksight_vpc_connection", typ: u(undefined, r("QuicksightVpcConnection")) },
        { json: "sfn_state_machine", js: "sfn_state_machine", typ: u(undefined, r("ResourceSfnStateMachine")) },
        { json: "vpc", js: "vpc", typ: u(undefined, r("ResourceVpc")) },
        { json: "appmesh_virtual_service", js: "appmesh_virtual_service", typ: u(undefined, r("AppmeshVirtualService")) },
        { json: "kinesis_stream", js: "kinesis_stream", typ: u(undefined, r("ResourceKinesisStream")) },
        { json: "transcribe_language_model", js: "transcribe_language_model", typ: u(undefined, r("TranscribeLanguageModel")) },
        { json: "opsworks_application", js: "opsworks_application", typ: u(undefined, r("OpsworksApplication")) },
        { json: "opsworks_mysql_layer", js: "opsworks_mysql_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "cloudfront_distribution", js: "cloudfront_distribution", typ: u(undefined, r("ResourceCloudfrontDistribution")) },
        { json: "directory_service_radius_settings", js: "directory_service_radius_settings", typ: u(undefined, r("DirectoryServiceRadiusSettings")) },
        { json: "iot_topic_rule", js: "iot_topic_rule", typ: u(undefined, r("IotTopicRule")) },
        { json: "quicksight_data_source", js: "quicksight_data_source", typ: u(undefined, r("QuicksightDataSource")) },
        { json: "fis_experiment_template", js: "fis_experiment_template", typ: u(undefined, r("FisExperimentTemplate")) },
        { json: "lightsail_lb_https_redirection_policy", js: "lightsail_lb_https_redirection_policy", typ: u(undefined, r("LightsailLBPolicy")) },
        { json: "guardduty_detector", js: "guardduty_detector", typ: u(undefined, r("ResourceGuarddutyDetector")) },
        { json: "docdb_subnet_group", js: "docdb_subnet_group", typ: u(undefined, r("Apigatewayv2VpcLink")) },
        { json: "ram_resource_share_accepter", js: "ram_resource_share_accepter", typ: u(undefined, r("RAMResourceShareAccepter")) },
        { json: "api_gateway_resource", js: "api_gateway_resource", typ: u(undefined, r("APIGatewayResource")) },
        { json: "vpclattice_auth_policy", js: "vpclattice_auth_policy", typ: u(undefined, r("VpclatticeAuthPolicy")) },
        { json: "workspaces_ip_group", js: "workspaces_ip_group", typ: u(undefined, r("DatapipelinePipelineClass")) },
        { json: "network_interface", js: "network_interface", typ: u(undefined, r("ResourceNetworkInterface")) },
        { json: "ram_resource_association", js: "ram_resource_association", typ: u(undefined, r("RAMResourceAssociation")) },
        { json: "sns_topic_subscription", js: "sns_topic_subscription", typ: u(undefined, r("SnsTopicSubscription")) },
        { json: "s3_bucket_website_configuration", js: "s3_bucket_website_configuration", typ: u(undefined, r("S3BucketWebsiteConfiguration")) },
        { json: "route53_resolver_endpoint", js: "route53_resolver_endpoint", typ: u(undefined, r("ResourceRoute53ResolverEndpoint")) },
        { json: "route53_resolver_query_log_config_association", js: "route53_resolver_query_log_config_association", typ: u(undefined, r("Route53ResolverQueryLogConfigAssociation")) },
        { json: "auditmanager_account_registration", js: "auditmanager_account_registration", typ: u(undefined, r("AuditmanagerAccountRegistration")) },
        { json: "docdb_cluster_snapshot", js: "docdb_cluster_snapshot", typ: u(undefined, r("ClusterSnapshot")) },
        { json: "sesv2_email_identity_feedback_attributes", js: "sesv2_email_identity_feedback_attributes", typ: u(undefined, r("Sesv2EmailIdentityFeedbackAttributes")) },
        { json: "glue_registry", js: "glue_registry", typ: u(undefined, r("ElasticacheSubnetGroup")) },
        { json: "devicefarm_device_pool", js: "devicefarm_device_pool", typ: u(undefined, r("DevicefarmDevicePool")) },
        { json: "config_configuration_recorder", js: "config_configuration_recorder", typ: u(undefined, r("ConfigConfigurationRecorder")) },
        { json: "opsworks_memcached_layer", js: "opsworks_memcached_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "rds_custom_db_engine_version", js: "rds_custom_db_engine_version", typ: u(undefined, r("RDSCustomDBEngineVersion")) },
        { json: "ses_domain_identity", js: "ses_domain_identity", typ: u(undefined, r("SesDomainIdentity")) },
        { json: "finspace_kx_database", js: "finspace_kx_database", typ: u(undefined, r("FinspaceKxDatabase")) },
        { json: "lightsail_instance", js: "lightsail_instance", typ: u(undefined, r("LightsailInstance")) },
        { json: "medialive_input_security_group", js: "medialive_input_security_group", typ: u(undefined, r("MedialiveInputSecurityGroup")) },
        { json: "network_interface_sg_attachment", js: "network_interface_sg_attachment", typ: u(undefined, r("NetworkInterfaceSgAttachment")) },
        { json: "codeartifact_repository_permissions_policy", js: "codeartifact_repository_permissions_policy", typ: u(undefined, r("CodeartifactPermissionsPolicy")) },
        { json: "servicecatalog_portfolio", js: "servicecatalog_portfolio", typ: u(undefined, r("DatapipelinePipelineClass")) },
        { json: "config_organization_conformance_pack", js: "config_organization_conformance_pack", typ: u(undefined, r("ConfigConformancePack")) },
        { json: "waf_geo_match_set", js: "waf_geo_match_set", typ: u(undefined, r("OrganizationsOrganizationalUnitClass")) },
        { json: "kms_ciphertext", js: "kms_ciphertext", typ: u(undefined, r("KmsCiphertext")) },
        { json: "s3control_object_lambda_access_point", js: "s3control_object_lambda_access_point", typ: u(undefined, r("S3ControlObjectLambdaAccessPoint")) },
        { json: "waf_byte_match_set", js: "waf_byte_match_set", typ: u(undefined, r("WafByteMatchSet")) },
        { json: "autoscaling_policy", js: "autoscaling_policy", typ: u(undefined, r("AutoscalingPolicy")) },
        { json: "dms_replication_config", js: "dms_replication_config", typ: u(undefined, r("DmsReplicationConfig")) },
        { json: "iam_saml_provider", js: "iam_saml_provider", typ: u(undefined, r("IamSamlProvider")) },
        { json: "route53_health_check", js: "route53_health_check", typ: u(undefined, r("Route53HealthCheck")) },
        { json: "neptune_subnet_group", js: "neptune_subnet_group", typ: u(undefined, r("Apigatewayv2VpcLink")) },
        { json: "sagemaker_monitoring_schedule", js: "sagemaker_monitoring_schedule", typ: u(undefined, r("CloudwatchEventBusClass")) },
        { json: "chime_voice_connector_logging", js: "chime_voice_connector_logging", typ: u(undefined, r("ChimeVoiceConnectorLogging")) },
        { json: "connect_instance", js: "connect_instance", typ: u(undefined, r("ResourceConnectInstance")) },
        { json: "opsworks_haproxy_layer", js: "opsworks_haproxy_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "quicksight_dashboard", js: "quicksight_dashboard", typ: u(undefined, r("QuicksightDashboard")) },
        { json: "s3_bucket_replication_configuration", js: "s3_bucket_replication_configuration", typ: u(undefined, r("S3BucketReplicationConfiguration")) },
        { json: "elasticache_cluster", js: "elasticache_cluster", typ: u(undefined, r("ResourceElasticacheCluster")) },
        { json: "emr_studio_session_mapping", js: "emr_studio_session_mapping", typ: u(undefined, r("EmrStudioSessionMapping")) },
        { json: "networkfirewall_resource_policy", js: "networkfirewall_resource_policy", typ: u(undefined, r("NetworkfirewallResourcePolicy")) },
        { json: "organizations_account", js: "organizations_account", typ: u(undefined, r("OrganizationsAccount")) },
        { json: "ssm_activation", js: "ssm_activation", typ: u(undefined, r("SsmActivation")) },
        { json: "ec2_transit_gateway_peering_attachment", js: "ec2_transit_gateway_peering_attachment", typ: u(undefined, r("Ec2TransitGatewayPeeringAttachmentAccepterClass")) },
        { json: "glue_trigger", js: "glue_trigger", typ: u(undefined, r("GlueTrigger")) },
        { json: "neptune_cluster", js: "neptune_cluster", typ: u(undefined, r("NeptuneCluster")) },
        { json: "prometheus_workspace", js: "prometheus_workspace", typ: u(undefined, r("ResourcePrometheusWorkspace")) },
        { json: "appstream_stack", js: "appstream_stack", typ: u(undefined, r("AppstreamStack")) },
        { json: "chime_voice_connector_group", js: "chime_voice_connector_group", typ: u(undefined, r("ChimeVoiceConnectorGroup")) },
        { json: "cloudwatch_composite_alarm", js: "cloudwatch_composite_alarm", typ: u(undefined, r("CloudwatchCompositeAlarm")) },
        { json: "grafana_workspace_api_key", js: "grafana_workspace_api_key", typ: u(undefined, r("GrafanaWorkspaceAPIKey")) },
        { json: "api_gateway_method", js: "api_gateway_method", typ: u(undefined, r("APIGatewayMethod")) },
        { json: "iot_thing_group", js: "iot_thing_group", typ: u(undefined, r("IotThingGroup")) },
        { json: "sagemaker_data_quality_job_definition", js: "sagemaker_data_quality_job_definition", typ: u(undefined, r("SagemakerDataQualityJobDefinition")) },
        { json: "api_gateway_api_key", js: "api_gateway_api_key", typ: u(undefined, r("APIGatewayAPIKey")) },
        { json: "config_remediation_configuration", js: "config_remediation_configuration", typ: u(undefined, r("ConfigRemediationConfiguration")) },
        { json: "sfn_activity", js: "sfn_activity", typ: u(undefined, r("DatapipelinePipelineClass")) },
        { json: "acmpca_certificate", js: "acmpca_certificate", typ: u(undefined, r("AcmpcaCertificate")) },
        { json: "appconfig_hosted_configuration_version", js: "appconfig_hosted_configuration_version", typ: u(undefined, r("AppconfigHostedConfigurationVersion")) },
        { json: "connect_lambda_function_association", js: "connect_lambda_function_association", typ: u(undefined, r("ConnectLambdaFunctionAssociation")) },
        { json: "imagebuilder_container_recipe", js: "imagebuilder_container_recipe", typ: u(undefined, r("ResourceImagebuilderContainerRecipe")) },
        { json: "default_vpc", js: "default_vpc", typ: u(undefined, r("DefaultVpc")) },
        { json: "opensearchserverless_vpc_endpoint", js: "opensearchserverless_vpc_endpoint", typ: u(undefined, r("DaxSubnetGroup")) },
        { json: "evidently_feature", js: "evidently_feature", typ: u(undefined, r("EvidentlyFeature")) },
        { json: "macie2_account", js: "macie2_account", typ: u(undefined, r("Macie2Account")) },
        { json: "opsworks_php_app_layer", js: "opsworks_php_app_layer", typ: u(undefined, r("OpsworksLayer")) },
        { json: "s3_bucket_metric", js: "s3_bucket_metric", typ: u(undefined, r("S3BucketMetric")) },
        { json: "elasticache_user", js: "elasticache_user", typ: u(undefined, r("ResourceElasticacheUser")) },
        { json: "sagemaker_model", js: "sagemaker_model", typ: u(undefined, r("SagemakerModel")) },
        { json: "load_balancer_listener_policy", js: "load_balancer_listener_policy", typ: u(undefined, r("LoadBalancerListenerPolicy")) },
        { json: "directory_service_trust", js: "directory_service_trust", typ: u(undefined, r("DirectoryServiceTrust")) },
        { json: "fsx_data_repository_association", js: "fsx_data_repository_association", typ: u(undefined, r("FsxDataRepositoryAssociation")) },
        { json: "sqs_queue_redrive_allow_policy", js: "sqs_queue_redrive_allow_policy", typ: u(undefined, r("SqsQueueRedriveAllowPolicy")) },
        { json: "vpn_gateway", js: "vpn_gateway", typ: u(undefined, r("ResourceVPNGateway")) },
        { json: "wafv2_web_acl", js: "wafv2_web_acl", typ: u(undefined, r("ResourceWafv2RuleGroup")) },
        { json: "servicequotas_service_quota", js: "servicequotas_service_quota", typ: u(undefined, r("ServicequotasServiceQuota")) },
        { json: "simpledb_domain", js: "simpledb_domain", typ: u(undefined, r("WafIpset")) },
        { json: "ec2_instance_connect_endpoint", js: "ec2_instance_connect_endpoint", typ: u(undefined, r("Ec2InstanceConnectEndpoint")) },
        { json: "elasticache_subnet_group", js: "elasticache_subnet_group", typ: u(undefined, r("DatapipelinePipelineClass")) },
        { json: "kendra_query_suggestions_block_list", js: "kendra_query_suggestions_block_list", typ: u(undefined, r("PurpleKendra")) },
        { json: "glue_classifier", js: "glue_classifier", typ: u(undefined, r("GlueClassifier")) },
        { json: "opsworks_rds_db_instance", js: "opsworks_rds_db_instance", typ: u(undefined, r("OpsworksRDSDBInstance")) },
        { json: "backup_vault_lock_configuration", js: "backup_vault_lock_configuration", typ: u(undefined, r("BackupVaultLockConfiguration")) },
        { json: "datasync_location_fsx_ontap_file_system", js: "datasync_location_fsx_ontap_file_system", typ: u(undefined, r("DatasyncLocationFsxOntapFileSystem")) },
        { json: "default_vpc_dhcp_options", js: "default_vpc_dhcp_options", typ: u(undefined, r("DefaultVpcDHCPOptions")) },
        { json: "sns_sms_preferences", js: "sns_sms_preferences", typ: u(undefined, r("SnsSMSPreferences")) },
        { json: "elasticsearch_domain_policy", js: "elasticsearch_domain_policy", typ: u(undefined, r("SearchDomainPolicy")) },
    ], false),
    "AccessanalyzerAnalyzer": o([
        { json: "analyzer_name", js: "analyzer_name", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AccessanalyzerArchiveRule": o([
        { json: "analyzer_name", js: "analyzer_name", typ: "" },
        { json: "filter", js: "filter", typ: "" },
        { json: "rule_name", js: "rule_name", typ: "" },
        { json: "criteria", js: "criteria", typ: "" },
        { json: "contains", js: "contains", typ: u(undefined, "") },
        { json: "eq", js: "eq", typ: u(undefined, "") },
        { json: "exists", js: "exists", typ: u(undefined, "") },
        { json: "neq", js: "neq", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AccountAlternateContact": o([
        { json: "alternate_contact_type", js: "alternate_contact_type", typ: "" },
        { json: "email_address", js: "email_address", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "phone_number", js: "phone_number", typ: "" },
        { json: "title", js: "title", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
    ], false),
    "AccountPrimaryContact": o([
        { json: "address_line_1", js: "address_line_1", typ: "" },
        { json: "city", js: "city", typ: "" },
        { json: "country_code", js: "country_code", typ: "" },
        { json: "full_name", js: "full_name", typ: "" },
        { json: "phone_number", js: "phone_number", typ: "" },
        { json: "postal_code", js: "postal_code", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "address_line_2", js: "address_line_2", typ: u(undefined, "") },
        { json: "address_line_3", js: "address_line_3", typ: u(undefined, "") },
        { json: "company_name", js: "company_name", typ: u(undefined, "") },
        { json: "district_or_county", js: "district_or_county", typ: u(undefined, "") },
        { json: "state_or_region", js: "state_or_region", typ: u(undefined, "") },
        { json: "website_url", js: "website_url", typ: u(undefined, "") },
    ], false),
    "ResourceACMCertificate": o([
        { json: "subject_alternative_names", js: "subject_alternative_names", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "domain_validation_options", js: "domain_validation_options", typ: u(undefined, "") },
        { json: "not_after", js: "not_after", typ: u(undefined, "") },
        { json: "not_before", js: "not_before", typ: u(undefined, "") },
        { json: "pending_renewal", js: "pending_renewal", typ: u(undefined, "") },
        { json: "renewal_eligibility", js: "renewal_eligibility", typ: u(undefined, "") },
        { json: "renewal_summary", js: "renewal_summary", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "validation_emails", js: "validation_emails", typ: u(undefined, "") },
        { json: "resource_record_name", js: "resource_record_name", typ: u(undefined, "") },
        { json: "resource_record_type", js: "resource_record_type", typ: u(undefined, "") },
        { json: "resource_record_value", js: "resource_record_value", typ: u(undefined, "") },
        { json: "renewal_status", js: "renewal_status", typ: u(undefined, "") },
        { json: "renewal_status_reason", js: "renewal_status_reason", typ: u(undefined, "") },
    ], false),
    "ACMCertificateValidation": o([
        { json: "certificate_arn", js: "certificate_arn", typ: "" },
        { json: "validation_record_fqdns", js: "validation_record_fqdns", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AcmpcaCertificate": o([
        { json: "certificate_authority_arn", js: "certificate_authority_arn", typ: "" },
        { json: "certificate_signing_request", js: "certificate_signing_request", typ: "" },
        { json: "signing_algorithm", js: "signing_algorithm", typ: "" },
        { json: "validity", js: "validity", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "template_arn", js: "template_arn", typ: u(undefined, "") },
        { json: "api_passthrough", js: "api_passthrough", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
        { json: "certificate_chain", js: "certificate_chain", typ: u(undefined, "") },
    ], false),
    "ResourceAcmpcaCertificateAuthority": o([
        { json: "certificate_authority_configuration", js: "certificate_authority_configuration", typ: r("CertificateAuthorityConfiguration") },
        { json: "revocation_configuration", js: "revocation_configuration", typ: u(undefined, r("RevocationConfiguration")) },
        { json: "usage_mode", js: "usage_mode", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "key_storage_security_standard", js: "key_storage_security_standard", typ: u(undefined, "") },
        { json: "permanent_deletion_time_in_days", js: "permanent_deletion_time_in_days", typ: u(undefined, "") },
        { json: "title", js: "title", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
        { json: "certificate_chain", js: "certificate_chain", typ: u(undefined, "") },
        { json: "certificate_signing_request", js: "certificate_signing_request", typ: u(undefined, "") },
        { json: "not_after", js: "not_after", typ: u(undefined, "") },
        { json: "not_before", js: "not_before", typ: u(undefined, "") },
        { json: "serial", js: "serial", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CertificateAuthorityConfiguration": o([
        { json: "key_algorithm", js: "key_algorithm", typ: "" },
        { json: "signing_algorithm", js: "signing_algorithm", typ: "" },
        { json: "subject", js: "subject", typ: "" },
        { json: "common_name", js: "common_name", typ: u(undefined, "") },
        { json: "country", js: "country", typ: u(undefined, "") },
        { json: "distinguished_name_qualifier", js: "distinguished_name_qualifier", typ: u(undefined, "") },
        { json: "generation_qualifier", js: "generation_qualifier", typ: u(undefined, "") },
        { json: "given_name", js: "given_name", typ: u(undefined, "") },
        { json: "initials", js: "initials", typ: u(undefined, "") },
        { json: "locality", js: "locality", typ: u(undefined, "") },
        { json: "organization", js: "organization", typ: u(undefined, "") },
        { json: "organizational_unit", js: "organizational_unit", typ: u(undefined, "") },
        { json: "pseudonym", js: "pseudonym", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "surname", js: "surname", typ: u(undefined, "") },
        { json: "title", js: "title", typ: u(undefined, "") },
    ], false),
    "RevocationConfiguration": o([
        { json: "crl_configuration", js: "crl_configuration", typ: "" },
        { json: "ocsp_configuration", js: "ocsp_configuration", typ: "" },
        { json: "custom_cname", js: "custom_cname", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "expiration_in_days", js: "expiration_in_days", typ: "" },
        { json: "s3_bucket_name", js: "s3_bucket_name", typ: "" },
        { json: "s3_object_acl", js: "s3_object_acl", typ: "" },
        { json: "ocsp_custom_cname", js: "ocsp_custom_cname", typ: "" },
    ], false),
    "AcmpcaPermission": o([
        { json: "certificate_authority_arn", js: "certificate_authority_arn", typ: "" },
        { json: "actions", js: "actions", typ: "" },
        { json: "principal", js: "principal", typ: "" },
        { json: "source_account", js: "source_account", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
    ], false),
    "ResourceAmi": o([
        { json: "name", js: "name", typ: "" },
        { json: "image_location", js: "image_location", typ: "" },
        { json: "kernel_id", js: "kernel_id", typ: "" },
        { json: "device_name", js: "device_name", typ: "" },
        { json: "boot_mode", js: "boot_mode", typ: u(undefined, "") },
        { json: "deprecation_time", js: "deprecation_time", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "ena_support", js: "ena_support", typ: u(undefined, "") },
        { json: "root_device_name", js: "root_device_name", typ: u(undefined, "") },
        { json: "virtualization_type", js: "virtualization_type", typ: u(undefined, "") },
        { json: "architecture", js: "architecture", typ: u(undefined, "") },
        { json: "ebs_block_device", js: "ebs_block_device", typ: u(undefined, "") },
        { json: "ephemeral_block_device", js: "ephemeral_block_device", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tpm_support", js: "tpm_support", typ: u(undefined, "") },
        { json: "imds_support", js: "imds_support", typ: u(undefined, "") },
        { json: "ramdisk_id", js: "ramdisk_id", typ: u(undefined, "") },
        { json: "sriov_net_support", js: "sriov_net_support", typ: u(undefined, "") },
        { json: "delete_on_termination", js: "delete_on_termination", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "snapshot_id", js: "snapshot_id", typ: u(undefined, "") },
        { json: "throughput", js: "throughput", typ: u(undefined, "") },
        { json: "volume_size", js: "volume_size", typ: u(undefined, "") },
        { json: "volume_type", js: "volume_type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "root_snapshot_id", js: "root_snapshot_id", typ: u(undefined, "") },
        { json: "usage_operation", js: "usage_operation", typ: u(undefined, "") },
        { json: "platform_details", js: "platform_details", typ: u(undefined, "") },
        { json: "image_owner_alias", js: "image_owner_alias", typ: u(undefined, "") },
        { json: "image_type", js: "image_type", typ: u(undefined, "") },
        { json: "hypervisor", js: "hypervisor", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "public", js: "public", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AmiCopy": o([
        { json: "name", js: "name", typ: "" },
        { json: "source_ami_id", js: "source_ami_id", typ: "" },
        { json: "source_ami_region", js: "source_ami_region", typ: "" },
        { json: "destination_outpost_arn", js: "destination_outpost_arn", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AmiFromInstance": o([
        { json: "name", js: "name", typ: "" },
        { json: "source_instance_id", js: "source_instance_id", typ: "" },
        { json: "snapshot_without_reboot", js: "snapshot_without_reboot", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AmiLaunchPermission": o([
        { json: "image_id", js: "image_id", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "group", js: "group", typ: u(undefined, "") },
        { json: "organization_arn", js: "organization_arn", typ: u(undefined, "") },
        { json: "organizational_unit_arn", js: "organizational_unit_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AmplifyApp": o([
        { json: "name", js: "name", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "access_token", js: "access_token", typ: u(undefined, "") },
        { json: "auto_branch_creation_config", js: "auto_branch_creation_config", typ: u(undefined, "") },
        { json: "auto_branch_creation_patterns", js: "auto_branch_creation_patterns", typ: u(undefined, "") },
        { json: "basic_auth_credentials", js: "basic_auth_credentials", typ: u(undefined, "") },
        { json: "build_spec", js: "build_spec", typ: u(undefined, "") },
        { json: "custom_rule", js: "custom_rule", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "enable_auto_branch_creation", js: "enable_auto_branch_creation", typ: u(undefined, "") },
        { json: "enable_basic_auth", js: "enable_basic_auth", typ: u(undefined, "") },
        { json: "enable_branch_auto_build", js: "enable_branch_auto_build", typ: u(undefined, "") },
        { json: "enable_branch_auto_deletion", js: "enable_branch_auto_deletion", typ: u(undefined, "") },
        { json: "environment_variables", js: "environment_variables", typ: u(undefined, "") },
        { json: "iam_service_role_arn", js: "iam_service_role_arn", typ: u(undefined, "") },
        { json: "oauth_token", js: "oauth_token", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "repository", js: "repository", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "enable_auto_build", js: "enable_auto_build", typ: u(undefined, "") },
        { json: "enable_performance_mode", js: "enable_performance_mode", typ: u(undefined, "") },
        { json: "enable_pull_request_preview", js: "enable_pull_request_preview", typ: u(undefined, "") },
        { json: "framework", js: "framework", typ: u(undefined, "") },
        { json: "pull_request_environment_name", js: "pull_request_environment_name", typ: u(undefined, "") },
        { json: "stage", js: "stage", typ: u(undefined, "") },
        { json: "condition", js: "condition", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "default_domain", js: "default_domain", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "production_branch", js: "production_branch", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "branch_name", js: "branch_name", typ: u(undefined, "") },
        { json: "last_deploy_time", js: "last_deploy_time", typ: u(undefined, "") },
        { json: "thumbnail_url", js: "thumbnail_url", typ: u(undefined, "") },
    ], false),
    "AmplifyBackendEnvironment": o([
        { json: "app_id", js: "app_id", typ: "" },
        { json: "environment_name", js: "environment_name", typ: "" },
        { json: "deployment_artifacts", js: "deployment_artifacts", typ: u(undefined, "") },
        { json: "stack_name", js: "stack_name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AmplifyBranch": o([
        { json: "app_id", js: "app_id", typ: "" },
        { json: "branch_name", js: "branch_name", typ: "" },
        { json: "backend_environment_arn", js: "backend_environment_arn", typ: u(undefined, "") },
        { json: "basic_auth_credentials", js: "basic_auth_credentials", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "enable_auto_build", js: "enable_auto_build", typ: u(undefined, "") },
        { json: "enable_basic_auth", js: "enable_basic_auth", typ: u(undefined, "") },
        { json: "enable_notification", js: "enable_notification", typ: u(undefined, "") },
        { json: "enable_performance_mode", js: "enable_performance_mode", typ: u(undefined, "") },
        { json: "enable_pull_request_preview", js: "enable_pull_request_preview", typ: u(undefined, "") },
        { json: "environment_variables", js: "environment_variables", typ: u(undefined, "") },
        { json: "framework", js: "framework", typ: u(undefined, "") },
        { json: "pull_request_environment_name", js: "pull_request_environment_name", typ: u(undefined, "") },
        { json: "stage", js: "stage", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ttl", js: "ttl", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "associated_resources", js: "associated_resources", typ: u(undefined, "") },
        { json: "custom_domains", js: "custom_domains", typ: u(undefined, "") },
        { json: "destination_branch", js: "destination_branch", typ: u(undefined, "") },
        { json: "source_branch", js: "source_branch", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AmplifyDomainAssociation": o([
        { json: "app_id", js: "app_id", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "sub_domain", js: "sub_domain", typ: "" },
        { json: "branch_name", js: "branch_name", typ: "" },
        { json: "prefix", js: "prefix", typ: "" },
        { json: "enable_auto_sub_domain", js: "enable_auto_sub_domain", typ: u(undefined, "") },
        { json: "wait_for_verification", js: "wait_for_verification", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate_verification_dns_record", js: "certificate_verification_dns_record", typ: u(undefined, "") },
        { json: "dns_record", js: "dns_record", typ: u(undefined, "") },
        { json: "verified", js: "verified", typ: u(undefined, "") },
    ], false),
    "AmplifyWebhook": o([
        { json: "app_id", js: "app_id", typ: "" },
        { json: "branch_name", js: "branch_name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
    ], false),
    "APIGatewayAccount": o([
        { json: "cloudwatch_role_arn", js: "cloudwatch_role_arn", typ: u(undefined, "") },
        { json: "api_key_version", js: "api_key_version", typ: u(undefined, "") },
        { json: "throttle_settings", js: "throttle_settings", typ: u(undefined, "") },
        { json: "features", js: "features", typ: u(undefined, "") },
        { json: "burst_limit", js: "burst_limit", typ: u(undefined, "") },
        { json: "rate_limit", js: "rate_limit", typ: u(undefined, "") },
    ], false),
    "APIGatewayBasePathMapping": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "api_id", js: "api_id", typ: "" },
        { json: "stage_name", js: "stage_name", typ: u(undefined, "") },
        { json: "base_path", js: "base_path", typ: u(undefined, "") },
    ], false),
    "APIGatewayClientCertificate": o([
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "expiration_date", js: "expiration_date", typ: u(undefined, "") },
        { json: "pem_encoded_certificate", js: "pem_encoded_certificate", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "APIGatewayDeployment": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "stage_name", js: "stage_name", typ: u(undefined, "") },
        { json: "stage_description", js: "stage_description", typ: u(undefined, "") },
        { json: "triggers", js: "triggers", typ: u(undefined, "") },
        { json: "variables", js: "variables", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "invoke_url", js: "invoke_url", typ: u(undefined, "") },
        { json: "execution_arn", js: "execution_arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
    ], false),
    "APIGatewayDocumentationPart": o([
        { json: "location", js: "location", typ: "" },
        { json: "properties", js: "properties", typ: "" },
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "APIGatewayDocumentationVersion": o([
        { json: "version", js: "version", typ: "" },
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
    ], false),
    "ResourceAPIGatewayDomainName": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "types", js: "types", typ: "" },
        { json: "endpoint_configuration", js: "endpoint_configuration", typ: u(undefined, r("EndpointConfiguration")) },
        { json: "mutual_tls_authentication", js: "mutual_tls_authentication", typ: u(undefined, r("MutualTLSAuthentication")) },
        { json: "ownership_verification_certificate_arn", js: "ownership_verification_certificate_arn", typ: u(undefined, "") },
        { json: "security_policy", js: "security_policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "regional_certificate_arn", js: "regional_certificate_arn", typ: u(undefined, "") },
        { json: "certificate_body", js: "certificate_body", typ: u(undefined, "") },
        { json: "certificate_chain", js: "certificate_chain", typ: u(undefined, "") },
        { json: "certificate_name", js: "certificate_name", typ: u(undefined, "") },
        { json: "certificate_private_key", js: "certificate_private_key", typ: u(undefined, "") },
        { json: "regional_certificate_name", js: "regional_certificate_name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate_upload_date", js: "certificate_upload_date", typ: u(undefined, "") },
        { json: "cloudfront_domain_name", js: "cloudfront_domain_name", typ: u(undefined, "") },
        { json: "cloudfront_zone_id", js: "cloudfront_zone_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "regional_domain_name", js: "regional_domain_name", typ: u(undefined, "") },
        { json: "regional_zone_id", js: "regional_zone_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EndpointConfiguration": o([
        { json: "types", js: "types", typ: "" },
    ], false),
    "MutualTLSAuthentication": o([
        { json: "truststore_uri", js: "truststore_uri", typ: "" },
        { json: "truststore_version", js: "truststore_version", typ: "" },
    ], false),
    "APIGatewayGatewayResponse": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "response_type", js: "response_type", typ: "" },
        { json: "status_code", js: "status_code", typ: u(undefined, "") },
        { json: "response_templates", js: "response_templates", typ: u(undefined, "") },
        { json: "response_parameters", js: "response_parameters", typ: u(undefined, "") },
    ], false),
    "APIGatewayIntegration": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "http_method", js: "http_method", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "connection_type", js: "connection_type", typ: u(undefined, "") },
        { json: "request_templates", js: "request_templates", typ: u(undefined, "") },
        { json: "request_parameters", js: "request_parameters", typ: u(undefined, "") },
        { json: "cache_key_parameters", js: "cache_key_parameters", typ: u(undefined, "") },
        { json: "cache_namespace", js: "cache_namespace", typ: u(undefined, "") },
        { json: "content_handling", js: "content_handling", typ: u(undefined, "") },
        { json: "timeout_milliseconds", js: "timeout_milliseconds", typ: u(undefined, "") },
        { json: "tls_config", js: "tls_config", typ: u(undefined, "") },
        { json: "insecure_skip_verification", js: "insecure_skip_verification", typ: u(undefined, "") },
    ], false),
    "APIGatewayIntegrationResponse": o([
        { json: "http_method", js: "http_method", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "status_code", js: "status_code", typ: "" },
        { json: "content_handling", js: "content_handling", typ: u(undefined, "") },
        { json: "response_parameters", js: "response_parameters", typ: u(undefined, "") },
        { json: "response_templates", js: "response_templates", typ: u(undefined, "") },
        { json: "selection_pattern", js: "selection_pattern", typ: u(undefined, "") },
    ], false),
    "APIGatewayMethod": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "http_method", js: "http_method", typ: "" },
        { json: "authorization", js: "authorization", typ: "" },
        { json: "authorizer_id", js: "authorizer_id", typ: u(undefined, "") },
        { json: "authorization_scopes", js: "authorization_scopes", typ: u(undefined, "") },
        { json: "api_key_required", js: "api_key_required", typ: u(undefined, "") },
        { json: "operation_name", js: "operation_name", typ: u(undefined, "") },
        { json: "request_models", js: "request_models", typ: u(undefined, "") },
        { json: "request_validator_id", js: "request_validator_id", typ: u(undefined, "") },
        { json: "request_parameters", js: "request_parameters", typ: u(undefined, "") },
    ], false),
    "APIGatewayMethodResponse": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "http_method", js: "http_method", typ: "" },
        { json: "status_code", js: "status_code", typ: "" },
        { json: "response_models", js: "response_models", typ: u(undefined, "") },
        { json: "response_parameters", js: "response_parameters", typ: u(undefined, "") },
    ], false),
    "APIGatewayMethodSettings": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "stage_name", js: "stage_name", typ: "" },
        { json: "settings", js: "settings", typ: "" },
        { json: "metrics_enabled", js: "metrics_enabled", typ: u(undefined, "") },
        { json: "logging_level", js: "logging_level", typ: u(undefined, "") },
        { json: "data_trace_enabled", js: "data_trace_enabled", typ: u(undefined, "") },
        { json: "throttling_burst_limit", js: "throttling_burst_limit", typ: u(undefined, "") },
        { json: "throttling_rate_limit", js: "throttling_rate_limit", typ: u(undefined, "") },
        { json: "caching_enabled", js: "caching_enabled", typ: u(undefined, "") },
        { json: "cache_ttl_in_seconds", js: "cache_ttl_in_seconds", typ: u(undefined, "") },
        { json: "cache_data_encrypted", js: "cache_data_encrypted", typ: u(undefined, "") },
        { json: "require_authorization_for_cache_control", js: "require_authorization_for_cache_control", typ: u(undefined, "") },
        { json: "unauthorized_cache_control_header_strategy", js: "unauthorized_cache_control_header_strategy", typ: u(undefined, "") },
    ], false),
    "APIModel": o([
        { json: "rest_api_id", js: "rest_api_id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: "" },
        { json: "content_type", js: "content_type", typ: "" },
        { json: "schema", js: "schema", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "api_id", js: "api_id", typ: u(undefined, "") },
    ], false),
    "APIGatewayRequestValidator": o([
        { json: "name", js: "name", typ: "" },
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "validate_request_body", js: "validate_request_body", typ: u(undefined, "") },
        { json: "validate_request_parameters", js: "validate_request_parameters", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceAPIGatewayRESTAPI": o([
        { json: "name", js: "name", typ: "" },
        { json: "api_key_source", js: "api_key_source", typ: u(undefined, "") },
        { json: "binary_media_types", js: "binary_media_types", typ: u(undefined, "") },
        { json: "body", js: "body", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "disable_execute_api_endpoint", js: "disable_execute_api_endpoint", typ: u(undefined, "") },
        { json: "endpoint_configuration", js: "endpoint_configuration", typ: u(undefined, r("EndpointConfiguration")) },
        { json: "minimum_compression_size", js: "minimum_compression_size", typ: u(undefined, "") },
        { json: "fail_on_warnings", js: "fail_on_warnings", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "put_rest_api_mode", js: "put_rest_api_mode", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "execution_arn", js: "execution_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "root_resource_id", js: "root_resource_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "APIGatewayRESTAPIPolicy": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "APIGatewayStage": o([
        { json: "rest_api_id", js: "rest_api_id", typ: "" },
        { json: "stage_name", js: "stage_name", typ: "" },
        { json: "deployment_id", js: "deployment_id", typ: "" },
        { json: "format", js: "format", typ: "" },
        { json: "access_log_settings", js: "access_log_settings", typ: u(undefined, "") },
        { json: "cache_cluster_enabled", js: "cache_cluster_enabled", typ: u(undefined, "") },
        { json: "cache_cluster_size", js: "cache_cluster_size", typ: u(undefined, "") },
        { json: "canary_settings", js: "canary_settings", typ: u(undefined, "") },
        { json: "client_certificate_id", js: "client_certificate_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "documentation_version", js: "documentation_version", typ: u(undefined, "") },
        { json: "variables", js: "variables", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "xray_tracing_enabled", js: "xray_tracing_enabled", typ: u(undefined, "") },
        { json: "percent_traffic", js: "percent_traffic", typ: u(undefined, "") },
        { json: "stage_variable_overrides", js: "stage_variable_overrides", typ: u(undefined, "") },
        { json: "use_stage_cache", js: "use_stage_cache", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "invoke_url", js: "invoke_url", typ: u(undefined, "") },
        { json: "execution_arn", js: "execution_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "web_acl_arn", js: "web_acl_arn", typ: u(undefined, "") },
    ], false),
    "APIGatewayUsagePlan": o([
        { json: "name", js: "name", typ: "" },
        { json: "api_id", js: "api_id", typ: "" },
        { json: "stage", js: "stage", typ: "" },
        { json: "path", js: "path", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "api_stages", js: "api_stages", typ: u(undefined, "") },
        { json: "quota_settings", js: "quota_settings", typ: u(undefined, "") },
        { json: "throttle_settings", js: "throttle_settings", typ: u(undefined, "") },
        { json: "product_code", js: "product_code", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "throttle", js: "throttle", typ: u(undefined, "") },
        { json: "burst_limit", js: "burst_limit", typ: u(undefined, "") },
        { json: "rate_limit", js: "rate_limit", typ: u(undefined, "") },
        { json: "limit", js: "limit", typ: u(undefined, "") },
        { json: "offset", js: "offset", typ: u(undefined, "") },
        { json: "period", js: "period", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "APIGatewayUsagePlanKey": o([
        { json: "key_id", js: "key_id", typ: "" },
        { json: "key_type", js: "key_type", typ: "" },
        { json: "usage_plan_id", js: "usage_plan_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
    ], false),
    "DatapipelinePipelineClass": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "target_arns", js: "target_arns", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "provider_name", js: "provider_name", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "rules", js: "rules", typ: u(undefined, "") },
    ], false),
    "ResourceApigatewayv2API": o([
        { json: "name", js: "name", typ: "" },
        { json: "protocol_type", js: "protocol_type", typ: "" },
        { json: "api_key_selection_expression", js: "api_key_selection_expression", typ: u(undefined, "") },
        { json: "cors_configuration", js: "cors_configuration", typ: u(undefined, "") },
        { json: "credentials_arn", js: "credentials_arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "disable_execute_api_endpoint", js: "disable_execute_api_endpoint", typ: u(undefined, "") },
        { json: "route_key", js: "route_key", typ: u(undefined, "") },
        { json: "route_selection_expression", js: "route_selection_expression", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "target", js: "target", typ: u(undefined, "") },
        { json: "body", js: "body", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "fail_on_warnings", js: "fail_on_warnings", typ: u(undefined, "") },
        { json: "allow_credentials", js: "allow_credentials", typ: u(undefined, "") },
        { json: "allow_headers", js: "allow_headers", typ: u(undefined, "") },
        { json: "allow_methods", js: "allow_methods", typ: u(undefined, "") },
        { json: "allow_origins", js: "allow_origins", typ: u(undefined, "") },
        { json: "expose_headers", js: "expose_headers", typ: u(undefined, "") },
        { json: "max_age", js: "max_age", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "api_endpoint", js: "api_endpoint", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "execution_arn", js: "execution_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2APIMapping": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "stage", js: "stage", typ: "" },
        { json: "api_mapping_key", js: "api_mapping_key", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2Authorizer": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "authorizer_type", js: "authorizer_type", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "authorizer_credentials_arn", js: "authorizer_credentials_arn", typ: u(undefined, "") },
        { json: "authorizer_payload_format_version", js: "authorizer_payload_format_version", typ: u(undefined, "") },
        { json: "authorizer_result_ttl_in_seconds", js: "authorizer_result_ttl_in_seconds", typ: u(undefined, "") },
        { json: "authorizer_uri", js: "authorizer_uri", typ: u(undefined, "") },
        { json: "enable_simple_responses", js: "enable_simple_responses", typ: u(undefined, "") },
        { json: "identity_sources", js: "identity_sources", typ: u(undefined, "") },
        { json: "jwt_configuration", js: "jwt_configuration", typ: u(undefined, "") },
        { json: "audience", js: "audience", typ: u(undefined, "") },
        { json: "issuer", js: "issuer", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2Deployment": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "triggers", js: "triggers", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "auto_deployed", js: "auto_deployed", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2DomainName": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "domain_name_configuration", js: "domain_name_configuration", typ: "" },
        { json: "certificate_arn", js: "certificate_arn", typ: "" },
        { json: "endpoint_type", js: "endpoint_type", typ: "" },
        { json: "security_policy", js: "security_policy", typ: "" },
        { json: "truststore_uri", js: "truststore_uri", typ: "" },
        { json: "mutual_tls_authentication", js: "mutual_tls_authentication", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
        { json: "ownership_verification_certificate_arn", js: "ownership_verification_certificate_arn", typ: u(undefined, "") },
        { json: "target_domain_name", js: "target_domain_name", typ: u(undefined, "") },
        { json: "truststore_version", js: "truststore_version", typ: u(undefined, "") },
        { json: "api_mapping_selection_expression", js: "api_mapping_selection_expression", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2Integration": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "integration_type", js: "integration_type", typ: "" },
        { json: "status_code", js: "status_code", typ: "" },
        { json: "mappings", js: "mappings", typ: "" },
        { json: "connection_id", js: "connection_id", typ: u(undefined, "") },
        { json: "connection_type", js: "connection_type", typ: u(undefined, "") },
        { json: "content_handling_strategy", js: "content_handling_strategy", typ: u(undefined, "") },
        { json: "credentials_arn", js: "credentials_arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "integration_method", js: "integration_method", typ: u(undefined, "") },
        { json: "integration_subtype", js: "integration_subtype", typ: u(undefined, "") },
        { json: "integration_uri", js: "integration_uri", typ: u(undefined, "") },
        { json: "passthrough_behavior", js: "passthrough_behavior", typ: u(undefined, "") },
        { json: "payload_format_version", js: "payload_format_version", typ: u(undefined, "") },
        { json: "request_parameters", js: "request_parameters", typ: u(undefined, "") },
        { json: "request_templates", js: "request_templates", typ: u(undefined, "") },
        { json: "response_parameters", js: "response_parameters", typ: u(undefined, "") },
        { json: "template_selection_expression", js: "template_selection_expression", typ: u(undefined, "") },
        { json: "timeout_milliseconds", js: "timeout_milliseconds", typ: u(undefined, "") },
        { json: "tls_config", js: "tls_config", typ: u(undefined, "") },
        { json: "server_name_to_verify", js: "server_name_to_verify", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "integration_response_selection_expression", js: "integration_response_selection_expression", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2IntegrationResponse": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "integration_id", js: "integration_id", typ: "" },
        { json: "integration_response_key", js: "integration_response_key", typ: "" },
        { json: "content_handling_strategy", js: "content_handling_strategy", typ: u(undefined, "") },
        { json: "response_templates", js: "response_templates", typ: u(undefined, "") },
        { json: "template_selection_expression", js: "template_selection_expression", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2Route": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "route_key", js: "route_key", typ: "" },
        { json: "request_parameter_key", js: "request_parameter_key", typ: "" },
        { json: "required", js: "required", typ: "" },
        { json: "api_key_required", js: "api_key_required", typ: u(undefined, "") },
        { json: "authorization_scopes", js: "authorization_scopes", typ: u(undefined, "") },
        { json: "authorization_type", js: "authorization_type", typ: u(undefined, "") },
        { json: "authorizer_id", js: "authorizer_id", typ: u(undefined, "") },
        { json: "model_selection_expression", js: "model_selection_expression", typ: u(undefined, "") },
        { json: "operation_name", js: "operation_name", typ: u(undefined, "") },
        { json: "request_models", js: "request_models", typ: u(undefined, "") },
        { json: "request_parameter", js: "request_parameter", typ: u(undefined, "") },
        { json: "route_response_selection_expression", js: "route_response_selection_expression", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2RouteResponse": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "route_id", js: "route_id", typ: "" },
        { json: "route_response_key", js: "route_response_key", typ: "" },
        { json: "model_selection_expression", js: "model_selection_expression", typ: u(undefined, "") },
        { json: "response_models", js: "response_models", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2Stage": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "format", js: "format", typ: "" },
        { json: "access_log_settings", js: "access_log_settings", typ: u(undefined, r("AccessLogSettings")) },
        { json: "auto_deploy", js: "auto_deploy", typ: u(undefined, "") },
        { json: "client_certificate_id", js: "client_certificate_id", typ: u(undefined, "") },
        { json: "default_route_settings", js: "default_route_settings", typ: u(undefined, r("RouteSettings")) },
        { json: "deployment_id", js: "deployment_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "route_settings", js: "route_settings", typ: u(undefined, r("RouteSettings")) },
        { json: "stage_variables", js: "stage_variables", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "execution_arn", js: "execution_arn", typ: u(undefined, "") },
        { json: "invoke_url", js: "invoke_url", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AccessLogSettings": o([
        { json: "format", js: "format", typ: "" },
    ], false),
    "RouteSettings": o([
        { json: "data_trace_enabled", js: "data_trace_enabled", typ: "" },
        { json: "detailed_metrics_enabled", js: "detailed_metrics_enabled", typ: "" },
        { json: "logging_level", js: "logging_level", typ: "" },
        { json: "throttling_burst_limit", js: "throttling_burst_limit", typ: "" },
        { json: "throttling_rate_limit", js: "throttling_rate_limit", typ: "" },
        { json: "route_key", js: "route_key", typ: u(undefined, "") },
    ], false),
    "Apigatewayv2VpcLink": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "default_run_properties", js: "default_run_properties", typ: u(undefined, "") },
        { json: "max_concurrent_runs", js: "max_concurrent_runs", typ: u(undefined, "") },
        { json: "http_name", js: "http_name", typ: u(undefined, "") },
    ], false),
    "AppCookieStickinessPolicyClass": o([
        { json: "name", js: "name", typ: "" },
        { json: "load_balancer", js: "load_balancer", typ: "" },
        { json: "lb_port", js: "lb_port", typ: "" },
        { json: "cookie_name", js: "cookie_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "cookie_expiration_period", js: "cookie_expiration_period", typ: u(undefined, "") },
        { json: "attribute", js: "attribute", typ: u(undefined, "") },
    ], false),
    "AppautoscalingPolicy": o([
        { json: "name", js: "name", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "scalable_dimension", js: "scalable_dimension", typ: "" },
        { json: "service_namespace", js: "service_namespace", typ: "" },
        { json: "scaling_adjustment", js: "scaling_adjustment", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "metric", js: "metric", typ: "" },
        { json: "stat", js: "stat", typ: "" },
        { json: "metric_name", js: "metric_name", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "predefined_metric_type", js: "predefined_metric_type", typ: "" },
        { json: "policy_type", js: "policy_type", typ: u(undefined, "") },
        { json: "step_scaling_policy_configuration", js: "step_scaling_policy_configuration", typ: u(undefined, r("StepScalingPolicyConfiguration")) },
        { json: "target_tracking_scaling_policy_configuration", js: "target_tracking_scaling_policy_configuration", typ: u(undefined, r("TargetTrackingScalingPolicyConfiguration")) },
        { json: "predefined_metric_specification", js: "predefined_metric_specification", typ: u(undefined, "") },
        { json: "dimensions", js: "dimensions", typ: u(undefined, "") },
        { json: "statistic", js: "statistic", typ: u(undefined, "") },
        { json: "unit", js: "unit", typ: u(undefined, "") },
        { json: "metrics", js: "metrics", typ: u(undefined, "") },
        { json: "expression", js: "expression", typ: u(undefined, "") },
        { json: "label", js: "label", typ: u(undefined, "") },
        { json: "metric_stat", js: "metric_stat", typ: u(undefined, "") },
        { json: "return_data", js: "return_data", typ: u(undefined, "") },
        { json: "resource_label", js: "resource_label", typ: u(undefined, "") },
        { json: "alarm_arns", js: "alarm_arns", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "StepScalingPolicyConfiguration": o([
        { json: "adjustment_type", js: "adjustment_type", typ: "" },
        { json: "cooldown", js: "cooldown", typ: "" },
        { json: "metric_aggregation_type", js: "metric_aggregation_type", typ: "" },
        { json: "min_adjustment_magnitude", js: "min_adjustment_magnitude", typ: "" },
        { json: "step_adjustment", js: "step_adjustment", typ: "" },
        { json: "metric_interval_lower_bound", js: "metric_interval_lower_bound", typ: "" },
        { json: "metric_interval_upper_bound", js: "metric_interval_upper_bound", typ: "" },
        { json: "scaling_adjustment", js: "scaling_adjustment", typ: "" },
    ], false),
    "TargetTrackingScalingPolicyConfiguration": o([
        { json: "target_value", js: "target_value", typ: "" },
        { json: "disable_scale_in", js: "disable_scale_in", typ: "" },
        { json: "scale_in_cooldown", js: "scale_in_cooldown", typ: "" },
        { json: "scale_out_cooldown", js: "scale_out_cooldown", typ: "" },
        { json: "customized_metric_specification", js: "customized_metric_specification", typ: "" },
        { json: "predefined_metric_specification", js: "predefined_metric_specification", typ: "" },
    ], false),
    "AppautoscalingScheduledAction": o([
        { json: "name", js: "name", typ: "" },
        { json: "service_namespace", js: "service_namespace", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "scalable_dimension", js: "scalable_dimension", typ: "" },
        { json: "scalable_target_action", js: "scalable_target_action", typ: "" },
        { json: "schedule", js: "schedule", typ: "" },
        { json: "start_time", js: "start_time", typ: u(undefined, "") },
        { json: "end_time", js: "end_time", typ: u(undefined, "") },
        { json: "timezone", js: "timezone", typ: u(undefined, "") },
        { json: "max_capacity", js: "max_capacity", typ: u(undefined, "") },
        { json: "min_capacity", js: "min_capacity", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "AppautoscalingTarget": o([
        { json: "max_capacity", js: "max_capacity", typ: "" },
        { json: "min_capacity", js: "min_capacity", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "scalable_dimension", js: "scalable_dimension", typ: "" },
        { json: "service_namespace", js: "service_namespace", typ: "" },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceAppconfigConfigurationProfile": o([
        { json: "name", js: "name", typ: "" },
        { json: "application_id", js: "application_id", typ: u(undefined, "") },
        { json: "location_uri", js: "location_uri", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "retrieval_role_arn", js: "retrieval_role_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "validator", js: "validator", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "configuration_profile_id", js: "configuration_profile_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppconfigDeployment": o([
        { json: "application_id", js: "application_id", typ: u(undefined, "") },
        { json: "configuration_profile_id", js: "configuration_profile_id", typ: u(undefined, "") },
        { json: "configuration_version", js: "configuration_version", typ: u(undefined, "") },
        { json: "deployment_strategy_id", js: "deployment_strategy_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "environment_id", js: "environment_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "deployment_number", js: "deployment_number", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppconfigDeploymentStrategy": o([
        { json: "deployment_duration_in_minutes", js: "deployment_duration_in_minutes", typ: "" },
        { json: "growth_factor", js: "growth_factor", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "replicate_to", js: "replicate_to", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "final_bake_time_in_minutes", js: "final_bake_time_in_minutes", typ: u(undefined, "") },
        { json: "growth_type", js: "growth_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceAppconfigEnvironment": o([
        { json: "name", js: "name", typ: "" },
        { json: "alarm_arn", js: "alarm_arn", typ: "" },
        { json: "application_id", js: "application_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "monitor", js: "monitor", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "alarm_role_arn", js: "alarm_role_arn", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "environment_id", js: "environment_id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppconfigExtension": o([
        { json: "name", js: "name", typ: "" },
        { json: "action_point", js: "action_point", typ: "" },
        { json: "point", js: "point", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "uri", js: "uri", typ: "" },
        { json: "required", js: "required", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "parameter", js: "parameter", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "AppconfigExtensionAssociation": o([
        { json: "extension_arn", js: "extension_arn", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "extension_version", js: "extension_version", typ: u(undefined, "") },
    ], false),
    "AppconfigHostedConfigurationVersion": o([
        { json: "application_id", js: "application_id", typ: u(undefined, "") },
        { json: "configuration_profile_id", js: "configuration_profile_id", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "content_type", js: "content_type", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "version_number", js: "version_number", typ: u(undefined, "") },
    ], false),
    "AppflowConnectorProfile": o([
        { json: "name ", js: "name ", typ: "" },
        { json: "connection_mode", js: "connection_mode", typ: "" },
        { json: "connector_profile_config", js: "connector_profile_config", typ: "" },
        { json: "connector_type", js: "connector_type", typ: "" },
        { json: "connector_profile_credentials", js: "connector_profile_credentials", typ: "" },
        { json: "connector_profile_properties", js: "connector_profile_properties", typ: "" },
        { json: "api_key", js: "api_key", typ: "" },
        { json: "secret_key", js: "secret_key", typ: "" },
        { json: "authentication_type", js: "authentication_type", typ: "" },
        { json: "application_key", js: "application_key", typ: "" },
        { json: "api_token", js: "api_token", typ: "" },
        { json: "client_id", js: "client_id", typ: "" },
        { json: "client_secret", js: "client_secret", typ: "" },
        { json: "access_key_id", js: "access_key_id", typ: "" },
        { json: "datakey", js: "datakey", typ: "" },
        { json: "secret_access_key", js: "secret_access_key", typ: "" },
        { json: "user_id", js: "user_id", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "api_secret_key", js: "api_secret_key", typ: "" },
        { json: "instance_url", js: "instance_url", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "database_url", js: "database_url", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "application_host_url", js: "application_host_url", typ: "" },
        { json: "application_service_path", js: "application_service_path", typ: "" },
        { json: "client_number", js: "client_number", typ: "" },
        { json: "port_number", js: "port_number", typ: "" },
        { json: "stage", js: "stage", typ: "" },
        { json: "warehouse", js: "warehouse", typ: "" },
        { json: "connector_label", js: "connector_label", typ: u(undefined, "") },
        { json: "kms_arn", js: "kms_arn", typ: u(undefined, "") },
        { json: "amplitude", js: "amplitude", typ: u(undefined, "") },
        { json: "custom_connector", js: "custom_connector", typ: u(undefined, "") },
        { json: "datadog", js: "datadog", typ: u(undefined, "") },
        { json: "dynatrace", js: "dynatrace", typ: u(undefined, "") },
        { json: "google_analytics", js: "google_analytics", typ: u(undefined, "") },
        { json: "honeycode", js: "honeycode", typ: u(undefined, "") },
        { json: "infor_nexus", js: "infor_nexus", typ: u(undefined, "") },
        { json: "marketo", js: "marketo", typ: u(undefined, "") },
        { json: "redshift", js: "redshift", typ: u(undefined, "") },
        { json: "salesforce", js: "salesforce", typ: u(undefined, "") },
        { json: "sapo_data", js: "sapo_data", typ: u(undefined, "") },
        { json: "service_now", js: "service_now", typ: u(undefined, "") },
        { json: "singular", js: "singular", typ: u(undefined, "") },
        { json: "slack", js: "slack", typ: u(undefined, "") },
        { json: "snowflake", js: "snowflake", typ: u(undefined, "") },
        { json: "trendmicro", js: "trendmicro", typ: u(undefined, "") },
        { json: "veeva", js: "veeva", typ: u(undefined, "") },
        { json: "zendesk", js: "zendesk", typ: u(undefined, "") },
        { json: "access_token", js: "access_token", typ: u(undefined, "") },
        { json: "oauth_request", js: "oauth_request", typ: u(undefined, "") },
        { json: "refresh_token", js: "refresh_token", typ: u(undefined, "") },
        { json: "client_credentials_arn", js: "client_credentials_arn", typ: u(undefined, "") },
        { json: "auth_code", js: "auth_code", typ: u(undefined, "") },
        { json: "redirect_uri", js: "redirect_uri", typ: u(undefined, "") },
        { json: "profile_properties", js: "profile_properties", typ: u(undefined, "") },
        { json: "bucket_prefix", js: "bucket_prefix", typ: u(undefined, "") },
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "database_name", js: "database_name", typ: u(undefined, "") },
        { json: "data_api_role_arn", js: "data_api_role_arn", typ: u(undefined, "") },
        { json: "is_sandbox_environment", js: "is_sandbox_environment", typ: u(undefined, "") },
        { json: "logon_language", js: "logon_language", typ: u(undefined, "") },
        { json: "private_link_service_name", js: "private_link_service_name", typ: u(undefined, "") },
        { json: "account_name", js: "account_name", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "credentials_arn", js: "credentials_arn", typ: u(undefined, "") },
    ], false),
    "AppflowFlow": o([
        { json: "name", js: "name", typ: "" },
        { json: "destination_flow_config", js: "destination_flow_config", typ: "" },
        { json: "source_flow_config", js: "source_flow_config", typ: "" },
        { json: "task", js: "task", typ: "" },
        { json: "trigger_config", js: "trigger_config", typ: "" },
        { json: "connector_type", js: "connector_type", typ: "" },
        { json: "destination_connector_properties", js: "destination_connector_properties", typ: "" },
        { json: "object", js: "object", typ: "" },
        { json: "entity_name", js: "entity_name", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "intermediate_bucket_name", js: "intermediate_bucket_name", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "object_path", js: "object_path", typ: "" },
        { json: "source_connector_properties", js: "source_connector_properties", typ: "" },
        { json: "source_fields", js: "source_fields", typ: "" },
        { json: "task_type", js: "task_type", typ: "" },
        { json: "trigger_type", js: "trigger_type", typ: "" },
        { json: "schedule_expression", js: "schedule_expression", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "kms_arn", js: "kms_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "api_version", js: "api_version", typ: u(undefined, "") },
        { json: "connector_profile_name", js: "connector_profile_name", typ: u(undefined, "") },
        { json: "custom_connector", js: "custom_connector", typ: u(undefined, "") },
        { json: "customer_profiles", js: "customer_profiles", typ: u(undefined, "") },
        { json: "event_bridge", js: "event_bridge", typ: u(undefined, "") },
        { json: "honeycode", js: "honeycode", typ: u(undefined, "") },
        { json: "marketo", js: "marketo", typ: u(undefined, "") },
        { json: "redshift", js: "redshift", typ: u(undefined, "") },
        { json: "s3", js: "s3", typ: u(undefined, "") },
        { json: "salesforce", js: "salesforce", typ: u(undefined, "") },
        { json: "sapo_data", js: "sapo_data", typ: u(undefined, "") },
        { json: "snowflake", js: "snowflake", typ: u(undefined, "") },
        { json: "upsolver", js: "upsolver", typ: u(undefined, "") },
        { json: "zendesk", js: "zendesk", typ: u(undefined, "") },
        { json: "error_handling_config", js: "error_handling_config", typ: u(undefined, "") },
        { json: "custom_properties", js: "custom_properties", typ: u(undefined, "") },
        { json: "id_field_names", js: "id_field_names", typ: u(undefined, "") },
        { json: "write_operation_type", js: "write_operation_type", typ: u(undefined, "") },
        { json: "object_type_name", js: "object_type_name", typ: u(undefined, "") },
        { json: "bucket_prefix", js: "bucket_prefix", typ: u(undefined, "") },
        { json: "s3_output_format_config", js: "s3_output_format_config", typ: u(undefined, "") },
        { json: "aggregation_config", js: "aggregation_config", typ: u(undefined, "") },
        { json: "file_type", js: "file_type", typ: u(undefined, "") },
        { json: "prefix_config", js: "prefix_config", typ: u(undefined, "") },
        { json: "preserve_source_data_typing", js: "preserve_source_data_typing", typ: u(undefined, "") },
        { json: "success_response_handling_config", js: "success_response_handling_config", typ: u(undefined, "") },
        { json: "write_operation", js: "write_operation", typ: u(undefined, "") },
        { json: "aggregation_type", js: "aggregation_type", typ: u(undefined, "") },
        { json: "prefix_format", js: "prefix_format", typ: u(undefined, "") },
        { json: "prefix_type", js: "prefix_type", typ: u(undefined, "") },
        { json: "fail_on_first_destination_error", js: "fail_on_first_destination_error", typ: u(undefined, "") },
        { json: "incremental_pull_config", js: "incremental_pull_config", typ: u(undefined, "") },
        { json: "amplitude", js: "amplitude", typ: u(undefined, "") },
        { json: "datadog", js: "datadog", typ: u(undefined, "") },
        { json: "dynratrace", js: "dynratrace", typ: u(undefined, "") },
        { json: "infor_nexus", js: "infor_nexus", typ: u(undefined, "") },
        { json: "service_now", js: "service_now", typ: u(undefined, "") },
        { json: "singular", js: "singular", typ: u(undefined, "") },
        { json: "slack", js: "slack", typ: u(undefined, "") },
        { json: "trend_micro", js: "trend_micro", typ: u(undefined, "") },
        { json: "veeva", js: "veeva", typ: u(undefined, "") },
        { json: "s3_input_format_config", js: "s3_input_format_config", typ: u(undefined, "") },
        { json: "s3_input_file_type", js: "s3_input_file_type", typ: u(undefined, "") },
        { json: "enable_dynamic_field_update", js: "enable_dynamic_field_update", typ: u(undefined, "") },
        { json: "include_deleted_records", js: "include_deleted_records", typ: u(undefined, "") },
        { json: "document_type", js: "document_type", typ: u(undefined, "") },
        { json: "include_all_versions", js: "include_all_versions", typ: u(undefined, "") },
        { json: "include_renditions", js: "include_renditions", typ: u(undefined, "") },
        { json: "include_source_files", js: "include_source_files", typ: u(undefined, "") },
        { json: "datetime_type_field_name", js: "datetime_type_field_name", typ: u(undefined, "") },
        { json: "connector_operator", js: "connector_operator", typ: u(undefined, "") },
        { json: "destination_field", js: "destination_field", typ: u(undefined, "") },
        { json: "task_properties", js: "task_properties", typ: u(undefined, "") },
        { json: "dynatrace", js: "dynatrace", typ: u(undefined, "") },
        { json: "google_analytics", js: "google_analytics", typ: u(undefined, "") },
        { json: "trendmicro", js: "trendmicro", typ: u(undefined, "") },
        { json: "trigger_properties", js: "trigger_properties", typ: u(undefined, "") },
        { json: "data_pull_mode", js: "data_pull_mode", typ: u(undefined, "") },
        { json: "first_execution_from", js: "first_execution_from", typ: u(undefined, "") },
        { json: "schedule_end_time", js: "schedule_end_time", typ: u(undefined, "") },
        { json: "schedule_offset", js: "schedule_offset", typ: u(undefined, "") },
        { json: "schedule_start_time", js: "schedule_start_time", typ: u(undefined, "") },
        { json: "timezone", js: "timezone", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "AppintegrationsDataIntegration": o([
        { json: "kms_key", js: "kms_key", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "schedule_config", js: "schedule_config", typ: "" },
        { json: "source_uri", js: "source_uri", typ: "" },
        { json: "first_execution_from", js: "first_execution_from", typ: "" },
        { json: "object", js: "object", typ: "" },
        { json: "schedule_expression", js: "schedule_expression", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ApplicationinsightsApplication": o([
        { json: "resource_group_name", js: "resource_group_name", typ: "" },
        { json: "auto_config_enabled", js: "auto_config_enabled", typ: u(undefined, "") },
        { json: "auto_create", js: "auto_create", typ: u(undefined, "") },
        { json: "cwe_monitor_enabled", js: "cwe_monitor_enabled", typ: u(undefined, "") },
        { json: "grouping_type", js: "grouping_type", typ: u(undefined, "") },
        { json: "ops_center_enabled", js: "ops_center_enabled", typ: u(undefined, "") },
        { json: "ops_item_sns_topic_arn", js: "ops_item_sns_topic_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppmeshGatewayRoute": o([
        { json: "name", js: "name", typ: "" },
        { json: "mesh_name", js: "mesh_name", typ: "" },
        { json: "virtual_gateway_name", js: "virtual_gateway_name", typ: "" },
        { json: "spec", js: "spec", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "match", js: "match", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "virtual_service", js: "virtual_service", typ: "" },
        { json: "virtual_service_name", js: "virtual_service_name", typ: "" },
        { json: "default_target_hostname", js: "default_target_hostname", typ: "" },
        { json: "exact", js: "exact", typ: "" },
        { json: "service_name", js: "service_name", typ: "" },
        { json: "end", js: "end", typ: "" },
        { json: "mesh_owner", js: "mesh_owner", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "grpc_route", js: "grpc_route", typ: u(undefined, "") },
        { json: "http_route", js: "http_route", typ: u(undefined, "") },
        { json: "http2_route", js: "http2_route", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "rewrite", js: "rewrite", typ: u(undefined, "") },
        { json: "hostname", js: "hostname", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "default_prefix", js: "default_prefix", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "header", js: "header", typ: u(undefined, "") },
        { json: "query_parameter", js: "query_parameter", typ: u(undefined, "") },
        { json: "invert", js: "invert", typ: u(undefined, "") },
        { json: "regex", js: "regex", typ: u(undefined, "") },
        { json: "suffix", js: "suffix", typ: u(undefined, "") },
        { json: "start", js: "start", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppmeshMesh": o([
        { json: "name", js: "name", typ: "" },
        { json: "spec", js: "spec", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "mesh_owner", js: "mesh_owner", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppmeshRoute": o([
        { json: "name", js: "name", typ: "" },
        { json: "mesh_name", js: "mesh_name", typ: "" },
        { json: "virtual_router_name", js: "virtual_router_name", typ: "" },
        { json: "spec", js: "spec", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "match", js: "match", typ: "" },
        { json: "weighted_target", js: "weighted_target", typ: "" },
        { json: "unit", js: "unit", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "max_retries", js: "max_retries", typ: "" },
        { json: "per_retry_timeout", js: "per_retry_timeout", typ: "" },
        { json: "virtual_node", js: "virtual_node", typ: "" },
        { json: "weight", js: "weight", typ: "" },
        { json: "end", js: "end", typ: "" },
        { json: "mesh_owner", js: "mesh_owner", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "grpc_route", js: "grpc_route", typ: u(undefined, "") },
        { json: "http2_route", js: "http2_route", typ: u(undefined, "") },
        { json: "http_route", js: "http_route", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "tcp_route", js: "tcp_route", typ: u(undefined, "") },
        { json: "retry_policy", js: "retry_policy", typ: u(undefined, "") },
        { json: "timeout", js: "timeout", typ: u(undefined, "") },
        { json: "idle", js: "idle", typ: u(undefined, "") },
        { json: "metadata", js: "metadata", typ: u(undefined, "") },
        { json: "method_name", js: "method_name", typ: u(undefined, "") },
        { json: "service_name", js: "service_name", typ: u(undefined, "") },
        { json: "invert", js: "invert", typ: u(undefined, "") },
        { json: "exact", js: "exact", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "regex", js: "regex", typ: u(undefined, "") },
        { json: "suffix", js: "suffix", typ: u(undefined, "") },
        { json: "grpc_retry_events", js: "grpc_retry_events", typ: u(undefined, "") },
        { json: "http_retry_events", js: "http_retry_events", typ: u(undefined, "") },
        { json: "tcp_retry_events", js: "tcp_retry_events", typ: u(undefined, "") },
        { json: "per_request", js: "per_request", typ: u(undefined, "") },
        { json: "header", js: "header", typ: u(undefined, "") },
        { json: "method", js: "method", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "query_parameter", js: "query_parameter", typ: u(undefined, "") },
        { json: "scheme", js: "scheme", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "start", js: "start", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppmeshVirtualGateway": o([
        { json: "name", js: "name", typ: "" },
        { json: "mesh_name", js: "mesh_name", typ: "" },
        { json: "spec", js: "spec", typ: "" },
        { json: "listener", js: "listener", typ: "" },
        { json: "validation", js: "validation", typ: "" },
        { json: "certificate_chain", js: "certificate_chain", typ: "" },
        { json: "private_key", js: "private_key", typ: "" },
        { json: "secret_name", js: "secret_name", typ: "" },
        { json: "trust", js: "trust", typ: "" },
        { json: "match", js: "match", typ: "" },
        { json: "exact", js: "exact", typ: "" },
        { json: "certificate_authority_arns", js: "certificate_authority_arns", typ: "" },
        { json: "port_mapping", js: "port_mapping", typ: "" },
        { json: "path", js: "path", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "max_requests", js: "max_requests", typ: "" },
        { json: "max_connections", js: "max_connections", typ: "" },
        { json: "healthy_threshold", js: "healthy_threshold", typ: "" },
        { json: "timeout_millis", js: "timeout_millis", typ: "" },
        { json: "unhealthy_threshold", js: "unhealthy_threshold", typ: "" },
        { json: "certificate", js: "certificate", typ: "" },
        { json: "certificate_arn", js: "certificate_arn", typ: "" },
        { json: "mesh_owner", js: "mesh_owner", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "backend_defaults", js: "backend_defaults", typ: u(undefined, "") },
        { json: "logging", js: "logging", typ: u(undefined, "") },
        { json: "client_policy", js: "client_policy", typ: u(undefined, "") },
        { json: "tls", js: "tls", typ: u(undefined, "") },
        { json: "enforce", js: "enforce", typ: u(undefined, "") },
        { json: "ports", js: "ports", typ: u(undefined, "") },
        { json: "file", js: "file", typ: u(undefined, "") },
        { json: "sds", js: "sds", typ: u(undefined, "") },
        { json: "subject_alternative_names", js: "subject_alternative_names", typ: u(undefined, "") },
        { json: "acm", js: "acm", typ: u(undefined, "") },
        { json: "connection_pool", js: "connection_pool", typ: u(undefined, "") },
        { json: "health_check", js: "health_check", typ: u(undefined, "") },
        { json: "access_log", js: "access_log", typ: u(undefined, "") },
        { json: "format", js: "format", typ: u(undefined, "") },
        { json: "json", js: "json", typ: u(undefined, "") },
        { json: "text", js: "text", typ: u(undefined, "") },
        { json: "grpc", js: "grpc", typ: u(undefined, "") },
        { json: "http", js: "http", typ: u(undefined, "") },
        { json: "http2", js: "http2", typ: u(undefined, "") },
        { json: "max_pending_requests", js: "max_pending_requests", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppmeshVirtualNode": o([
        { json: "name", js: "name", typ: "" },
        { json: "mesh_name", js: "mesh_name", typ: "" },
        { json: "spec", js: "spec", typ: "" },
        { json: "virtual_service", js: "virtual_service", typ: "" },
        { json: "virtual_service_name", js: "virtual_service_name", typ: "" },
        { json: "validation", js: "validation", typ: "" },
        { json: "certificate_chain", js: "certificate_chain", typ: "" },
        { json: "private_key", js: "private_key", typ: "" },
        { json: "secret_name", js: "secret_name", typ: "" },
        { json: "trust", js: "trust", typ: "" },
        { json: "match", js: "match", typ: "" },
        { json: "exact", js: "exact", typ: "" },
        { json: "certificate_authority_arns", js: "certificate_authority_arns", typ: "" },
        { json: "port_mapping", js: "port_mapping", typ: "" },
        { json: "path", js: "path", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "namespace_name", js: "namespace_name", typ: "" },
        { json: "service_name", js: "service_name", typ: "" },
        { json: "hostname", js: "hostname", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "max_requests", js: "max_requests", typ: "" },
        { json: "max_connections", js: "max_connections", typ: "" },
        { json: "healthy_threshold", js: "healthy_threshold", typ: "" },
        { json: "timeout_millis", js: "timeout_millis", typ: "" },
        { json: "unhealthy_threshold", js: "unhealthy_threshold", typ: "" },
        { json: "base_ejection_duration", js: "base_ejection_duration", typ: "" },
        { json: "interval", js: "interval", typ: "" },
        { json: "max_ejection_percent", js: "max_ejection_percent", typ: "" },
        { json: "max_server_errors", js: "max_server_errors", typ: "" },
        { json: "unit", js: "unit", typ: "" },
        { json: "certificate", js: "certificate", typ: "" },
        { json: "certificate_arn", js: "certificate_arn", typ: "" },
        { json: "mesh_owner", js: "mesh_owner", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "backend", js: "backend", typ: u(undefined, "") },
        { json: "backend_defaults", js: "backend_defaults", typ: u(undefined, "") },
        { json: "listener", js: "listener", typ: u(undefined, "") },
        { json: "logging", js: "logging", typ: u(undefined, "") },
        { json: "service_discovery", js: "service_discovery", typ: u(undefined, "") },
        { json: "client_policy", js: "client_policy", typ: u(undefined, "") },
        { json: "tls", js: "tls", typ: u(undefined, "") },
        { json: "enforce", js: "enforce", typ: u(undefined, "") },
        { json: "ports", js: "ports", typ: u(undefined, "") },
        { json: "file", js: "file", typ: u(undefined, "") },
        { json: "sds", js: "sds", typ: u(undefined, "") },
        { json: "subject_alternative_names", js: "subject_alternative_names", typ: u(undefined, "") },
        { json: "acm", js: "acm", typ: u(undefined, "") },
        { json: "connection_pool", js: "connection_pool", typ: u(undefined, "") },
        { json: "health_check", js: "health_check", typ: u(undefined, "") },
        { json: "outlier_detection", js: "outlier_detection", typ: u(undefined, "") },
        { json: "timeout", js: "timeout", typ: u(undefined, "") },
        { json: "access_log", js: "access_log", typ: u(undefined, "") },
        { json: "format", js: "format", typ: u(undefined, "") },
        { json: "json", js: "json", typ: u(undefined, "") },
        { json: "text", js: "text", typ: u(undefined, "") },
        { json: "aws_cloud_map", js: "aws_cloud_map", typ: u(undefined, "") },
        { json: "dns", js: "dns", typ: u(undefined, "") },
        { json: "attributes", js: "attributes", typ: u(undefined, "") },
        { json: "ip_preference", js: "ip_preference", typ: u(undefined, "") },
        { json: "response_type", js: "response_type", typ: u(undefined, "") },
        { json: "grpc", js: "grpc", typ: u(undefined, "") },
        { json: "http", js: "http", typ: u(undefined, "") },
        { json: "http2", js: "http2", typ: u(undefined, "") },
        { json: "tcp", js: "tcp", typ: u(undefined, "") },
        { json: "max_pending_requests", js: "max_pending_requests", typ: u(undefined, "") },
        { json: "idle", js: "idle", typ: u(undefined, "") },
        { json: "per_request", js: "per_request", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppmeshVirtualRouter": o([
        { json: "name", js: "name", typ: "" },
        { json: "mesh_name", js: "mesh_name", typ: "" },
        { json: "spec", js: "spec", typ: "" },
        { json: "port_mapping", js: "port_mapping", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "mesh_owner", js: "mesh_owner", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "listener", js: "listener", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppmeshVirtualService": o([
        { json: "name", js: "name", typ: "" },
        { json: "mesh_name", js: "mesh_name", typ: "" },
        { json: "spec", js: "spec", typ: "" },
        { json: "virtual_node_name", js: "virtual_node_name", typ: "" },
        { json: "virtual_router_name", js: "virtual_router_name", typ: "" },
        { json: "mesh_owner", js: "mesh_owner", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "virtual_node", js: "virtual_node", typ: u(undefined, "") },
        { json: "virtual_router", js: "virtual_router", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ApprunnerAutoScalingConfigurationVersion": o([
        { json: "auto_scaling_configuration_name", js: "auto_scaling_configuration_name", typ: u(undefined, "") },
        { json: "max_concurrency", js: "max_concurrency", typ: u(undefined, "") },
        { json: "max_size", js: "max_size", typ: u(undefined, "") },
        { json: "min_size", js: "min_size", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "auto_scaling_configuration_revision", js: "auto_scaling_configuration_revision", typ: u(undefined, "") },
        { json: "latest", js: "latest", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ApprunnerConnection": o([
        { json: "connection_name", js: "connection_name", typ: "" },
        { json: "provider_type", js: "provider_type", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ApprunnerCustomDomainAssociation": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "service_arn", js: "service_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "certificate_validation_records", js: "certificate_validation_records", typ: u(undefined, "") },
        { json: "dns_target", js: "dns_target", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
    ], false),
    "ApprunnerObservabilityConfiguration": o([
        { json: "vendor", js: "vendor", typ: "" },
        { json: "observability_configuration_name", js: "observability_configuration_name", typ: u(undefined, "") },
        { json: "trace_configuration", js: "trace_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "observability_configuration_revision", js: "observability_configuration_revision", typ: u(undefined, "") },
        { json: "latest", js: "latest", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ApprunnerService": o([
        { json: "kms_key", js: "kms_key", typ: "" },
        { json: "is_publicly_accessible", js: "is_publicly_accessible", typ: "" },
        { json: "observability_enabled", js: "observability_enabled", typ: "" },
        { json: "repository_url", js: "repository_url", typ: "" },
        { json: "source_code_version", js: "source_code_version", typ: "" },
        { json: "image_identifier", js: "image_identifier", typ: "" },
        { json: "image_repository_type", js: "image_repository_type", typ: "" },
        { json: "runtime", js: "runtime", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "service_name", js: "service_name", typ: u(undefined, "") },
        { json: "source_configuration", js: "source_configuration", typ: u(undefined, "") },
        { json: "auto_scaling_configuration_arn", js: "auto_scaling_configuration_arn", typ: u(undefined, "") },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, "") },
        { json: "health_check_configuration", js: "health_check_configuration", typ: u(undefined, "") },
        { json: "instance_configuration", js: "instance_configuration", typ: u(undefined, "") },
        { json: "network_configuration", js: "network_configuration", typ: u(undefined, "") },
        { json: "observability_configuration", js: "observability_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "healthy_threshold", js: "healthy_threshold", typ: u(undefined, "") },
        { json: "interval", js: "interval", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "timeout", js: "timeout", typ: u(undefined, "") },
        { json: "unhealthy_threshold", js: "unhealthy_threshold", typ: u(undefined, "") },
        { json: "cpu", js: "cpu", typ: u(undefined, "") },
        { json: "instance_role_arn", js: "instance_role_arn", typ: u(undefined, "") },
        { json: "authentication_configuration", js: "authentication_configuration", typ: u(undefined, "") },
        { json: "auto_deployments_enabled", js: "auto_deployments_enabled", typ: u(undefined, "") },
        { json: "code_repository", js: "code_repository", typ: u(undefined, "") },
        { json: "image_repository", js: "image_repository", typ: u(undefined, "") },
        { json: "access_role_arn", js: "access_role_arn", typ: u(undefined, "") },
        { json: "connection_arn", js: "connection_arn", typ: u(undefined, "") },
        { json: "ingress_configuration", js: "ingress_configuration", typ: u(undefined, "") },
        { json: "egress_configuration", js: "egress_configuration", typ: u(undefined, "") },
        { json: "egress_type", js: "egress_type", typ: u(undefined, "") },
        { json: "vpc_connector_arn", js: "vpc_connector_arn", typ: u(undefined, "") },
        { json: "observability_configuration_arn", js: "observability_configuration_arn", typ: u(undefined, "") },
        { json: "code_configuration", js: "code_configuration", typ: u(undefined, "") },
        { json: "image_configuration", js: "image_configuration", typ: u(undefined, "") },
        { json: "code_configuration_values", js: "code_configuration_values", typ: u(undefined, "") },
        { json: "build_command", js: "build_command", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "runtime_environment_secrets", js: "runtime_environment_secrets", typ: u(undefined, "") },
        { json: "runtime_environment_variables", js: "runtime_environment_variables", typ: u(undefined, "") },
        { json: "start_command", js: "start_command", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "service_id", js: "service_id", typ: u(undefined, "") },
        { json: "service_url", js: "service_url", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ApprunnerVpcConnector": o([
        { json: "vpc_connector_name", js: "vpc_connector_name", typ: "" },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "vpc_connector_revision", js: "vpc_connector_revision", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ApprunnerVpcIngressConnection": o([
        { json: "name", js: "name", typ: "" },
        { json: "service_arn", js: "service_arn", typ: "" },
        { json: "ingress_vpc_configuration", js: "ingress_vpc_configuration", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppstreamDirectoryConfig": o([
        { json: "directory_name", js: "directory_name", typ: "" },
        { json: "organizational_unit_distinguished_names", js: "organizational_unit_distinguished_names", typ: "" },
        { json: "service_account_credentials", js: "service_account_credentials", typ: "" },
        { json: "account_name", js: "account_name", typ: "" },
        { json: "account_password", js: "account_password", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
    ], false),
    "AppstreamFleet": o([
        { json: "compute_capacity", js: "compute_capacity", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "desired_instances", js: "desired_instances", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "disconnect_timeout_in_seconds", js: "disconnect_timeout_in_seconds", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "domain_join_info", js: "domain_join_info", typ: u(undefined, "") },
        { json: "enable_default_internet_access", js: "enable_default_internet_access", typ: u(undefined, "") },
        { json: "fleet_type", js: "fleet_type", typ: u(undefined, "") },
        { json: "iam_role_arn", js: "iam_role_arn", typ: u(undefined, "") },
        { json: "idle_disconnect_timeout_in_seconds", js: "idle_disconnect_timeout_in_seconds", typ: u(undefined, "") },
        { json: "image_name", js: "image_name", typ: u(undefined, "") },
        { json: "image_arn", js: "image_arn", typ: u(undefined, "") },
        { json: "stream_view", js: "stream_view", typ: u(undefined, "") },
        { json: "max_user_duration_in_seconds", js: "max_user_duration_in_seconds", typ: u(undefined, "") },
        { json: "vpc_config", js: "vpc_config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "directory_name", js: "directory_name", typ: u(undefined, "") },
        { json: "organizational_unit_distinguished_name", js: "organizational_unit_distinguished_name", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "available", js: "available", typ: u(undefined, "") },
        { json: "in_use", js: "in_use", typ: u(undefined, "") },
        { json: "running", js: "running", typ: u(undefined, "") },
    ], false),
    "AppstreamFleetStackAssociation": o([
        { json: "fleet_name", js: "fleet_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AppstreamImageBuilder": o([
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "endpoint_type", js: "endpoint_type", typ: "" },
        { json: "access_endpoint", js: "access_endpoint", typ: u(undefined, "") },
        { json: "appstream_agent_version", js: "appstream_agent_version", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "domain_join_info", js: "domain_join_info", typ: u(undefined, "") },
        { json: "enable_default_internet_access", js: "enable_default_internet_access", typ: u(undefined, "") },
        { json: "iam_role_arn", js: "iam_role_arn", typ: u(undefined, "") },
        { json: "image_arn", js: "image_arn", typ: u(undefined, "") },
        { json: "image_name", js: "image_name", typ: u(undefined, "") },
        { json: "vpc_config", js: "vpc_config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpce_id", js: "vpce_id", typ: u(undefined, "") },
        { json: "directory_name", js: "directory_name", typ: u(undefined, "") },
        { json: "organizational_unit_distinguished_name", js: "organizational_unit_distinguished_name", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppstreamStack": o([
        { json: "name", js: "name", typ: "" },
        { json: "endpoint_type", js: "endpoint_type", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "connector_type", js: "connector_type", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "permission", js: "permission", typ: "" },
        { json: "access_endpoints", js: "access_endpoints", typ: u(undefined, "") },
        { json: "application_settings", js: "application_settings", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "embed_host_domains", js: "embed_host_domains", typ: u(undefined, "") },
        { json: "feedback_url", js: "feedback_url", typ: u(undefined, "") },
        { json: "redirect_url", js: "redirect_url", typ: u(undefined, "") },
        { json: "storage_connectors", js: "storage_connectors", typ: u(undefined, "") },
        { json: "user_settings", js: "user_settings", typ: u(undefined, "") },
        { json: "streaming_experience_settings", js: "streaming_experience_settings", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpce_id", js: "vpce_id", typ: u(undefined, "") },
        { json: "settings_group", js: "settings_group", typ: u(undefined, "") },
        { json: "domains", js: "domains", typ: u(undefined, "") },
        { json: "resource_identifier", js: "resource_identifier", typ: u(undefined, "") },
        { json: "preferred_protocol", js: "preferred_protocol", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AppstreamUser": o([
        { json: "authentication_type", js: "authentication_type", typ: "" },
        { json: "user_name", js: "user_name", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "first_name", js: "first_name", typ: u(undefined, "") },
        { json: "last_name", js: "last_name", typ: u(undefined, "") },
        { json: "send_email_notification", js: "send_email_notification", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "AppstreamUserStackAssociation": o([
        { json: "authentication_type", js: "authentication_type", typ: "" },
        { json: "send_email_notification", js: "send_email_notification", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AppsyncAPICache": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "api_caching_behavior", js: "api_caching_behavior", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "ttl", js: "ttl", typ: "" },
        { json: "at_rest_encryption_enabled", js: "at_rest_encryption_enabled", typ: u(undefined, "") },
        { json: "transit_encryption_enabled", js: "transit_encryption_enabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AppsyncAPIKey": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "expires", js: "expires", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "key", js: "key", typ: u(undefined, "") },
    ], false),
    "AppsyncDatasource": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
        { json: "delta_sync_table_name", js: "delta_sync_table_name", typ: "" },
        { json: "endpoint", js: "endpoint", typ: "" },
        { json: "event_bus_arn", js: "event_bus_arn", typ: "" },
        { json: "function_arn", js: "function_arn", typ: "" },
        { json: "http_endpoint_config", js: "http_endpoint_config", typ: "" },
        { json: "db_cluster_identifier", js: "db_cluster_identifier", typ: "" },
        { json: "aws_secret_store_arn", js: "aws_secret_store_arn", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "dynamodb_config", js: "dynamodb_config", typ: u(undefined, "") },
        { json: "elasticsearch_config", js: "elasticsearch_config", typ: u(undefined, "") },
        { json: "event_bridge_config", js: "event_bridge_config", typ: u(undefined, "") },
        { json: "http_config", js: "http_config", typ: u(undefined, "") },
        { json: "lambda_config", js: "lambda_config", typ: u(undefined, "") },
        { json: "opensearchservice_config", js: "opensearchservice_config", typ: u(undefined, "") },
        { json: "service_role_arn", js: "service_role_arn", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "use_caller_credentials", js: "use_caller_credentials", typ: u(undefined, "") },
        { json: "delta_sync_config", js: "delta_sync_config", typ: u(undefined, "") },
        { json: "versioned", js: "versioned", typ: u(undefined, "") },
        { json: "base_table_ttl", js: "base_table_ttl", typ: u(undefined, "") },
        { json: "delta_sync_table_ttl", js: "delta_sync_table_ttl", typ: u(undefined, "") },
        { json: "authorization_config", js: "authorization_config", typ: u(undefined, "") },
        { json: "authorization_type", js: "authorization_type", typ: u(undefined, "") },
        { json: "aws_iam_config", js: "aws_iam_config", typ: u(undefined, "") },
        { json: "signing_region", js: "signing_region", typ: u(undefined, "") },
        { json: "source_type", js: "source_type", typ: u(undefined, "") },
        { json: "database_name", js: "database_name", typ: u(undefined, "") },
        { json: "schema", js: "schema", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "AppsyncDomainName": o([
        { json: "certificate_arn", js: "certificate_arn", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "appsync_domain_name", js: "appsync_domain_name", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
    ], false),
    "AppsyncDomainNameAPIAssociation": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AppsyncFunction": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "data_source", js: "data_source", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "code", js: "code", typ: u(undefined, "") },
        { json: "max_batch_size", js: "max_batch_size", typ: u(undefined, "") },
        { json: "request_mapping_template", js: "request_mapping_template", typ: u(undefined, "") },
        { json: "response_mapping_template", js: "response_mapping_template", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "runtime", js: "runtime", typ: u(undefined, "") },
        { json: "sync_config", js: "sync_config", typ: u(undefined, "") },
        { json: "function_version", js: "function_version", typ: u(undefined, "") },
        { json: "runtime_version", js: "runtime_version", typ: u(undefined, "") },
        { json: "conflict_detection", js: "conflict_detection", typ: u(undefined, "") },
        { json: "conflict_handler", js: "conflict_handler", typ: u(undefined, "") },
        { json: "lambda_conflict_handler_config", js: "lambda_conflict_handler_config", typ: u(undefined, "") },
        { json: "lambda_conflict_handler_arn", js: "lambda_conflict_handler_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "function_id", js: "function_id", typ: u(undefined, "") },
    ], false),
    "AppsyncGraphqlAPI": o([
        { json: "name", js: "name", typ: "" },
        { json: "log_config", js: "log_config", typ: u(undefined, r("LogConfig")) },
        { json: "openid_connect_config", js: "openid_connect_config", typ: u(undefined, r("OpenidConnectConfig")) },
        { json: "user_pool_config", js: "user_pool_config", typ: u(undefined, r("UserPoolConfig")) },
        { json: "lambda_authorizer_config", js: "lambda_authorizer_config", typ: u(undefined, r("LambdaAuthorizerConfig")) },
        { json: "schema", js: "schema", typ: u(undefined, "") },
        { json: "additional_authentication_provider", js: "additional_authentication_provider", typ: u(undefined, r("AdditionalAuthenticationProvider")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "xray_enabled", js: "xray_enabled", typ: u(undefined, "") },
        { json: "visibility", js: "visibility", typ: u(undefined, "") },
        { json: "exclude_verbose_content", js: "exclude_verbose_content", typ: u(undefined, "") },
        { json: "iat_ttl", js: "iat_ttl", typ: u(undefined, "") },
        { json: "aws_region", js: "aws_region", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "uris", js: "uris", typ: u(undefined, "") },
    ], false),
    "AdditionalAuthenticationProvider": o([
        { json: "authentication_type", js: "authentication_type", typ: "" },
        { json: "openid_connect_config", js: "openid_connect_config", typ: "" },
        { json: "user_pool_config", js: "user_pool_config", typ: "" },
    ], false),
    "LambdaAuthorizerConfig": o([
        { json: "authorizer_uri", js: "authorizer_uri", typ: "" },
        { json: "authorizer_result_ttl_in_seconds", js: "authorizer_result_ttl_in_seconds", typ: "" },
        { json: "identity_validation_expression", js: "identity_validation_expression", typ: "" },
    ], false),
    "LogConfig": o([
        { json: "cloudwatch_logs_role_arn", js: "cloudwatch_logs_role_arn", typ: "" },
        { json: "field_log_level", js: "field_log_level", typ: "" },
        { json: "exclude_verbose_content", js: "exclude_verbose_content", typ: "" },
    ], false),
    "OpenidConnectConfig": o([
        { json: "issuer", js: "issuer", typ: "" },
        { json: "auth_ttl", js: "auth_ttl", typ: "" },
        { json: "client_id", js: "client_id", typ: "" },
        { json: "iat_ttl", js: "iat_ttl", typ: "" },
    ], false),
    "UserPoolConfig": o([
        { json: "default_action", js: "default_action", typ: "" },
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "app_id_client_regex", js: "app_id_client_regex", typ: "" },
        { json: "aws_region", js: "aws_region", typ: "" },
    ], false),
    "AppsyncResolver": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "field", js: "field", typ: "" },
        { json: "code", js: "code", typ: u(undefined, "") },
        { json: "request_template", js: "request_template", typ: u(undefined, "") },
        { json: "response_template", js: "response_template", typ: u(undefined, "") },
        { json: "data_source", js: "data_source", typ: u(undefined, "") },
        { json: "max_batch_size", js: "max_batch_size", typ: u(undefined, "") },
        { json: "sync_config", js: "sync_config", typ: u(undefined, "") },
        { json: "pipeline_config", js: "pipeline_config", typ: u(undefined, "") },
        { json: "caching_config", js: "caching_config", typ: u(undefined, "") },
        { json: "runtime", js: "runtime", typ: u(undefined, "") },
        { json: "caching_keys", js: "caching_keys", typ: u(undefined, "") },
        { json: "ttl", js: "ttl", typ: u(undefined, "") },
        { json: "functions", js: "functions", typ: u(undefined, "") },
        { json: "conflict_detection", js: "conflict_detection", typ: u(undefined, "") },
        { json: "conflict_handler", js: "conflict_handler", typ: u(undefined, "") },
        { json: "lambda_conflict_handler_config", js: "lambda_conflict_handler_config", typ: u(undefined, "") },
        { json: "lambda_conflict_handler_arn", js: "lambda_conflict_handler_arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "runtime_version", js: "runtime_version", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "AppsyncType": o([
        { json: "api_id", js: "api_id", typ: "" },
        { json: "format", js: "format", typ: "" },
        { json: "definition", js: "definition", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
    ], false),
    "AthenaDatabase": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "encryption_option", js: "encryption_option", typ: "" },
        { json: "acl_configuration", js: "acl_configuration", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, "") },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "properties", js: "properties", typ: u(undefined, "") },
        { json: "kms_key", js: "kms_key", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AthenaNamedQuery": o([
        { json: "name", js: "name", typ: "" },
        { json: "database", js: "database", typ: "" },
        { json: "query", js: "query", typ: "" },
        { json: "workgroup", js: "workgroup", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AthenaWorkgroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "s3_acl_option", js: "s3_acl_option", typ: "" },
        { json: "encryption_option", js: "encryption_option", typ: "" },
        { json: "configuration", js: "configuration", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "bytes_scanned_cutoff_per_query", js: "bytes_scanned_cutoff_per_query", typ: u(undefined, "") },
        { json: "enforce_workgroup_configuration", js: "enforce_workgroup_configuration", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "execution_role", js: "execution_role", typ: u(undefined, "") },
        { json: "publish_cloudwatch_metrics_enabled", js: "publish_cloudwatch_metrics_enabled", typ: u(undefined, "") },
        { json: "result_configuration", js: "result_configuration", typ: u(undefined, "") },
        { json: "requester_pays_enabled", js: "requester_pays_enabled", typ: u(undefined, "") },
        { json: "selected_engine_version", js: "selected_engine_version", typ: u(undefined, "") },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, "") },
        { json: "acl_configuration", js: "acl_configuration", typ: u(undefined, "") },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "output_location", js: "output_location", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AuditmanagerAccountRegistration": o([
        { json: "delegated_admin_account", js: "delegated_admin_account", typ: u(undefined, "") },
        { json: "deregister_on_destroy", js: "deregister_on_destroy", typ: u(undefined, "") },
        { json: "kms_key", js: "kms_key", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "AuditmanagerAssessment": o([
        { json: "name", js: "name", typ: "" },
        { json: "assessment_reports_destination", js: "assessment_reports_destination", typ: r("AssessmentReportsDestination") },
        { json: "framework_id", js: "framework_id", typ: "" },
        { json: "roles", js: "roles", typ: r("Roles") },
        { json: "destination_type", js: "destination_type", typ: "" },
        { json: "role_type", js: "role_type", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "scope", js: "scope", typ: u(undefined, r("Scope")) },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "aws_accounts", js: "aws_accounts", typ: u(undefined, r("CanonicalUserID")) },
        { json: "aws_services", js: "aws_services", typ: u(undefined, r("AwsServices")) },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "roles_all", js: "roles_all", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "AssessmentReportsDestination": o([
        { json: "destination", js: "destination", typ: "" },
        { json: "destination_type", js: "destination_type", typ: "" },
    ], false),
    "AwsServices": o([
        { json: "service_name", js: "service_name", typ: "" },
    ], false),
    "Roles": o([
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "role_type", js: "role_type", typ: "" },
    ], false),
    "Scope": o([
        { json: "aws_accounts", js: "aws_accounts", typ: "" },
        { json: "aws_services", js: "aws_services", typ: "" },
    ], false),
    "AuditmanagerAssessmentDelegation": o([
        { json: "assessment_id", js: "assessment_id", typ: "" },
        { json: "control_set_id", js: "control_set_id", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "role_type", js: "role_type", typ: "" },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "delegation_id", js: "delegation_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "AuditmanagerAssessmentReport": o([
        { json: "name", js: "name", typ: "" },
        { json: "assessment_id", js: "assessment_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "author", js: "author", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "ResourceAuditmanagerControl": o([
        { json: "name", js: "name", typ: "" },
        { json: "control_mapping_sources", js: "control_mapping_sources", typ: r("ControlMappingSources") },
        { json: "action_plan_instructions", js: "action_plan_instructions", typ: u(undefined, "") },
        { json: "action_plan_title", js: "action_plan_title", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "testing_information", js: "testing_information", typ: u(undefined, "") },
        { json: "source_keyword", js: "source_keyword", typ: u(undefined, r("SourceKeyword")) },
        { json: "troubleshooting_text", js: "troubleshooting_text", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "control_mapping_sources.*.source_id", js: "control_mapping_sources.*.source_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "ControlMappingSources": o([
        { json: "source_name", js: "source_name", typ: "" },
        { json: "source_set_up_option", js: "source_set_up_option", typ: "" },
        { json: "source_type", js: "source_type", typ: "" },
        { json: "source_description", js: "source_description", typ: u(undefined, "") },
        { json: "source_frequency", js: "source_frequency", typ: u(undefined, "") },
        { json: "source_keyword", js: "source_keyword", typ: u(undefined, "") },
        { json: "troubleshooting_text", js: "troubleshooting_text", typ: u(undefined, "") },
    ], false),
    "SourceKeyword": o([
        { json: "keyword_input_type", js: "keyword_input_type", typ: "" },
        { json: "keyword_value", js: "keyword_value", typ: "" },
    ], false),
    "AuditmanagerFramework": o([
        { json: "control_sets", js: "control_sets", typ: r("ControlSets") },
        { json: "controls", js: "controls", typ: r("CanonicalUserID") },
        { json: "compliance_type", js: "compliance_type", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "control_sets[*].id", js: "control_sets[*].id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "framework_type", js: "framework_type", typ: u(undefined, "") },
    ], false),
    "ControlSets": o([
        { json: "name", js: "name", typ: "" },
        { json: "controls", js: "controls", typ: "" },
    ], false),
    "AuditmanagerFrameworkShare": o([
        { json: "destination_account", js: "destination_account", typ: "" },
        { json: "destination_region", js: "destination_region", typ: "" },
        { json: "framework_id", js: "framework_id", typ: "" },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "AuditmanagerOrganizationAdminAccountRegistration": o([
        { json: "admin_account_id", js: "admin_account_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "organization_id", js: "organization_id", typ: u(undefined, "") },
    ], false),
    "AutoscalingAttachment": o([
        { json: "autoscaling_group_name", js: "autoscaling_group_name", typ: "" },
        { json: "elb", js: "elb", typ: u(undefined, "") },
        { json: "lb_target_group_arn", js: "lb_target_group_arn", typ: u(undefined, "") },
    ], false),
    "AutoscalingGroupTag": o([
        { json: "autoscaling_group_name", js: "autoscaling_group_name", typ: "" },
        { json: "tag", js: "tag", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "propagate_at_launch", js: "propagate_at_launch", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AutoscalingLifecycleHook": o([
        { json: "name", js: "name", typ: "" },
        { json: "autoscaling_group_name", js: "autoscaling_group_name", typ: "" },
        { json: "lifecycle_transition", js: "lifecycle_transition", typ: "" },
        { json: "default_result", js: "default_result", typ: u(undefined, "") },
        { json: "heartbeat_timeout", js: "heartbeat_timeout", typ: u(undefined, "") },
        { json: "notification_metadata", js: "notification_metadata", typ: u(undefined, "") },
        { json: "notification_target_arn", js: "notification_target_arn", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
    ], false),
    "AutoscalingNotification": o([
        { json: "group_names", js: "group_names", typ: "" },
        { json: "notifications", js: "notifications", typ: "" },
        { json: "topic_arn", js: "topic_arn", typ: "" },
    ], false),
    "AutoscalingPolicy": o([
        { json: "autoscaling_group_name", js: "autoscaling_group_name", typ: "" },
        { json: "scaling_adjustment", js: "scaling_adjustment", typ: "" },
        { json: "target_value", js: "target_value", typ: "" },
        { json: "adjustment_type", js: "adjustment_type", typ: u(undefined, "") },
        { json: "policy_type", js: "policy_type", typ: u(undefined, "") },
        { json: "predictive_scaling_configuration", js: "predictive_scaling_configuration", typ: u(undefined, r("PredictiveScalingConfiguration")) },
        { json: "estimated_instance_warmup", js: "estimated_instance_warmup", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "min_adjustment_magnitude", js: "min_adjustment_magnitude", typ: u(undefined, "") },
        { json: "cooldown", js: "cooldown", typ: u(undefined, "") },
        { json: "metric_aggregation_type", js: "metric_aggregation_type", typ: u(undefined, "") },
        { json: "step_adjustment", js: "step_adjustment", typ: u(undefined, "") },
        { json: "metric_interval_lower_bound", js: "metric_interval_lower_bound", typ: u(undefined, "") },
        { json: "target_tracking_configuration", js: "target_tracking_configuration", typ: u(undefined, "") },
        { json: "predefined_metric_specification", js: "predefined_metric_specification", typ: u(undefined, r("PredefinedMetricSpecification")) },
        { json: "customized_metric_specification", js: "customized_metric_specification", typ: u(undefined, r("CustomizedMetricSpecification")) },
        { json: "disable_scale_in", js: "disable_scale_in", typ: u(undefined, "") },
        { json: "resource_label", js: "resource_label", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
    ], false),
    "CustomizedMetricSpecification": o([
        { json: "metric_dimension", js: "metric_dimension", typ: "" },
        { json: "metric_name", js: "metric_name", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "statistic", js: "statistic", typ: "" },
        { json: "unit", js: "unit", typ: "" },
        { json: "metrics", js: "metrics", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "expression", js: "expression", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "label", js: "label", typ: "" },
        { json: "metric_stat", js: "metric_stat", typ: "" },
        { json: "return_data", js: "return_data", typ: "" },
        { json: "metric", js: "metric", typ: "" },
        { json: "stat", js: "stat", typ: "" },
        { json: "dimensions", js: "dimensions", typ: "" },
    ], false),
    "PredefinedMetricSpecification": o([
        { json: "predefined_metric_type", js: "predefined_metric_type", typ: "" },
        { json: "resource_label", js: "resource_label", typ: "" },
    ], false),
    "PredictiveScalingConfiguration": o([
        { json: "max_capacity_breach_behavior", js: "max_capacity_breach_behavior", typ: "" },
        { json: "max_capacity_buffer", js: "max_capacity_buffer", typ: "" },
        { json: "metric_specification", js: "metric_specification", typ: "" },
        { json: "mode", js: "mode", typ: "" },
        { json: "scheduling_buffer_time", js: "scheduling_buffer_time", typ: "" },
        { json: "customized_capacity_metric_specification", js: "customized_capacity_metric_specification", typ: "" },
        { json: "customized_load_metric_specification", js: "customized_load_metric_specification", typ: "" },
        { json: "customized_scaling_metric_specification", js: "customized_scaling_metric_specification", typ: "" },
        { json: "predefined_load_metric_specification", js: "predefined_load_metric_specification", typ: "" },
        { json: "predefined_metric_pair_specification", js: "predefined_metric_pair_specification", typ: "" },
        { json: "predefined_scaling_metric_specification", js: "predefined_scaling_metric_specification", typ: "" },
        { json: "predefined_metric_type", js: "predefined_metric_type", typ: "" },
        { json: "resource_label", js: "resource_label", typ: "" },
        { json: "metric_data_queries", js: "metric_data_queries", typ: "" },
        { json: "expression", js: "expression", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "label", js: "label", typ: "" },
        { json: "metric_stat", js: "metric_stat", typ: "" },
        { json: "return_data", js: "return_data", typ: "" },
        { json: "metric", js: "metric", typ: "" },
        { json: "stat", js: "stat", typ: "" },
        { json: "unit", js: "unit", typ: "" },
        { json: "dimensions", js: "dimensions", typ: "" },
        { json: "metric_name", js: "metric_name", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: "" },
    ], false),
    "AutoscalingSchedule": o([
        { json: "autoscaling_group_name", js: "autoscaling_group_name", typ: "" },
        { json: "scheduled_action_name", js: "scheduled_action_name", typ: "" },
        { json: "desired_capacity", js: "desired_capacity", typ: u(undefined, "") },
        { json: "end_time", js: "end_time", typ: u(undefined, "") },
        { json: "max_size", js: "max_size", typ: u(undefined, "") },
        { json: "min_size", js: "min_size", typ: u(undefined, "") },
        { json: "recurrence", js: "recurrence", typ: u(undefined, "") },
        { json: "start_time", js: "start_time", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "AutoscalingplansScalingPlan": o([
        { json: "name", js: "name", typ: "" },
        { json: "application_source", js: "application_source", typ: "" },
        { json: "scaling_instruction", js: "scaling_instruction", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "max_capacity", js: "max_capacity", typ: "" },
        { json: "min_capacity", js: "min_capacity", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "scalable_dimension", js: "scalable_dimension", typ: "" },
        { json: "service_namespace", js: "service_namespace", typ: "" },
        { json: "target_tracking_configuration", js: "target_tracking_configuration", typ: "" },
        { json: "metric_name", js: "metric_name", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "statistic", js: "statistic", typ: "" },
        { json: "predefined_load_metric_type", js: "predefined_load_metric_type", typ: "" },
        { json: "target_value", js: "target_value", typ: "" },
        { json: "predefined_scaling_metric_type", js: "predefined_scaling_metric_type", typ: "" },
        { json: "cloudformation_stack_arn", js: "cloudformation_stack_arn", typ: u(undefined, "") },
        { json: "tag_filter", js: "tag_filter", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
        { json: "customized_load_metric_specification", js: "customized_load_metric_specification", typ: u(undefined, "") },
        { json: "disable_dynamic_scaling", js: "disable_dynamic_scaling", typ: u(undefined, "") },
        { json: "predefined_load_metric_specification", js: "predefined_load_metric_specification", typ: u(undefined, "") },
        { json: "predictive_scaling_max_capacity_buffer", js: "predictive_scaling_max_capacity_buffer", typ: u(undefined, "") },
        { json: "predictive_scaling_mode", js: "predictive_scaling_mode", typ: u(undefined, "") },
        { json: "scaling_policy_update_behavior", js: "scaling_policy_update_behavior", typ: u(undefined, "") },
        { json: "scheduled_action_buffer_time", js: "scheduled_action_buffer_time", typ: u(undefined, "") },
        { json: "dimensions", js: "dimensions", typ: u(undefined, "") },
        { json: "unit", js: "unit", typ: u(undefined, "") },
        { json: "resource_label", js: "resource_label", typ: u(undefined, "") },
        { json: "customized_scaling_metric_specification", js: "customized_scaling_metric_specification", typ: u(undefined, "") },
        { json: "disable_scale_in", js: "disable_scale_in", typ: u(undefined, "") },
        { json: "predefined_scaling_metric_specification", js: "predefined_scaling_metric_specification", typ: u(undefined, "") },
        { json: "estimated_instance_warmup", js: "estimated_instance_warmup", typ: u(undefined, "") },
        { json: "scale_in_cooldown", js: "scale_in_cooldown", typ: u(undefined, "") },
        { json: "scale_out_cooldown", js: "scale_out_cooldown", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "scaling_plan_version", js: "scaling_plan_version", typ: u(undefined, "") },
    ], false),
    "BackupGlobalSettings": o([
        { json: "global_settings", js: "global_settings", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceBackupPlan": o([
        { json: "name", js: "name", typ: "" },
        { json: "rule", js: "rule", typ: "" },
        { json: "rule_name", js: "rule_name", typ: "" },
        { json: "target_vault_name", js: "target_vault_name", typ: "" },
        { json: "destination_vault_arn", js: "destination_vault_arn", typ: "" },
        { json: "backup_options", js: "backup_options", typ: "" },
        { json: "resource_type", js: "resource_type", typ: "" },
        { json: "advanced_backup_setting", js: "advanced_backup_setting", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "schedule", js: "schedule", typ: u(undefined, "") },
        { json: "enable_continuous_backup", js: "enable_continuous_backup", typ: u(undefined, "") },
        { json: "start_window", js: "start_window", typ: u(undefined, "") },
        { json: "completion_window", js: "completion_window", typ: u(undefined, "") },
        { json: "lifecycle", js: "lifecycle", typ: u(undefined, "") },
        { json: "recovery_point_tags", js: "recovery_point_tags", typ: u(undefined, "") },
        { json: "copy_action", js: "copy_action", typ: u(undefined, "") },
        { json: "cold_storage_after", js: "cold_storage_after", typ: u(undefined, "") },
        { json: "delete_after", js: "delete_after", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "BackupRegionSettings": o([
        { json: "resource_type_opt_in_preference", js: "resource_type_opt_in_preference", typ: "" },
        { json: "resource_type_management_preference", js: "resource_type_management_preference", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceBackupSelection": o([
        { json: "name", js: "name", typ: "" },
        { json: "plan_id", js: "plan_id", typ: "" },
        { json: "iam_role_arn", js: "iam_role_arn", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "selection_tag", js: "selection_tag", typ: u(undefined, "") },
        { json: "condition", js: "condition", typ: u(undefined, "") },
        { json: "resources", js: "resources", typ: u(undefined, "") },
        { json: "not_resources", js: "not_resources", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceBackupVault": o([
        { json: "name", js: "name", typ: "" },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "recovery_points", js: "recovery_points", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "BackupVaultLockConfiguration": o([
        { json: "backup_vault_name", js: "backup_vault_name", typ: "" },
        { json: "changeable_for_days", js: "changeable_for_days", typ: u(undefined, "") },
        { json: "max_retention_days", js: "max_retention_days", typ: u(undefined, "") },
        { json: "min_retention_days", js: "min_retention_days", typ: u(undefined, "") },
        { json: "backup_vault_arn", js: "backup_vault_arn", typ: u(undefined, "") },
    ], false),
    "BackupVaultNotifications": o([
        { json: "backup_vault_name", js: "backup_vault_name", typ: "" },
        { json: "sns_topic_arn", js: "sns_topic_arn", typ: "" },
        { json: "backup_vault_events", js: "backup_vault_events", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "backup_vault_arn", js: "backup_vault_arn", typ: u(undefined, "") },
    ], false),
    "BackupVaultPolicy": o([
        { json: "backup_vault_name", js: "backup_vault_name", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "backup_vault_arn", js: "backup_vault_arn", typ: u(undefined, "") },
    ], false),
    "ResourceBatchComputeEnvironment": o([
        { json: "service_role", js: "service_role", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "compute_environment_name", js: "compute_environment_name", typ: u(undefined, "") },
        { json: "compute_environment_name_prefix", js: "compute_environment_name_prefix", typ: u(undefined, "") },
        { json: "compute_resources", js: "compute_resources", typ: u(undefined, r("ComputeResources")) },
        { json: "eks_configuration", js: "eks_configuration", typ: u(undefined, r("EksConfiguration")) },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "ec2_configuration", js: "ec2_configuration", typ: u(undefined, r("Ec2Configuration")) },
        { json: "launch_template", js: "launch_template", typ: u(undefined, r("BatchComputeEnvironmentLaunchTemplate")) },
        { json: "image_type", js: "image_type", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "ecs_cluster_arn", js: "ecs_cluster_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_reason", js: "status_reason", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ComputeResources": o([
        { json: "allocation_strategy", js: "allocation_strategy", typ: "" },
        { json: "bid_percentage", js: "bid_percentage", typ: "" },
        { json: "desired_vcpus", js: "desired_vcpus", typ: "" },
        { json: "ec2_configuration", js: "ec2_configuration", typ: "" },
        { json: "ec2_key_pair", js: "ec2_key_pair", typ: "" },
        { json: "image_id", js: "image_id", typ: "" },
        { json: "instance_role", js: "instance_role", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "launch_template", js: "launch_template", typ: "" },
        { json: "max_vcpus", js: "max_vcpus", typ: "" },
        { json: "min_vcpus", js: "min_vcpus", typ: "" },
        { json: "placement_group", js: "placement_group", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "spot_iam_fleet_role", js: "spot_iam_fleet_role", typ: "" },
        { json: "subnets", js: "subnets", typ: "" },
        { json: "tags", js: "tags", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "Ec2Configuration": o([
        { json: "image_id_override", js: "image_id_override", typ: "" },
        { json: "image_type", js: "image_type", typ: "" },
    ], false),
    "EksConfiguration": o([
        { json: "eks_cluster_arn", js: "eks_cluster_arn", typ: "" },
        { json: "kubernetes_namespace", js: "kubernetes_namespace", typ: "" },
    ], false),
    "BatchComputeEnvironmentLaunchTemplate": o([
        { json: "launch_template_id", js: "launch_template_id", typ: "" },
        { json: "launch_template_name", js: "launch_template_name", typ: "" },
        { json: "version", js: "version", typ: "" },
    ], false),
    "BatchJobDefinition": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "container_properties", js: "container_properties", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "platform_capabilities", js: "platform_capabilities", typ: u(undefined, "") },
        { json: "propagate_tags", js: "propagate_tags", typ: u(undefined, "") },
        { json: "retry_strategy", js: "retry_strategy", typ: u(undefined, r("RetryStrategy")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "timeout", js: "timeout", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "revision", js: "revision", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RetryStrategy": o([
        { json: "attempts", js: "attempts", typ: "" },
        { json: "evaluate_on_exit", js: "evaluate_on_exit", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "on_exit_code", js: "on_exit_code", typ: "" },
        { json: "on_reason", js: "on_reason", typ: "" },
        { json: "on_status_reason", js: "on_status_reason", typ: "" },
        { json: "attempt_duration_seconds", js: "attempt_duration_seconds", typ: "" },
    ], false),
    "BudgetsBudgetAction": o([
        { json: "budget_name", js: "budget_name", typ: "" },
        { json: "action_threshold", js: "action_threshold", typ: "" },
        { json: "action_type", js: "action_type", typ: "" },
        { json: "approval_model", js: "approval_model", typ: "" },
        { json: "definition", js: "definition", typ: "" },
        { json: "execution_role_arn", js: "execution_role_arn", typ: "" },
        { json: "notification_type", js: "notification_type", typ: "" },
        { json: "subscriber", js: "subscriber", typ: "" },
        { json: "action_threshold_type", js: "action_threshold_type", typ: "" },
        { json: "action_threshold_value", js: "action_threshold_value", typ: "" },
        { json: "address", js: "address", typ: "" },
        { json: "subscription_type", js: "subscription_type", typ: "" },
        { json: "policy_arn", js: "policy_arn", typ: "" },
        { json: "policy_id", js: "policy_id", typ: "" },
        { json: "action_sub_type", js: "action_sub_type", typ: "" },
        { json: "instance_ids", js: "instance_ids", typ: "" },
        { json: "region", js: "region", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "iam_action_definition", js: "iam_action_definition", typ: u(undefined, "") },
        { json: "ssm_action_definition", js: "ssm_action_definition", typ: u(undefined, "") },
        { json: "scp_action_definition", js: "scp_action_definition", typ: u(undefined, "") },
        { json: "groups", js: "groups", typ: u(undefined, "") },
        { json: "roles", js: "roles", typ: u(undefined, "") },
        { json: "users", js: "users", typ: u(undefined, "") },
        { json: "target_ids", js: "target_ids", typ: u(undefined, "") },
        { json: "action_id", js: "action_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "CeAnomalyMonitor": o([
        { json: "name", js: "name", typ: "" },
        { json: "monitor_type", js: "monitor_type", typ: "" },
        { json: "monitor_dimension", js: "monitor_dimension", typ: u(undefined, "") },
        { json: "monitor_specification", js: "monitor_specification", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CeAnomalySubscription": o([
        { json: "frequency", js: "frequency", typ: "" },
        { json: "monitor_arn_list", js: "monitor_arn_list", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "threshold", js: "threshold", typ: u(undefined, "") },
        { json: "threshold_expression", js: "threshold_expression", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "and", js: "and", typ: u(undefined, "") },
        { json: "cost_category", js: "cost_category", typ: u(undefined, "") },
        { json: "dimension", js: "dimension", typ: u(undefined, "") },
        { json: "not", js: "not", typ: u(undefined, "") },
        { json: "or", js: "or", typ: u(undefined, "") },
        { json: "key", js: "key", typ: u(undefined, "") },
        { json: "match_options", js: "match_options", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CeCostAllocationTag": o([
        { json: "tag_key", js: "tag_key", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "ChimeVoiceConnector": o([
        { json: "name", js: "name", typ: "" },
        { json: "require_encryption", js: "require_encryption", typ: "" },
        { json: "aws_region", js: "aws_region", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "outbound_host_name", js: "outbound_host_name", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ChimeVoiceConnectorGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "voice_connector_id", js: "voice_connector_id", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "connector", js: "connector", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ChimeVoiceConnectorLogging": o([
        { json: "voice_connector_id", js: "voice_connector_id", typ: "" },
        { json: "enable_sip_logs", js: "enable_sip_logs", typ: u(undefined, "") },
        { json: "enable_media_metric_logs", js: "enable_media_metric_logs", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ChimeVoiceConnectorOrigination": o([
        { json: "voice_connector_id", js: "voice_connector_id", typ: "" },
        { json: "route", js: "route", typ: "" },
        { json: "host", js: "host", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "weight", js: "weight", typ: "" },
        { json: "disabled", js: "disabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ChimeVoiceConnectorStreaming": o([
        { json: "voice_connector_id", js: "voice_connector_id", typ: "" },
        { json: "streaming_notification_targets", js: "streaming_notification_targets", typ: u(undefined, "") },
        { json: "media_insights_configuration", js: "media_insights_configuration", typ: u(undefined, r("MediaInsightsConfiguration")) },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "MediaInsightsConfiguration": o([
        { json: "disabled", js: "disabled", typ: "" },
        { json: "configuration_arn", js: "configuration_arn", typ: "" },
    ], false),
    "ChimeVoiceConnectorTermination": o([
        { json: "voice_connector_id", js: "voice_connector_id", typ: "" },
        { json: "cidr_allow_list", js: "cidr_allow_list", typ: "" },
        { json: "calling_regions", js: "calling_regions", typ: "" },
        { json: "disabled", js: "disabled", typ: u(undefined, "") },
        { json: "default_phone_number", js: "default_phone_number", typ: u(undefined, "") },
        { json: "cps_limit", js: "cps_limit", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ChimeVoiceConnectorTerminationCredentials": o([
        { json: "voice_connector_id", js: "voice_connector_id", typ: "" },
        { json: "credentials", js: "credentials", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ChimesdkmediapipelinesMediaInsightsPipelineConfiguration": o([
        { json: "name", js: "name", typ: "" },
        { json: "resource_access_role_arn", js: "resource_access_role_arn", typ: "" },
        { json: "elements", js: "elements", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "real_time_alert_configuration", js: "real_time_alert_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "disabled", js: "disabled", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ChimesdkvoiceGlobalSettings": o([
        { json: "voice_connector", js: "voice_connector", typ: "" },
        { json: "cdr_bucket", js: "cdr_bucket", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ChimesdkvoiceSIPMediaApplication": o([
        { json: "aws_region", js: "aws_region", typ: "" },
        { json: "endpoints", js: "endpoints", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "lambda_arn", js: "lambda_arn", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ChimesdkvoiceSIPRule": o([
        { json: "name", js: "name", typ: "" },
        { json: "target_applications", js: "target_applications", typ: "" },
        { json: "trigger_type", js: "trigger_type", typ: "" },
        { json: "trigger_value", js: "trigger_value", typ: "" },
        { json: "aws_region", js: "aws_region", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "sip_media_application_id", js: "sip_media_application_id", typ: "" },
        { json: "disabled", js: "disabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CleanroomsCollaboration": o([
        { json: "name", js: "name", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "creator_member_abilities", js: "creator_member_abilities", typ: u(undefined, "") },
        { json: "creator_display_name", js: "creator_display_name", typ: u(undefined, "") },
        { json: "query_log_status", js: "query_log_status", typ: u(undefined, "") },
        { json: "data_encryption_metadata", js: "data_encryption_metadata", typ: u(undefined, "") },
        { json: "data_encryption_metadata.allow_clear_text", js: "data_encryption_metadata.allow_clear_text", typ: u(undefined, "") },
        { json: "data_encryption_metadata.allow_duplicates", js: "data_encryption_metadata.allow_duplicates", typ: u(undefined, "") },
        { json: "data_encryption_metadata.allow_joins_on_columns_with_different_names", js: "data_encryption_metadata.allow_joins_on_columns_with_different_names", typ: u(undefined, "") },
        { json: "data_encryption_metadata.preserve_nulls", js: "data_encryption_metadata.preserve_nulls", typ: u(undefined, "") },
        { json: "member", js: "member", typ: u(undefined, "") },
        { json: "member.account_id", js: "member.account_id", typ: u(undefined, "") },
        { json: "member.display_name", js: "member.display_name", typ: u(undefined, "") },
        { json: "member.member_abilities", js: "member.member_abilities", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "member status", js: "member status", typ: u(undefined, "") },
        { json: "updated_time", js: "updated_time", typ: u(undefined, "") },
    ], false),
    "CleanroomsConfiguredTable": o([
        { json: "name", js: "name", typ: "" },
        { json: "analysis_method", js: "analysis_method", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "allowed_columns", js: "allowed_columns", typ: u(undefined, "") },
        { json: "table_reference", js: "table_reference", typ: u(undefined, "") },
        { json: "table_reference.database_name", js: "table_reference.database_name", typ: u(undefined, "") },
        { json: "table_reference.table_name", js: "table_reference.table_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "update_time", js: "update_time", typ: u(undefined, "") },
    ], false),
    "Cloud9EnvironmentEc2": o([
        { json: "name", js: "name", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "automatic_stop_time_minutes", js: "automatic_stop_time_minutes", typ: u(undefined, "") },
        { json: "connection_type", js: "connection_type", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "owner_arn", js: "owner_arn", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "Cloud9EnvironmentMembership": o([
        { json: "environment_id", js: "environment_id", typ: "" },
        { json: "permissions", js: "permissions", typ: "" },
        { json: "user_arn", js: "user_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "user_id", js: "user_id", typ: u(undefined, "") },
    ], false),
    "ResourceCloudcontrolapiResource": o([
        { json: "desired_state", js: "desired_state", typ: "" },
        { json: "type_name", js: "type_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "schema", js: "schema", typ: u(undefined, "") },
        { json: "type_version_id", js: "type_version_id", typ: u(undefined, "") },
        { json: "properties", js: "properties", typ: u(undefined, "") },
    ], false),
    "ResourceCloudformationStack": o([
        { json: "name", js: "name", typ: "" },
        { json: "template_body", js: "template_body", typ: u(undefined, "") },
        { json: "template_url", js: "template_url", typ: u(undefined, "") },
        { json: "capabilities", js: "capabilities", typ: u(undefined, "") },
        { json: "disable_rollback", js: "disable_rollback", typ: u(undefined, "") },
        { json: "notification_arns", js: "notification_arns", typ: u(undefined, "") },
        { json: "on_failure", js: "on_failure", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "policy_body", js: "policy_body", typ: u(undefined, "") },
        { json: "policy_url", js: "policy_url", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "iam_role_arn", js: "iam_role_arn", typ: u(undefined, "") },
        { json: "timeout_in_minutes", js: "timeout_in_minutes", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "outputs", js: "outputs", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudformationStackSet": o([
        { json: "name", js: "name", typ: "" },
        { json: "administration_role_arn", js: "administration_role_arn", typ: u(undefined, "") },
        { json: "capabilities", js: "capabilities", typ: u(undefined, "") },
        { json: "operation_preferences", js: "operation_preferences", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "execution_role_name", js: "execution_role_name", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "permission_model", js: "permission_model", typ: u(undefined, "") },
        { json: "call_as", js: "call_as", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "template_body", js: "template_body", typ: u(undefined, "") },
        { json: "template_url", js: "template_url", typ: u(undefined, "") },
        { json: "failure_tolerance_count", js: "failure_tolerance_count", typ: u(undefined, "") },
        { json: "failure_tolerance_percentage", js: "failure_tolerance_percentage", typ: u(undefined, "") },
        { json: "max_concurrent_count", js: "max_concurrent_count", typ: u(undefined, "") },
        { json: "max_concurrent_percentage", js: "max_concurrent_percentage", typ: u(undefined, "") },
        { json: "region_concurrency_type", js: "region_concurrency_type", typ: u(undefined, "") },
        { json: "region_order", js: "region_order", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "stack_set_id", js: "stack_set_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudformationStackSetInstance": o([
        { json: "stack_set_name", js: "stack_set_name", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "deployment_targets", js: "deployment_targets", typ: u(undefined, "") },
        { json: "parameter_overrides", js: "parameter_overrides", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "retain_stack", js: "retain_stack", typ: u(undefined, "") },
        { json: "call_as", js: "call_as", typ: u(undefined, "") },
        { json: "operation_preferences", js: "operation_preferences", typ: u(undefined, "") },
        { json: "organizational_unit_ids", js: "organizational_unit_ids", typ: u(undefined, "") },
        { json: "failure_tolerance_count", js: "failure_tolerance_count", typ: u(undefined, "") },
        { json: "failure_tolerance_percentage", js: "failure_tolerance_percentage", typ: u(undefined, "") },
        { json: "max_concurrent_count", js: "max_concurrent_count", typ: u(undefined, "") },
        { json: "max_concurrent_percentage", js: "max_concurrent_percentage", typ: u(undefined, "") },
        { json: "region_concurrency_type", js: "region_concurrency_type", typ: u(undefined, "") },
        { json: "region_order", js: "region_order", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "organizational_unit_id", js: "organizational_unit_id", typ: u(undefined, "") },
        { json: "stack_id", js: "stack_id", typ: u(undefined, "") },
        { json: "stack_instance_summaries", js: "stack_instance_summaries", typ: u(undefined, "") },
    ], false),
    "CloudfrontContinuousDeploymentPolicy": o([
        { json: "enabled", js: "enabled", typ: "" },
        { json: "staging_distribution_dns_names", js: "staging_distribution_dns_names", typ: "" },
        { json: "traffic_config", js: "traffic_config", typ: "" },
        { json: "items", js: "items", typ: "" },
        { json: "quantity", js: "quantity", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "header", js: "header", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "weight", js: "weight", typ: "" },
        { json: "idle_ttl", js: "idle_ttl", typ: "" },
        { json: "maximum_ttl", js: "maximum_ttl", typ: "" },
        { json: "single_header_config", js: "single_header_config", typ: u(undefined, "") },
        { json: "single_weight_config", js: "single_weight_config", typ: u(undefined, "") },
        { json: "session_stickiness_config", js: "session_stickiness_config", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_modified_time", js: "last_modified_time", typ: u(undefined, "") },
    ], false),
    "ResourceCloudfrontDistribution": o([
        { json: "default_cache_behavior", js: "default_cache_behavior", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "origin", js: "origin", typ: "" },
        { json: "restrictions", js: "restrictions", typ: "" },
        { json: "viewer_certificate", js: "viewer_certificate", typ: "" },
        { json: "allowed_methods", js: "allowed_methods", typ: "" },
        { json: "cached_methods", js: "cached_methods", typ: "" },
        { json: "target_origin_id", js: "target_origin_id", typ: "" },
        { json: "viewer_protocol_policy", js: "viewer_protocol_policy", typ: "" },
        { json: "cookies", js: "cookies", typ: "" },
        { json: "query_string", js: "query_string", typ: "" },
        { json: "event_type", js: "event_type", typ: "" },
        { json: "lambda_arn", js: "lambda_arn", typ: "" },
        { json: "function_arn", js: "function_arn", typ: "" },
        { json: "forward", js: "forward", typ: "" },
        { json: "error_code", js: "error_code", typ: "" },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "origin_id", js: "origin_id", typ: "" },
        { json: "http_port", js: "http_port", typ: "" },
        { json: "https_port", js: "https_port", typ: "" },
        { json: "origin_protocol_policy", js: "origin_protocol_policy", typ: "" },
        { json: "origin_ssl_protocols", js: "origin_ssl_protocols", typ: "" },
        { json: "origin_access_identity", js: "origin_access_identity", typ: "" },
        { json: "failover_criteria", js: "failover_criteria", typ: "" },
        { json: "member", js: "member", typ: "" },
        { json: "status_codes", js: "status_codes", typ: "" },
        { json: "locations", js: "locations", typ: "" },
        { json: "restriction_type", js: "restriction_type", typ: "" },
        { json: "aliases", js: "aliases", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "continuous_deployment_policy_id", js: "continuous_deployment_policy_id", typ: u(undefined, "") },
        { json: "custom_error_response", js: "custom_error_response", typ: u(undefined, "") },
        { json: "default_root_object", js: "default_root_object", typ: u(undefined, "") },
        { json: "is_ipv6_enabled", js: "is_ipv6_enabled", typ: u(undefined, "") },
        { json: "http_version", js: "http_version", typ: u(undefined, "") },
        { json: "logging_config", js: "logging_config", typ: u(undefined, "") },
        { json: "ordered_cache_behavior", js: "ordered_cache_behavior", typ: u(undefined, "") },
        { json: "origin_group", js: "origin_group", typ: u(undefined, "") },
        { json: "price_class", js: "price_class", typ: u(undefined, "") },
        { json: "staging", js: "staging", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "web_acl_id", js: "web_acl_id", typ: u(undefined, "") },
        { json: "retain_on_delete", js: "retain_on_delete", typ: u(undefined, "") },
        { json: "cache_policy_id", js: "cache_policy_id", typ: u(undefined, "") },
        { json: "compress", js: "compress", typ: u(undefined, "") },
        { json: "default_ttl", js: "default_ttl", typ: u(undefined, "") },
        { json: "field_level_encryption_id", js: "field_level_encryption_id", typ: u(undefined, "") },
        { json: "lambda_function_association", js: "lambda_function_association", typ: u(undefined, "") },
        { json: "function_association", js: "function_association", typ: u(undefined, "") },
        { json: "max_ttl", js: "max_ttl", typ: u(undefined, "") },
        { json: "min_ttl", js: "min_ttl", typ: u(undefined, "") },
        { json: "origin_request_policy_id", js: "origin_request_policy_id", typ: u(undefined, "") },
        { json: "realtime_log_config_arn", js: "realtime_log_config_arn", typ: u(undefined, "") },
        { json: "response_headers_policy_id", js: "response_headers_policy_id", typ: u(undefined, "") },
        { json: "smooth_streaming", js: "smooth_streaming", typ: u(undefined, "") },
        { json: "trusted_key_groups", js: "trusted_key_groups", typ: u(undefined, "") },
        { json: "trusted_signers", js: "trusted_signers", typ: u(undefined, "") },
        { json: "query_string_cache_keys", js: "query_string_cache_keys", typ: u(undefined, "") },
        { json: "include_body", js: "include_body", typ: u(undefined, "") },
        { json: "whitelisted_names", js: "whitelisted_names", typ: u(undefined, "") },
        { json: "error_caching_min_ttl", js: "error_caching_min_ttl", typ: u(undefined, "") },
        { json: "response_code", js: "response_code", typ: u(undefined, "") },
        { json: "response_page_path", js: "response_page_path", typ: u(undefined, "") },
        { json: "include_cookies", js: "include_cookies", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "connection_attempts", js: "connection_attempts", typ: u(undefined, "") },
        { json: "connection_timeout", js: "connection_timeout", typ: u(undefined, "") },
        { json: "custom_origin_config", js: "custom_origin_config", typ: u(undefined, "") },
        { json: "custom_header", js: "custom_header", typ: u(undefined, "") },
        { json: "origin_access_control_id", js: "origin_access_control_id", typ: u(undefined, "") },
        { json: "origin_path", js: "origin_path", typ: u(undefined, "") },
        { json: "origin_shield", js: "origin_shield", typ: u(undefined, "") },
        { json: "s3_origin_config", js: "s3_origin_config", typ: u(undefined, "") },
        { json: "origin_keepalive_timeout", js: "origin_keepalive_timeout", typ: u(undefined, "") },
        { json: "origin_read_timeout", js: "origin_read_timeout", typ: u(undefined, "") },
        { json: "origin_shield_region", js: "origin_shield_region", typ: u(undefined, "") },
        { json: "acm_certificate_arn", js: "acm_certificate_arn", typ: u(undefined, "") },
        { json: "cloudfront_default_certificate", js: "cloudfront_default_certificate", typ: u(undefined, "") },
        { json: "iam_certificate_id", js: "iam_certificate_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "caller_reference", js: "caller_reference", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "last_modified_time", js: "last_modified_time", typ: u(undefined, "") },
        { json: "in_progress_validation_batches", js: "in_progress_validation_batches", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
    ], false),
    "CloudfrontFieldLevelEncryptionConfig": o([
        { json: "content_type_profile_config", js: "content_type_profile_config", typ: "" },
        { json: "query_arg_profile_config", js: "query_arg_profile_config", typ: "" },
        { json: "forward_when_content_type_is_unknown", js: "forward_when_content_type_is_unknown", typ: "" },
        { json: "content_type_profiles", js: "content_type_profiles", typ: "" },
        { json: "content_type", js: "content_type", typ: "" },
        { json: "format", js: "format", typ: "" },
        { json: "forward_when_query_arg_profile_is_unknown", js: "forward_when_query_arg_profile_is_unknown", typ: "" },
        { json: "profile_id", js: "profile_id", typ: "" },
        { json: "query_arg", js: "query_arg", typ: "" },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "query_arg_profiles", js: "query_arg_profiles", typ: u(undefined, "") },
        { json: "caller_reference", js: "caller_reference", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CloudfrontFieldLevelEncryptionProfile": o([
        { json: "name", js: "name", typ: "" },
        { json: "encryption_entities", js: "encryption_entities", typ: "" },
        { json: "public_key_id", js: "public_key_id", typ: "" },
        { json: "provider_id", js: "provider_id", typ: "" },
        { json: "field_patterns", js: "field_patterns", typ: "" },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "caller_reference", js: "caller_reference", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CloudfrontKeyGroup": o([
        { json: "items", js: "items", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CloudfrontMonitoringSubscription": o([
        { json: "distribution_id", js: "distribution_id", typ: "" },
        { json: "monitoring_subscription", js: "monitoring_subscription", typ: r("MonitoringSubscription") },
        { json: "realtime_metrics_subscription_config", js: "realtime_metrics_subscription_config", typ: r("RealtimeMetricsSubscriptionConfig") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "MonitoringSubscription": o([
        { json: "realtime_metrics_subscription_config", js: "realtime_metrics_subscription_config", typ: "" },
    ], false),
    "RealtimeMetricsSubscriptionConfig": o([
        { json: "realtime_metrics_subscription_status", js: "realtime_metrics_subscription_status", typ: "" },
    ], false),
    "CloudfrontOriginAccessControl": o([
        { json: "name", js: "name", typ: "" },
        { json: "origin_access_control_origin_type", js: "origin_access_control_origin_type", typ: "" },
        { json: "signing_behavior", js: "signing_behavior", typ: "" },
        { json: "signing_protocol", js: "signing_protocol", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
    ], false),
    "CloudfrontPublicKey": o([
        { json: "encoded_key", js: "encoded_key", typ: "" },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "caller_reference", js: "caller_reference", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceCloudhsmV2Cluster": o([
        { json: "hsm_type", js: "hsm_type", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "source_backup_identifier", js: "source_backup_identifier", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "cluster_id", js: "cluster_id", typ: u(undefined, "") },
        { json: "cluster_state", js: "cluster_state", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "security_group_id", js: "security_group_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudhsmV2HSM": o([
        { json: "cluster_id", js: "cluster_id", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "ip_address", js: "ip_address", typ: u(undefined, "") },
        { json: "hsm_id", js: "hsm_id", typ: u(undefined, "") },
        { json: "hsm_state", js: "hsm_state", typ: u(undefined, "") },
        { json: "hsm_eni_id", js: "hsm_eni_id", typ: u(undefined, "") },
    ], false),
    "CloudsearchDomain": o([
        { json: "endpoint_options", js: "endpoint_options", typ: u(undefined, r("EndpointOptions")) },
        { json: "index_field", js: "index_field", typ: u(undefined, r("IndexField")) },
        { json: "multi_az", js: "multi_az", typ: u(undefined, "") },
        { json: "scaling_parameters", js: "scaling_parameters", typ: u(undefined, r("ScalingParameters")) },
        { json: "tls_security_policy", js: "tls_security_policy", typ: u(undefined, "") },
        { json: "desired_replication_count", js: "desired_replication_count", typ: u(undefined, "") },
        { json: "search", js: "search", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "document_service_endpoint", js: "document_service_endpoint", typ: u(undefined, "") },
        { json: "domain_id", js: "domain_id", typ: u(undefined, "") },
        { json: "search_service_endpoint", js: "search_service_endpoint", typ: u(undefined, "") },
    ], false),
    "EndpointOptions": o([
        { json: "enforce_https", js: "enforce_https", typ: "" },
        { json: "tls_security_policy", js: "tls_security_policy", typ: "" },
    ], false),
    "IndexField": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "analysis_scheme", js: "analysis_scheme", typ: "" },
        { json: "default_value", js: "default_value", typ: "" },
        { json: "facet", js: "facet", typ: "" },
        { json: "highlight", js: "highlight", typ: "" },
        { json: "return", js: "return", typ: "" },
        { json: "sort", js: "sort", typ: "" },
        { json: "source_fields", js: "source_fields", typ: "" },
    ], false),
    "ScalingParameters": o([
        { json: "desired_instance_type", js: "desired_instance_type", typ: "" },
        { json: "desired_partition_count", js: "desired_partition_count", typ: "" },
        { json: "desired_replication_count", js: "desired_replication_count", typ: "" },
    ], false),
    "CloudsearchDomainServiceAccessPolicy": o([
        { json: "access_policy", js: "access_policy", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
    ], false),
    "Cloudtrail": o([
        { json: "name", js: "name", typ: "" },
        { json: "s3_bucket_name", js: "s3_bucket_name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "field_selector", js: "field_selector", typ: "" },
        { json: "field", js: "field", typ: "" },
        { json: "advanced_event_selector", js: "advanced_event_selector", typ: u(undefined, "") },
        { json: "cloud_watch_logs_group_arn", js: "cloud_watch_logs_group_arn", typ: u(undefined, "") },
        { json: "cloud_watch_logs_role_arn", js: "cloud_watch_logs_role_arn", typ: u(undefined, "") },
        { json: "enable_log_file_validation", js: "enable_log_file_validation", typ: u(undefined, "") },
        { json: "enable_logging", js: "enable_logging", typ: u(undefined, "") },
        { json: "event_selector", js: "event_selector", typ: u(undefined, r("EventSelector")) },
        { json: "include_global_service_events", js: "include_global_service_events", typ: u(undefined, "") },
        { json: "insight_selector", js: "insight_selector", typ: u(undefined, r("InsightSelector")) },
        { json: "is_multi_region_trail", js: "is_multi_region_trail", typ: u(undefined, "") },
        { json: "is_organization_trail", js: "is_organization_trail", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "s3_key_prefix", js: "s3_key_prefix", typ: u(undefined, "") },
        { json: "sns_topic_name", js: "sns_topic_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "insight_type", js: "insight_type", typ: u(undefined, "") },
        { json: "ends_with", js: "ends_with", typ: u(undefined, "") },
        { json: "equals", js: "equals", typ: u(undefined, "") },
        { json: "not_ends_with", js: "not_ends_with", typ: u(undefined, "") },
        { json: "not_equals", js: "not_equals", typ: u(undefined, "") },
        { json: "not_starts_with", js: "not_starts_with", typ: u(undefined, "") },
        { json: "starts_with", js: "starts_with", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "home_region", js: "home_region", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EventSelector": o([
        { json: "data_resource", js: "data_resource", typ: "" },
        { json: "exclude_management_event_sources", js: "exclude_management_event_sources", typ: "" },
        { json: "include_management_events", js: "include_management_events", typ: "" },
        { json: "read_write_type", js: "read_write_type", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "values", js: "values", typ: "" },
    ], false),
    "InsightSelector": o([
        { json: "insight_type", js: "insight_type", typ: "" },
    ], false),
    "CloudwatchCompositeAlarm": o([
        { json: "alarm_name", js: "alarm_name", typ: "" },
        { json: "alarm_rule", js: "alarm_rule", typ: "" },
        { json: "actions_enabled", js: "actions_enabled", typ: u(undefined, "") },
        { json: "alarm_actions", js: "alarm_actions", typ: u(undefined, "") },
        { json: "alarm_description", js: "alarm_description", typ: u(undefined, "") },
        { json: "insufficient_data_actions", js: "insufficient_data_actions", typ: u(undefined, "") },
        { json: "ok_actions", js: "ok_actions", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudwatchDashboard": o([
        { json: "dashboard_name", js: "dashboard_name", typ: "" },
        { json: "dashboard_body", js: "dashboard_body", typ: "" },
        { json: "dashboard_arn", js: "dashboard_arn", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventAPIDestination": o([
        { json: "name", js: "name", typ: "" },
        { json: "http_method", js: "http_method", typ: "" },
        { json: "connection_arn", js: "connection_arn", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "invocation_rate_limit_per_second", js: "invocation_rate_limit_per_second", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventArchive": o([
        { json: "name", js: "name", typ: "" },
        { json: "event_source_arn", js: "event_source_arn", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "event_pattern", js: "event_pattern", typ: u(undefined, "") },
        { json: "retention_days", js: "retention_days", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventBusPolicy": o([
        { json: "policy", js: "policy", typ: "" },
        { json: "event_bus_name", js: "event_bus_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceCloudwatchEventConnection": o([
        { json: "name", js: "name", typ: "" },
        { json: "authorization_type", js: "authorization_type", typ: "" },
        { json: "auth_parameters", js: "auth_parameters", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "authorization_endpoint", js: "authorization_endpoint", typ: "" },
        { json: "http_method", js: "http_method", typ: "" },
        { json: "oauth_http_parameters", js: "oauth_http_parameters", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "invocation_http_parameters", js: "invocation_http_parameters", typ: u(undefined, "") },
        { json: "api_key", js: "api_key", typ: u(undefined, "") },
        { json: "basic", js: "basic", typ: u(undefined, "") },
        { json: "oauth", js: "oauth", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "secret_arn", js: "secret_arn", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventEndpoint": o([
        { json: "event_bus", js: "event_bus", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "routing_config", js: "routing_config", typ: "" },
        { json: "event_bus_arn", js: "event_bus_arn", typ: "" },
        { json: "failover_config", js: "failover_config", typ: "" },
        { json: "primary", js: "primary", typ: "" },
        { json: "secondary", js: "secondary", typ: "" },
        { json: "health_check", js: "health_check", typ: "" },
        { json: "route", js: "route", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "replication_config", js: "replication_config", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "endpoint_url", js: "endpoint_url", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventPermission": o([
        { json: "statement_id", js: "statement_id", typ: "" },
        { json: "action", js: "action", typ: u(undefined, "") },
        { json: "condition", js: "condition", typ: u(undefined, r("CloudwatchEventPermissionCondition")) },
        { json: "event_bus_name", js: "event_bus_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventPermissionCondition": o([
        { json: "key", js: "key", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "value", js: "value", typ: "" },
    ], false),
    "CloudwatchEventRule": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "event_bus_name", js: "event_bus_name", typ: u(undefined, "") },
        { json: "event_pattern", js: "event_pattern", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "is_enabled", js: "is_enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudwatchEventTarget": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "rule", js: "rule", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "batch_target", js: "batch_target", typ: u(undefined, r("BatchTarget")) },
        { json: "dead_letter_config", js: "dead_letter_config", typ: u(undefined, r("GlobalacceleratorAccelerator")) },
        { json: "ecs_target", js: "ecs_target", typ: u(undefined, r("EcsTarget")) },
        { json: "event_bus_name", js: "event_bus_name", typ: u(undefined, "") },
        { json: "http_target", js: "http_target", typ: u(undefined, r("HTTPTarget")) },
        { json: "input", js: "input", typ: u(undefined, "") },
        { json: "input_path", js: "input_path", typ: u(undefined, "") },
        { json: "input_transformer", js: "input_transformer", typ: u(undefined, r("InputTransformer")) },
        { json: "kinesis_target", js: "kinesis_target", typ: u(undefined, r("KinesisTarget")) },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "run_command_targets", js: "run_command_targets", typ: u(undefined, r("RunCommandTargets")) },
        { json: "redshift_target", js: "redshift_target", typ: u(undefined, r("RedshiftTarget")) },
        { json: "retry_policy", js: "retry_policy", typ: u(undefined, r("RetryPolicy")) },
        { json: "sagemaker_pipeline_target", js: "sagemaker_pipeline_target", typ: u(undefined, r("SagemakerPipelineTarget")) },
        { json: "sqs_target", js: "sqs_target", typ: u(undefined, r("SqsTarget")) },
        { json: "target_id", js: "target_id", typ: u(undefined, "") },
        { json: "job_attempts", js: "job_attempts", typ: u(undefined, "") },
        { json: "base", js: "base", typ: u(undefined, "") },
        { json: "capacity_provider_strategy", js: "capacity_provider_strategy", typ: u(undefined, r("CapacityProviderStrategy")) },
        { json: "network_configuration", js: "network_configuration", typ: u(undefined, r("NetworkConfiguration")) },
        { json: "ordered_placement_strategy", js: "ordered_placement_strategy", typ: u(undefined, r("PlacementStrategy")) },
        { json: "placement_constraint", js: "placement_constraint", typ: u(undefined, r("PlacementConstraint")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "query_string_parameters", js: "query_string_parameters", typ: u(undefined, "") },
        { json: "partition_key_path", js: "partition_key_path", typ: u(undefined, "") },
        { json: "assign_public_ip", js: "assign_public_ip", typ: u(undefined, "") },
        { json: "field", js: "field", typ: u(undefined, "") },
        { json: "expression", js: "expression", typ: u(undefined, "") },
        { json: "with_event", js: "with_event", typ: u(undefined, "") },
        { json: "maximum_retry_attempts", js: "maximum_retry_attempts", typ: u(undefined, "") },
        { json: "message_group_id", js: "message_group_id", typ: u(undefined, "") },
    ], false),
    "BatchTarget": o([
        { json: "job_definition", js: "job_definition", typ: "" },
        { json: "job_name", js: "job_name", typ: "" },
        { json: "array_size", js: "array_size", typ: "" },
        { json: "job_attempts", js: "job_attempts", typ: "" },
    ], false),
    "EcsTarget": o([
        { json: "task_definition_arn", js: "task_definition_arn", typ: "" },
        { json: "capacity_provider_strategy", js: "capacity_provider_strategy", typ: "" },
        { json: "enable_ecs_managed_tags", js: "enable_ecs_managed_tags", typ: "" },
        { json: "enable_execute_command", js: "enable_execute_command", typ: "" },
        { json: "group", js: "group", typ: "" },
        { json: "launch_type", js: "launch_type", typ: "" },
        { json: "network_configuration", js: "network_configuration", typ: "" },
        { json: "ordered_placement_strategy", js: "ordered_placement_strategy", typ: "" },
        { json: "placement_constraint", js: "placement_constraint", typ: "" },
        { json: "platform_version", js: "platform_version", typ: "" },
        { json: "propagate_tags", js: "propagate_tags", typ: "" },
        { json: "task_count", js: "task_count", typ: "" },
        { json: "tags", js: "tags", typ: "" },
    ], false),
    "HTTPTarget": o([
        { json: "header_parameters", js: "header_parameters", typ: "" },
        { json: "query_string_parameters", js: "query_string_parameters", typ: "" },
    ], false),
    "InputTransformer": o([
        { json: "input_template", js: "input_template", typ: "" },
    ], false),
    "KinesisTarget": o([
        { json: "partition_key_path", js: "partition_key_path", typ: "" },
    ], false),
    "RedshiftTarget": o([
        { json: "database", js: "database", typ: "" },
        { json: "db_user", js: "db_user", typ: "" },
        { json: "secrets_manager_arn", js: "secrets_manager_arn", typ: "" },
        { json: "sql", js: "sql", typ: "" },
        { json: "statement_name", js: "statement_name", typ: "" },
        { json: "with_event", js: "with_event", typ: "" },
    ], false),
    "RetryPolicy": o([
        { json: "maximum_event_age_in_seconds", js: "maximum_event_age_in_seconds", typ: "" },
        { json: "maximum_retry_attempts", js: "maximum_retry_attempts", typ: "" },
    ], false),
    "RunCommandTargets": o([
        { json: "key", js: "key", typ: "" },
        { json: "values", js: "values", typ: "" },
    ], false),
    "SagemakerPipelineTarget": o([
        { json: "pipeline_parameter_list", js: "pipeline_parameter_list", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: "" },
    ], false),
    "SqsTarget": o([
        { json: "message_group_id", js: "message_group_id", typ: "" },
    ], false),
    "CloudwatchLogDataProtectionPolicy": o([
        { json: "log_group_name", js: "log_group_name", typ: "" },
        { json: "policy_document", js: "policy_document", typ: "" },
    ], false),
    "CloudwatchLogDestination": o([
        { json: "name", js: "name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "target_arn", js: "target_arn", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudwatchLogDestinationPolicy": o([
        { json: "destination_name", js: "destination_name", typ: "" },
        { json: "access_policy", js: "access_policy", typ: "" },
        { json: "force_update", js: "force_update", typ: u(undefined, "") },
    ], false),
    "ResourceCloudwatchLogGroup": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "skip_destroy", js: "skip_destroy", typ: u(undefined, "") },
        { json: "retention_in_days", js: "retention_in_days", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudwatchLogMetricFilter": o([
        { json: "name", js: "name", typ: "" },
        { json: "pattern", js: "pattern", typ: "" },
        { json: "log_group_name", js: "log_group_name", typ: "" },
        { json: "metric_transformation", js: "metric_transformation", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "default_value", js: "default_value", typ: u(undefined, "") },
        { json: "dimensions", js: "dimensions", typ: u(undefined, "") },
        { json: "unit", js: "unit", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CloudwatchLogResourcePolicy": o([
        { json: "policy_document", js: "policy_document", typ: "" },
        { json: "policy_name", js: "policy_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CloudwatchLogStream": o([
        { json: "name", js: "name", typ: "" },
        { json: "log_group_name", js: "log_group_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "CloudwatchLogSubscriptionFilter": o([
        { json: "name", js: "name", typ: "" },
        { json: "destination_arn", js: "destination_arn", typ: "" },
        { json: "filter_pattern", js: "filter_pattern", typ: "" },
        { json: "log_group_name", js: "log_group_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "distribution", js: "distribution", typ: u(undefined, "") },
    ], false),
    "CloudwatchMetricAlarm": o([
        { json: "alarm_name", js: "alarm_name", typ: "" },
        { json: "comparison_operator", js: "comparison_operator", typ: "" },
        { json: "evaluation_periods", js: "evaluation_periods", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "metric_name", js: "metric_name", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "period", js: "period", typ: "" },
        { json: "stat", js: "stat", typ: "" },
        { json: "statistic", js: "statistic", typ: u(undefined, "") },
        { json: "threshold", js: "threshold", typ: u(undefined, "") },
        { json: "threshold_metric_id", js: "threshold_metric_id", typ: u(undefined, "") },
        { json: "actions_enabled", js: "actions_enabled", typ: u(undefined, "") },
        { json: "alarm_actions", js: "alarm_actions", typ: u(undefined, "") },
        { json: "alarm_description", js: "alarm_description", typ: u(undefined, "") },
        { json: "datapoints_to_alarm", js: "datapoints_to_alarm", typ: u(undefined, "") },
        { json: "dimensions", js: "dimensions", typ: u(undefined, "") },
        { json: "insufficient_data_actions", js: "insufficient_data_actions", typ: u(undefined, "") },
        { json: "ok_actions", js: "ok_actions", typ: u(undefined, "") },
        { json: "unit", js: "unit", typ: u(undefined, "") },
        { json: "extended_statistic", js: "extended_statistic", typ: u(undefined, "") },
        { json: "treat_missing_data", js: "treat_missing_data", typ: u(undefined, "") },
        { json: "evaluate_low_sample_count_percentiles", js: "evaluate_low_sample_count_percentiles", typ: u(undefined, "") },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "expression", js: "expression", typ: u(undefined, "") },
        { json: "label", js: "label", typ: u(undefined, "") },
        { json: "metric", js: "metric", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudwatchMetricStream": o([
        { json: "firehose_arn", js: "firehose_arn", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "output_format", js: "output_format", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "additional_statistics", js: "additional_statistics", typ: "" },
        { json: "include_metric", js: "include_metric", typ: "" },
        { json: "metric_name", js: "metric_name", typ: "" },
        { json: "exclude_filter", js: "exclude_filter", typ: u(undefined, "") },
        { json: "include_filter", js: "include_filter", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "statistics_configuration", js: "statistics_configuration", typ: u(undefined, "") },
        { json: "metric_names", js: "metric_names", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "last_update_date", js: "last_update_date", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CloudwatchQueryDefinition": o([
        { json: "name", js: "name", typ: "" },
        { json: "query_string", js: "query_string", typ: "" },
        { json: "log_group_names", js: "log_group_names", typ: u(undefined, "") },
        { json: "query_definition_id", js: "query_definition_id", typ: u(undefined, "") },
    ], false),
    "CodeartifactDomain": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "encryption_key", js: "encryption_key", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "repository_count", js: "repository_count", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "asset_size_bytes", js: "asset_size_bytes", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CodeartifactPermissionsPolicy": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "policy_document", js: "policy_document", typ: "" },
        { json: "domain_owner", js: "domain_owner", typ: u(undefined, "") },
        { json: "policy_revision", js: "policy_revision", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
        { json: "repository", js: "repository", typ: u(undefined, "") },
    ], false),
    "CodeartifactRepository": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "repository", js: "repository", typ: "" },
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "external_connection_name", js: "external_connection_name", typ: "" },
        { json: "domain_owner", js: "domain_owner", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "upstream", js: "upstream", typ: u(undefined, "") },
        { json: "external_connections", js: "external_connections", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "administrator_account", js: "administrator_account", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CodebuildProject": o([
        { json: "artifacts", js: "artifacts", typ: r("Artifacts") },
        { json: "environment", js: "environment", typ: r("CodebuildProjectEnvironment") },
        { json: "source", js: "source", typ: r("SecondarySources") },
        { json: "credential_provider", js: "credential_provider", typ: "" },
        { json: "source_version", js: "source_version", typ: "" },
        { json: "badge_enabled", js: "badge_enabled", typ: u(undefined, "") },
        { json: "build_batch_config", js: "build_batch_config", typ: u(undefined, r("BuildBatchConfig")) },
        { json: "build_timeout", js: "build_timeout", typ: u(undefined, "") },
        { json: "cache", js: "cache", typ: u(undefined, r("Cache")) },
        { json: "concurrent_build_limit", js: "concurrent_build_limit", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "file_system_locations", js: "file_system_locations", typ: u(undefined, r("FileSystemLocations")) },
        { json: "encryption_key", js: "encryption_key", typ: u(undefined, "") },
        { json: "logs_config", js: "logs_config", typ: u(undefined, r("LogsConfig")) },
        { json: "project_visibility", js: "project_visibility", typ: u(undefined, "") },
        { json: "resource_access_role", js: "resource_access_role", typ: u(undefined, "") },
        { json: "queued_timeout", js: "queued_timeout", typ: u(undefined, "") },
        { json: "secondary_artifacts", js: "secondary_artifacts", typ: u(undefined, r("Artifacts")) },
        { json: "secondary_sources", js: "secondary_sources", typ: u(undefined, r("SecondarySources")) },
        { json: "secondary_source_version", js: "secondary_source_version", typ: u(undefined, r("SecondarySourceVersion")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_config", js: "vpc_config", typ: u(undefined, r("VpcConfig")) },
        { json: "maximum_builds_allowed", js: "maximum_builds_allowed", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "target_url", js: "target_url", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "badge_url", js: "badge_url", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "public_project_alias", js: "public_project_alias", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Artifacts": o([
        { json: "type", js: "type", typ: "" },
        { json: "artifact_identifier", js: "artifact_identifier", typ: u(undefined, "") },
        { json: "bucket_owner_access", js: "bucket_owner_access", typ: u(undefined, "") },
        { json: "encryption_disabled", js: "encryption_disabled", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "namespace_type", js: "namespace_type", typ: u(undefined, "") },
        { json: "packaging", js: "packaging", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
    ], false),
    "BuildBatchConfig": o([
        { json: "combine_artifacts", js: "combine_artifacts", typ: "" },
        { json: "restrictions", js: "restrictions", typ: "" },
        { json: "service_role", js: "service_role", typ: "" },
        { json: "timeout_in_mins", js: "timeout_in_mins", typ: "" },
        { json: "compute_types_allowed", js: "compute_types_allowed", typ: "" },
        { json: "maximum_builds_allowed", js: "maximum_builds_allowed", typ: "" },
    ], false),
    "Cache": o([
        { json: "location", js: "location", typ: "" },
        { json: "modes", js: "modes", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "CodebuildProjectEnvironment": o([
        { json: "compute_type", js: "compute_type", typ: "" },
        { json: "image", js: "image", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "credential", js: "credential", typ: "" },
        { json: "credential_provider", js: "credential_provider", typ: "" },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
        { json: "environment_variable", js: "environment_variable", typ: u(undefined, "") },
        { json: "image_pull_credentials_type", js: "image_pull_credentials_type", typ: u(undefined, "") },
        { json: "privileged_mode", js: "privileged_mode", typ: u(undefined, "") },
        { json: "registry_credential", js: "registry_credential", typ: u(undefined, "") },
    ], false),
    "FileSystemLocations": o([
        { json: "identifier", js: "identifier", typ: "" },
        { json: "location", js: "location", typ: "" },
        { json: "mount_options", js: "mount_options", typ: "" },
        { json: "mount_point", js: "mount_point", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "LogsConfig": o([
        { json: "cloudwatch_logs", js: "cloudwatch_logs", typ: "" },
        { json: "s3_logs", js: "s3_logs", typ: "" },
        { json: "group_name", js: "group_name", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "stream_name", js: "stream_name", typ: "" },
        { json: "encryption_disabled", js: "encryption_disabled", typ: "" },
        { json: "location", js: "location", typ: "" },
        { json: "bucket_owner_access", js: "bucket_owner_access", typ: "" },
    ], false),
    "SecondarySourceVersion": o([
        { json: "source_identifier", js: "source_identifier", typ: "" },
        { json: "source_version", js: "source_version", typ: "" },
    ], false),
    "SecondarySources": o([
        { json: "buildspec", js: "buildspec", typ: u(undefined, "") },
        { json: "git_clone_depth", js: "git_clone_depth", typ: u(undefined, "") },
        { json: "git_submodules_config", js: "git_submodules_config", typ: u(undefined, "") },
        { json: "insecure_ssl", js: "insecure_ssl", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "report_build_status", js: "report_build_status", typ: u(undefined, "") },
        { json: "build_status_config", js: "build_status_config", typ: u(undefined, "") },
        { json: "source_identifier", js: "source_identifier", typ: u(undefined, "") },
        { json: "type", js: "type", typ: "" },
        { json: "fetch_submodules", js: "fetch_submodules", typ: "" },
        { json: "context", js: "context", typ: u(undefined, "") },
        { json: "target_url", js: "target_url", typ: u(undefined, "") },
    ], false),
    "VpcConfig": o([
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnets", js: "subnets", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
    ], false),
    "CodebuildReportGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "export_config", js: "export_config", typ: "" },
        { json: "s3_destination", js: "s3_destination", typ: "" },
        { json: "encryption_key", js: "encryption_key", typ: "" },
        { json: "delete_reports", js: "delete_reports", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "packaging", js: "packaging", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created", js: "created", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CodebuildSourceCredential": o([
        { json: "auth_type", js: "auth_type", typ: "" },
        { json: "server_type", js: "server_type", typ: "" },
        { json: "token", js: "token", typ: "" },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "CodebuildWebhook": o([
        { json: "project_name", js: "project_name", typ: "" },
        { json: "filter", js: "filter", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "pattern", js: "pattern", typ: "" },
        { json: "build_type", js: "build_type", typ: u(undefined, "") },
        { json: "branch_filter", js: "branch_filter", typ: u(undefined, "") },
        { json: "filter_group", js: "filter_group", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "payload_url", js: "payload_url", typ: u(undefined, "") },
        { json: "secret", js: "secret", typ: u(undefined, "") },
    ], false),
    "ResourceCodecatalystDevEnvironment": o([
        { json: "space_name", js: "space_name", typ: "" },
        { json: "project_name", js: "project_name", typ: "" },
        { json: "persistent_storage", js: "persistent_storage", typ: "" },
        { json: "ides", js: "ides", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "runtime", js: "runtime", typ: "" },
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "size", js: "size", typ: "" },
        { json: "inactivity_timeout_minutes", js: "inactivity_timeout_minutes", typ: u(undefined, "") },
        { json: "repositories", js: "repositories", typ: u(undefined, "") },
        { json: "branch_name", js: "branch_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Codecatalyst": o([
        { json: "space_name", js: "space_name", typ: "" },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "project_name", js: "project_name", typ: u(undefined, "") },
    ], false),
    "CodecommitApprovalRuleTemplateAssociation": o([
        { json: "approval_rule_template_name", js: "approval_rule_template_name", typ: "" },
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceCodecommitRepository": o([
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "default_branch", js: "default_branch", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "repository_id", js: "repository_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "clone_url_http", js: "clone_url_http", typ: u(undefined, "") },
        { json: "clone_url_ssh", js: "clone_url_ssh", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CodecommitTrigger": o([
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "destination_arn", js: "destination_arn", typ: "" },
        { json: "events", js: "events", typ: "" },
        { json: "custom_data", js: "custom_data", typ: u(undefined, "") },
        { json: "branches", js: "branches", typ: u(undefined, "") },
        { json: "configuration_id", js: "configuration_id", typ: u(undefined, "") },
    ], false),
    "CodedeployApp": o([
        { json: "name", js: "name", typ: "" },
        { json: "compute_platform", js: "compute_platform", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "application_id", js: "application_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "github_account_name", js: "github_account_name", typ: u(undefined, "") },
        { json: "linked_to_github", js: "linked_to_github", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CodedeployDeploymentConfig": o([
        { json: "deployment_config_name", js: "deployment_config_name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "compute_platform", js: "compute_platform", typ: u(undefined, "") },
        { json: "minimum_healthy_hosts", js: "minimum_healthy_hosts", typ: u(undefined, "") },
        { json: "traffic_routing_config", js: "traffic_routing_config", typ: u(undefined, "") },
        { json: "time_based_canary", js: "time_based_canary", typ: u(undefined, "") },
        { json: "time_based_linear", js: "time_based_linear", typ: u(undefined, "") },
        { json: "interval", js: "interval", typ: u(undefined, "") },
        { json: "percentage", js: "percentage", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "deployment_config_id", js: "deployment_config_id", typ: u(undefined, "") },
    ], false),
    "CodedeployDeploymentGroup": o([
        { json: "app_name", js: "app_name", typ: "" },
        { json: "deployment_group_name", js: "deployment_group_name", typ: "" },
        { json: "service_role_arn", js: "service_role_arn", typ: "" },
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "prod_traffic_route", js: "prod_traffic_route", typ: "" },
        { json: "target_group", js: "target_group", typ: "" },
        { json: "listener_arns", js: "listener_arns", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "trigger_events", js: "trigger_events", typ: "" },
        { json: "trigger_name", js: "trigger_name", typ: "" },
        { json: "trigger_target_arn", js: "trigger_target_arn", typ: "" },
        { json: "alarm_configuration", js: "alarm_configuration", typ: u(undefined, "") },
        { json: "auto_rollback_configuration", js: "auto_rollback_configuration", typ: u(undefined, "") },
        { json: "autoscaling_groups", js: "autoscaling_groups", typ: u(undefined, "") },
        { json: "blue_green_deployment_config", js: "blue_green_deployment_config", typ: u(undefined, "") },
        { json: "deployment_config_name", js: "deployment_config_name", typ: u(undefined, "") },
        { json: "deployment_style", js: "deployment_style", typ: u(undefined, "") },
        { json: "ec2_tag_filter", js: "ec2_tag_filter", typ: u(undefined, "") },
        { json: "ec2_tag_set", js: "ec2_tag_set", typ: u(undefined, "") },
        { json: "ecs_service", js: "ecs_service", typ: u(undefined, "") },
        { json: "load_balancer_info", js: "load_balancer_info", typ: u(undefined, "") },
        { json: "on_premises_instance_tag_filter", js: "on_premises_instance_tag_filter", typ: u(undefined, "") },
        { json: "trigger_configuration", js: "trigger_configuration", typ: u(undefined, "") },
        { json: "alarms", js: "alarms", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "events", js: "events", typ: u(undefined, "") },
        { json: "deployment_ready_option", js: "deployment_ready_option", typ: u(undefined, "") },
        { json: "green_fleet_provisioning_option", js: "green_fleet_provisioning_option", typ: u(undefined, "") },
        { json: "terminate_blue_instances_on_deployment_success", js: "terminate_blue_instances_on_deployment_success", typ: u(undefined, "") },
        { json: "wait_time_in_minutes", js: "wait_time_in_minutes", typ: u(undefined, "") },
        { json: "termination_wait_time_in_minutes", js: "termination_wait_time_in_minutes", typ: u(undefined, "") },
        { json: "deployment_option", js: "deployment_option", typ: u(undefined, "") },
        { json: "deployment_type", js: "deployment_type", typ: u(undefined, "") },
        { json: "key", js: "key", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "elb_info", js: "elb_info", typ: u(undefined, "") },
        { json: "target_group_info", js: "target_group_info", typ: u(undefined, "") },
        { json: "target_group_pair_info", js: "target_group_pair_info", typ: u(undefined, "") },
        { json: "test_traffic_route", js: "test_traffic_route", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "compute_platform", js: "compute_platform", typ: u(undefined, "") },
        { json: "deployment_group_id", js: "deployment_group_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CodegurureviewerRepositoryAssociation": o([
        { json: "repository", js: "repository", typ: "" },
        { json: "kms_key_details", js: "kms_key_details", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
        { json: "connection_arn", js: "connection_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "provider_type", js: "provider_type", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "state_reason", js: "state_reason", typ: u(undefined, "") },
    ], false),
    "Codepipeline": o([
        { json: "name", js: "name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "location", js: "location", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "category", js: "category", typ: "" },
        { json: "owner", js: "owner", typ: "" },
        { json: "provider", js: "provider", typ: "" },
        { json: "version", js: "version", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "encryption_key", js: "encryption_key", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "configuration", js: "configuration", typ: u(undefined, "") },
        { json: "input_artifacts", js: "input_artifacts", typ: u(undefined, "") },
        { json: "output_artifacts", js: "output_artifacts", typ: u(undefined, "") },
        { json: "run_order", js: "run_order", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CodepipelineCustomActionType": o([
        { json: "category", js: "category", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "required", js: "required", typ: "" },
        { json: "input_artifact_details", js: "input_artifact_details", typ: "" },
        { json: "maximum_count", js: "maximum_count", typ: "" },
        { json: "minimum_count", js: "minimum_count", typ: "" },
        { json: "output_artifact_details", js: "output_artifact_details", typ: "" },
        { json: "provider_name", js: "provider_name", typ: "" },
        { json: "version", js: "version", typ: "" },
        { json: "configuration_property", js: "configuration_property", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "queryable", js: "queryable", typ: u(undefined, "") },
        { json: "settings", js: "settings", typ: u(undefined, "") },
        { json: "entity_url_template", js: "entity_url_template", typ: u(undefined, "") },
        { json: "execution_url_template", js: "execution_url_template", typ: u(undefined, "") },
        { json: "revision_url_template", js: "revision_url_template", typ: u(undefined, "") },
        { json: "third_party_configuration_url", js: "third_party_configuration_url", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CodepipelineWebhook": o([
        { json: "name", js: "name", typ: "" },
        { json: "authentication", js: "authentication", typ: "" },
        { json: "target_action", js: "target_action", typ: "" },
        { json: "target_pipeline", js: "target_pipeline", typ: "" },
        { json: "json_path", js: "json_path", typ: "" },
        { json: "match_equals", js: "match_equals", typ: "" },
        { json: "authentication_configuration", js: "authentication_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "secret_token", js: "secret_token", typ: u(undefined, "") },
        { json: "allowed_ip_range", js: "allowed_ip_range", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
    ], false),
    "CodestarconnectionsHost": o([
        { json: "name", js: "name", typ: "" },
        { json: "provider_endpoint", js: "provider_endpoint", typ: "" },
        { json: "provider_type", js: "provider_type", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "vpc_configuration", js: "vpc_configuration", typ: u(undefined, "") },
        { json: "tls_certificate", js: "tls_certificate", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "CodestarnotificationsNotificationRule": o([
        { json: "detail_type", js: "detail_type", typ: "" },
        { json: "event_type_ids", js: "event_type_ids", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "resource", js: "resource", typ: "" },
        { json: "address", js: "address", typ: "" },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "target", js: "target", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceCognitoIdentityPool": o([
        { json: "identity_pool_name", js: "identity_pool_name", typ: "" },
        { json: "allow_unauthenticated_identities", js: "allow_unauthenticated_identities", typ: "" },
        { json: "allow_classic_flow", js: "allow_classic_flow", typ: u(undefined, "") },
        { json: "developer_provider_name", js: "developer_provider_name", typ: u(undefined, "") },
        { json: "cognito_identity_providers", js: "cognito_identity_providers", typ: u(undefined, "") },
        { json: "openid_connect_provider_arns", js: "openid_connect_provider_arns", typ: u(undefined, "") },
        { json: "saml_provider_arns", js: "saml_provider_arns", typ: u(undefined, "") },
        { json: "supported_login_providers", js: "supported_login_providers", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "client_id", js: "client_id", typ: u(undefined, "") },
        { json: "provider_name", js: "provider_name", typ: u(undefined, "") },
        { json: "server_side_token_check", js: "server_side_token_check", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CognitoIdentityPoolProviderPrincipalTag": o([
        { json: "identity_pool_id", js: "identity_pool_id", typ: "" },
        { json: "identity_provider_name", js: "identity_provider_name", typ: "" },
    ], false),
    "CognitoIdentityPoolRolesAttachment": o([
        { json: "identity_pool_id", js: "identity_pool_id", typ: "" },
        { json: "roles", js: "roles", typ: "" },
        { json: "identity_provider", js: "identity_provider", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "claim", js: "claim", typ: "" },
        { json: "match_type", js: "match_type", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "role_mapping", js: "role_mapping", typ: u(undefined, "") },
        { json: "ambiguous_role_resolution", js: "ambiguous_role_resolution", typ: u(undefined, "") },
        { json: "mapping_rule", js: "mapping_rule", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CognitoIdentityProvider": o([
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "provider_name", js: "provider_name", typ: "" },
        { json: "provider_type", js: "provider_type", typ: "" },
        { json: "attribute_mapping", js: "attribute_mapping", typ: u(undefined, "") },
        { json: "idp_identifiers", js: "idp_identifiers", typ: u(undefined, "") },
        { json: "provider_details", js: "provider_details", typ: u(undefined, "") },
    ], false),
    "CognitoManagedUserPoolClient": o([
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "name_pattern", js: "name_pattern", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "access_token_validity", js: "access_token_validity", typ: u(undefined, "") },
        { json: "allowed_oauth_flows_user_pool_client", js: "allowed_oauth_flows_user_pool_client", typ: u(undefined, "") },
        { json: "allowed_oauth_flows", js: "allowed_oauth_flows", typ: u(undefined, "") },
        { json: "allowed_oauth_scopes", js: "allowed_oauth_scopes", typ: u(undefined, "") },
        { json: "analytics_configuration", js: "analytics_configuration", typ: u(undefined, r("AnalyticsConfiguration")) },
        { json: "auth_session_validity", js: "auth_session_validity", typ: u(undefined, "") },
        { json: "callback_urls", js: "callback_urls", typ: u(undefined, "") },
        { json: "default_redirect_uri", js: "default_redirect_uri", typ: u(undefined, "") },
        { json: "enable_token_revocation", js: "enable_token_revocation", typ: u(undefined, "") },
        { json: "enable_propagate_additional_user_context_data", js: "enable_propagate_additional_user_context_data", typ: u(undefined, "") },
        { json: "explicit_auth_flows", js: "explicit_auth_flows", typ: u(undefined, "") },
        { json: "generate_secret", js: "generate_secret", typ: u(undefined, "") },
        { json: "id_token_validity", js: "id_token_validity", typ: u(undefined, "") },
        { json: "logout_urls", js: "logout_urls", typ: u(undefined, "") },
        { json: "prevent_user_existence_errors", js: "prevent_user_existence_errors", typ: u(undefined, "") },
        { json: "read_attributes", js: "read_attributes", typ: u(undefined, "") },
        { json: "refresh_token_validity", js: "refresh_token_validity", typ: u(undefined, "") },
        { json: "supported_identity_providers", js: "supported_identity_providers", typ: u(undefined, "") },
        { json: "token_validity_units", js: "token_validity_units", typ: u(undefined, r("TokenValidityUnits")) },
        { json: "write_attributes", js: "write_attributes", typ: u(undefined, "") },
        { json: "user_data_shared", js: "user_data_shared", typ: u(undefined, "") },
        { json: "client_secret", js: "client_secret", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
    ], false),
    "CognitoResourceServer": o([
        { json: "identifier", js: "identifier", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "scope_name", js: "scope_name", typ: "" },
        { json: "scope_description", js: "scope_description", typ: "" },
        { json: "scope", js: "scope", typ: u(undefined, "") },
        { json: "scope_identifiers", js: "scope_identifiers", typ: u(undefined, "") },
    ], false),
    "CognitoRiskConfiguration": o([
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "notify", js: "notify", typ: "" },
        { json: "client_id", js: "client_id", typ: u(undefined, "") },
        { json: "account_takeover_risk_configuration", js: "account_takeover_risk_configuration", typ: u(undefined, r("AccountTakeoverRiskConfiguration")) },
        { json: "compromised_credentials_risk_configuration", js: "compromised_credentials_risk_configuration", typ: u(undefined, r("CompromisedCredentialsRiskConfiguration")) },
        { json: "risk_exception_configuration", js: "risk_exception_configuration", typ: u(undefined, r("RiskExceptionConfiguration")) },
        { json: "event_action", js: "event_action", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AccountTakeoverRiskConfiguration": o([
        { json: "notify_configuration", js: "notify_configuration", typ: "" },
        { json: "actions", js: "actions", typ: "" },
        { json: "block_email", js: "block_email", typ: "" },
        { json: "mfa_email", js: "mfa_email", typ: "" },
        { json: "no_action_email", js: "no_action_email", typ: "" },
        { json: "from", js: "from", typ: "" },
        { json: "reply_to", js: "reply_to", typ: "" },
        { json: "source_arn", js: "source_arn", typ: "" },
        { json: "html_body", js: "html_body", typ: "" },
        { json: "subject", js: "subject", typ: "" },
        { json: "text_body", js: "text_body", typ: "" },
        { json: "high_action", js: "high_action", typ: "" },
        { json: "low_action", js: "low_action", typ: "" },
        { json: "medium_action", js: "medium_action", typ: "" },
        { json: "event_action", js: "event_action", typ: "" },
        { json: "notify", js: "notify", typ: "" },
    ], false),
    "CompromisedCredentialsRiskConfiguration": o([
        { json: "event_filter", js: "event_filter", typ: "" },
        { json: "actions", js: "actions", typ: "" },
        { json: "event_action", js: "event_action", typ: "" },
    ], false),
    "RiskExceptionConfiguration": o([
        { json: "blocked_ip_range_list", js: "blocked_ip_range_list", typ: "" },
        { json: "skipped_ip_range_list", js: "skipped_ip_range_list", typ: "" },
    ], false),
    "CognitoUser": o([
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "attributes", js: "attributes", typ: u(undefined, "") },
        { json: "client_metadata", js: "client_metadata", typ: u(undefined, "") },
        { json: "desired_delivery_mediums", js: "desired_delivery_mediums", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "force_alias_creation", js: "force_alias_creation", typ: u(undefined, "") },
        { json: "message_action", js: "message_action", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "temporary_password", js: "temporary_password", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "sub", js: "sub", typ: u(undefined, "") },
        { json: "mfa_preference", js: "mfa_preference", typ: u(undefined, "") },
    ], false),
    "CognitoUserGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "precedence", js: "precedence", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
    ], false),
    "CognitoUserInGroup": o([
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "group_name", js: "group_name", typ: "" },
        { json: "username", js: "username", typ: "" },
    ], false),
    "CognitoUserPool": o([
        { json: "lambda_version", js: "lambda_version", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "attributes_require_verification_before_update", js: "attributes_require_verification_before_update", typ: "" },
        { json: "advanced_security_mode", js: "advanced_security_mode", typ: "" },
        { json: "case_sensitive", js: "case_sensitive", typ: "" },
        { json: "account_recovery_setting", js: "account_recovery_setting", typ: u(undefined, "") },
        { json: "admin_create_user_config", js: "admin_create_user_config", typ: u(undefined, r("AdminCreateUserConfig")) },
        { json: "alias_attributes", js: "alias_attributes", typ: u(undefined, "") },
        { json: "auto_verified_attributes", js: "auto_verified_attributes", typ: u(undefined, "") },
        { json: "deletion_protection", js: "deletion_protection", typ: u(undefined, "") },
        { json: "device_configuration", js: "device_configuration", typ: u(undefined, r("DeviceConfiguration")) },
        { json: "email_configuration", js: "email_configuration", typ: u(undefined, r("EmailConfiguration")) },
        { json: "email_verification_message", js: "email_verification_message", typ: u(undefined, "") },
        { json: "email_verification_subject", js: "email_verification_subject", typ: u(undefined, "") },
        { json: "lambda_config", js: "lambda_config", typ: u(undefined, r("LambdaConfig")) },
        { json: "mfa_configuration", js: "mfa_configuration", typ: u(undefined, "") },
        { json: "password_policy", js: "password_policy", typ: u(undefined, r("PasswordPolicy")) },
        { json: "schema", js: "schema", typ: u(undefined, r("CognitoUserPoolSchema")) },
        { json: "sms_authentication_message", js: "sms_authentication_message", typ: u(undefined, "") },
        { json: "sms_configuration", js: "sms_configuration", typ: u(undefined, r("SMSConfiguration")) },
        { json: "sms_verification_message", js: "sms_verification_message", typ: u(undefined, "") },
        { json: "software_token_mfa_configuration", js: "software_token_mfa_configuration", typ: u(undefined, r("SoftwareTokenMfaConfigurationClass")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "user_attribute_update_settings", js: "user_attribute_update_settings", typ: u(undefined, r("UserAttributeUpdateSettings")) },
        { json: "user_pool_add_ons", js: "user_pool_add_ons", typ: u(undefined, r("UserPoolAddOns")) },
        { json: "username_attributes", js: "username_attributes", typ: u(undefined, "") },
        { json: "username_configuration", js: "username_configuration", typ: u(undefined, r("UsernameConfiguration")) },
        { json: "verification_message_template", js: "verification_message_template", typ: u(undefined, r("VerificationMessageTemplate")) },
        { json: "device_only_remembered_on_user_prompt", js: "device_only_remembered_on_user_prompt", typ: u(undefined, "") },
        { json: "source_arn", js: "source_arn", typ: u(undefined, "") },
        { json: "min_length", js: "min_length", typ: u(undefined, "") },
        { json: "sns_region", js: "sns_region", typ: u(undefined, "") },
    ], false),
    "AdminCreateUserConfig": o([
        { json: "allow_admin_create_user_only", js: "allow_admin_create_user_only", typ: "" },
        { json: "invite_message_template", js: "invite_message_template", typ: "" },
        { json: "email_message", js: "email_message", typ: "" },
        { json: "email_subject", js: "email_subject", typ: "" },
        { json: "sms_message", js: "sms_message", typ: "" },
    ], false),
    "DeviceConfiguration": o([
        { json: "challenge_required_on_new_device", js: "challenge_required_on_new_device", typ: "" },
        { json: "device_only_remembered_on_user_prompt", js: "device_only_remembered_on_user_prompt", typ: "" },
    ], false),
    "EmailConfiguration": o([
        { json: "configuration_set", js: "configuration_set", typ: "" },
        { json: "email_sending_account", js: "email_sending_account", typ: "" },
        { json: "from_email_address", js: "from_email_address", typ: "" },
        { json: "reply_to_email_address", js: "reply_to_email_address", typ: "" },
        { json: "source_arn", js: "source_arn", typ: "" },
    ], false),
    "LambdaConfig": o([
        { json: "create_auth_challenge", js: "create_auth_challenge", typ: "" },
        { json: "custom_message", js: "custom_message", typ: "" },
        { json: "define_auth_challenge", js: "define_auth_challenge", typ: "" },
        { json: "post_authentication", js: "post_authentication", typ: "" },
        { json: "post_confirmation", js: "post_confirmation", typ: "" },
        { json: "pre_authentication", js: "pre_authentication", typ: "" },
        { json: "pre_sign_up", js: "pre_sign_up", typ: "" },
        { json: "pre_token_generation", js: "pre_token_generation", typ: "" },
        { json: "user_migration", js: "user_migration", typ: "" },
        { json: "verify_auth_challenge_response", js: "verify_auth_challenge_response", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "custom_email_sender", js: "custom_email_sender", typ: "" },
        { json: "custom_sms_sender", js: "custom_sms_sender", typ: "" },
        { json: "lambda_arn", js: "lambda_arn", typ: "" },
        { json: "lambda_version", js: "lambda_version", typ: "" },
    ], false),
    "PasswordPolicy": o([
        { json: "minimum_length", js: "minimum_length", typ: "" },
        { json: "require_lowercase", js: "require_lowercase", typ: "" },
        { json: "require_numbers", js: "require_numbers", typ: "" },
        { json: "require_symbols", js: "require_symbols", typ: "" },
        { json: "require_uppercase", js: "require_uppercase", typ: "" },
        { json: "temporary_password_validity_days", js: "temporary_password_validity_days", typ: "" },
    ], false),
    "CognitoUserPoolSchema": o([
        { json: "attribute_data_type", js: "attribute_data_type", typ: "" },
        { json: "developer_only_attribute", js: "developer_only_attribute", typ: "" },
        { json: "mutable", js: "mutable", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "number_attribute_constraints", js: "number_attribute_constraints", typ: "" },
        { json: "required", js: "required", typ: "" },
        { json: "string_attribute_constraints", js: "string_attribute_constraints", typ: "" },
        { json: "max_value", js: "max_value", typ: "" },
        { json: "min_value", js: "min_value", typ: "" },
        { json: "max_length", js: "max_length", typ: "" },
        { json: "min_length", js: "min_length", typ: "" },
    ], false),
    "SMSConfiguration": o([
        { json: "external_id", js: "external_id", typ: "" },
        { json: "sns_caller_arn", js: "sns_caller_arn", typ: "" },
        { json: "sns_region", js: "sns_region", typ: "" },
    ], false),
    "SoftwareTokenMfaConfigurationClass": o([
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
    ], false),
    "UserAttributeUpdateSettings": o([
        { json: "attributes_require_verification_before_update", js: "attributes_require_verification_before_update", typ: "" },
    ], false),
    "UserPoolAddOns": o([
        { json: "advanced_security_mode", js: "advanced_security_mode", typ: "" },
    ], false),
    "UsernameConfiguration": o([
        { json: "case_sensitive", js: "case_sensitive", typ: "" },
    ], false),
    "VerificationMessageTemplate": o([
        { json: "default_email_option", js: "default_email_option", typ: "" },
        { json: "email_message", js: "email_message", typ: "" },
        { json: "email_message_by_link", js: "email_message_by_link", typ: "" },
        { json: "email_subject", js: "email_subject", typ: "" },
        { json: "email_subject_by_link", js: "email_subject_by_link", typ: "" },
        { json: "sms_message", js: "sms_message", typ: "" },
        { json: "arn", js: "arn", typ: "" },
        { json: "creation_date", js: "creation_date", typ: "" },
        { json: "custom_domain", js: "custom_domain", typ: "" },
        { json: "domain", js: "domain", typ: "" },
        { json: "endpoint", js: "endpoint", typ: "" },
        { json: "estimated_number_of_users", js: "estimated_number_of_users", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "last_modified_date", js: "last_modified_date", typ: "" },
        { json: "tags_all", js: "tags_all", typ: "" },
    ], false),
    "CognitoUserPoolDomain": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "cloudfront_distribution", js: "cloudfront_distribution", typ: u(undefined, "") },
        { json: "cloudfront_distribution_arn", js: "cloudfront_distribution_arn", typ: u(undefined, "") },
        { json: "cloudfront_distribution_zone_id", js: "cloudfront_distribution_zone_id", typ: u(undefined, "") },
        { json: "s3_bucket", js: "s3_bucket", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "CognitoUserPoolUICustomization": o([
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "css", js: "css", typ: u(undefined, "") },
        { json: "image_file", js: "image_file", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "css_version", js: "css_version", typ: u(undefined, "") },
        { json: "image_url", js: "image_url", typ: u(undefined, "") },
        { json: "last_modified_date", js: "last_modified_date", typ: u(undefined, "") },
    ], false),
    "Comprehend": o([
        { json: "data_access_role_arn", js: "data_access_role_arn", typ: "" },
        { json: "input_data_config", js: "input_data_config", typ: "" },
        { json: "language_code", js: "language_code", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "attribute_names", js: "attribute_names", typ: "" },
        { json: "s3_uri", js: "s3_uri", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnets", js: "subnets", typ: "" },
        { json: "mode", js: "mode", typ: u(undefined, "") },
        { json: "model_kms_key_id", js: "model_kms_key_id", typ: u(undefined, "") },
        { json: "output_data_config", js: "output_data_config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version_name", js: "version_name", typ: u(undefined, "") },
        { json: "version_name_prefix", js: "version_name_prefix", typ: u(undefined, "") },
        { json: "volume_kms_key_id", js: "volume_kms_key_id", typ: u(undefined, "") },
        { json: "vpc_config", js: "vpc_config", typ: u(undefined, "") },
        { json: "augmented_manifests", js: "augmented_manifests", typ: u(undefined, "") },
        { json: "data_format", js: "data_format", typ: u(undefined, "") },
        { json: "test_s3uri", js: "test_s3uri", typ: u(undefined, "") },
        { json: "annotation_data_s3_uri", js: "annotation_data_s3_uri", typ: u(undefined, "") },
        { json: "document_type", js: "document_type", typ: u(undefined, "") },
        { json: "source_documents_s3_uri", js: "source_documents_s3_uri", typ: u(undefined, "") },
        { json: "split", js: "split", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "output_s3_uri", js: "output_s3_uri", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "entity_types", js: "entity_types", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "annotations", js: "annotations", typ: u(undefined, "") },
        { json: "documents", js: "documents", typ: u(undefined, "") },
        { json: "entity_list", js: "entity_list", typ: u(undefined, "") },
        { json: "input_format", js: "input_format", typ: u(undefined, "") },
    ], false),
    "ConfigAggregateAuthorization": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "region", js: "region", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ConfigConfigRule": o([
        { json: "name", js: "name", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "owner", js: "owner", typ: "" },
        { json: "policy_runtime", js: "policy_runtime", typ: "" },
        { json: "policy_text", js: "policy_text", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "input_parameters", js: "input_parameters", typ: u(undefined, "") },
        { json: "maximum_execution_frequency", js: "maximum_execution_frequency", typ: u(undefined, "") },
        { json: "scope", js: "scope", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "compliance_resource_id", js: "compliance_resource_id", typ: u(undefined, "") },
        { json: "compliance_resource_types", js: "compliance_resource_types", typ: u(undefined, "") },
        { json: "tag_key", js: "tag_key", typ: u(undefined, "") },
        { json: "tag_value", js: "tag_value", typ: u(undefined, "") },
        { json: "source_identifier", js: "source_identifier", typ: u(undefined, "") },
        { json: "source_detail", js: "source_detail", typ: u(undefined, "") },
        { json: "custom_policy_details", js: "custom_policy_details", typ: u(undefined, "") },
        { json: "event_source", js: "event_source", typ: u(undefined, "") },
        { json: "enable_debug_log_delivery", js: "enable_debug_log_delivery", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "rule_id", js: "rule_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ConfigConfigurationAggregator": o([
        { json: "name", js: "name", typ: "" },
        { json: "account_ids", js: "account_ids", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "account_aggregation_source", js: "account_aggregation_source", typ: u(undefined, "") },
        { json: "organization_aggregation_source", js: "organization_aggregation_source", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "all_regions", js: "all_regions", typ: u(undefined, "") },
        { json: "regions", js: "regions", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ConfigConfigurationRecorder": o([
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "recording_group", js: "recording_group", typ: u(undefined, "") },
        { json: "all_supported", js: "all_supported", typ: u(undefined, "") },
        { json: "exclusion_by_resource_types", js: "exclusion_by_resource_types", typ: u(undefined, "") },
        { json: "include_global_resource_types", js: "include_global_resource_types", typ: u(undefined, "") },
        { json: "recording_strategy", js: "recording_strategy", typ: u(undefined, "") },
        { json: "resource_types", js: "resource_types", typ: u(undefined, "") },
        { json: " use_only", js: " use_only", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ConfigConfigurationRecorderStatus": o([
        { json: "name", js: "name", typ: "" },
        { json: "is_enabled", js: "is_enabled", typ: "" },
    ], false),
    "ConfigConformancePack": o([
        { json: "parameter_name", js: "parameter_name", typ: "" },
        { json: "parameter_value", js: "parameter_value", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "delivery_s3_bucket", js: "delivery_s3_bucket", typ: u(undefined, "") },
        { json: "delivery_s3_key_prefix", js: "delivery_s3_key_prefix", typ: u(undefined, "") },
        { json: "input_parameter", js: "input_parameter", typ: u(undefined, "") },
        { json: "template_body", js: "template_body", typ: u(undefined, "") },
        { json: "template_s3_uri", js: "template_s3_uri", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "excluded_accounts", js: "excluded_accounts", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ConfigDeliveryChannel": o([
        { json: "s3_bucket_name", js: "s3_bucket_name", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "s3_key_prefix", js: "s3_key_prefix", typ: u(undefined, "") },
        { json: "s3_kms_key_arn", js: "s3_kms_key_arn", typ: u(undefined, "") },
        { json: "sns_topic_arn", js: "sns_topic_arn", typ: u(undefined, "") },
        { json: "snapshot_delivery_properties", js: "snapshot_delivery_properties", typ: u(undefined, "") },
        { json: "delivery_frequency", js: "delivery_frequency", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ConfigOrganizationRule": o([
        { json: "name", js: "name", typ: "" },
        { json: "policy_text", js: "policy_text", typ: u(undefined, "") },
        { json: "policy_runtime", js: "policy_runtime", typ: u(undefined, "") },
        { json: "trigger_types", js: "trigger_types", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "debug_log_delivery_accounts", js: "debug_log_delivery_accounts", typ: u(undefined, "") },
        { json: "excluded_accounts", js: "excluded_accounts", typ: u(undefined, "") },
        { json: "input_parameters", js: "input_parameters", typ: u(undefined, "") },
        { json: "maximum_execution_frequency", js: "maximum_execution_frequency", typ: u(undefined, "") },
        { json: "resource_id_scope", js: "resource_id_scope", typ: u(undefined, "") },
        { json: "resource_types_scope", js: "resource_types_scope", typ: u(undefined, "") },
        { json: "tag_key_scope", js: "tag_key_scope", typ: u(undefined, "") },
        { json: "tag_value_scope", js: "tag_value_scope", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "lambda_function_arn", js: "lambda_function_arn", typ: u(undefined, "") },
        { json: "rule_identifier", js: "rule_identifier", typ: u(undefined, "") },
    ], false),
    "ConfigRemediationConfiguration": o([
        { json: "config_rule_name", js: "config_rule_name", typ: "" },
        { json: "target_id", js: "target_id", typ: "" },
        { json: "target_type", js: "target_type", typ: "" },
        { json: "ssm_controls", js: "ssm_controls", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "automatic", js: "automatic", typ: u(undefined, "") },
        { json: "execution_controls", js: "execution_controls", typ: u(undefined, "") },
        { json: "maximum_automatic_attempts", js: "maximum_automatic_attempts", typ: u(undefined, "") },
        { json: "parameter", js: "parameter", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
        { json: "retry_attempt_seconds", js: "retry_attempt_seconds", typ: u(undefined, "") },
        { json: "target_version", js: "target_version", typ: u(undefined, "") },
        { json: "concurrent_execution_rate_percentage", js: "concurrent_execution_rate_percentage", typ: u(undefined, "") },
        { json: "error_percentage", js: "error_percentage", typ: u(undefined, "") },
        { json: "resource_value", js: "resource_value", typ: u(undefined, "") },
        { json: "static_value", js: "static_value", typ: u(undefined, "") },
        { json: "static_values", js: "static_values", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "ResourceConnectBotAssociation": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "lex_bot", js: "lex_bot", typ: r("ConnectBotAssociationLexBot") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ConnectContactFlowModuleClass": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "content_hash", js: "content_hash", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "filename", js: "filename", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "contact_flow_id", js: "contact_flow_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "contact_flow_module_id", js: "contact_flow_module_id", typ: u(undefined, "") },
    ], false),
    "ResourceConnectInstance": o([
        { json: "identity_management_type", js: "identity_management_type", typ: "" },
        { json: "inbound_calls_enabled", js: "inbound_calls_enabled", typ: "" },
        { json: "auto_resolve_best_voices_enabled", js: "auto_resolve_best_voices_enabled", typ: u(undefined, "") },
        { json: "contact_flow_logs_enabled", js: "contact_flow_logs_enabled", typ: u(undefined, "") },
        { json: "contact_lens_enabled", js: "contact_lens_enabled", typ: u(undefined, "") },
        { json: "directory_id", js: "directory_id", typ: u(undefined, "") },
        { json: "early_media_enabled", js: "early_media_enabled", typ: u(undefined, "") },
        { json: "instance_alias", js: "instance_alias", typ: u(undefined, "") },
        { json: "multi_party_conference_enabled", js: "multi_party_conference_enabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "service_role", js: "service_role", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "ConnectPhoneNumber": o([
        { json: "target_arn", js: "target_arn", typ: "" },
        { json: "country_code", js: "country_code", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "phone_number", js: "phone_number", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "message", js: "message", typ: u(undefined, "") },
    ], false),
    "ControltowerControl": o([
        { json: "control_identifier", js: "control_identifier", typ: "" },
        { json: "target_identifier", js: "target_identifier", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DataexchangeRevision": o([
        { json: "data_set_id", js: "data_set_id", typ: "" },
        { json: "comment", js: "comment", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "revision_id", js: "revision_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DatasyncAgent": o([
        { json: "name", js: "name", typ: "" },
        { json: "activation_key", js: "activation_key", typ: u(undefined, "") },
        { json: "ip_address", js: "ip_address", typ: u(undefined, "") },
        { json: "private_link_endpoint", js: "private_link_endpoint", typ: u(undefined, "") },
        { json: "security_group_arns", js: "security_group_arns", typ: u(undefined, "") },
        { json: "subnet_arns", js: "subnet_arns", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DatasyncLocationAzureBlob": o([
        { json: "agent_arns", js: "agent_arns", typ: "" },
        { json: "authentication_type", js: "authentication_type", typ: "" },
        { json: "container_url", js: "container_url", typ: "" },
        { json: "token", js: "token", typ: "" },
        { json: "access_tier", js: "access_tier", typ: u(undefined, "") },
        { json: "blob_type", js: "blob_type", typ: u(undefined, "") },
        { json: "sas_configuration", js: "sas_configuration", typ: u(undefined, "") },
        { json: "subdirectory", js: "subdirectory", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DatasyncLocationEFS": o([
        { json: "ec2_config", js: "ec2_config", typ: "" },
        { json: "efs_file_system_arn", js: "efs_file_system_arn", typ: "" },
        { json: "security_group_arns", js: "security_group_arns", typ: "" },
        { json: "subnet_arn", js: "subnet_arn", typ: "" },
        { json: "access_point_arn", js: "access_point_arn", typ: u(undefined, "") },
        { json: "file_system_access_role_arn", js: "file_system_access_role_arn", typ: u(undefined, "") },
        { json: "in_transit_encryption", js: "in_transit_encryption", typ: u(undefined, "") },
        { json: "subdirectory", js: "subdirectory", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DatasyncLocationFsxFileSystem": o([
        { json: "fsx_filesystem_arn", js: "fsx_filesystem_arn", typ: "" },
        { json: "security_group_arns", js: "security_group_arns", typ: u(undefined, "") },
        { json: "subdirectory", js: "subdirectory", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "uri", js: "uri", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, r("Protocol")) },
        { json: "nfs", js: "nfs", typ: u(undefined, r("NFS")) },
        { json: "mount_options", js: "mount_options", typ: u(undefined, r("MountOptions")) },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "user", js: "user", typ: u(undefined, "") },
        { json: "domain", js: "domain", typ: u(undefined, "") },
    ], false),
    "MountOptions": o([
        { json: "version", js: "version", typ: "" },
    ], false),
    "NFS": o([
        { json: "mount_options", js: "mount_options", typ: "" },
    ], false),
    "Protocol": o([
        { json: "nfs", js: "nfs", typ: "" },
    ], false),
    "DatasyncLocationFsxOntapFileSystem": o([
        { json: "protocol", js: "protocol", typ: "" },
        { json: "storage_virtual_machine_arn", js: "storage_virtual_machine_arn", typ: "" },
        { json: "mount_options", js: "mount_options", typ: "" },
        { json: "subdirectory", js: "subdirectory", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "nfs", js: "nfs", typ: u(undefined, "") },
        { json: "smb", js: "smb", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "domain", js: "domain", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "user", js: "user", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "fsx_filesystem_arn", js: "fsx_filesystem_arn", typ: u(undefined, "") },
        { json: "uri", js: "uri", typ: u(undefined, "") },
    ], false),
    "DatasyncLocationHdfs": o([
        { json: "agent_arns", js: "agent_arns", typ: "" },
        { json: "authentication_type", js: "authentication_type", typ: "" },
        { json: "name_node", js: "name_node", typ: "" },
        { json: "hostname", js: "hostname", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "simple_user", js: "simple_user", typ: u(undefined, "") },
        { json: "block_size", js: "block_size", typ: u(undefined, "") },
        { json: "replication_factor", js: "replication_factor", typ: u(undefined, "") },
        { json: "kerberos_keytab", js: "kerberos_keytab", typ: u(undefined, "") },
        { json: "kerberos_krb5_conf", js: "kerberos_krb5_conf", typ: u(undefined, "") },
        { json: "kerberos_principal", js: "kerberos_principal", typ: u(undefined, "") },
        { json: "kms_key_provider_uri", js: "kms_key_provider_uri", typ: u(undefined, "") },
        { json: "qop_configuration", js: "qop_configuration", typ: u(undefined, "") },
        { json: "subdirectory", js: "subdirectory", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "data_transfer_protection", js: "data_transfer_protection", typ: u(undefined, "") },
        { json: "rpc_protection", js: "rpc_protection", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DatasyncLocationNFS": o([
        { json: "on_prem_config", js: "on_prem_config", typ: "" },
        { json: "server_hostname", js: "server_hostname", typ: "" },
        { json: "subdirectory", js: "subdirectory", typ: "" },
        { json: "agent_arns", js: "agent_arns", typ: "" },
        { json: "mount_options", js: "mount_options", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DatasyncLocationObjectStorage": o([
        { json: "agent_arns", js: "agent_arns", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "server_hostname", js: "server_hostname", typ: "" },
        { json: "access_key", js: "access_key", typ: u(undefined, "") },
        { json: "secret_key", js: "secret_key", typ: u(undefined, "") },
        { json: "server_certificate", js: "server_certificate", typ: u(undefined, "") },
        { json: "server_protocol", js: "server_protocol", typ: u(undefined, "") },
        { json: "server_port", js: "server_port", typ: u(undefined, "") },
        { json: "subdirectory", js: "subdirectory", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "uri", js: "uri", typ: u(undefined, "") },
    ], false),
    "DatasyncLocationS3": o([
        { json: "s3_bucket_arn", js: "s3_bucket_arn", typ: "" },
        { json: "s3_config", js: "s3_config", typ: "" },
        { json: "subdirectory", js: "subdirectory", typ: "" },
        { json: "bucket_access_role_arn", js: "bucket_access_role_arn", typ: "" },
        { json: "agent_arns", js: "agent_arns", typ: u(undefined, "") },
        { json: "s3_storage_class", js: "s3_storage_class", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DatasyncLocationSMB": o([
        { json: "agent_arns", js: "agent_arns", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "server_hostname", js: "server_hostname", typ: "" },
        { json: "subdirectory", js: "subdirectory", typ: "" },
        { json: "user", js: "user", typ: "" },
        { json: "domain", js: "domain", typ: u(undefined, "") },
        { json: "mount_options", js: "mount_options", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DatasyncTask": o([
        { json: "destination_location_arn", js: "destination_location_arn", typ: "" },
        { json: "source_location_arn", js: "source_location_arn", typ: "" },
        { json: "schedule_expression", js: "schedule_expression", typ: "" },
        { json: "cloudwatch_log_group_arn", js: "cloudwatch_log_group_arn", typ: u(undefined, "") },
        { json: "excludes", js: "excludes", typ: u(undefined, "") },
        { json: "includes", js: "includes", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "options", js: "options", typ: u(undefined, "") },
        { json: "schedule", js: "schedule", typ: u(undefined, "") },
        { json: "atime", js: "atime", typ: u(undefined, "") },
        { json: "bytes_per_second", js: "bytes_per_second", typ: u(undefined, "") },
        { json: "gid", js: "gid", typ: u(undefined, "") },
        { json: "log_level", js: "log_level", typ: u(undefined, "") },
        { json: "mtime", js: "mtime", typ: u(undefined, "") },
        { json: "object_tags", js: "object_tags", typ: u(undefined, "") },
        { json: "overwrite_mode", js: "overwrite_mode", typ: u(undefined, "") },
        { json: "posix_permissions", js: "posix_permissions", typ: u(undefined, "") },
        { json: "preserve_deleted_files", js: "preserve_deleted_files", typ: u(undefined, "") },
        { json: "preserve_devices", js: "preserve_devices", typ: u(undefined, "") },
        { json: "security_descriptor_copy_flags", js: "security_descriptor_copy_flags", typ: u(undefined, "") },
        { json: "task_queueing", js: "task_queueing", typ: u(undefined, "") },
        { json: "transfer_mode", js: "transfer_mode", typ: u(undefined, "") },
        { json: "uid", js: "uid", typ: u(undefined, "") },
        { json: "verify_mode", js: "verify_mode", typ: u(undefined, "") },
        { json: "filter_type", js: "filter_type", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DaxCluster": o([
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "iam_role_arn", js: "iam_role_arn", typ: "" },
        { json: "node_type", js: "node_type", typ: "" },
        { json: "replication_factor", js: "replication_factor", typ: "" },
        { json: "cluster_endpoint_encryption_type", js: "cluster_endpoint_encryption_type", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "notification_topic_arn", js: "notification_topic_arn", typ: u(undefined, "") },
        { json: "parameter_group_name", js: "parameter_group_name", typ: u(undefined, "") },
        { json: "maintenance_window", js: "maintenance_window", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "server_side_encryption", js: "server_side_encryption", typ: u(undefined, "") },
        { json: "subnet_group_name", js: "subnet_group_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "nodes", js: "nodes", typ: u(undefined, "") },
        { json: "configuration_endpoint", js: "configuration_endpoint", typ: u(undefined, "") },
        { json: "cluster_address", js: "cluster_address", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DaxSubnetGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
    ], false),
    "ClusterSnapshot": o([
        { json: "db_cluster_identifier", js: "db_cluster_identifier", typ: "" },
        { json: "db_cluster_snapshot_identifier", js: "db_cluster_snapshot_identifier", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "allocated_storage", js: "allocated_storage", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "db_cluster_snapshot_arn", js: "db_cluster_snapshot_arn", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "source_db_cluster_snapshot_identifier", js: "source_db_cluster_snapshot_identifier", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DBEventSubscriptionClass": o([
        { json: "sns_topic", js: "sns_topic", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "source_ids", js: "source_ids", typ: u(undefined, "") },
        { json: "source_type", js: "source_type", typ: u(undefined, "") },
        { json: "event_categories", js: "event_categories", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "customer_aws_id", js: "customer_aws_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "sns_topic_arn", js: "sns_topic_arn", typ: u(undefined, "") },
    ], false),
    "ResourceDBInstance": o([
        { json: "instance_class", js: "instance_class", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "ingestion_role", js: "ingestion_role", typ: "" },
        { json: "allocated_storage", js: "allocated_storage", typ: u(undefined, "") },
        { json: "allow_major_version_upgrade", js: "allow_major_version_upgrade", typ: u(undefined, "") },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "auto_minor_version_upgrade", js: "auto_minor_version_upgrade", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "backup_retention_period", js: "backup_retention_period", typ: u(undefined, "") },
        { json: "backup_target", js: "backup_target", typ: u(undefined, "") },
        { json: "backup_window", js: "backup_window", typ: u(undefined, "") },
        { json: "blue_green_update", js: "blue_green_update", typ: u(undefined, "") },
        { json: "ca_cert_identifier", js: "ca_cert_identifier", typ: u(undefined, "") },
        { json: "character_set_name", js: "character_set_name", typ: u(undefined, "") },
        { json: "copy_tags_to_snapshot", js: "copy_tags_to_snapshot", typ: u(undefined, "") },
        { json: "custom_iam_instance_profile", js: "custom_iam_instance_profile", typ: u(undefined, "") },
        { json: "db_name", js: "db_name", typ: u(undefined, "") },
        { json: "db_subnet_group_name", js: "db_subnet_group_name", typ: u(undefined, "") },
        { json: "delete_automated_backups", js: "delete_automated_backups", typ: u(undefined, "") },
        { json: "deletion_protection", js: "deletion_protection", typ: u(undefined, "") },
        { json: "domain", js: "domain", typ: u(undefined, "") },
        { json: "domain_iam_role_name", js: "domain_iam_role_name", typ: u(undefined, "") },
        { json: "enabled_cloudwatch_logs_exports", js: "enabled_cloudwatch_logs_exports", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "final_snapshot_identifier", js: "final_snapshot_identifier", typ: u(undefined, "") },
        { json: "iam_database_authentication_enabled", js: "iam_database_authentication_enabled", typ: u(undefined, "") },
        { json: "identifier", js: "identifier", typ: u(undefined, "") },
        { json: "identifier_prefix", js: "identifier_prefix", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "maintenance_window", js: "maintenance_window", typ: u(undefined, "") },
        { json: "manage_master_user_password", js: "manage_master_user_password", typ: u(undefined, "") },
        { json: "master_user_secret_kms_key_id", js: "master_user_secret_kms_key_id", typ: u(undefined, "") },
        { json: "max_allocated_storage", js: "max_allocated_storage", typ: u(undefined, "") },
        { json: "monitoring_interval", js: "monitoring_interval", typ: u(undefined, "") },
        { json: "monitoring_role_arn", js: "monitoring_role_arn", typ: u(undefined, "") },
        { json: "multi_az", js: "multi_az", typ: u(undefined, "") },
        { json: "nchar_character_set_name", js: "nchar_character_set_name", typ: u(undefined, "") },
        { json: "network_type", js: "network_type", typ: u(undefined, "") },
        { json: "option_group_name", js: "option_group_name", typ: u(undefined, "") },
        { json: "parameter_group_name", js: "parameter_group_name", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "performance_insights_enabled", js: "performance_insights_enabled", typ: u(undefined, "") },
        { json: "performance_insights_kms_key_id", js: "performance_insights_kms_key_id", typ: u(undefined, "") },
        { json: "performance_insights_retention_period", js: "performance_insights_retention_period", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "replica_mode", js: "replica_mode", typ: u(undefined, "") },
        { json: "replicate_source_db", js: "replicate_source_db", typ: u(undefined, "") },
        { json: "restore_to_point_in_time", js: "restore_to_point_in_time", typ: u(undefined, "") },
        { json: "s3_import", js: "s3_import", typ: u(undefined, "") },
        { json: "skip_final_snapshot", js: "skip_final_snapshot", typ: u(undefined, "") },
        { json: "snapshot_identifier", js: "snapshot_identifier", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "storage_throughput", js: "storage_throughput", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "timezone", js: "timezone", typ: u(undefined, "") },
        { json: "username", js: "username", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "restore_time", js: "restore_time", typ: u(undefined, "") },
        { json: "source_db_instance_identifier", js: "source_db_instance_identifier", typ: u(undefined, "") },
        { json: "source_db_instance_automated_backups_arn", js: "source_db_instance_automated_backups_arn", typ: u(undefined, "") },
        { json: "source_dbi_resource_id", js: "source_dbi_resource_id", typ: u(undefined, "") },
        { json: "use_latest_restorable_time", js: "use_latest_restorable_time", typ: u(undefined, "") },
        { json: "bucket_prefix", js: "bucket_prefix", typ: u(undefined, "") },
        { json: "source_engine", js: "source_engine", typ: u(undefined, "") },
        { json: "source_engine_version", js: "source_engine_version", typ: u(undefined, "") },
        { json: "address", js: "address", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "engine_version_actual", js: "engine_version_actual", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "latest_restorable_time", js: "latest_restorable_time", typ: u(undefined, "") },
        { json: "listener_endpoint", js: "listener_endpoint", typ: u(undefined, "") },
        { json: "master_user_secret", js: "master_user_secret", typ: u(undefined, r("MasterUserSecret")) },
        { json: "resource_id", js: "resource_id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DBInstanceAutomatedBackupsReplication": o([
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "pre_signed_url", js: "pre_signed_url", typ: u(undefined, "") },
        { json: "retention_period", js: "retention_period", typ: u(undefined, "") },
        { json: "source_db_instance_arn", js: "source_db_instance_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "RoleAssociation": o([
        { json: "db_instance_identifier", js: "db_instance_identifier", typ: u(undefined, "") },
        { json: "feature_name", js: "feature_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "db_cluster_identifier", js: "db_cluster_identifier", typ: u(undefined, "") },
    ], false),
    "DBOptionGroup": o([
        { json: "engine_name", js: "engine_name", typ: "" },
        { json: "major_engine_version", js: "major_engine_version", typ: "" },
        { json: "option_name", js: "option_name", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "option_group_description", js: "option_group_description", typ: u(undefined, "") },
        { json: "option", js: "option", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "option_settings", js: "option_settings", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "db_security_group_memberships", js: "db_security_group_memberships", typ: u(undefined, "") },
        { json: "vpc_security_group_memberships", js: "vpc_security_group_memberships", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ParameterGroup": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "value", js: "value", typ: "" },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "family", js: "family", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "parameter", js: "parameter", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "apply_method", js: "apply_method", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceDBProxy": o([
        { json: "name", js: "name", typ: "" },
        { json: "auth", js: "auth", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "vpc_subnet_ids", js: "vpc_subnet_ids", typ: "" },
        { json: "debug_logging", js: "debug_logging", typ: u(undefined, "") },
        { json: "engine_family", js: "engine_family", typ: u(undefined, "") },
        { json: "idle_client_timeout", js: "idle_client_timeout", typ: u(undefined, "") },
        { json: "require_tls", js: "require_tls", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "auth_scheme", js: "auth_scheme", typ: u(undefined, "") },
        { json: "client_password_auth_type", js: "client_password_auth_type", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "iam_auth", js: "iam_auth", typ: u(undefined, "") },
        { json: "secret_arn", js: "secret_arn", typ: u(undefined, "") },
        { json: "username", js: "username", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DBProxyDefaultTargetGroup": o([
        { json: "db_proxy_name", js: "db_proxy_name", typ: "" },
        { json: "connection_pool_config", js: "connection_pool_config", typ: u(undefined, "") },
        { json: "connection_borrow_timeout", js: "connection_borrow_timeout", typ: u(undefined, "") },
        { json: "init_query", js: "init_query", typ: u(undefined, "") },
        { json: "max_connections_percent", js: "max_connections_percent", typ: u(undefined, "") },
        { json: "max_idle_connections_percent", js: "max_idle_connections_percent", typ: u(undefined, "") },
        { json: "session_pinning_filters", js: "session_pinning_filters", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
    ], false),
    "DBProxyEndpoint": o([
        { json: "db_proxy_endpoint_name", js: "db_proxy_endpoint_name", typ: "" },
        { json: "db_proxy_name", js: "db_proxy_name", typ: "" },
        { json: "vpc_subnet_ids", js: "vpc_subnet_ids", typ: "" },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "target_role", js: "target_role", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "is_default", js: "is_default", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DBProxyTarget": o([
        { json: "db_proxy_name", js: "db_proxy_name", typ: u(undefined, "") },
        { json: "target_group_name", js: "target_group_name", typ: u(undefined, "") },
        { json: "db_instance_identifier", js: "db_instance_identifier", typ: u(undefined, "") },
        { json: "db_cluster_identifier", js: "db_cluster_identifier", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "rds_resource_id", js: "rds_resource_id", typ: u(undefined, "") },
        { json: "target_arn", js: "target_arn", typ: u(undefined, "") },
        { json: "tracked_cluster_id", js: "tracked_cluster_id", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "ResourceDBSnapshot": o([
        { json: "db_instance_identifier", js: "db_instance_identifier", typ: "" },
        { json: "db_snapshot_identifier", js: "db_snapshot_identifier", typ: "" },
        { json: "shared_accounts", js: "shared_accounts", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "allocated_storage", js: "allocated_storage", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "db_snapshot_arn", js: "db_snapshot_arn", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "option_group_name", js: "option_group_name", typ: u(undefined, "") },
        { json: "source_db_snapshot_identifier", js: "source_db_snapshot_identifier", typ: u(undefined, "") },
        { json: "source_region", js: "source_region", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DBSnapshotCopy": o([
        { json: "source_db_snapshot_identifier", js: "source_db_snapshot_identifier", typ: "" },
        { json: "target_db_snapshot_identifier", js: "target_db_snapshot_identifier", typ: "" },
        { json: "copy_tags", js: "copy_tags", typ: u(undefined, "") },
        { json: "destination_region", js: "destination_region", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "presigned_url", js: "presigned_url", typ: u(undefined, "") },
        { json: "target_custom_availability_zone", js: "target_custom_availability_zone", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "allocated_storage", js: "allocated_storage", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "db_snapshot_arn", js: "db_snapshot_arn", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "license_model", js: "license_model", typ: u(undefined, "") },
        { json: "option_group_name", js: "option_group_name", typ: u(undefined, "") },
        { json: "source_region", js: "source_region", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "MemorydbSubnetGroupClass": o([
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "supported_network_types", js: "supported_network_types", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "NetworkACL": o([
        { json: "default_network_acl_id", js: "default_network_acl_id", typ: u(undefined, "") },
        { json: "action", js: "action", typ: "" },
        { json: "from_port", js: "from_port", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "rule_no", js: "rule_no", typ: "" },
        { json: "to_port", js: "to_port", typ: "" },
        { json: "egress", js: "egress", typ: u(undefined, "") },
        { json: "ingress", js: "ingress", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "icmp_code", js: "icmp_code", typ: u(undefined, "") },
        { json: "icmp_type", js: "icmp_type", typ: u(undefined, "") },
        { json: "ipv6_cidr_block", js: "ipv6_cidr_block", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DefaultRouteTable": o([
        { json: "default_route_table_id", js: "default_route_table_id", typ: "" },
        { json: "propagating_vgws", js: "propagating_vgws", typ: u(undefined, "") },
        { json: "route", js: "route", typ: u(undefined, r("RoutesClass")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DefaultSecurityGroup": o([
        { json: "from_port", js: "from_port", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "to_port", js: "to_port", typ: "" },
        { json: "egress", js: "egress", typ: u(undefined, "") },
        { json: "ingress", js: "ingress", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "cidr_blocks", js: "cidr_blocks", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "ipv6_cidr_blocks", js: "ipv6_cidr_blocks", typ: u(undefined, "") },
        { json: "prefix_list_ids", js: "prefix_list_ids", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "self", js: "self", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DefaultSubnet": o([
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "availability_zone_id", js: "availability_zone_id", typ: u(undefined, "") },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DefaultVpc": o([
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "instance_tenancy", js: "instance_tenancy", typ: u(undefined, "") },
    ], false),
    "DefaultVpcDHCPOptions": o([
        { json: "netbios_name_servers", js: "netbios_name_servers", typ: u(undefined, "") },
        { json: "netbios_node_type", js: "netbios_node_type", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "DetectiveGraph": o([
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "graph_arn", js: "graph_arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
    ], false),
    "DetectiveInvitationAccepter": o([
        { json: "graph_arn", js: "graph_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DetectiveMember": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "email_address", js: "email_address", typ: "" },
        { json: "graph_arn", js: "graph_arn", typ: "" },
        { json: "message", js: "message", typ: u(undefined, "") },
        { json: "disable_email_notification", js: "disable_email_notification", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "administrator_id", js: "administrator_id", typ: u(undefined, "") },
        { json: "volume_usage_in_bytes", js: "volume_usage_in_bytes", typ: u(undefined, "") },
        { json: "invited_time", js: "invited_time", typ: u(undefined, "") },
        { json: "updated_time", js: "updated_time", typ: u(undefined, "") },
    ], false),
    "DevicefarmDevicePool": o([
        { json: "name", js: "name", typ: "" },
        { json: "project_arn", js: "project_arn", typ: "" },
        { json: "rule", js: "rule", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "max_devices", js: "max_devices", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "attribute", js: "attribute", typ: u(undefined, "") },
        { json: "operator", js: "operator", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DevicefarmInstanceProfile": o([
        { json: "name", js: "name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "exclude_app_packages_from_cleanup", js: "exclude_app_packages_from_cleanup", typ: u(undefined, "") },
        { json: "package_cleanup", js: "package_cleanup", typ: u(undefined, "") },
        { json: "reboot_after_use", js: "reboot_after_use", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DevicefarmNetworkProfile": o([
        { json: "name", js: "name", typ: "" },
        { json: "project_arn", js: "project_arn", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "downlink_bandwidth_bits", js: "downlink_bandwidth_bits", typ: u(undefined, "") },
        { json: "downlink_delay_ms", js: "downlink_delay_ms", typ: u(undefined, "") },
        { json: "downlink_jitter_ms", js: "downlink_jitter_ms", typ: u(undefined, "") },
        { json: "downlink_loss_percent", js: "downlink_loss_percent", typ: u(undefined, "") },
        { json: "uplink_bandwidth_bits", js: "uplink_bandwidth_bits", typ: u(undefined, "") },
        { json: "uplink_delay_ms", js: "uplink_delay_ms", typ: u(undefined, "") },
        { json: "uplink_jitter_ms", js: "uplink_jitter_ms", typ: u(undefined, "") },
        { json: "uplink_loss_percent", js: "uplink_loss_percent", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DevicefarmTestGridProject": o([
        { json: "name", js: "name", typ: "" },
        { json: "vpc_config", js: "vpc_config", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DevicefarmUpload": o([
        { json: "name", js: "name", typ: "" },
        { json: "project_arn", js: "project_arn", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "content_type", js: "content_type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "category", js: "category", typ: u(undefined, "") },
        { json: "metadata", js: "metadata", typ: u(undefined, "") },
    ], false),
    "DirectoryServiceConditionalForwarder": o([
        { json: "directory_id", js: "directory_id", typ: "" },
        { json: "dns_ips", js: "dns_ips", typ: "" },
        { json: "remote_domain_name", js: "remote_domain_name", typ: "" },
    ], false),
    "ResourceDirectoryServiceDirectory": o([
        { json: "name", js: "name", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "customer_username", js: "customer_username", typ: "" },
        { json: "customer_dns_ips", js: "customer_dns_ips", typ: "" },
        { json: "size", js: "size", typ: u(undefined, "") },
        { json: "vpc_settings", js: "vpc_settings", typ: u(undefined, "") },
        { json: "connect_settings", js: "connect_settings", typ: u(undefined, "") },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "desired_number_of_domain_controllers", js: "desired_number_of_domain_controllers", typ: u(undefined, "") },
        { json: "short_name", js: "short_name", typ: u(undefined, "") },
        { json: "enable_sso", js: "enable_sso", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "edition", js: "edition", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "access_url", js: "access_url", typ: u(undefined, "") },
        { json: "dns_ip_addresses", js: "dns_ip_addresses", typ: u(undefined, "") },
        { json: "security_group_id", js: "security_group_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "connect_ips", js: "connect_ips", typ: u(undefined, "") },
    ], false),
    "DirectoryServiceLogSubscription": o([
        { json: "directory_id", js: "directory_id", typ: "" },
        { json: "log_group_name", js: "log_group_name", typ: "" },
    ], false),
    "DirectoryServiceRadiusSettings": o([
        { json: "directory_id", js: "directory_id", typ: "" },
        { json: "display_label", js: "display_label", typ: "" },
        { json: "radius_port", js: "radius_port", typ: "" },
        { json: "radius_retries", js: "radius_retries", typ: "" },
        { json: "radius_servers", js: "radius_servers", typ: "" },
        { json: "radius_timeout", js: "radius_timeout", typ: "" },
        { json: "shared_secret", js: "shared_secret", typ: "" },
        { json: "authentication_protocol", js: "authentication_protocol", typ: u(undefined, "") },
        { json: "use_same_username", js: "use_same_username", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DirectoryServiceRegion": o([
        { json: "directory_id", js: "directory_id", typ: "" },
        { json: "region_name", js: "region_name", typ: "" },
        { json: "vpc_settings", js: "vpc_settings", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "desired_number_of_domain_controllers", js: "desired_number_of_domain_controllers", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DirectoryServiceSharedDirectory": o([
        { json: "directory_id", js: "directory_id", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "method", js: "method", typ: u(undefined, "") },
        { json: "notes", js: "notes", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "shared_directory_id", js: "shared_directory_id", typ: u(undefined, "") },
    ], false),
    "DirectoryServiceSharedDirectoryAccepter": o([
        { json: "shared_directory_id", js: "shared_directory_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "method", js: "method", typ: u(undefined, "") },
        { json: "notes", js: "notes", typ: u(undefined, "") },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
        { json: "owner_directory_id", js: "owner_directory_id", typ: u(undefined, "") },
    ], false),
    "DirectoryServiceTrust": o([
        { json: "directory_id", js: "directory_id", typ: "" },
        { json: "remote_domain_name", js: "remote_domain_name", typ: "" },
        { json: "trust_direction", js: "trust_direction", typ: "" },
        { json: "trust_password", js: "trust_password", typ: "" },
        { json: "conditional_forwarder_ip_addrs", js: "conditional_forwarder_ip_addrs", typ: u(undefined, "") },
        { json: "delete_associated_conditional_forwarder", js: "delete_associated_conditional_forwarder", typ: u(undefined, "") },
        { json: "selective_auth", js: "selective_auth", typ: u(undefined, "") },
        { json: "trust_type", js: "trust_type", typ: u(undefined, "") },
        { json: "created_date_time", js: "created_date_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_date_time", js: "last_updated_date_time", typ: u(undefined, "") },
        { json: "state_last_updated_date_time", js: "state_last_updated_date_time", typ: u(undefined, "") },
        { json: "trust_state", js: "trust_state", typ: u(undefined, "") },
        { json: "trust_state_reason", js: "trust_state_reason", typ: u(undefined, "") },
    ], false),
    "DlmLifecyclePolicy": o([
        { json: "description", js: "description", typ: "" },
        { json: "execution_role_arn", js: "execution_role_arn", typ: "" },
        { json: "policy_details", js: "policy_details", typ: "" },
        { json: "encryption_configuration", js: "encryption_configuration", typ: "" },
        { json: "retain_rule", js: "retain_rule", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "encrypted", js: "encrypted", typ: "" },
        { json: "parameters", js: "parameters", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "description_regex", js: "description_regex", typ: "" },
        { json: "event_type", js: "event_type", typ: "" },
        { json: "snapshot_owner", js: "snapshot_owner", typ: "" },
        { json: "create_rule", js: "create_rule", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "deprecate_rule", js: "deprecate_rule", typ: "" },
        { json: "fast_restore_rule", js: "fast_restore_rule", typ: "" },
        { json: "share_rule", js: "share_rule", typ: "" },
        { json: "availability_zones", js: "availability_zones", typ: "" },
        { json: "target_accounts", js: "target_accounts", typ: "" },
        { json: "interval", js: "interval", typ: "" },
        { json: "interval_unit", js: "interval_unit", typ: "" },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "action", js: "action", typ: u(undefined, "") },
        { json: "event_source", js: "event_source", typ: u(undefined, "") },
        { json: "resource_types", js: "resource_types", typ: u(undefined, "") },
        { json: "resource_locations", js: "resource_locations", typ: u(undefined, "") },
        { json: "policy_type", js: "policy_type", typ: u(undefined, "") },
        { json: "schedule", js: "schedule", typ: u(undefined, "") },
        { json: "cross_region_copy", js: "cross_region_copy", typ: u(undefined, "") },
        { json: "cmk_arn", js: "cmk_arn", typ: u(undefined, "") },
        { json: "exclude_boot_volume", js: "exclude_boot_volume", typ: u(undefined, "") },
        { json: "no_reboot", js: "no_reboot", typ: u(undefined, "") },
        { json: "copy_tags", js: "copy_tags", typ: u(undefined, "") },
        { json: "cross_region_copy_rule", js: "cross_region_copy_rule", typ: u(undefined, "") },
        { json: "tags_to_add", js: "tags_to_add", typ: u(undefined, "") },
        { json: "variable_tags", js: "variable_tags", typ: u(undefined, "") },
        { json: "cron_expression", js: "cron_expression", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "times", js: "times", typ: u(undefined, "") },
        { json: "count", js: "count", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceDmsCertificate": o([
        { json: "certificate_id", js: "certificate_id", typ: "" },
        { json: "certificate_pem", js: "certificate_pem", typ: u(undefined, "") },
        { json: "certificate_wallet", js: "certificate_wallet", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceDmsEndpoint": o([
        { json: "endpoint_id", js: "endpoint_id", typ: "" },
        { json: "endpoint_type", js: "endpoint_type", typ: "" },
        { json: "engine_name", js: "engine_name", typ: "" },
        { json: "service_access_role_arn", js: "service_access_role_arn", typ: "" },
        { json: "auth_type", js: "auth_type", typ: "" },
        { json: "server_name", js: "server_name", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "database_name", js: "database_name", typ: u(undefined, "") },
        { json: "elasticsearch_settings", js: "elasticsearch_settings", typ: u(undefined, r("ElasticsearchSettings")) },
        { json: "extra_connection_attributes", js: "extra_connection_attributes", typ: u(undefined, "") },
        { json: "kafka_settings", js: "kafka_settings", typ: u(undefined, r("KafkaSettings")) },
        { json: "kinesis_settings", js: "kinesis_settings", typ: u(undefined, r("KinesisSettings")) },
        { json: "mongodb_settings", js: "mongodb_settings", typ: u(undefined, r("MongodbSettings")) },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "redshift_settings", js: "redshift_settings", typ: u(undefined, r("RedshiftSettings")) },
        { json: "secrets_manager_access_role_arn", js: "secrets_manager_access_role_arn", typ: u(undefined, "") },
        { json: "secrets_manager_arn", js: "secrets_manager_arn", typ: u(undefined, "") },
        { json: "service_access_role", js: "service_access_role", typ: u(undefined, "") },
        { json: "ssl_mode", js: "ssl_mode", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "username", js: "username", typ: u(undefined, "") },
        { json: "ssl_ca_certificate_arn", js: "ssl_ca_certificate_arn", typ: u(undefined, "") },
        { json: "topic", js: "topic", typ: u(undefined, "") },
        { json: "stream_arn", js: "stream_arn", typ: u(undefined, "") },
        { json: "nesting_level", js: "nesting_level", typ: u(undefined, "") },
        { json: "auth_password", js: "auth_password", typ: u(undefined, "") },
        { json: "auth_user_name", js: "auth_user_name", typ: u(undefined, "") },
        { json: "bucket_folder", js: "bucket_folder", typ: u(undefined, "") },
        { json: "bucket_name", js: "bucket_name", typ: u(undefined, "") },
        { json: "encryption_mode", js: "encryption_mode", typ: u(undefined, "") },
        { json: "add_column_name", js: "add_column_name", typ: u(undefined, "") },
        { json: "canned_acl_for_objects", js: "canned_acl_for_objects", typ: u(undefined, "") },
        { json: "cdc_inserts_and_updates", js: "cdc_inserts_and_updates", typ: u(undefined, "") },
        { json: "cdc_inserts_only", js: "cdc_inserts_only", typ: u(undefined, "") },
        { json: "cdc_max_batch_interval", js: "cdc_max_batch_interval", typ: u(undefined, "") },
        { json: "cdc_path", js: "cdc_path", typ: u(undefined, "") },
        { json: "compression_type", js: "compression_type", typ: u(undefined, "") },
        { json: "csv_delimiter", js: "csv_delimiter", typ: u(undefined, "") },
        { json: "csv_no_sup_value", js: "csv_no_sup_value", typ: u(undefined, "") },
        { json: "csv_null_value", js: "csv_null_value", typ: u(undefined, "") },
        { json: "csv_row_delimiter", js: "csv_row_delimiter", typ: u(undefined, "") },
        { json: "data_format", js: "data_format", typ: u(undefined, "") },
        { json: "data_page_size", js: "data_page_size", typ: u(undefined, "") },
        { json: "date_partition_delimiter", js: "date_partition_delimiter", typ: u(undefined, "") },
        { json: "date_partition_enabled", js: "date_partition_enabled", typ: u(undefined, "") },
        { json: "date_partition_sequence", js: "date_partition_sequence", typ: u(undefined, "") },
        { json: "dict_page_size_limit", js: "dict_page_size_limit", typ: u(undefined, "") },
        { json: "enable_statistics", js: "enable_statistics", typ: u(undefined, "") },
        { json: "encoding_type", js: "encoding_type", typ: u(undefined, "") },
        { json: "external_table_definition", js: "external_table_definition", typ: u(undefined, "") },
        { json: "ignore_header_rows", js: "ignore_header_rows", typ: u(undefined, "") },
        { json: "include_op_for_full_load", js: "include_op_for_full_load", typ: u(undefined, "") },
        { json: "max_file_size", js: "max_file_size", typ: u(undefined, "") },
        { json: "parquet_timestamp_in_millisecond", js: "parquet_timestamp_in_millisecond", typ: u(undefined, "") },
        { json: "parquet_version", js: "parquet_version", typ: u(undefined, "") },
        { json: "preserve_transactions", js: "preserve_transactions", typ: u(undefined, "") },
        { json: "rfc_4180", js: "rfc_4180", typ: u(undefined, "") },
        { json: "row_group_length", js: "row_group_length", typ: u(undefined, "") },
        { json: "timestamp_column_name", js: "timestamp_column_name", typ: u(undefined, "") },
        { json: "use_csv_no_sup_value", js: "use_csv_no_sup_value", typ: u(undefined, "") },
        { json: "use_task_start_time_for_full_load_timestamp", js: "use_task_start_time_for_full_load_timestamp", typ: u(undefined, "") },
        { json: "endpoint_arn", js: "endpoint_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ElasticsearchSettings": o([
        { json: "endpoint_uri", js: "endpoint_uri", typ: "" },
        { json: "error_retry_duration", js: "error_retry_duration", typ: "" },
        { json: "full_load_error_percentage", js: "full_load_error_percentage", typ: "" },
        { json: "service_access_role_arn", js: "service_access_role_arn", typ: "" },
    ], false),
    "KafkaSettings": o([
        { json: "broker", js: "broker", typ: "" },
        { json: "include_control_details", js: "include_control_details", typ: "" },
        { json: "include_null_and_empty", js: "include_null_and_empty", typ: "" },
        { json: "include_partition_value", js: "include_partition_value", typ: "" },
        { json: "include_table_alter_operations", js: "include_table_alter_operations", typ: "" },
        { json: "include_transaction_details", js: "include_transaction_details", typ: "" },
        { json: "message_format", js: "message_format", typ: "" },
        { json: "message_max_bytes", js: "message_max_bytes", typ: "" },
        { json: "no_hex_prefix", js: "no_hex_prefix", typ: "" },
        { json: "partition_include_schema_table", js: "partition_include_schema_table", typ: "" },
        { json: "sasl_password", js: "sasl_password", typ: "" },
        { json: "sasl_username", js: "sasl_username", typ: "" },
        { json: "security_protocol", js: "security_protocol", typ: "" },
        { json: "ssl_ca_certificate_arn", js: "ssl_ca_certificate_arn", typ: "" },
        { json: "ssl_client_certificate_arn", js: "ssl_client_certificate_arn", typ: "" },
        { json: "ssl_client_key_arn", js: "ssl_client_key_arn", typ: "" },
        { json: "ssl_client_key_password", js: "ssl_client_key_password", typ: "" },
        { json: "topic", js: "topic", typ: "" },
    ], false),
    "KinesisSettings": o([
        { json: "include_control_details", js: "include_control_details", typ: "" },
        { json: "include_null_and_empty", js: "include_null_and_empty", typ: "" },
        { json: "include_partition_value", js: "include_partition_value", typ: "" },
        { json: "include_table_alter_operations", js: "include_table_alter_operations", typ: "" },
        { json: "include_transaction_details", js: "include_transaction_details", typ: "" },
        { json: "message_format", js: "message_format", typ: "" },
        { json: "partition_include_schema_table", js: "partition_include_schema_table", typ: "" },
        { json: "service_access_role_arn", js: "service_access_role_arn", typ: "" },
        { json: "stream_arn", js: "stream_arn", typ: "" },
    ], false),
    "MongodbSettings": o([
        { json: "auth_mechanism", js: "auth_mechanism", typ: "" },
        { json: "auth_source", js: "auth_source", typ: "" },
        { json: "auth_type", js: "auth_type", typ: "" },
        { json: "docs_to_investigate", js: "docs_to_investigate", typ: "" },
        { json: "extract_doc_id", js: "extract_doc_id", typ: "" },
        { json: "nesting_level", js: "nesting_level", typ: "" },
    ], false),
    "RedshiftSettings": o([
        { json: "bucket_folder", js: "bucket_folder", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "encryption_mode", js: "encryption_mode", typ: "" },
        { json: "server_side_encryption_kms_key_id", js: "server_side_encryption_kms_key_id", typ: "" },
        { json: "service_access_role_arn", js: "service_access_role_arn", typ: "" },
    ], false),
    "DmsEventSubscriptionClass": o([
        { json: "name", js: "name", typ: "" },
        { json: "source_ids", js: "source_ids", typ: u(undefined, "") },
        { json: "sns_topic_arn", js: "sns_topic_arn", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "event_categories", js: "event_categories", typ: u(undefined, "") },
        { json: "source_type", js: "source_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "severity", js: "severity", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "customer_aws_id", js: "customer_aws_id", typ: u(undefined, "") },
    ], false),
    "DmsReplicationConfig": o([
        { json: "compute_config", js: "compute_config", typ: "" },
        { json: "replication_config_identifier", js: "replication_config_identifier", typ: "" },
        { json: "replication_type", js: "replication_type", typ: "" },
        { json: "source_endpoint_arn", js: "source_endpoint_arn", typ: "" },
        { json: "table_mappings", js: "table_mappings", typ: "" },
        { json: "target_endpoint_arn", js: "target_endpoint_arn", typ: "" },
        { json: "max_capacity_units", js: "max_capacity_units", typ: "" },
        { json: "start_replication", js: "start_replication", typ: u(undefined, "") },
        { json: "replication_settings", js: "replication_settings", typ: u(undefined, "") },
        { json: "resource_identifier", js: "resource_identifier", typ: u(undefined, "") },
        { json: "supplemental_settings", js: "supplemental_settings", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "dns_name_servers", js: "dns_name_servers", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "min_capacity_units", js: "min_capacity_units", typ: u(undefined, "") },
        { json: "multi_az", js: "multi_az", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "replication_subnet_group_id", js: "replication_subnet_group_id", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceDmsReplicationSubnetGroup": o([
        { json: "replication_subnet_group_description", js: "replication_subnet_group_description", typ: "" },
        { json: "replication_subnet_group_id", js: "replication_subnet_group_id", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "DmsS3Endpoint": o([
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "endpoint_id", js: "endpoint_id", typ: "" },
        { json: "endpoint_type", js: "endpoint_type", typ: "" },
        { json: "service_access_role_arn", js: "service_access_role_arn", typ: "" },
        { json: "cdc_path", js: "cdc_path", typ: u(undefined, "") },
        { json: "external_table_definition", js: "external_table_definition", typ: u(undefined, "") },
        { json: "add_column_name", js: "add_column_name", typ: u(undefined, "") },
        { json: "add_trailing_padding_character", js: "add_trailing_padding_character", typ: u(undefined, "") },
        { json: "bucket_folder", js: "bucket_folder", typ: u(undefined, "") },
        { json: "canned_acl_for_objects", js: "canned_acl_for_objects", typ: u(undefined, "") },
        { json: "cdc_inserts_and_updates", js: "cdc_inserts_and_updates", typ: u(undefined, "") },
        { json: "cdc_inserts_only", js: "cdc_inserts_only", typ: u(undefined, "") },
        { json: "cdc_max_batch_interval", js: "cdc_max_batch_interval", typ: u(undefined, "") },
        { json: "cdc_min_file_size", js: "cdc_min_file_size", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "compression_type", js: "compression_type", typ: u(undefined, "") },
        { json: "csv_delimiter", js: "csv_delimiter", typ: u(undefined, "") },
        { json: "csv_no_sup_value", js: "csv_no_sup_value", typ: u(undefined, "") },
        { json: "csv_null_value", js: "csv_null_value", typ: u(undefined, "") },
        { json: "csv_row_delimiter", js: "csv_row_delimiter", typ: u(undefined, "") },
        { json: "data_format", js: "data_format", typ: u(undefined, "") },
        { json: "data_page_size", js: "data_page_size", typ: u(undefined, "") },
        { json: "date_partition_delimiter", js: "date_partition_delimiter", typ: u(undefined, "") },
        { json: "date_partition_enabled", js: "date_partition_enabled", typ: u(undefined, "") },
        { json: "date_partition_sequence", js: "date_partition_sequence", typ: u(undefined, "") },
        { json: "date_partition_timezone", js: "date_partition_timezone", typ: u(undefined, "") },
        { json: "detach_target_on_lob_lookup_failure_parquet", js: "detach_target_on_lob_lookup_failure_parquet", typ: u(undefined, "") },
        { json: "dict_page_size_limit", js: "dict_page_size_limit", typ: u(undefined, "") },
        { json: "enable_statistics", js: "enable_statistics", typ: u(undefined, "") },
        { json: "encoding_type", js: "encoding_type", typ: u(undefined, "") },
        { json: "encryption_mode", js: "encryption_mode", typ: u(undefined, "") },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "ignore_header_rows", js: "ignore_header_rows", typ: u(undefined, "") },
        { json: "include_op_for_full_load", js: "include_op_for_full_load", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "max_file_size", js: "max_file_size", typ: u(undefined, "") },
        { json: "parquet_timestamp_in_millisecond", js: "parquet_timestamp_in_millisecond", typ: u(undefined, "") },
        { json: "parquet_version", js: "parquet_version", typ: u(undefined, "") },
        { json: "preserve_transactions", js: "preserve_transactions", typ: u(undefined, "") },
        { json: "rfc_4180", js: "rfc_4180", typ: u(undefined, "") },
        { json: "row_group_length", js: "row_group_length", typ: u(undefined, "") },
        { json: "server_side_encryption_kms_key_id", js: "server_side_encryption_kms_key_id", typ: u(undefined, "") },
        { json: "ssl_mode", js: "ssl_mode", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "timestamp_column_name", js: "timestamp_column_name", typ: u(undefined, "") },
        { json: "use_csv_no_sup_value", js: "use_csv_no_sup_value", typ: u(undefined, "") },
        { json: "use_task_start_time_for_full_load_timestamp", js: "use_task_start_time_for_full_load_timestamp", typ: u(undefined, "") },
        { json: "endpoint_arn", js: "endpoint_arn", typ: u(undefined, "") },
        { json: "engine_display_name", js: "engine_display_name", typ: u(undefined, "") },
        { json: "external_id", js: "external_id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DocdbCluster": o([
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "backup_retention_period", js: "backup_retention_period", typ: u(undefined, "") },
        { json: "cluster_identifier_prefix", js: "cluster_identifier_prefix", typ: u(undefined, "") },
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "db_subnet_group_name", js: "db_subnet_group_name", typ: u(undefined, "") },
        { json: "db_cluster_parameter_group_name", js: "db_cluster_parameter_group_name", typ: u(undefined, "") },
        { json: "deletion_protection", js: "deletion_protection", typ: u(undefined, "") },
        { json: "enabled_cloudwatch_logs_exports", js: "enabled_cloudwatch_logs_exports", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "final_snapshot_identifier", js: "final_snapshot_identifier", typ: u(undefined, "") },
        { json: "global_cluster_identifier", js: "global_cluster_identifier", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "master_password", js: "master_password", typ: u(undefined, "") },
        { json: "master_username", js: "master_username", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "preferred_backup_window", js: "preferred_backup_window", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "skip_final_snapshot", js: "skip_final_snapshot", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cluster_members", js: "cluster_members", typ: u(undefined, "") },
        { json: "cluster_resource_id", js: "cluster_resource_id", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "reader_endpoint", js: "reader_endpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ClusterInstance": o([
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "instance_class", js: "instance_class", typ: "" },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "auto_minor_version_upgrade", js: "auto_minor_version_upgrade", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "enable_performance_insights", js: "enable_performance_insights", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "identifier", js: "identifier", typ: u(undefined, "") },
        { json: "identifier_prefix", js: "identifier_prefix", typ: u(undefined, "") },
        { json: "performance_insights_kms_key_id", js: "performance_insights_kms_key_id", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "promotion_tier", js: "promotion_tier", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "db_subnet_group_name", js: "db_subnet_group_name", typ: u(undefined, "") },
        { json: "dbi_resource_id", js: "dbi_resource_id", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "preferred_backup_window", js: "preferred_backup_window", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "writer", js: "writer", typ: u(undefined, "") },
        { json: "ca_cert_identifier", js: "ca_cert_identifier", typ: u(undefined, "") },
        { json: "neptune_parameter_group_name", js: "neptune_parameter_group_name", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "address", js: "address", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
    ], false),
    "GlobalCluster": o([
        { json: "global_cluster_identifier", js: "global_cluster_identifier", typ: u(undefined, "") },
        { json: "database_name", js: "database_name", typ: u(undefined, "") },
        { json: "deletion_protection", js: "deletion_protection", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "source_db_cluster_identifier", js: "source_db_cluster_identifier", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "global_cluster_resource_id", js: "global_cluster_resource_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
    ], false),
    "DxBGPPeer": o([
        { json: "address_family", js: "address_family", typ: "" },
        { json: "bgp_asn", js: "bgp_asn", typ: "" },
        { json: "virtual_interface_id", js: "virtual_interface_id", typ: "" },
        { json: "amazon_address", js: "amazon_address", typ: u(undefined, "") },
        { json: "bgp_auth_key", js: "bgp_auth_key", typ: u(undefined, "") },
        { json: "customer_address", js: "customer_address", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "bgp_status", js: "bgp_status", typ: u(undefined, "") },
        { json: "bgp_peer_id", js: "bgp_peer_id", typ: u(undefined, "") },
        { json: "aws_device", js: "aws_device", typ: u(undefined, "") },
    ], false),
    "ResourceDxConnection": o([
        { json: "bandwidth", js: "bandwidth", typ: "" },
        { json: "location", js: "location", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "encryption_mode", js: "encryption_mode", typ: u(undefined, "") },
        { json: "provider_name", js: "provider_name", typ: u(undefined, "") },
        { json: "skip_destroy", js: "skip_destroy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "aws_device", js: "aws_device", typ: u(undefined, "") },
        { json: "has_logical_redundancy", js: "has_logical_redundancy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "jumbo_frame_capable", js: "jumbo_frame_capable", typ: u(undefined, "") },
        { json: "macsec_capable", js: "macsec_capable", typ: u(undefined, "") },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
        { json: "partner_name", js: "partner_name", typ: u(undefined, "") },
        { json: "port_encryption_status", js: "port_encryption_status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vlan_id", js: "vlan_id", typ: u(undefined, "") },
    ], false),
    "DxConnectionAssociation": o([
        { json: "connection_id", js: "connection_id", typ: "" },
        { json: "lag_id", js: "lag_id", typ: "" },
    ], false),
    "DxGatewayAssociation": o([
        { json: "dx_gateway_id", js: "dx_gateway_id", typ: "" },
        { json: "associated_gateway_id", js: "associated_gateway_id", typ: u(undefined, "") },
        { json: "associated_gateway_owner_account_id", js: "associated_gateway_owner_account_id", typ: u(undefined, "") },
        { json: "proposal_id", js: "proposal_id", typ: u(undefined, "") },
        { json: "allowed_prefixes", js: "allowed_prefixes", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "associated_gateway_type", js: "associated_gateway_type", typ: u(undefined, "") },
        { json: "dx_gateway_association_id", js: "dx_gateway_association_id", typ: u(undefined, "") },
        { json: "dx_gateway_owner_account_id", js: "dx_gateway_owner_account_id", typ: u(undefined, "") },
    ], false),
    "DxHostedConnection": o([
        { json: "name", js: "name", typ: "" },
        { json: "bandwidth", js: "bandwidth", typ: "" },
        { json: "connection_id", js: "connection_id", typ: "" },
        { json: "owner_account_id", js: "owner_account_id", typ: "" },
        { json: "vlan", js: "vlan", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "jumbo_frame_capable", js: "jumbo_frame_capable", typ: u(undefined, "") },
        { json: "has_logical_redundancy", js: "has_logical_redundancy", typ: u(undefined, "") },
        { json: "aws_device", js: "aws_device", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "lag_id", js: "lag_id", typ: u(undefined, "") },
        { json: "loa_issue_time", js: "loa_issue_time", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "partner_name", js: "partner_name", typ: u(undefined, "") },
        { json: "provider_name", js: "provider_name", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
    ], false),
    "DxVirtualInterface": o([
        { json: "address_family", js: "address_family", typ: "" },
        { json: "bgp_asn", js: "bgp_asn", typ: "" },
        { json: "connection_id", js: "connection_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
        { json: "vlan", js: "vlan", typ: "" },
        { json: "amazon_address", js: "amazon_address", typ: u(undefined, "") },
        { json: "bgp_auth_key", js: "bgp_auth_key", typ: u(undefined, "") },
        { json: "customer_address", js: "customer_address", typ: u(undefined, "") },
        { json: "mtu", js: "mtu", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "aws_device", js: "aws_device", typ: u(undefined, "") },
        { json: "jumbo_frame_capable", js: "jumbo_frame_capable", typ: u(undefined, "") },
        { json: "route_filter_prefixes", js: "route_filter_prefixes", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "dx_gateway_id", js: "dx_gateway_id", typ: u(undefined, "") },
        { json: "sitelink_enabled", js: "sitelink_enabled", typ: u(undefined, "") },
    ], false),
    "DxHostedVirtualInterfaceAccepter": o([
        { json: "virtual_interface_id", js: "virtual_interface_id", typ: "" },
        { json: "dx_gateway_id", js: "dx_gateway_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DxHostedPublicVirtualInterfaceAccepter": o([
        { json: "virtual_interface_id", js: "virtual_interface_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DxLag": o([
        { json: "name", js: "name", typ: "" },
        { json: "connections_bandwidth", js: "connections_bandwidth", typ: "" },
        { json: "location", js: "location", typ: "" },
        { json: "connection_id", js: "connection_id", typ: u(undefined, "") },
        { json: "provider_name", js: "provider_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "has_logical_redundancy", js: "has_logical_redundancy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DxMacsecKeyAssociation": o([
        { json: "connection_id", js: "connection_id", typ: "" },
        { json: "cak", js: "cak", typ: u(undefined, "") },
        { json: "ckn", js: "ckn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "start_on", js: "start_on", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
    ], false),
    "DxPrivateVirtualInterface": o([
        { json: "address_family", js: "address_family", typ: "" },
        { json: "bgp_asn", js: "bgp_asn", typ: "" },
        { json: "connection_id", js: "connection_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "vlan", js: "vlan", typ: "" },
        { json: "amazon_address", js: "amazon_address", typ: u(undefined, "") },
        { json: "bgp_auth_key", js: "bgp_auth_key", typ: u(undefined, "") },
        { json: "customer_address", js: "customer_address", typ: u(undefined, "") },
        { json: "dx_gateway_id", js: "dx_gateway_id", typ: u(undefined, "") },
        { json: "mtu", js: "mtu", typ: u(undefined, "") },
        { json: "sitelink_enabled", js: "sitelink_enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpn_gateway_id", js: "vpn_gateway_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "aws_device", js: "aws_device", typ: u(undefined, "") },
        { json: "jumbo_frame_capable", js: "jumbo_frame_capable", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DynamodbContributorInsights": o([
        { json: "table_name", js: "table_name", typ: "" },
        { json: "index_name", js: "index_name", typ: u(undefined, "") },
    ], false),
    "DynamodbGlobalTable": o([
        { json: "name", js: "name", typ: "" },
        { json: "replica", js: "replica", typ: "" },
        { json: "region_name", js: "region_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "DynamodbKinesisStreamingDestination": o([
        { json: "stream_arn", js: "stream_arn", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceDynamodbTable": o([
        { json: "attribute", js: "attribute", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "hash_key", js: "hash_key", typ: "" },
        { json: "projection_type", js: "projection_type", typ: "" },
        { json: "range_key", js: "range_key", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "region_name", js: "region_name", typ: "" },
        { json: "attribute_name", js: "attribute_name", typ: "" },
        { json: "billing_mode", js: "billing_mode", typ: u(undefined, "") },
        { json: "deletion_protection_enabled", js: "deletion_protection_enabled", typ: u(undefined, "") },
        { json: "global_secondary_index", js: "global_secondary_index", typ: u(undefined, "") },
        { json: "local_secondary_index", js: "local_secondary_index", typ: u(undefined, "") },
        { json: "point_in_time_recovery", js: "point_in_time_recovery", typ: u(undefined, "") },
        { json: "read_capacity", js: "read_capacity", typ: u(undefined, "") },
        { json: "replica", js: "replica", typ: u(undefined, "") },
        { json: "restore_date_time", js: "restore_date_time", typ: u(undefined, "") },
        { json: "restore_source_name", js: "restore_source_name", typ: u(undefined, "") },
        { json: "restore_to_latest_time", js: "restore_to_latest_time", typ: u(undefined, "") },
        { json: "server_side_encryption", js: "server_side_encryption", typ: u(undefined, "") },
        { json: "stream_enabled", js: "stream_enabled", typ: u(undefined, "") },
        { json: "stream_view_type", js: "stream_view_type", typ: u(undefined, "") },
        { json: "table_class", js: "table_class", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ttl", js: "ttl", typ: u(undefined, "") },
        { json: "write_capacity", js: "write_capacity", typ: u(undefined, "") },
        { json: "non_key_attributes", js: "non_key_attributes", typ: u(undefined, "") },
        { json: "propagate_tags", js: "propagate_tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "replica.*.arn", js: "replica.*.arn", typ: u(undefined, "") },
        { json: "replica.*.stream_arn", js: "replica.*.stream_arn", typ: u(undefined, "") },
        { json: "replica.*.stream_label", js: "replica.*.stream_label", typ: u(undefined, "") },
        { json: "stream_arn", js: "stream_arn", typ: u(undefined, "") },
        { json: "stream_label", js: "stream_label", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceDynamodbTableItem": o([
        { json: "hash_key", js: "hash_key", typ: "" },
        { json: "item", js: "item", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
        { json: "range_key", js: "range_key", typ: u(undefined, "") },
    ], false),
    "DynamodbTableReplica": o([
        { json: "global_table_arn", js: "global_table_arn", typ: "" },
        { json: "point_in_time_recovery", js: "point_in_time_recovery", typ: u(undefined, "") },
        { json: "table_class_override", js: "table_class_override", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Tag": o([
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "resource_id", js: "resource_id", typ: u(undefined, "") },
    ], false),
    "ResourceEbsDefaultKmsKey": o([
        { json: "key_arn", js: "key_arn", typ: u(undefined, "") },
    ], false),
    "EbsSnapshotCopyClass": o([
        { json: "volume_id", js: "volume_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "storage_tier", js: "storage_tier", typ: u(undefined, "") },
        { json: "permanent_restore", js: "permanent_restore", typ: u(undefined, "") },
        { json: "temporary_restore_days", js: "temporary_restore_days", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "owner_alias", js: "owner_alias", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "volume_size", js: "volume_size", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "data_encryption_key_id", js: "data_encryption_key_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EbsSnapshotImport": o([
        { json: "disk_container", js: "disk_container", typ: "" },
        { json: "format", js: "format", typ: "" },
        { json: "client_data", js: "client_data", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "storage_tier", js: "storage_tier", typ: u(undefined, "") },
        { json: "permanent_restore", js: "permanent_restore", typ: u(undefined, "") },
        { json: "temporary_restore_days", js: "temporary_restore_days", typ: u(undefined, "") },
        { json: "role_name", js: "role_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "upload_start", js: "upload_start", typ: u(undefined, "") },
        { json: "upload_end", js: "upload_end", typ: u(undefined, "") },
        { json: "upload_size", js: "upload_size", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "user_bucket", js: "user_bucket", typ: u(undefined, "") },
        { json: "s3_bucket", js: "s3_bucket", typ: u(undefined, "") },
        { json: "s3_key", js: "s3_key", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "owner_alias", js: "owner_alias", typ: u(undefined, "") },
        { json: "volume_size", js: "volume_size", typ: u(undefined, "") },
        { json: "data_encryption_key_id", js: "data_encryption_key_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceEbsVolume": o([
        { json: "availability_zone", js: "availability_zone", typ: "" },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "final_snapshot", js: "final_snapshot", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "multi_attach_enabled", js: "multi_attach_enabled", typ: u(undefined, "") },
        { json: "size", js: "size", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Ec2AvailabilityZoneGroup": o([
        { json: "group_name", js: "group_name", typ: "" },
        { json: "opt_in_status", js: "opt_in_status", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Ec2CapacityReservation": o([
        { json: "availability_zone", js: "availability_zone", typ: "" },
        { json: "instance_count", js: "instance_count", typ: "" },
        { json: "instance_platform", js: "instance_platform", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "ebs_optimized", js: "ebs_optimized", typ: u(undefined, "") },
        { json: "end_date", js: "end_date", typ: u(undefined, "") },
        { json: "end_date_type", js: "end_date_type", typ: u(undefined, "") },
        { json: "ephemeral_storage", js: "ephemeral_storage", typ: u(undefined, "") },
        { json: "instance_match_criteria", js: "instance_match_criteria", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "placement_group_arn", js: "placement_group_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tenancy", js: "tenancy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Gateway": o([
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Ec2ClientVPNAuthorizationRule": o([
        { json: "client_vpn_endpoint_id", js: "client_vpn_endpoint_id", typ: "" },
        { json: "target_network_cidr", js: "target_network_cidr", typ: "" },
        { json: "access_group_id", js: "access_group_id", typ: u(undefined, "") },
        { json: "authorize_all_groups", js: "authorize_all_groups", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
    ], false),
    "ResourceEc2ClientVPNEndpoint": o([
        { json: "authentication_options", js: "authentication_options", typ: "" },
        { json: "client_cidr_block", js: "client_cidr_block", typ: "" },
        { json: "connection_log_options", js: "connection_log_options", typ: "" },
        { json: "server_certificate_arn", js: "server_certificate_arn", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "client_connect_options", js: "client_connect_options", typ: u(undefined, "") },
        { json: "client_login_banner_options", js: "client_login_banner_options", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "dns_servers", js: "dns_servers", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "self_service_portal", js: "self_service_portal", typ: u(undefined, "") },
        { json: "session_timeout_hours", js: "session_timeout_hours", typ: u(undefined, "") },
        { json: "split_tunnel", js: "split_tunnel", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transport_protocol", js: "transport_protocol", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "vpn_port", js: "vpn_port", typ: u(undefined, "") },
        { json: "active_directory_id", js: "active_directory_id", typ: u(undefined, "") },
        { json: "root_certificate_chain_arn", js: "root_certificate_chain_arn", typ: u(undefined, "") },
        { json: "saml_provider_arn", js: "saml_provider_arn", typ: u(undefined, "") },
        { json: "self_service_saml_provider_arn", js: "self_service_saml_provider_arn", typ: u(undefined, "") },
        { json: "lambda_function_arn", js: "lambda_function_arn", typ: u(undefined, "") },
        { json: "banner_text", js: "banner_text", typ: u(undefined, "") },
        { json: "cloudwatch_log_group", js: "cloudwatch_log_group", typ: u(undefined, "") },
        { json: "cloudwatch_log_stream", js: "cloudwatch_log_stream", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Ec2ClientVPNNetworkAssociation": o([
        { json: "client_vpn_endpoint_id", js: "client_vpn_endpoint_id", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "Ec2ClientVPNRoute": o([
        { json: "client_vpn_endpoint_id", js: "client_vpn_endpoint_id", typ: "" },
        { json: "destination_cidr_block", js: "destination_cidr_block", typ: "" },
        { json: "target_vpc_subnet_id", js: "target_vpc_subnet_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "origin", js: "origin", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "Ec2Fleet": o([
        { json: "launch_template_config", js: "launch_template_config", typ: r("LaunchTemplateConfig") },
        { json: "target_capacity_specification", js: "target_capacity_specification", typ: r("TargetCapacitySpecification") },
        { json: "context", js: "context", typ: u(undefined, "") },
        { json: "excess_capacity_termination_policy", js: "excess_capacity_termination_policy", typ: u(undefined, "") },
        { json: "on_demand_options", js: "on_demand_options", typ: u(undefined, r("OnDemandOptions")) },
        { json: "replace_unhealthy_instances", js: "replace_unhealthy_instances", typ: u(undefined, "") },
        { json: "spot_options", js: "spot_options", typ: u(undefined, r("SpotOptions")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "terminate_instances", js: "terminate_instances", typ: u(undefined, "") },
        { json: "terminate_instances_with_expiration", js: "terminate_instances_with_expiration", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "valid_from", js: "valid_from", typ: u(undefined, "") },
        { json: "valid_until", js: "valid_until", typ: u(undefined, "") },
        { json: "single_instance_type", js: "single_instance_type", typ: u(undefined, "") },
        { json: "maintenance_strategies", js: "maintenance_strategies", typ: u(undefined, r("MaintenanceStrategies")) },
        { json: "capacity_rebalance", js: "capacity_rebalance", typ: u(undefined, r("CapacityRebalance")) },
        { json: "replacement_strategy", js: "replacement_strategy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "fleet_state", js: "fleet_state", typ: u(undefined, "") },
        { json: "fulfilled_capacity", js: "fulfilled_capacity", typ: u(undefined, "") },
        { json: "fulfilled_on_demand_capacity", js: "fulfilled_on_demand_capacity", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CapacityRebalance": o([
        { json: "replacement_strategy", js: "replacement_strategy", typ: "" },
    ], false),
    "LaunchTemplateConfig": o([
        { json: "version", js: "version", typ: "" },
        { json: "launch_template_specification", js: "launch_template_specification", typ: u(undefined, "") },
        { json: "override", js: "override", typ: u(undefined, "") },
        { json: "launch_template_id", js: "launch_template_id", typ: u(undefined, "") },
        { json: "launch_template_name", js: "launch_template_name", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "instance_requirements", js: "instance_requirements", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "max_price", js: "max_price", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "accelerator_manufacturers", js: "accelerator_manufacturers", typ: u(undefined, "") },
        { json: "accelerator_names", js: "accelerator_names", typ: u(undefined, "") },
        { json: "accelerator_types", js: "accelerator_types", typ: u(undefined, "") },
        { json: "bare_metal", js: "bare_metal", typ: u(undefined, "") },
        { json: "burstable_performance", js: "burstable_performance", typ: u(undefined, "") },
        { json: "instance_generations", js: "instance_generations", typ: u(undefined, "") },
        { json: "local_storage", js: "local_storage", typ: u(undefined, "") },
        { json: "local_storage_types", js: "local_storage_types", typ: u(undefined, "") },
        { json: "on_demand_max_price_percentage_over_lowest_price", js: "on_demand_max_price_percentage_over_lowest_price", typ: u(undefined, "") },
        { json: "require_hibernate_support", js: "require_hibernate_support", typ: u(undefined, "") },
        { json: "spot_max_price_percentage_over_lowest_price", js: "spot_max_price_percentage_over_lowest_price", typ: u(undefined, "") },
    ], false),
    "MaintenanceStrategies": o([
        { json: "capacity_rebalance", js: "capacity_rebalance", typ: "" },
    ], false),
    "OnDemandOptions": o([
        { json: "allocation_strategy", js: "allocation_strategy", typ: "" },
        { json: "max_total_price", js: "max_total_price", typ: "" },
        { json: "min_target_capacity", js: "min_target_capacity", typ: "" },
        { json: "single_availability_zone", js: "single_availability_zone", typ: "" },
        { json: "single_instance_type", js: "single_instance_type", typ: "" },
    ], false),
    "SpotOptions": o([
        { json: "allocation_strategy", js: "allocation_strategy", typ: "" },
        { json: "instance_interruption_behavior", js: "instance_interruption_behavior", typ: "" },
        { json: "instance_pools_to_use_count", js: "instance_pools_to_use_count", typ: "" },
        { json: "maintenance_strategies", js: "maintenance_strategies", typ: "" },
        { json: "max_total_price", js: "max_total_price", typ: "" },
        { json: "min_target_capacity", js: "min_target_capacity", typ: "" },
        { json: "single_availability_zone", js: "single_availability_zone", typ: "" },
        { json: "single_instance_type", js: "single_instance_type", typ: "" },
    ], false),
    "TargetCapacitySpecification": o([
        { json: "default_target_capacity_type", js: "default_target_capacity_type", typ: "" },
        { json: "total_target_capacity", js: "total_target_capacity", typ: "" },
        { json: "on_demand_target_capacity", js: "on_demand_target_capacity", typ: u(undefined, "") },
        { json: "spot_target_capacity", js: "spot_target_capacity", typ: u(undefined, "") },
        { json: "target_capacity_unit_type", js: "target_capacity_unit_type", typ: u(undefined, "") },
    ], false),
    "ResourceEc2Host": o([
        { json: "availability_zone", js: "availability_zone", typ: "" },
        { json: "asset_id", js: "asset_id", typ: u(undefined, "") },
        { json: "auto_placement", js: "auto_placement", typ: u(undefined, "") },
        { json: "host_recovery", js: "host_recovery", typ: u(undefined, "") },
        { json: "instance_family", js: "instance_family", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Ec2InstanceConnectEndpoint": o([
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "preserve_client_ip", js: "preserve_client_ip", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "fips_dns_name", js: "fips_dns_name", typ: u(undefined, "") },
        { json: "network_interface_ids", js: "network_interface_ids", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "Ec2InstanceState": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "state", js: "state", typ: "" },
        { json: "force", js: "force", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Ec2LocalGatewayRoute": o([
        { json: "destination_cidr_block", js: "destination_cidr_block", typ: "" },
        { json: "local_gateway_route_table_id", js: "local_gateway_route_table_id", typ: "" },
        { json: "local_gateway_virtual_interface_group_id", js: "local_gateway_virtual_interface_group_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Ec2LocalGatewayRouteTableVpcAssociation": o([
        { json: "local_gateway_route_table_id", js: "local_gateway_route_table_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceEc2ManagedPrefixList": o([
        { json: "max_entries", js: "max_entries", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "cidr", js: "cidr", typ: "" },
        { json: "address_family", js: "address_family", typ: u(undefined, "") },
        { json: "entry", js: "entry", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "Ec2ManagedPrefixListEntry": o([
        { json: "cidr", js: "cidr", typ: "" },
        { json: "prefix_list_id", js: "prefix_list_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceEc2NetworkInsightsAnalysis": o([
        { json: "network_insights_path_id", js: "network_insights_path_id", typ: "" },
        { json: "filter_in_arns", js: "filter_in_arns", typ: u(undefined, "") },
        { json: "wait_for_completion", js: "wait_for_completion", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "alternate_path_hints", js: "alternate_path_hints", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "explanations", js: "explanations", typ: u(undefined, "") },
        { json: "forward_path_components", js: "forward_path_components", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "path_found", js: "path_found", typ: u(undefined, "") },
        { json: "return_path_components", js: "return_path_components", typ: u(undefined, "") },
        { json: "start_date", js: "start_date", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "warning_message", js: "warning_message", typ: u(undefined, "") },
        { json: "component_arn", js: "component_arn", typ: u(undefined, "") },
        { json: "component_id", js: "component_id", typ: u(undefined, "") },
    ], false),
    "ResourceEc2NetworkInsightsPath": o([
        { json: "source", js: "source", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "source_ip", js: "source_ip", typ: u(undefined, "") },
        { json: "destination_ip", js: "destination_ip", typ: u(undefined, "") },
        { json: "destination_port", js: "destination_port", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "destination_arn", js: "destination_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "source_arn", js: "source_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Ec2SubnetCIDRReservation": o([
        { json: "cidr_block", js: "cidr_block", typ: "" },
        { json: "reservation_type", js: "reservation_type", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
    ], false),
    "Ec2TrafficMirrorFilterRule": o([
        { json: "destination_cidr_block", js: "destination_cidr_block", typ: "" },
        { json: "rule_action", js: "rule_action", typ: "" },
        { json: "rule_number", js: "rule_number", typ: "" },
        { json: "source_cidr_block", js: "source_cidr_block", typ: "" },
        { json: "traffic_direction", js: "traffic_direction", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "destination_port_range", js: "destination_port_range", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "source_port_range", js: "source_port_range", typ: u(undefined, "") },
        { json: "from_port", js: "from_port", typ: u(undefined, "") },
        { json: "to_port", js: "to_port", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Ec2TrafficMirrorSession": o([
        { json: "traffic_mirror_target_id", js: "traffic_mirror_target_id", typ: "" },
        { json: "session_number", js: "session_number", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "packet_length", js: "packet_length", typ: u(undefined, "") },
        { json: "virtual_network_id", js: "virtual_network_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
    ], false),
    "Ec2TrafficMirrorTarget": o([
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "network_load_balancer_arn", js: "network_load_balancer_arn", typ: u(undefined, "") },
        { json: "gateway_load_balancer_endpoint_id", js: "gateway_load_balancer_endpoint_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
    ], false),
    "ResourceEc2TransitGatewayConnect": o([
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: "" },
        { json: "transport_attachment_id", js: "transport_attachment_id", typ: "" },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_gateway_default_route_table_association", js: "transit_gateway_default_route_table_association", typ: u(undefined, "") },
        { json: "transit_gateway_default_route_table_propagation", js: "transit_gateway_default_route_table_propagation", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceEc2TransitGatewayConnectPeer": o([
        { json: "inside_cidr_blocks", js: "inside_cidr_blocks", typ: "" },
        { json: "peer_address", js: "peer_address", typ: "" },
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: "" },
        { json: "bgp_asn", js: "bgp_asn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_gateway_address", js: "transit_gateway_address", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "bgp_peer_address", js: "bgp_peer_address", typ: u(undefined, "") },
        { json: "bgp_transit_gateway_addresses", js: "bgp_transit_gateway_addresses", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceEc2TransitGatewayMulticastDomain": o([
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: "" },
        { json: "auto_accept_shared_associations", js: "auto_accept_shared_associations", typ: u(undefined, "") },
        { json: "igmpv2_support", js: "igmpv2_support", typ: u(undefined, "") },
        { json: "static_sources_support", js: "static_sources_support", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayMulticastDomainAssociation": o([
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: "" },
        { json: "transit_gateway_multicast_domain_id", js: "transit_gateway_multicast_domain_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayMulticastGroup": o([
        { json: "group_ip_address", js: "group_ip_address", typ: "" },
        { json: "network_interface_id", js: "network_interface_id", typ: "" },
        { json: "transit_gateway_multicast_domain_id", js: "transit_gateway_multicast_domain_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayPeeringAttachmentAccepterClass": o([
        { json: "peer_region", js: "peer_region", typ: u(undefined, "") },
        { json: "peer_transit_gateway_id", js: "peer_transit_gateway_id", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "peer_account_id", js: "peer_account_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayPolicyTable": o([
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayPolicyTableAssociation": o([
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: "" },
        { json: "transit_gateway_policy_table_id", js: "transit_gateway_policy_table_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "resource_id", js: "resource_id", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayPrefixListReferenceClass": o([
        { json: "prefix_list_id", js: "prefix_list_id", typ: u(undefined, "") },
        { json: "transit_gateway_route_table_id", js: "transit_gateway_route_table_id", typ: "" },
        { json: "blackhole", js: "blackhole", typ: u(undefined, "") },
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "destination_cidr_block", js: "destination_cidr_block", typ: u(undefined, "") },
    ], false),
    "ResourceEc2TransitGatewayRouteTable": o([
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "default_association_route_table", js: "default_association_route_table", typ: u(undefined, "") },
        { json: "default_propagation_route_table", js: "default_propagation_route_table", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Ec2TransitGatewayRouteTableAtion": o([
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: "" },
        { json: "transit_gateway_route_table_id", js: "transit_gateway_route_table_id", typ: "" },
        { json: "replace_existing_association", js: "replace_existing_association", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "resource_id", js: "resource_id", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
    ], false),
    "EcrPolicy": o([
        { json: "repository", js: "repository", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
    ], false),
    "PurpleEcrPullThroughCacheRule": o([
        { json: "ecr_repository_prefix", js: "ecr_repository_prefix", typ: u(undefined, "") },
        { json: "upstream_registry_url", js: "upstream_registry_url", typ: u(undefined, "") },
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
    ], false),
    "EcrRegistryPolicy": o([
        { json: "policy", js: "policy", typ: "" },
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
    ], false),
    "EcrRegistryScanningConfiguration": o([
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
    ], false),
    "EcrReplicationConfiguration": o([
        { json: "replication_configuration", js: "replication_configuration", typ: "" },
        { json: "rule", js: "rule", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "region", js: "region", typ: "" },
        { json: "registry_id", js: "registry_id", typ: "" },
        { json: "filter", js: "filter", typ: "" },
        { json: "filter_type", js: "filter_type", typ: "" },
        { json: "repository_filter", js: "repository_filter", typ: u(undefined, "") },
    ], false),
    "ResourceEcrRepository": o([
        { json: "name", js: "name", typ: "" },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, r("EcrRepositoryEncryptionConfiguration")) },
        { json: "force_delete", js: "force_delete", typ: u(undefined, "") },
        { json: "image_tag_mutability", js: "image_tag_mutability", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
        { json: "repository_url", js: "repository_url", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EcrRepositoryEncryptionConfiguration": o([
        { json: "encryption_type", js: "encryption_type", typ: "" },
        { json: "kms_key", js: "kms_key", typ: "" },
    ], false),
    "EcrpublicRepository": o([
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "catalog_data", js: "catalog_data", typ: u(undefined, r("CatalogData")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
        { json: "repository_uri", js: "repository_uri", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CatalogData": o([
        { json: "about_text", js: "about_text", typ: "" },
        { json: "architectures", js: "architectures", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "logo_image_blob", js: "logo_image_blob", typ: "" },
        { json: "operating_systems", js: "operating_systems", typ: "" },
        { json: "usage_text", js: "usage_text", typ: "" },
    ], false),
    "EcrpublicRepositoryPolicy": o([
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "registry_id", js: "registry_id", typ: u(undefined, "") },
    ], false),
    "EcsAccountSettingDefault": o([
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "prinicpal_arn", js: "prinicpal_arn", typ: u(undefined, "") },
    ], false),
    "EcsCapacityProvider": o([
        { json: "auto_scaling_group_provider", js: "auto_scaling_group_provider", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "auto_scaling_group_arn", js: "auto_scaling_group_arn", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "managed_scaling", js: "managed_scaling", typ: u(undefined, "") },
        { json: "managed_termination_protection", js: "managed_termination_protection", typ: u(undefined, "") },
        { json: "instance_warmup_period", js: "instance_warmup_period", typ: u(undefined, "") },
        { json: "maximum_scaling_step_size", js: "maximum_scaling_step_size", typ: u(undefined, "") },
        { json: "minimum_scaling_step_size", js: "minimum_scaling_step_size", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "target_capacity", js: "target_capacity", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceEcsCluster": o([
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "configuration", js: "configuration", typ: u(undefined, "") },
        { json: "service_connect_defaults", js: "service_connect_defaults", typ: u(undefined, "") },
        { json: "setting", js: "setting", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "execute_command_configuration", js: "execute_command_configuration", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "log_configuration", js: "log_configuration", typ: u(undefined, "") },
        { json: "logging", js: "logging", typ: u(undefined, "") },
        { json: "cloud_watch_encryption_enabled", js: "cloud_watch_encryption_enabled", typ: u(undefined, "") },
        { json: "cloud_watch_log_group_name", js: "cloud_watch_log_group_name", typ: u(undefined, "") },
        { json: "s3_bucket_name", js: "s3_bucket_name", typ: u(undefined, "") },
        { json: "s3_bucket_encryption_enabled", js: "s3_bucket_encryption_enabled", typ: u(undefined, "") },
        { json: "s3_key_prefix", js: "s3_key_prefix", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EcsClusterCapacityProviders": o([
        { json: "capacity_provider", js: "capacity_provider", typ: "" },
        { json: "capacity_providers", js: "capacity_providers", typ: u(undefined, "") },
        { json: "cluster_name", js: "cluster_name", typ: u(undefined, "") },
        { json: "default_capacity_provider_strategy", js: "default_capacity_provider_strategy", typ: u(undefined, "") },
        { json: "weight", js: "weight", typ: u(undefined, "") },
        { json: "base", js: "base", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceEcsService": o([
        { json: "rollback", js: "rollback", typ: "" },
        { json: "weight", js: "weight", typ: "" },
        { json: "value_from", js: "value_from", typ: "" },
        { json: "port_name", js: "port_name", typ: "" },
        { json: "alarms", js: "alarms", typ: u(undefined, r("Alarms")) },
        { json: "capacity_provider_strategy", js: "capacity_provider_strategy", typ: u(undefined, r("CapacityProviderStrategy")) },
        { json: "cluster", js: "cluster", typ: u(undefined, "") },
        { json: "deployment_circuit_breaker", js: "deployment_circuit_breaker", typ: u(undefined, r("DeploymentCircuitBreaker")) },
        { json: "deployment_controller", js: "deployment_controller", typ: u(undefined, r("DeploymentController")) },
        { json: "deployment_maximum_percent", js: "deployment_maximum_percent", typ: u(undefined, "") },
        { json: "deployment_minimum_healthy_percent", js: "deployment_minimum_healthy_percent", typ: u(undefined, "") },
        { json: "desired_count", js: "desired_count", typ: u(undefined, "") },
        { json: "enable_ecs_managed_tags", js: "enable_ecs_managed_tags", typ: u(undefined, "") },
        { json: "enable_execute_command", js: "enable_execute_command", typ: u(undefined, "") },
        { json: "force_new_deployment", js: "force_new_deployment", typ: u(undefined, "") },
        { json: "health_check_grace_period_seconds", js: "health_check_grace_period_seconds", typ: u(undefined, "") },
        { json: "iam_role", js: "iam_role", typ: u(undefined, "") },
        { json: "launch_type", js: "launch_type", typ: u(undefined, "") },
        { json: "load_balancer", js: "load_balancer", typ: u(undefined, r("LoadBalancer")) },
        { json: "network_configuration", js: "network_configuration", typ: u(undefined, r("NetworkConfiguration")) },
        { json: "ordered_placement_strategy", js: "ordered_placement_strategy", typ: u(undefined, r("DeploymentController")) },
        { json: "placement_constraints", js: "placement_constraints", typ: u(undefined, r("PlacementConstraint")) },
        { json: "platform_version", js: "platform_version", typ: u(undefined, "") },
        { json: "propagate_tags", js: "propagate_tags", typ: u(undefined, "") },
        { json: "service_connect_configuration", js: "service_connect_configuration", typ: u(undefined, r("ServiceConnectConfiguration")) },
        { json: "service_registries", js: "service_registries", typ: u(undefined, r("ServiceRegistries")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "task_definition", js: "task_definition", typ: u(undefined, "") },
        { json: "triggers", js: "triggers", typ: u(undefined, "") },
        { json: "wait_for_steady_state", js: "wait_for_steady_state", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "assign_public_ip", js: "assign_public_ip", typ: u(undefined, "") },
        { json: "expression", js: "expression", typ: u(undefined, "") },
        { json: "container_name", js: "container_name", typ: u(undefined, "") },
        { json: "log_configuration", js: "log_configuration", typ: u(undefined, r("EcsServiceLogConfiguration")) },
        { json: "service", js: "service", typ: u(undefined, r("EcsServiceService")) },
        { json: "secret_option", js: "secret_option", typ: u(undefined, r("SecretOption")) },
        { json: "client_alias", js: "client_alias", typ: u(undefined, r("ClientAlias")) },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Alarms": o([
        { json: "alarm_names", js: "alarm_names", typ: "" },
        { json: "enable", js: "enable", typ: "" },
        { json: "rollback", js: "rollback", typ: "" },
    ], false),
    "ClientAlias": o([
        { json: "dns_name", js: "dns_name", typ: "" },
        { json: "port", js: "port", typ: "" },
    ], false),
    "DeploymentCircuitBreaker": o([
        { json: "enable", js: "enable", typ: "" },
        { json: "rollback", js: "rollback", typ: "" },
    ], false),
    "DeploymentController": o([
        { json: "type", js: "type", typ: "" },
    ], false),
    "LoadBalancer": o([
        { json: "elb_name", js: "elb_name", typ: "" },
        { json: "target_group_arn", js: "target_group_arn", typ: "" },
        { json: "container_name", js: "container_name", typ: "" },
    ], false),
    "EcsServiceLogConfiguration": o([
        { json: "log_driver", js: "log_driver", typ: "" },
        { json: "options", js: "options", typ: "" },
        { json: "secret_option", js: "secret_option", typ: "" },
    ], false),
    "SecretOption": o([
        { json: "name", js: "name", typ: "" },
        { json: "value_from", js: "value_from", typ: "" },
    ], false),
    "EcsServiceService": o([
        { json: "client_alias", js: "client_alias", typ: "" },
        { json: "discovery_name", js: "discovery_name", typ: "" },
        { json: "ingress_port_override", js: "ingress_port_override", typ: "" },
        { json: "port_name", js: "port_name", typ: "" },
    ], false),
    "ServiceConnectConfiguration": o([
        { json: "enabled", js: "enabled", typ: "" },
        { json: "log_configuration", js: "log_configuration", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "service", js: "service", typ: "" },
    ], false),
    "ServiceRegistries": o([
        { json: "registry_arn", js: "registry_arn", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "container_port", js: "container_port", typ: "" },
        { json: "container_name", js: "container_name", typ: "" },
    ], false),
    "ResourceEcsTaskDefinition": o([
        { json: "container_definitions", js: "container_definitions", typ: "" },
        { json: "family", js: "family", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "domain", js: "domain", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "size_in_gib", js: "size_in_gib", typ: "" },
        { json: "cpu", js: "cpu", typ: u(undefined, "") },
        { json: "execution_role_arn", js: "execution_role_arn", typ: u(undefined, "") },
        { json: "inference_accelerator", js: "inference_accelerator", typ: u(undefined, r("InferenceAccelerator")) },
        { json: "ipc_mode", js: "ipc_mode", typ: u(undefined, "") },
        { json: "memory", js: "memory", typ: u(undefined, "") },
        { json: "network_mode", js: "network_mode", typ: u(undefined, "") },
        { json: "runtime_platform", js: "runtime_platform", typ: u(undefined, r("RuntimePlatform")) },
        { json: "pid_mode", js: "pid_mode", typ: u(undefined, "") },
        { json: "placement_constraints", js: "placement_constraints", typ: u(undefined, r("PlacementConstraint")) },
        { json: "proxy_configuration", js: "proxy_configuration", typ: u(undefined, r("ProxyConfiguration")) },
        { json: "ephemeral_storage", js: "ephemeral_storage", typ: u(undefined, r("EphemeralStorage")) },
        { json: "requires_compatibilities", js: "requires_compatibilities", typ: u(undefined, "") },
        { json: "skip_destroy", js: "skip_destroy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "task_role_arn", js: "task_role_arn", typ: u(undefined, "") },
        { json: "volume", js: "volume", typ: u(undefined, r("Volume")) },
        { json: "docker_volume_configuration", js: "docker_volume_configuration", typ: u(undefined, r("DockerVolumeConfiguration")) },
        { json: "efs_volume_configuration", js: "efs_volume_configuration", typ: u(undefined, r("EFSVolumeConfiguration")) },
        { json: "fsx_windows_file_server_volume_configuration", js: "fsx_windows_file_server_volume_configuration", typ: u(undefined, r("FsxWindowsFileServerVolumeConfiguration")) },
        { json: "scope", js: "scope", typ: u(undefined, "") },
        { json: "authorization_config", js: "authorization_config", typ: u(undefined, "") },
        { json: "iam", js: "iam", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "arn_without_revision", js: "arn_without_revision", typ: u(undefined, "") },
        { json: "revision", js: "revision", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DockerVolumeConfiguration": o([
        { json: "driver_opts", js: "driver_opts", typ: "" },
        { json: "driver", js: "driver", typ: "" },
        { json: "labels", js: "labels", typ: "" },
        { json: "scope", js: "scope", typ: "" },
    ], false),
    "EFSVolumeConfiguration": o([
        { json: "file_system_id", js: "file_system_id", typ: "" },
        { json: "root_directory", js: "root_directory", typ: "" },
        { json: "transit_encryption", js: "transit_encryption", typ: "" },
        { json: "transit_encryption_port", js: "transit_encryption_port", typ: "" },
        { json: "authorization_config", js: "authorization_config", typ: "" },
    ], false),
    "EphemeralStorage": o([
        { json: "size_in_gib", js: "size_in_gib", typ: "" },
    ], false),
    "FsxWindowsFileServerVolumeConfiguration": o([
        { json: "file_system_id", js: "file_system_id", typ: "" },
        { json: "root_directory", js: "root_directory", typ: "" },
        { json: "authorization_config", js: "authorization_config", typ: "" },
        { json: "credentials_parameter", js: "credentials_parameter", typ: "" },
        { json: "domain", js: "domain", typ: "" },
    ], false),
    "ProxyConfiguration": o([
        { json: "container_name", js: "container_name", typ: "" },
        { json: "properties", js: "properties", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "RuntimePlatform": o([
        { json: "operating_system_family", js: "operating_system_family", typ: "" },
        { json: "cpu_architecture", js: "cpu_architecture", typ: "" },
        { json: "access_point_id", js: "access_point_id", typ: "" },
        { json: "iam", js: "iam", typ: "" },
    ], false),
    "Volume": o([
        { json: "docker_volume_configuration", js: "docker_volume_configuration", typ: "" },
        { json: "efs_volume_configuration", js: "efs_volume_configuration", typ: "" },
        { json: "fsx_windows_file_server_volume_configuration", js: "fsx_windows_file_server_volume_configuration", typ: "" },
        { json: "host_path", js: "host_path", typ: "" },
        { json: "name", js: "name", typ: "" },
    ], false),
    "EcsTaskSet": o([
        { json: "service", js: "service", typ: "" },
        { json: "cluster", js: "cluster", typ: "" },
        { json: "task_definition", js: "task_definition", typ: "" },
        { json: "capacity_provider_strategy", js: "capacity_provider_strategy", typ: u(undefined, "") },
        { json: "external_id", js: "external_id", typ: u(undefined, "") },
        { json: "force_delete", js: "force_delete", typ: u(undefined, "") },
        { json: "launch_type", js: "launch_type", typ: u(undefined, "") },
        { json: "load_balancer", js: "load_balancer", typ: u(undefined, "") },
        { json: "platform_version", js: "platform_version", typ: u(undefined, "") },
        { json: "network_configuration", js: "network_configuration", typ: u(undefined, "") },
        { json: "scale", js: "scale", typ: u(undefined, "") },
        { json: "service_registries", js: "service_registries", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "wait_until_stable", js: "wait_until_stable", typ: u(undefined, "") },
        { json: "wait_until_stable_timeout", js: "wait_until_stable_timeout", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "stability_status", js: "stability_status", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "task_set_id", js: "task_set_id", typ: u(undefined, "") },
    ], false),
    "ResourceEFSAccessPoint": o([
        { json: "file_system_id", js: "file_system_id", typ: "" },
        { json: "uid", js: "uid", typ: "" },
        { json: "posix_user", js: "posix_user", typ: u(undefined, r("POSIXUser")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "creation_info", js: "creation_info", typ: u(undefined, r("CreationInfo")) },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "file_system_arn", js: "file_system_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CreationInfo": o([
        { json: "owner_gid", js: "owner_gid", typ: "" },
        { json: "owner_uid", js: "owner_uid", typ: "" },
        { json: "permissions", js: "permissions", typ: "" },
    ], false),
    "POSIXUser": o([
        { json: "gid", js: "gid", typ: "" },
        { json: "secondary_gids", js: "secondary_gids", typ: "" },
        { json: "uid", js: "uid", typ: "" },
    ], false),
    "EFSBackupPolicy": o([
        { json: "file_system_id", js: "file_system_id", typ: "" },
        { json: "backup_policy", js: "backup_policy", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceEFSFileSystem": o([
        { json: "availability_zone_name", js: "availability_zone_name", typ: u(undefined, "") },
        { json: "creation_token", js: "creation_token", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "lifecycle_policy", js: "lifecycle_policy", typ: u(undefined, "") },
        { json: "performance_mode", js: "performance_mode", typ: u(undefined, "") },
        { json: "provisioned_throughput_in_mibps", js: "provisioned_throughput_in_mibps", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "throughput_mode", js: "throughput_mode", typ: u(undefined, "") },
        { json: "transition_to_ia", js: "transition_to_ia", typ: u(undefined, "") },
        { json: "transition_to_primary_storage_class", js: "transition_to_primary_storage_class", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_zone_id", js: "availability_zone_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "number_of_mount_targets", js: "number_of_mount_targets", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "size_in_bytes", js: "size_in_bytes", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "value_in_ia", js: "value_in_ia", typ: u(undefined, "") },
        { json: "value_in_standard", js: "value_in_standard", typ: u(undefined, "") },
    ], false),
    "EFSFileSystemPolicy": o([
        { json: "file_system_id", js: "file_system_id", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "bypass_policy_lockout_safety_check", js: "bypass_policy_lockout_safety_check", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "EFSReplicationConfiguration": o([
        { json: "source_file_system_id", js: "source_file_system_id", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "availability_zone_name", js: "availability_zone_name", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "original_source_file_system_arn", js: "original_source_file_system_arn", typ: u(undefined, "") },
        { json: "source_file_system_arn", js: "source_file_system_arn", typ: u(undefined, "") },
        { json: "source_file_system_region", js: "source_file_system_region", typ: u(undefined, "") },
        { json: "destination[0].file_system_id", js: "destination[0].file_system_id", typ: u(undefined, "") },
        { json: "destination[0].status", js: "destination[0].status", typ: u(undefined, "") },
    ], false),
    "ResourceEip": o([
        { json: "address", js: "address", typ: u(undefined, "") },
        { json: "associate_with_private_ip", js: "associate_with_private_ip", typ: u(undefined, "") },
        { json: "customer_owned_ipv4_pool", js: "customer_owned_ipv4_pool", typ: u(undefined, "") },
        { json: "domain", js: "domain", typ: u(undefined, "") },
        { json: "instance", js: "instance", typ: u(undefined, "") },
        { json: "network_border_group", js: "network_border_group", typ: u(undefined, "") },
        { json: "network_interface", js: "network_interface", typ: u(undefined, "") },
        { json: "public_ipv4_pool", js: "public_ipv4_pool", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "allocation_id", js: "allocation_id", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
        { json: "carrier_ip", js: "carrier_ip", typ: u(undefined, "") },
        { json: "customer_owned_ip", js: "customer_owned_ip", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "private_dns", js: "private_dns", typ: u(undefined, "") },
        { json: "private_ip", js: "private_ip", typ: u(undefined, "") },
        { json: "public_dns", js: "public_dns", typ: u(undefined, "") },
        { json: "public_ip", js: "public_ip", typ: u(undefined, "") },
    ], false),
    "EipAssociation": o([
        { json: "allocation_id", js: "allocation_id", typ: u(undefined, "") },
        { json: "allow_reassociation", js: "allow_reassociation", typ: u(undefined, "") },
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "private_ip_address", js: "private_ip_address", typ: u(undefined, "") },
        { json: "public_ip", js: "public_ip", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
    ], false),
    "ResourceEksAddon": o([
        { json: "addon_name", js: "addon_name", typ: "" },
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "addon_version", js: "addon_version", typ: u(undefined, "") },
        { json: "configuration_values", js: "configuration_values", typ: u(undefined, "") },
        { json: "resolve_conflicts_on_create", js: "resolve_conflicts_on_create", typ: u(undefined, "") },
        { json: "resolve_conflicts_on_update", js: "resolve_conflicts_on_update", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "preserve", js: "preserve", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "modified_at", js: "modified_at", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceEksCluster": o([
        { json: "name", js: "name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "vpc_config", js: "vpc_config", typ: "" },
        { json: "key_arn", js: "key_arn", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "enabled_cluster_log_types", js: "enabled_cluster_log_types", typ: u(undefined, "") },
        { json: "encryption_config", js: "encryption_config", typ: u(undefined, r("EncryptionConfig")) },
        { json: "kubernetes_network_config", js: "kubernetes_network_config", typ: u(undefined, r("KubernetesNetworkConfig")) },
        { json: "outpost_config", js: "outpost_config", typ: u(undefined, r("OutpostConfig")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "endpoint_private_access", js: "endpoint_private_access", typ: u(undefined, "") },
        { json: "endpoint_public_access", js: "endpoint_public_access", typ: u(undefined, "") },
        { json: "public_access_cidrs", js: "public_access_cidrs", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "ip_family", js: "ip_family", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate_authority", js: "certificate_authority", typ: u(undefined, r("CertificateAuthority")) },
        { json: "cluster_id", js: "cluster_id", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "identity", js: "identity", typ: u(undefined, r("Identity")) },
        { json: "kubernetes_network_config.service_ipv6_cidr", js: "kubernetes_network_config.service_ipv6_cidr", typ: u(undefined, "") },
        { json: "platform_version", js: "platform_version", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "data", js: "data", typ: u(undefined, "") },
        { json: "oidc", js: "oidc", typ: u(undefined, r("Oidc")) },
        { json: "issuer", js: "issuer", typ: u(undefined, "") },
        { json: "cluster_security_group_id", js: "cluster_security_group_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "CertificateAuthority": o([
        { json: "data", js: "data", typ: "" },
    ], false),
    "EncryptionConfig": o([
        { json: "provider", js: "provider", typ: "" },
        { json: "resources", js: "resources", typ: "" },
        { json: "key_arn", js: "key_arn", typ: "" },
    ], false),
    "Identity": o([
        { json: "oidc", js: "oidc", typ: "" },
    ], false),
    "KubernetesNetworkConfig": o([
        { json: "ip_family", js: "ip_family", typ: "" },
    ], false),
    "Oidc": o([
        { json: "issuer", js: "issuer", typ: "" },
    ], false),
    "OutpostConfig": o([
        { json: "outpost_arns", js: "outpost_arns", typ: "" },
    ], false),
    "EksFargateProfile": o([
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "fargate_profile_name", js: "fargate_profile_name", typ: "" },
        { json: "pod_execution_role_arn", js: "pod_execution_role_arn", typ: "" },
        { json: "selector", js: "selector", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "labels", js: "labels", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EksIdentityProviderConfig": o([
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "oidc", js: "oidc", typ: "" },
        { json: "client_id", js: "client_id", typ: "" },
        { json: "identity_provider_config_name", js: "identity_provider_config_name", typ: "" },
        { json: "issuer_url", js: "issuer_url", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "groups_claim", js: "groups_claim", typ: u(undefined, "") },
        { json: "groups_prefix", js: "groups_prefix", typ: u(undefined, "") },
        { json: "required_claims", js: "required_claims", typ: u(undefined, "") },
        { json: "username_claim", js: "username_claim", typ: u(undefined, "") },
        { json: "username_prefix", js: "username_prefix", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceEksNodeGroup": o([
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "node_role_arn", js: "node_role_arn", typ: "" },
        { json: "scaling_config", js: "scaling_config", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "version", js: "version", typ: "" },
        { json: "desired_size", js: "desired_size", typ: "" },
        { json: "max_size", js: "max_size", typ: "" },
        { json: "min_size", js: "min_size", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "effect", js: "effect", typ: "" },
        { json: "ami_type", js: "ami_type", typ: u(undefined, "") },
        { json: "capacity_type", js: "capacity_type", typ: u(undefined, "") },
        { json: "disk_size", js: "disk_size", typ: u(undefined, "") },
        { json: "force_update_version", js: "force_update_version", typ: u(undefined, "") },
        { json: "instance_types", js: "instance_types", typ: u(undefined, "") },
        { json: "labels", js: "labels", typ: u(undefined, "") },
        { json: "launch_template", js: "launch_template", typ: u(undefined, "") },
        { json: "node_group_name", js: "node_group_name", typ: u(undefined, "") },
        { json: "node_group_name_prefix", js: "node_group_name_prefix", typ: u(undefined, "") },
        { json: "release_version", js: "release_version", typ: u(undefined, "") },
        { json: "remote_access", js: "remote_access", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "taint", js: "taint", typ: u(undefined, "") },
        { json: "update_config", js: "update_config", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "ec2_ssh_key", js: "ec2_ssh_key", typ: u(undefined, "") },
        { json: "source_security_group_ids", js: "source_security_group_ids", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "max_unavailable", js: "max_unavailable", typ: u(undefined, "") },
        { json: "max_unavailable_percentage", js: "max_unavailable_percentage", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "ElasticBeanstalkApplicationVersion": o([
        { json: "application", js: "application", typ: "" },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "force_delete", js: "force_delete", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ElasticBeanstalkConfigurationTemplate": o([
        { json: "name", js: "name", typ: "" },
        { json: "application", js: "application", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "environment_id", js: "environment_id", typ: u(undefined, "") },
        { json: "setting", js: "setting", typ: u(undefined, "") },
        { json: "solution_stack_name", js: "solution_stack_name", typ: u(undefined, "") },
    ], false),
    "ElasticBeanstalkEnvironment": o([
        { json: "name", js: "name", typ: "" },
        { json: "application", js: "application", typ: "" },
        { json: "cname_prefix", js: "cname_prefix", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tier", js: "tier", typ: u(undefined, "") },
        { json: "setting", js: "setting", typ: u(undefined, "") },
        { json: "solution_stack_name", js: "solution_stack_name", typ: u(undefined, "") },
        { json: "template_name", js: "template_name", typ: u(undefined, "") },
        { json: "platform_arn", js: "platform_arn", typ: u(undefined, "") },
        { json: "wait_for_ready_timeout", js: "wait_for_ready_timeout", typ: u(undefined, "") },
        { json: "poll_interval", js: "poll_interval", typ: u(undefined, "") },
        { json: "version_label", js: "version_label", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "all_settings", js: "all_settings", typ: u(undefined, "") },
        { json: "cname", js: "cname", typ: u(undefined, "") },
        { json: "autoscaling_groups", js: "autoscaling_groups", typ: u(undefined, "") },
        { json: "instances", js: "instances", typ: u(undefined, "") },
        { json: "launch_configurations", js: "launch_configurations", typ: u(undefined, "") },
        { json: "load_balancers", js: "load_balancers", typ: u(undefined, "") },
        { json: "queues", js: "queues", typ: u(undefined, "") },
        { json: "triggers", js: "triggers", typ: u(undefined, "") },
        { json: "endpoint_url", js: "endpoint_url", typ: u(undefined, "") },
    ], false),
    "ResourceElasticacheCluster": o([
        { json: "cluster_id", js: "cluster_id", typ: "" },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "node_type", js: "node_type", typ: u(undefined, "") },
        { json: "num_cache_nodes", js: "num_cache_nodes", typ: u(undefined, "") },
        { json: "parameter_group_name", js: "parameter_group_name", typ: u(undefined, "") },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "auto_minor_version_upgrade", js: "auto_minor_version_upgrade", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "az_mode", js: "az_mode", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "final_snapshot_identifier", js: "final_snapshot_identifier", typ: u(undefined, "") },
        { json: "ip_discovery", js: "ip_discovery", typ: u(undefined, "") },
        { json: "log_delivery_configuration", js: "log_delivery_configuration", typ: u(undefined, "") },
        { json: "maintenance_window", js: "maintenance_window", typ: u(undefined, "") },
        { json: "network_type", js: "network_type", typ: u(undefined, "") },
        { json: "notification_topic_arn", js: "notification_topic_arn", typ: u(undefined, "") },
        { json: "outpost_mode", js: "outpost_mode", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "preferred_availability_zones", js: "preferred_availability_zones", typ: u(undefined, "") },
        { json: "preferred_outpost_arn", js: "preferred_outpost_arn", typ: u(undefined, "") },
        { json: "replication_group_id", js: "replication_group_id", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "snapshot_arns", js: "snapshot_arns", typ: u(undefined, "") },
        { json: "snapshot_name", js: "snapshot_name", typ: u(undefined, "") },
        { json: "snapshot_retention_limit", js: "snapshot_retention_limit", typ: u(undefined, "") },
        { json: "snapshot_window", js: "snapshot_window", typ: u(undefined, "") },
        { json: "subnet_group_name", js: "subnet_group_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_encryption_enabled", js: "transit_encryption_enabled", typ: u(undefined, "") },
        { json: "destination", js: "destination", typ: u(undefined, "") },
        { json: "destination_type", js: "destination_type", typ: u(undefined, "") },
        { json: "log_format", js: "log_format", typ: u(undefined, "") },
        { json: "log_type", js: "log_type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "engine_version_actual", js: "engine_version_actual", typ: u(undefined, "") },
        { json: "cache_nodes", js: "cache_nodes", typ: u(undefined, "") },
        { json: "cluster_address", js: "cluster_address", typ: u(undefined, "") },
        { json: "configuration_endpoint", js: "configuration_endpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ElasticacheGlobalReplicationGroup": o([
        { json: "global_replication_group_id_suffix", js: "global_replication_group_id_suffix", typ: "" },
        { json: "primary_replication_group_id", js: "primary_replication_group_id", typ: "" },
        { json: "automatic_failover_enabled", js: "automatic_failover_enabled", typ: u(undefined, "") },
        { json: "cache_node_type", js: "cache_node_type", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "global_replication_group_description", js: "global_replication_group_description", typ: u(undefined, "") },
        { json: "num_node_groups", js: "num_node_groups", typ: u(undefined, "") },
        { json: "parameter_group_name", js: "parameter_group_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "engine_version_actual", js: "engine_version_actual", typ: u(undefined, "") },
        { json: "at_rest_encryption_enabled", js: "at_rest_encryption_enabled", typ: u(undefined, "") },
        { json: "auth_token_enabled", js: "auth_token_enabled", typ: u(undefined, "") },
        { json: "cluster_enabled", js: "cluster_enabled", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "global_replication_group_id", js: "global_replication_group_id", typ: u(undefined, "") },
        { json: "transit_encryption_enabled", js: "transit_encryption_enabled", typ: u(undefined, "") },
    ], false),
    "ResourceElasticacheReplicationGroup": o([
        { json: "description", js: "description", typ: "" },
        { json: "replication_group_id", js: "replication_group_id", typ: "" },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "at_rest_encryption_enabled", js: "at_rest_encryption_enabled", typ: u(undefined, "") },
        { json: "auth_token", js: "auth_token", typ: u(undefined, "") },
        { json: "auto_minor_version_upgrade", js: "auto_minor_version_upgrade", typ: u(undefined, "") },
        { json: "automatic_failover_enabled", js: "automatic_failover_enabled", typ: u(undefined, "") },
        { json: "data_tiering_enabled", js: "data_tiering_enabled", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "final_snapshot_identifier", js: "final_snapshot_identifier", typ: u(undefined, "") },
        { json: "global_replication_group_id", js: "global_replication_group_id", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "log_delivery_configuration", js: "log_delivery_configuration", typ: u(undefined, "") },
        { json: "maintenance_window", js: "maintenance_window", typ: u(undefined, "") },
        { json: "multi_az_enabled", js: "multi_az_enabled", typ: u(undefined, "") },
        { json: "node_type", js: "node_type", typ: u(undefined, "") },
        { json: "notification_topic_arn", js: "notification_topic_arn", typ: u(undefined, "") },
        { json: "num_cache_clusters", js: "num_cache_clusters", typ: u(undefined, "") },
        { json: "num_node_groups", js: "num_node_groups", typ: u(undefined, "") },
        { json: "parameter_group_name", js: "parameter_group_name", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "preferred_cache_cluster_azs", js: "preferred_cache_cluster_azs", typ: u(undefined, "") },
        { json: "replicas_per_node_group", js: "replicas_per_node_group", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "security_group_names", js: "security_group_names", typ: u(undefined, "") },
        { json: "snapshot_arns", js: "snapshot_arns", typ: u(undefined, "") },
        { json: "snapshot_name", js: "snapshot_name", typ: u(undefined, "") },
        { json: "snapshot_retention_limit", js: "snapshot_retention_limit", typ: u(undefined, "") },
        { json: "snapshot_window", js: "snapshot_window", typ: u(undefined, "") },
        { json: "subnet_group_name", js: "subnet_group_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_encryption_enabled", js: "transit_encryption_enabled", typ: u(undefined, "") },
        { json: "destination", js: "destination", typ: u(undefined, "") },
        { json: "destination_type", js: "destination_type", typ: u(undefined, "") },
        { json: "log_format", js: "log_format", typ: u(undefined, "") },
        { json: "log_type", js: "log_type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "engine_version_actual", js: "engine_version_actual", typ: u(undefined, "") },
        { json: "cluster_enabled", js: "cluster_enabled", typ: u(undefined, "") },
        { json: "configuration_endpoint_address", js: "configuration_endpoint_address", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "member_clusters", js: "member_clusters", typ: u(undefined, "") },
        { json: "primary_endpoint_address", js: "primary_endpoint_address", typ: u(undefined, "") },
        { json: "reader_endpoint_address", js: "reader_endpoint_address", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceElasticacheUser": o([
        { json: "access_string", js: "access_string", typ: "" },
        { json: "engine", js: "engine", typ: "" },
        { json: "user_id", js: "user_id", typ: "" },
        { json: "user_name", js: "user_name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "authentication_mode", js: "authentication_mode", typ: u(undefined, "") },
        { json: "no_password_required", js: "no_password_required", typ: u(undefined, "") },
        { json: "passwords", js: "passwords", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "ElasticacheUserGroup": o([
        { json: "engine", js: "engine", typ: "" },
        { json: "user_group_id", js: "user_group_id", typ: "" },
        { json: "user_ids", js: "user_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ElasticacheUserGroupAssociation": o([
        { json: "user_group_id", js: "user_group_id", typ: "" },
        { json: "user_id", js: "user_id", typ: "" },
    ], false),
    "ElasticsearchDomain": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "unit", js: "unit", typ: "" },
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "access_policies", js: "access_policies", typ: u(undefined, "") },
        { json: "advanced_options", js: "advanced_options", typ: u(undefined, "") },
        { json: "advanced_security_options", js: "advanced_security_options", typ: u(undefined, r("AdvancedSecurityOptions")) },
        { json: "auto_tune_options", js: "auto_tune_options", typ: u(undefined, r("AutoTuneOptions")) },
        { json: "cluster_config", js: "cluster_config", typ: u(undefined, r("ClusterConfig")) },
        { json: "cognito_options", js: "cognito_options", typ: u(undefined, r("CognitoOptions")) },
        { json: "domain_endpoint_options", js: "domain_endpoint_options", typ: u(undefined, r("DomainEndpointOptions")) },
        { json: "ebs_options", js: "ebs_options", typ: u(undefined, r("EbsOptions")) },
        { json: "elasticsearch_version", js: "elasticsearch_version", typ: u(undefined, "") },
        { json: "encrypt_at_rest", js: "encrypt_at_rest", typ: u(undefined, r("EncryptAtREST")) },
        { json: "log_publishing_options", js: "log_publishing_options", typ: u(undefined, r("LogPublishingOptions")) },
        { json: "node_to_node_encryption", js: "node_to_node_encryption", typ: u(undefined, r("SoftwareTokenMfaConfigurationClass")) },
        { json: "snapshot_options", js: "snapshot_options", typ: u(undefined, r("SnapshotOptions")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_options", js: "vpc_options", typ: u(undefined, r("Vpc")) },
        { json: "master_user_password", js: "master_user_password", typ: u(undefined, "") },
        { json: "availability_zone_count", js: "availability_zone_count", typ: u(undefined, "") },
        { json: "tls_security_policy", js: "tls_security_policy", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "domain_id", js: "domain_id", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "kibana_endpoint", js: "kibana_endpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_options.0.availability_zones", js: "vpc_options.0.availability_zones", typ: u(undefined, "") },
        { json: "vpc_options.0.vpc_id", js: "vpc_options.0.vpc_id", typ: u(undefined, "") },
    ], false),
    "AdvancedSecurityOptions": o([
        { json: "enabled", js: "enabled", typ: "" },
        { json: "internal_user_database_enabled", js: "internal_user_database_enabled", typ: "" },
        { json: "master_user_options", js: "master_user_options", typ: "" },
        { json: "master_user_arn", js: "master_user_arn", typ: "" },
        { json: "master_user_name", js: "master_user_name", typ: "" },
        { json: "master_user_password", js: "master_user_password", typ: "" },
        { json: "anonymous_auth_enabled", js: "anonymous_auth_enabled", typ: u(undefined, "") },
    ], false),
    "AutoTuneOptions": o([
        { json: "desired_state", js: "desired_state", typ: "" },
        { json: "maintenance_schedule", js: "maintenance_schedule", typ: "" },
        { json: "rollback_on_disable", js: "rollback_on_disable", typ: "" },
        { json: "start_at", js: "start_at", typ: "" },
        { json: "duration", js: "duration", typ: "" },
        { json: "cron_expression_for_recurrence", js: "cron_expression_for_recurrence", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "unit", js: "unit", typ: "" },
    ], false),
    "ClusterConfig": o([
        { json: "cold_storage_options", js: "cold_storage_options", typ: "" },
        { json: "dedicated_master_count", js: "dedicated_master_count", typ: "" },
        { json: "dedicated_master_enabled", js: "dedicated_master_enabled", typ: "" },
        { json: "dedicated_master_type", js: "dedicated_master_type", typ: "" },
        { json: "instance_count", js: "instance_count", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "warm_count", js: "warm_count", typ: "" },
        { json: "warm_enabled", js: "warm_enabled", typ: "" },
        { json: "warm_type", js: "warm_type", typ: "" },
        { json: "zone_awareness_config", js: "zone_awareness_config", typ: "" },
        { json: "zone_awareness_enabled", js: "zone_awareness_enabled", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "availability_zone_count", js: "availability_zone_count", typ: "" },
    ], false),
    "CognitoOptions": o([
        { json: "enabled", js: "enabled", typ: "" },
        { json: "identity_pool_id", js: "identity_pool_id", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
    ], false),
    "DomainEndpointOptions": o([
        { json: "custom_endpoint_certificate_arn", js: "custom_endpoint_certificate_arn", typ: "" },
        { json: "custom_endpoint_enabled", js: "custom_endpoint_enabled", typ: "" },
        { json: "custom_endpoint", js: "custom_endpoint", typ: "" },
        { json: "enforce_https", js: "enforce_https", typ: "" },
        { json: "tls_security_policy", js: "tls_security_policy", typ: "" },
    ], false),
    "EbsOptions": o([
        { json: "ebs_enabled", js: "ebs_enabled", typ: "" },
        { json: "iops", js: "iops", typ: "" },
        { json: "throughput", js: "throughput", typ: "" },
        { json: "volume_size", js: "volume_size", typ: "" },
        { json: "volume_type", js: "volume_type", typ: "" },
    ], false),
    "EncryptAtREST": o([
        { json: "enabled", js: "enabled", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
    ], false),
    "LogPublishingOptions": o([
        { json: "cloudwatch_log_group_arn", js: "cloudwatch_log_group_arn", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "log_type", js: "log_type", typ: "" },
    ], false),
    "SnapshotOptions": o([
        { json: "automated_snapshot_start_hour", js: "automated_snapshot_start_hour", typ: "" },
    ], false),
    "Vpc": o([
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
    ], false),
    "SearchDomainPolicy": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "access_policies", js: "access_policies", typ: u(undefined, "") },
    ], false),
    "SearchDomainSamlOptions": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "saml_options", js: "saml_options", typ: u(undefined, r("ElasticsearchDomainSamlOptionsSamlOptions")) },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ElasticsearchDomainSamlOptionsSamlOptions": o([
        { json: "enabled", js: "enabled", typ: "" },
        { json: "idp", js: "idp", typ: "" },
        { json: "master_backend_role", js: "master_backend_role", typ: "" },
        { json: "master_user_name", js: "master_user_name", typ: "" },
        { json: "roles_key", js: "roles_key", typ: "" },
        { json: "session_timeout_minutes", js: "session_timeout_minutes", typ: "" },
        { json: "subject_key", js: "subject_key", typ: "" },
        { json: "entity_id", js: "entity_id", typ: "" },
        { json: "metadata_content", js: "metadata_content", typ: "" },
    ], false),
    "ElastictranscoderPipeline": o([
        { json: "input_bucket", js: "input_bucket", typ: "" },
        { json: "role", js: "role", typ: "" },
        { json: "aws_kms_key_arn", js: "aws_kms_key_arn", typ: u(undefined, "") },
        { json: "content_config", js: "content_config", typ: u(undefined, "") },
        { json: "content_config_permissions", js: "content_config_permissions", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "notifications", js: "notifications", typ: u(undefined, "") },
        { json: "output_bucket", js: "output_bucket", typ: u(undefined, "") },
        { json: "thumbnail_config", js: "thumbnail_config", typ: u(undefined, "") },
        { json: "thumbnail_config_permissions", js: "thumbnail_config_permissions", typ: u(undefined, "") },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "storage_class", js: "storage_class", typ: u(undefined, "") },
        { json: "access", js: "access", typ: u(undefined, "") },
        { json: "grantee", js: "grantee", typ: u(undefined, "") },
        { json: "grantee_type", js: "grantee_type", typ: u(undefined, "") },
        { json: "completed", js: "completed", typ: u(undefined, "") },
        { json: "error", js: "error", typ: u(undefined, "") },
        { json: "progressing", js: "progressing", typ: u(undefined, "") },
        { json: "warning", js: "warning", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "ElastictranscoderPreset": o([
        { json: "audio", js: "audio", typ: u(undefined, "") },
        { json: "audio_codec_options", js: "audio_codec_options", typ: u(undefined, "") },
        { json: "container", js: "container", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "thumbnails", js: "thumbnails", typ: u(undefined, "") },
        { json: "video", js: "video", typ: u(undefined, "") },
        { json: "video_watermarks", js: "video_watermarks", typ: u(undefined, "") },
        { json: "audio_packing_mode", js: "audio_packing_mode", typ: u(undefined, "") },
        { json: "bit_rate", js: "bit_rate", typ: u(undefined, "") },
        { json: "channels", js: "channels", typ: u(undefined, "") },
        { json: "codec", js: "codec", typ: u(undefined, "") },
        { json: "sample_rate", js: "sample_rate", typ: u(undefined, "") },
        { json: "bit_depth", js: "bit_depth", typ: u(undefined, "") },
        { json: "bit_order", js: "bit_order", typ: u(undefined, "") },
        { json: "profile", js: "profile", typ: u(undefined, "") },
        { json: "signed", js: "signed", typ: u(undefined, "") },
        { json: "aspect_ratio", js: "aspect_ratio", typ: u(undefined, "") },
        { json: "format", js: "format", typ: u(undefined, "") },
        { json: "interval", js: "interval", typ: u(undefined, "") },
        { json: "max_height", js: "max_height", typ: u(undefined, "") },
        { json: "max_width", js: "max_width", typ: u(undefined, "") },
        { json: "padding_policy", js: "padding_policy", typ: u(undefined, "") },
        { json: "resolution", js: "resolution", typ: u(undefined, "") },
        { json: "sizing_policy", js: "sizing_policy", typ: u(undefined, "") },
        { json: "display_aspect_ratio", js: "display_aspect_ratio", typ: u(undefined, "") },
        { json: "fixed_gop", js: "fixed_gop", typ: u(undefined, "") },
        { json: "frame_rate", js: "frame_rate", typ: u(undefined, "") },
        { json: "keyframes_max_dist", js: "keyframes_max_dist", typ: u(undefined, "") },
        { json: "max_frame_rate", js: "max_frame_rate", typ: u(undefined, "") },
        { json: "horizontal_align", js: "horizontal_align", typ: u(undefined, "") },
        { json: "horizontal_offset", js: "horizontal_offset", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "opacity", js: "opacity", typ: u(undefined, "") },
        { json: "target", js: "target", typ: u(undefined, "") },
        { json: "vertical_align", js: "vertical_align", typ: u(undefined, "") },
        { json: "vertical_offset", js: "vertical_offset", typ: u(undefined, "") },
        { json: "Profile", js: "Profile", typ: u(undefined, "") },
        { json: "Level", js: "Level", typ: u(undefined, "") },
        { json: "MaxReferenceFrames", js: "MaxReferenceFrames", typ: u(undefined, "") },
        { json: "MaxBitRate", js: "MaxBitRate", typ: u(undefined, "") },
        { json: "BufferSize", js: "BufferSize", typ: u(undefined, "") },
        { json: "InterlacedMode", js: "InterlacedMode", typ: u(undefined, "") },
        { json: "ColorSpaceConversion", js: "ColorSpaceConversion", typ: u(undefined, "") },
        { json: "ChromaSubsampling", js: "ChromaSubsampling", typ: u(undefined, "") },
        { json: "LoopCount", js: "LoopCount", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "Elb": o([
        { json: "listener", js: "listener", typ: "" },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "instance_port", js: "instance_port", typ: "" },
        { json: "instance_protocol", js: "instance_protocol", typ: "" },
        { json: "lb_port", js: "lb_port", typ: "" },
        { json: "lb_protocol", js: "lb_protocol", typ: "" },
        { json: "healthy_threshold", js: "healthy_threshold", typ: "" },
        { json: "unhealthy_threshold", js: "unhealthy_threshold", typ: "" },
        { json: "interval", js: "interval", typ: "" },
        { json: "timeout", js: "timeout", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "access_logs", js: "access_logs", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "subnets", js: "subnets", typ: u(undefined, "") },
        { json: "instances", js: "instances", typ: u(undefined, "") },
        { json: "internal", js: "internal", typ: u(undefined, "") },
        { json: "health_check", js: "health_check", typ: u(undefined, "") },
        { json: "cross_zone_load_balancing", js: "cross_zone_load_balancing", typ: u(undefined, "") },
        { json: "idle_timeout", js: "idle_timeout", typ: u(undefined, "") },
        { json: "connection_draining", js: "connection_draining", typ: u(undefined, "") },
        { json: "connection_draining_timeout", js: "connection_draining_timeout", typ: u(undefined, "") },
        { json: "desync_mitigation_mode", js: "desync_mitigation_mode", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "bucket_prefix", js: "bucket_prefix", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "source_security_group", js: "source_security_group", typ: u(undefined, "") },
        { json: "source_security_group_id", js: "source_security_group_id", typ: u(undefined, "") },
        { json: "zone_id", js: "zone_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ElbAttachment": o([
        { json: "elb", js: "elb", typ: "" },
        { json: "instance", js: "instance", typ: "" },
    ], false),
    "EmrBlockPublicAccessConfiguration": o([
        { json: "block_public_security_group_rules", js: "block_public_security_group_rules", typ: "" },
        { json: "min_range", js: "min_range", typ: "" },
        { json: "max_range", js: "max_range", typ: "" },
        { json: "permitted_public_security_group_rule_range", js: "permitted_public_security_group_rule_range", typ: u(undefined, "") },
    ], false),
    "EmrCluster": o([
        { json: "release_label", js: "release_label", typ: "" },
        { json: "service_role", js: "service_role", typ: "" },
        { json: "path", js: "path", typ: "" },
        { json: "timeout_duration_minutes", js: "timeout_duration_minutes", typ: "" },
        { json: "realm", js: "realm", typ: "" },
        { json: "additional_info", js: "additional_info", typ: u(undefined, "") },
        { json: "applications", js: "applications", typ: u(undefined, "") },
        { json: "autoscaling_role", js: "autoscaling_role", typ: u(undefined, "") },
        { json: "auto_termination_policy", js: "auto_termination_policy", typ: u(undefined, r("AutoTerminationPolicy")) },
        { json: "bootstrap_action", js: "bootstrap_action", typ: u(undefined, "") },
        { json: "configurations", js: "configurations", typ: u(undefined, "") },
        { json: "core_instance_fleet", js: "core_instance_fleet", typ: u(undefined, r("CoreInstanceFleet")) },
        { json: "core_instance_group", js: "core_instance_group", typ: u(undefined, r("CoreInstanceGroup")) },
        { json: "custom_ami_id", js: "custom_ami_id", typ: u(undefined, "") },
        { json: "ebs_root_volume_size", js: "ebs_root_volume_size", typ: u(undefined, "") },
        { json: "ec2_attributes", js: "ec2_attributes", typ: u(undefined, "") },
        { json: "keep_job_flow_alive_when_no_steps", js: "keep_job_flow_alive_when_no_steps", typ: u(undefined, "") },
        { json: "kerberos_attributes", js: "kerberos_attributes", typ: u(undefined, r("KerberosAttributes")) },
        { json: "list_steps_states", js: "list_steps_states", typ: u(undefined, "") },
        { json: "log_encryption_kms_key_id", js: "log_encryption_kms_key_id", typ: u(undefined, "") },
        { json: "log_uri", js: "log_uri", typ: u(undefined, "") },
        { json: "master_instance_fleet", js: "master_instance_fleet", typ: u(undefined, r("MasterInstanceFleet")) },
        { json: "master_instance_group", js: "master_instance_group", typ: u(undefined, r("MasterInstanceGroup")) },
        { json: "placement_group_config", js: "placement_group_config", typ: u(undefined, r("PlacementGroupConfig")) },
        { json: "scale_down_behavior", js: "scale_down_behavior", typ: u(undefined, "") },
        { json: "security_configuration", js: "security_configuration", typ: u(undefined, "") },
        { json: "step", js: "step", typ: u(undefined, r("Step")) },
        { json: "step_concurrency_level", js: "step_concurrency_level", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "termination_protection", js: "termination_protection", typ: u(undefined, "") },
        { json: "visible_to_all_users", js: "visible_to_all_users", typ: u(undefined, "") },
        { json: "idle_timeout", js: "idle_timeout", typ: u(undefined, "") },
        { json: "properties", js: "properties", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "target_spot_capacity", js: "target_spot_capacity", typ: u(undefined, "") },
        { json: "volumes_per_instance", js: "volumes_per_instance", typ: u(undefined, "") },
        { json: "core_instance_group.0.id", js: "core_instance_group.0.id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "master_instance_group.0.id", js: "master_instance_group.0.id", typ: u(undefined, "") },
        { json: "master_public_dns", js: "master_public_dns", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AutoTerminationPolicy": o([
        { json: "idle_timeout", js: "idle_timeout", typ: "" },
    ], false),
    "CoreInstanceFleet": o([
        { json: "instance_type_configs", js: "instance_type_configs", typ: "" },
        { json: "launch_specifications", js: "launch_specifications", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "target_on_demand_capacity", js: "target_on_demand_capacity", typ: "" },
        { json: "target_spot_capacity", js: "target_spot_capacity", typ: "" },
        { json: "bid_price", js: "bid_price", typ: "" },
        { json: "bid_price_as_percentage_of_on_demand_price", js: "bid_price_as_percentage_of_on_demand_price", typ: "" },
        { json: "configurations", js: "configurations", typ: "" },
        { json: "ebs_config", js: "ebs_config", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "weighted_capacity", js: "weighted_capacity", typ: "" },
        { json: "on_demand_specification", js: "on_demand_specification", typ: "" },
        { json: "spot_specification", js: "spot_specification", typ: "" },
        { json: "allocation_strategy", js: "allocation_strategy", typ: "" },
        { json: "block_duration_minutes", js: "block_duration_minutes", typ: "" },
        { json: "timeout_action", js: "timeout_action", typ: "" },
        { json: "timeout_duration_minutes", js: "timeout_duration_minutes", typ: "" },
    ], false),
    "CoreInstanceGroup": o([
        { json: "autoscaling_policy", js: "autoscaling_policy", typ: "" },
        { json: "bid_price", js: "bid_price", typ: "" },
        { json: "ebs_config", js: "ebs_config", typ: "" },
        { json: "instance_count", js: "instance_count", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "iops", js: "iops", typ: "" },
        { json: "size", js: "size", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "throughput", js: "throughput", typ: "" },
        { json: "volumes_per_instance", js: "volumes_per_instance", typ: "" },
    ], false),
    "KerberosAttributes": o([
        { json: "ad_domain_join_password", js: "ad_domain_join_password", typ: "" },
        { json: "ad_domain_join_user", js: "ad_domain_join_user", typ: "" },
        { json: "cross_realm_trust_principal_password", js: "cross_realm_trust_principal_password", typ: "" },
        { json: "kdc_admin_password", js: "kdc_admin_password", typ: "" },
        { json: "realm", js: "realm", typ: "" },
    ], false),
    "MasterInstanceFleet": o([
        { json: "instance_type_configs", js: "instance_type_configs", typ: "" },
        { json: "launch_specifications", js: "launch_specifications", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "target_on_demand_capacity", js: "target_on_demand_capacity", typ: "" },
        { json: "target_spot_capacity", js: "target_spot_capacity", typ: "" },
    ], false),
    "MasterInstanceGroup": o([
        { json: "bid_price", js: "bid_price", typ: "" },
        { json: "ebs_config", js: "ebs_config", typ: "" },
        { json: "instance_count", js: "instance_count", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "name", js: "name", typ: "" },
    ], false),
    "PlacementGroupConfig": o([
        { json: "instance_role", js: "instance_role", typ: "" },
        { json: "placement_strategy", js: "placement_strategy", typ: "" },
    ], false),
    "Step": o([
        { json: "action_on_failure", js: "action_on_failure", typ: "" },
        { json: "hadoop_jar_step", js: "hadoop_jar_step", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "args", js: "args", typ: "" },
        { json: "jar", js: "jar", typ: "" },
        { json: "main_class", js: "main_class", typ: "" },
        { json: "properties", js: "properties", typ: "" },
    ], false),
    "EmrInstanceFleet": o([
        { json: "cluster_id", js: "cluster_id", typ: "" },
        { json: "instance_type_configs", js: "instance_type_configs", typ: u(undefined, "") },
        { json: "launch_specifications", js: "launch_specifications", typ: u(undefined, "") },
        { json: "target_on_demand_capacity", js: "target_on_demand_capacity", typ: u(undefined, "") },
        { json: "target_spot_capacity", js: "target_spot_capacity", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "EmrInstanceGroup": o([
        { json: "bid_price", js: "bid_price", typ: u(undefined, "") },
        { json: "autoscaling_policy", js: "autoscaling_policy", typ: u(undefined, "") },
        { json: "configurations_json", js: "configurations_json", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "size", js: "size", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "volumes_per_instance", js: "volumes_per_instance", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "EmrManagedScalingPolicy": o([
        { json: "cluster_id", js: "cluster_id", typ: "" },
        { json: "compute_limits", js: "compute_limits", typ: r("ComputeLimits") },
    ], false),
    "ComputeLimits": o([
        { json: "unit_type", js: "unit_type", typ: "" },
        { json: "minimum_capacity_units", js: "minimum_capacity_units", typ: "" },
        { json: "maximum_capacity_units", js: "maximum_capacity_units", typ: "" },
        { json: "maximum_ondemand_capacity_units", js: "maximum_ondemand_capacity_units", typ: u(undefined, "") },
        { json: "maximum_core_capacity_units", js: "maximum_core_capacity_units", typ: u(undefined, "") },
    ], false),
    "EmrSecurityConfiguration": o([
        { json: "configuration", js: "configuration", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
    ], false),
    "EmrStudio": o([
        { json: "default_s3_location", js: "default_s3_location", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "engine_security_group_id", js: "engine_security_group_id", typ: "" },
        { json: "service_role", js: "service_role", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "workspace_security_group_id", js: "workspace_security_group_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "idp_auth_url", js: "idp_auth_url", typ: u(undefined, "") },
        { json: "idp_relay_state_parameter_name", js: "idp_relay_state_parameter_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "user_role", js: "user_role", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
    ], false),
    "EmrStudioSessionMapping": o([
        { json: "identity_type", js: "identity_type", typ: "" },
        { json: "session_policy_arn", js: "session_policy_arn", typ: "" },
        { json: "studio_id", js: "studio_id", typ: "" },
        { json: "identity_name", js: "identity_name", typ: u(undefined, "") },
    ], false),
    "EmrcontainersJobTemplate": o([
        { json: "job_template_data", js: "job_template_data", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "execution_role_arn", js: "execution_role_arn", typ: "" },
        { json: "job_driver", js: "job_driver", typ: "" },
        { json: "release_label", js: "release_label", typ: "" },
        { json: "classification", js: "classification", typ: "" },
        { json: "log_group_name", js: "log_group_name", typ: "" },
        { json: "entry_point", js: "entry_point", typ: "" },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "configuration_overrides", js: "configuration_overrides", typ: u(undefined, "") },
        { json: "job_tags", js: "job_tags", typ: u(undefined, "") },
        { json: "application_configuration", js: "application_configuration", typ: u(undefined, "") },
        { json: "monitoring_configuration", js: "monitoring_configuration", typ: u(undefined, "") },
        { json: "configurations", js: "configurations", typ: u(undefined, "") },
        { json: "properties", js: "properties", typ: u(undefined, "") },
        { json: "cloud_watch_monitoring_configuration", js: "cloud_watch_monitoring_configuration", typ: u(undefined, "") },
        { json: "persistent_app_ui", js: "persistent_app_ui", typ: u(undefined, "") },
        { json: "s3_monitoring_configuration", js: "s3_monitoring_configuration", typ: u(undefined, "") },
        { json: "log_stream_name_prefix", js: "log_stream_name_prefix", typ: u(undefined, "") },
        { json: "log_uri", js: "log_uri", typ: u(undefined, "") },
        { json: "spark_sql_job_driver", js: "spark_sql_job_driver", typ: u(undefined, "") },
        { json: "spark_submit_job_driver", js: "spark_submit_job_driver", typ: u(undefined, "") },
        { json: "spark_sql_parameters", js: "spark_sql_parameters", typ: u(undefined, "") },
        { json: "entry_point_arguments", js: "entry_point_arguments", typ: u(undefined, "") },
        { json: "spark_submit_parameters", js: "spark_submit_parameters", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceEmrcontainersVirtualCluster": o([
        { json: "container_provider", js: "container_provider", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EmrserverlessApplication": o([
        { json: "name", js: "name", typ: "" },
        { json: "release_label", js: "release_label", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "initial_capacity_type", js: "initial_capacity_type", typ: "" },
        { json: "cpu", js: "cpu", typ: "" },
        { json: "memory", js: "memory", typ: "" },
        { json: "image_uri", js: "image_uri", typ: "" },
        { json: "worker_count", js: "worker_count", typ: "" },
        { json: "architecture", js: "architecture", typ: u(undefined, "") },
        { json: "auto_start_configuration", js: "auto_start_configuration", typ: u(undefined, "") },
        { json: "auto_stop_configuration", js: "auto_stop_configuration", typ: u(undefined, "") },
        { json: "image_configuration", js: "image_configuration", typ: u(undefined, "") },
        { json: "initial_capacity", js: "initial_capacity", typ: u(undefined, "") },
        { json: "maximum_capacity", js: "maximum_capacity", typ: u(undefined, "") },
        { json: "network_configuration", js: "network_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "idle_timeout_minutes", js: "idle_timeout_minutes", typ: u(undefined, "") },
        { json: "initial_capacity_config", js: "initial_capacity_config", typ: u(undefined, "") },
        { json: "disk", js: "disk", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "worker_configuration", js: "worker_configuration", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EvidentlyFeature": o([
        { json: "name", js: "name", typ: "" },
        { json: "project", js: "project", typ: "" },
        { json: "variations", js: "variations", typ: "" },
        { json: "default_variation", js: "default_variation", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "entity_overrides", js: "entity_overrides", typ: u(undefined, "") },
        { json: "evaluation_strategy", js: "evaluation_strategy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "bool_value", js: "bool_value", typ: u(undefined, "") },
        { json: "double_value", js: "double_value", typ: u(undefined, "") },
        { json: "long_value", js: "long_value", typ: u(undefined, "") },
        { json: "string_value", js: "string_value", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "evaluation_rules", js: "evaluation_rules", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "value_type", js: "value_type", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "EvidentlyLaunch": o([
        { json: "groups", js: "groups", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "project", js: "project", typ: "" },
        { json: "feature", js: "feature", typ: "" },
        { json: "variation", js: "variation", typ: "" },
        { json: "metric_definition", js: "metric_definition", typ: "" },
        { json: "entity_id_key", js: "entity_id_key", typ: "" },
        { json: "event_pattern", js: "event_pattern", typ: "" },
        { json: "value_key", js: "value_key", typ: "" },
        { json: "steps", js: "steps", typ: "" },
        { json: "group_weights", js: "group_weights", typ: "" },
        { json: "segment_overrides", js: "segment_overrides", typ: "" },
        { json: "start_time", js: "start_time", typ: "" },
        { json: "evaluation_order", js: "evaluation_order", typ: "" },
        { json: "segment", js: "segment", typ: "" },
        { json: "weights", js: "weights", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "metric_monitors", js: "metric_monitors", typ: u(undefined, "") },
        { json: "randomization_salt", js: "randomization_salt", typ: u(undefined, "") },
        { json: "scheduled_splits_config", js: "scheduled_splits_config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "unit_label", js: "unit_label", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "execution", js: "execution", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_reason", js: "status_reason", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "ended_time", js: "ended_time", typ: u(undefined, "") },
        { json: "started_time", js: "started_time", typ: u(undefined, "") },
    ], false),
    "EvidentlyProject": o([
        { json: "name", js: "name", typ: "" },
        { json: "data_delivery", js: "data_delivery", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "cloudwatch_logs", js: "cloudwatch_logs", typ: u(undefined, "") },
        { json: "s3_destination", js: "s3_destination", typ: u(undefined, "") },
        { json: "log_group", js: "log_group", typ: u(undefined, "") },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "active_experiment_count", js: "active_experiment_count", typ: u(undefined, "") },
        { json: "active_launch_count", js: "active_launch_count", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "experiment_count", js: "experiment_count", typ: u(undefined, "") },
        { json: "feature_count", js: "feature_count", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "launch_count", js: "launch_count", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EvidentlySegment": o([
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "pattern", js: "pattern", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "experiment_count", js: "experiment_count", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "launch_count", js: "launch_count", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "FinspaceKxCluster": o([
        { json: "capacity_configuration", js: "capacity_configuration", typ: r("CapacityConfiguration") },
        { json: "environment_id", js: "environment_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "release_label", js: "release_label", typ: "" },
        { json: "vpc_configuration", js: "vpc_configuration", typ: r("VpcConfiguration") },
        { json: "scale_out_cooldown_seconds", js: "scale_out_cooldown_seconds", typ: "" },
        { json: "node_count", js: "node_count", typ: "" },
        { json: "size", js: "size", typ: "" },
        { json: "auto_scaling_configuration", js: "auto_scaling_configuration", typ: u(undefined, r("AutoScalingConfiguration")) },
        { json: "availability_zone_id", js: "availability_zone_id", typ: u(undefined, "") },
        { json: "cache_storage_configurations", js: "cache_storage_configurations", typ: u(undefined, "") },
        { json: "code", js: "code", typ: u(undefined, r("Code")) },
        { json: "command_line_arguments", js: "command_line_arguments", typ: u(undefined, "") },
        { json: "database", js: "database", typ: u(undefined, r("FinspaceKxClusterDatabase")) },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "execution_role", js: "execution_role", typ: u(undefined, "") },
        { json: "initialization_script", js: "initialization_script", typ: u(undefined, "") },
        { json: "savedown_storage_configuration", js: "savedown_storage_configuration", typ: u(undefined, r("SavedownStorageConfiguration")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "s3_object_version", js: "s3_object_version", typ: u(undefined, "") },
        { json: "db_paths", js: "db_paths", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_timestamp", js: "created_timestamp", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_modified_timestamp", js: "last_modified_timestamp", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AutoScalingConfiguration": o([
        { json: "auto_scaling_metric", js: "auto_scaling_metric", typ: "" },
        { json: "min_node_count", js: "min_node_count", typ: "" },
        { json: "max_node_count", js: "max_node_count", typ: "" },
        { json: "metric_target", js: "metric_target", typ: "" },
        { json: "scale_in_cooldown_seconds", js: "scale_in_cooldown_seconds", typ: "" },
        { json: "scale_out_cooldown_seconds", js: "scale_out_cooldown_seconds", typ: "" },
    ], false),
    "CapacityConfiguration": o([
        { json: "node_count", js: "node_count", typ: "" },
    ], false),
    "Code": o([
        { json: "s3_bucket", js: "s3_bucket", typ: "" },
        { json: "s3_key", js: "s3_key", typ: "" },
        { json: "s3_object_version", js: "s3_object_version", typ: "" },
    ], false),
    "FinspaceKxClusterDatabase": o([
        { json: "database_name", js: "database_name", typ: "" },
        { json: "cache_configurations", js: "cache_configurations", typ: "" },
        { json: "changeset_id", js: "changeset_id", typ: "" },
        { json: "cache_type", js: "cache_type", typ: "" },
        { json: "db_paths", js: "db_paths", typ: "" },
    ], false),
    "SavedownStorageConfiguration": o([
        { json: "size", js: "size", typ: "" },
    ], false),
    "VpcConfiguration": o([
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "ip_address_type", js: "ip_address_type", typ: "" },
    ], false),
    "FinspaceKxDatabase": o([
        { json: "environment_id", js: "environment_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_timestamp", js: "created_timestamp", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_modified_timestamp", js: "last_modified_timestamp", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "FinspaceKxEnvironment": o([
        { json: "name", js: "name", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "custom_dns_server_name", js: "custom_dns_server_name", typ: "" },
        { json: "to", js: "to", typ: "" },
        { json: "custom_dns_configuration", js: "custom_dns_configuration", typ: u(undefined, r("CustomDNSConfiguration")) },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transit_gateway_configuration", js: "transit_gateway_configuration", typ: u(undefined, r("TransitGatewayConfiguration")) },
        { json: "attachment_network_acl_configuration", js: "attachment_network_acl_configuration", typ: u(undefined, r("AttachmentNetworkACLConfiguration")) },
        { json: "icmp_type_code", js: "icmp_type_code", typ: u(undefined, r("ICMPTypeCode")) },
        { json: "port_range", js: "port_range", typ: u(undefined, r("PortRange")) },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "created_timestamp", js: "created_timestamp", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "infrastructure_account_id", js: "infrastructure_account_id", typ: u(undefined, "") },
        { json: "last_modified_timestamp", js: "last_modified_timestamp", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AttachmentNetworkACLConfiguration": o([
        { json: "cidr_block", js: "cidr_block", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "rule_action", js: "rule_action", typ: "" },
        { json: "rule_number", js: "rule_number", typ: "" },
        { json: "icmp_type_code", js: "icmp_type_code", typ: "" },
        { json: "port_range", js: "port_range", typ: "" },
    ], false),
    "CustomDNSConfiguration": o([
        { json: "custom_dns_server_ip", js: "custom_dns_server_ip", typ: "" },
        { json: "custom_dns_server_name", js: "custom_dns_server_name", typ: "" },
    ], false),
    "ICMPTypeCode": o([
        { json: "code", js: "code", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "PortRange": o([
        { json: "from", js: "from", typ: "" },
        { json: "to", js: "to", typ: "" },
    ], false),
    "TransitGatewayConfiguration": o([
        { json: "routable_cidr_space", js: "routable_cidr_space", typ: "" },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: "" },
        { json: "attachment_network_acl_configuration", js: "attachment_network_acl_configuration", typ: "" },
    ], false),
    "FinspaceKxUser": o([
        { json: "name", js: "name", typ: "" },
        { json: "environment_id", js: "environment_id", typ: "" },
        { json: "iam_role", js: "iam_role", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "FisExperimentTemplate": o([
        { json: "action", js: "action", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "stop_condition", js: "stop_condition", typ: "" },
        { json: "action_id", js: "action_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "resource_type", js: "resource_type", typ: "" },
        { json: "selection_mode", js: "selection_mode", typ: "" },
        { json: "path", js: "path", typ: "" },
        { json: "log_schema_version", js: "log_schema_version", typ: "" },
        { json: "log_group_arn", js: "log_group_arn", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "target", js: "target", typ: u(undefined, "") },
        { json: "log_configuration", js: "log_configuration", typ: u(undefined, "") },
        { json: "parameter", js: "parameter", typ: u(undefined, "") },
        { json: "start_after", js: "start_after", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "resource_arns", js: "resource_arns", typ: u(undefined, "") },
        { json: "resource_tag", js: "resource_tag", typ: u(undefined, "") },
        { json: "cloudwatch_logs_configuration", js: "cloudwatch_logs_configuration", typ: u(undefined, "") },
        { json: "s3_configuration", js: "s3_configuration", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "FlowLog": o([
        { json: "traffic_type", js: "traffic_type", typ: "" },
        { json: "deliver_cross_account_role", js: "deliver_cross_account_role", typ: u(undefined, "") },
        { json: "eni_id", js: "eni_id", typ: u(undefined, "") },
        { json: "iam_role_arn", js: "iam_role_arn", typ: u(undefined, "") },
        { json: "log_destination_type", js: "log_destination_type", typ: u(undefined, "") },
        { json: "log_destination", js: "log_destination", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "log_format", js: "log_format", typ: u(undefined, "") },
        { json: "destination_options", js: "destination_options", typ: u(undefined, r("DestinationOptions")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DestinationOptions": o([
        { json: "file_format", js: "file_format", typ: "" },
        { json: "hive_compatible_partitions", js: "hive_compatible_partitions", typ: "" },
        { json: "per_hour_partition", js: "per_hour_partition", typ: "" },
    ], false),
    "FmsAdminAccount": o([
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "FmsPolicy": o([
        { json: "remediation_enabled", js: "remediation_enabled", typ: "" },
        { json: "security_service_policy_data", js: "security_service_policy_data", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "delete_all_policy_resources", js: "delete_all_policy_resources", typ: u(undefined, "") },
        { json: "delete_unused_fm_managed_resources", js: "delete_unused_fm_managed_resources", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "exclude_map", js: "exclude_map", typ: u(undefined, "") },
        { json: "exclude_resource_tags", js: "exclude_resource_tags", typ: u(undefined, "") },
        { json: "include_map", js: "include_map", typ: u(undefined, "") },
        { json: "resource_tags", js: "resource_tags", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
        { json: "resource_type_list", js: "resource_type_list", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "policy_update_token", js: "policy_update_token", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "FsxBackup": o([
        { json: "file_system_id", js: "file_system_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "volume_id", js: "volume_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "FsxDataRepositoryAssociation": o([
        { json: "data_repository_path", js: "data_repository_path", typ: "" },
        { json: "file_system_id", js: "file_system_id", typ: "" },
        { json: "file_system_path", js: "file_system_path", typ: "" },
        { json: "batch_import_meta_data_on_create", js: "batch_import_meta_data_on_create", typ: u(undefined, "") },
        { json: "imported_file_chunk_size", js: "imported_file_chunk_size", typ: u(undefined, "") },
        { json: "s3", js: "s3", typ: u(undefined, "") },
        { json: "delete_data_in_filesystem", js: "delete_data_in_filesystem", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "auto_export_policy", js: "auto_export_policy", typ: u(undefined, "") },
        { json: "auto_import_policy", js: "auto_import_policy", typ: u(undefined, "") },
        { json: "events", js: "events", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "FsxFileCache": o([
        { json: "file_cache_path", js: "file_cache_path", typ: "" },
        { json: "version", js: "version", typ: "" },
        { json: "deployment_type", js: "deployment_type", typ: "" },
        { json: "metadata_configuration", js: "metadata_configuration", typ: "" },
        { json: "per_unit_storage_throughput", js: "per_unit_storage_throughput", typ: "" },
        { json: "storage_capacity", js: "storage_capacity", typ: "" },
        { json: "file_cache_type", js: "file_cache_type", typ: u(undefined, "") },
        { json: "file_cache_type_version", js: "file_cache_type_version", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "copy_tags_to_data_repository_associations", js: "copy_tags_to_data_repository_associations", typ: u(undefined, "") },
        { json: "data_repository_association", js: "data_repository_association", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "lustre_configuration", js: "lustre_configuration", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "data_repository_path", js: "data_repository_path", typ: u(undefined, "") },
        { json: "data_repository_subdirectories", js: "data_repository_subdirectories", typ: u(undefined, "") },
        { json: "nfs", js: "nfs", typ: u(undefined, "") },
        { json: "dns_ips", js: "dns_ips", typ: u(undefined, "") },
        { json: "weekly_maintenance_start_time", js: "weekly_maintenance_start_time", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "data_repository_association_ids", js: "data_repository_association_ids", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "file_cache_id", js: "file_cache_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "network_interface_ids", js: "network_interface_ids", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "FsxLustreFileSystem": o([
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "storage_capacity", js: "storage_capacity", typ: u(undefined, "") },
        { json: "backup_id", js: "backup_id", typ: u(undefined, "") },
        { json: "export_path", js: "export_path", typ: u(undefined, "") },
        { json: "import_path", js: "import_path", typ: u(undefined, "") },
        { json: "imported_file_chunk_size", js: "imported_file_chunk_size", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "weekly_maintenance_start_time", js: "weekly_maintenance_start_time", typ: u(undefined, "") },
        { json: "deployment_type", js: "deployment_type", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "per_unit_storage_throughput", js: "per_unit_storage_throughput", typ: u(undefined, "") },
        { json: "automatic_backup_retention_days", js: "automatic_backup_retention_days", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "drive_cache_type", js: "drive_cache_type", typ: u(undefined, "") },
        { json: "daily_automatic_backup_start_time", js: "daily_automatic_backup_start_time", typ: u(undefined, "") },
        { json: "auto_import_policy", js: "auto_import_policy", typ: u(undefined, "") },
        { json: "copy_tags_to_backups", js: "copy_tags_to_backups", typ: u(undefined, "") },
        { json: "data_compression_type", js: "data_compression_type", typ: u(undefined, "") },
        { json: "file_system_type_version", js: "file_system_type_version", typ: u(undefined, "") },
        { json: "log_configuration", js: "log_configuration", typ: u(undefined, r("FsxLustreFileSystemLogConfiguration")) },
        { json: "root_squash_configuration", js: "root_squash_configuration", typ: u(undefined, r("RootSquashConfiguration")) },
        { json: "level", js: "level", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "network_interface_ids", js: "network_interface_ids", typ: u(undefined, "") },
        { json: "mount_name", js: "mount_name", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "FsxLustreFileSystemLogConfiguration": o([
        { json: "destination", js: "destination", typ: "" },
        { json: "level", js: "level", typ: "" },
    ], false),
    "RootSquashConfiguration": o([
        { json: "no_squash_nids", js: "no_squash_nids", typ: "" },
        { json: "root_squash", js: "root_squash", typ: "" },
    ], false),
    "FsxOntapFileSystem": o([
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "preferred_subnet_id", js: "preferred_subnet_id", typ: "" },
        { json: "throughput_capacity", js: "throughput_capacity", typ: "" },
        { json: "storage_capacity", js: "storage_capacity", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "weekly_maintenance_start_time", js: "weekly_maintenance_start_time", typ: u(undefined, "") },
        { json: "deployment_type", js: "deployment_type", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "automatic_backup_retention_days", js: "automatic_backup_retention_days", typ: u(undefined, "") },
        { json: "daily_automatic_backup_start_time", js: "daily_automatic_backup_start_time", typ: u(undefined, "") },
        { json: "disk_iops_configuration", js: "disk_iops_configuration", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "fsx_admin_password", js: "fsx_admin_password", typ: u(undefined, "") },
        { json: "route_table_ids", js: "route_table_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "mode", js: "mode", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "endpoints", js: "endpoints", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "network_interface_ids", js: "network_interface_ids", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "intercluster", js: "intercluster", typ: u(undefined, "") },
        { json: "management", js: "management", typ: u(undefined, "") },
        { json: "ip_addresses", js: "ip_addresses", typ: u(undefined, "") },
    ], false),
    "ResourceFsxOntapStorageVirtualMachine": o([
        { json: "file_system_id", js: "file_system_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "active_directory_configuration", js: "active_directory_configuration", typ: u(undefined, r("ActiveDirectoryConfiguration")) },
        { json: "root_volume_security_style", js: "root_volume_security_style", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "self_managed_active_directory", js: "self_managed_active_directory", typ: u(undefined, r("SelfManagedActiveDirectory")) },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "endpoints", js: "endpoints", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "subtype", js: "subtype", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "uuid", js: "uuid", typ: u(undefined, "") },
        { json: "iscsi", js: "iscsi", typ: u(undefined, "") },
        { json: "management", js: "management", typ: u(undefined, "") },
        { json: "nfs", js: "nfs", typ: u(undefined, "") },
        { json: "smb", js: "smb", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "ip_addresses", js: "ip_addresses", typ: u(undefined, "") },
    ], false),
    "ActiveDirectoryConfiguration": o([
        { json: "netbios_name", js: "netbios_name", typ: "" },
        { json: "self_managed_active_directory", js: "self_managed_active_directory", typ: "" },
    ], false),
    "SelfManagedActiveDirectory": o([
        { json: "dns_ips", js: "dns_ips", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "file_system_administrators_group", js: "file_system_administrators_group", typ: "" },
        { json: "organizational_unit_distinguished_name", js: "organizational_unit_distinguished_name", typ: "" },
    ], false),
    "FsxOntapVolume": o([
        { json: "name", js: "name", typ: "" },
        { json: "size_in_megabytes", js: "size_in_megabytes", typ: "" },
        { json: "storage_virtual_machine_id", js: "storage_virtual_machine_id", typ: "" },
        { json: "snaplock_type", js: "snaplock_type", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "default_retention", js: "default_retention", typ: "" },
        { json: "maximum_retention", js: "maximum_retention", typ: "" },
        { json: "minimum_retention", js: "minimum_retention", typ: "" },
        { json: "bypass_snaplock_enterprise_retention", js: "bypass_snaplock_enterprise_retention", typ: u(undefined, "") },
        { json: "copy_tags_to_backups", js: "copy_tags_to_backups", typ: u(undefined, "") },
        { json: "junction_path", js: "junction_path", typ: u(undefined, "") },
        { json: "ontap_volume_type", js: "ontap_volume_type", typ: u(undefined, "") },
        { json: "security_style", js: "security_style", typ: u(undefined, "") },
        { json: "skip_final_backup", js: "skip_final_backup", typ: u(undefined, "") },
        { json: "snaplock_configuration", js: "snaplock_configuration", typ: u(undefined, "") },
        { json: "snapshot_policy", js: "snapshot_policy", typ: u(undefined, "") },
        { json: "storage_efficiency_enabled", js: "storage_efficiency_enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tiering_policy", js: "tiering_policy", typ: u(undefined, "") },
        { json: "audit_log_volume", js: "audit_log_volume", typ: u(undefined, "") },
        { json: "autocommit_period", js: "autocommit_period", typ: u(undefined, "") },
        { json: "privileged_delete", js: "privileged_delete", typ: u(undefined, "") },
        { json: "retention_period", js: "retention_period", typ: u(undefined, "") },
        { json: "volume_append_mode_enabled", js: "volume_append_mode_enabled", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "cooling_period", js: "cooling_period", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "file_system_id", js: "file_system_id", typ: u(undefined, "") },
        { json: "flexcache_endpoint_type", js: "flexcache_endpoint_type", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "uuid", js: "uuid", typ: u(undefined, "") },
        { json: "volume_type", js: "volume_type", typ: u(undefined, "") },
    ], false),
    "FsxOpenzfsFileSystem": o([
        { json: "deployment_type", js: "deployment_type", typ: "" },
        { json: "storage_capacity", js: "storage_capacity", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "throughput_capacity", js: "throughput_capacity", typ: "" },
        { json: "client_configurations", js: "client_configurations", typ: "" },
        { json: "options", js: "options", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "storage_capacity_quota_gib", js: "storage_capacity_quota_gib", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "automatic_backup_retention_days", js: "automatic_backup_retention_days", typ: u(undefined, "") },
        { json: "backup_id", js: "backup_id", typ: u(undefined, "") },
        { json: "copy_tags_to_backups", js: "copy_tags_to_backups", typ: u(undefined, "") },
        { json: "copy_tags_to_volumes", js: "copy_tags_to_volumes", typ: u(undefined, "") },
        { json: "daily_automatic_backup_start_time", js: "daily_automatic_backup_start_time", typ: u(undefined, "") },
        { json: "disk_iops_configuration", js: "disk_iops_configuration", typ: u(undefined, "") },
        { json: "endpoint_ip_address_range", js: "endpoint_ip_address_range", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "preferred_subnet_id", js: "preferred_subnet_id", typ: u(undefined, "") },
        { json: "root_volume_configuration", js: "root_volume_configuration", typ: u(undefined, "") },
        { json: "route_table_ids", js: "route_table_ids", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "weekly_maintenance_start_time", js: "weekly_maintenance_start_time", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "mode", js: "mode", typ: u(undefined, "") },
        { json: "copy_tags_to_snapshots", js: "copy_tags_to_snapshots", typ: u(undefined, "") },
        { json: "data_compression_type", js: "data_compression_type", typ: u(undefined, "") },
        { json: "nfs_exports", js: "nfs_exports", typ: u(undefined, "") },
        { json: "read_only", js: "read_only", typ: u(undefined, "") },
        { json: "record_size_kib", js: "record_size_kib", typ: u(undefined, "") },
        { json: "user_and_group_quotas", js: "user_and_group_quotas", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "network_interface_ids", js: "network_interface_ids", typ: u(undefined, "") },
        { json: "root_volume_id", js: "root_volume_id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "FsxOpenzfsVolume": o([
        { json: "name", js: "name", typ: "" },
        { json: "parent_volume_id", js: "parent_volume_id", typ: "" },
        { json: "client_configurations", js: "client_configurations", typ: "" },
        { json: "options", js: "options", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "storage_capacity_quota_gib", js: "storage_capacity_quota_gib", typ: "" },
        { json: "Type", js: "Type", typ: "" },
        { json: "origin_snapshot", js: "origin_snapshot", typ: u(undefined, "") },
        { json: "copy_tags_to_snapshots", js: "copy_tags_to_snapshots", typ: u(undefined, "") },
        { json: "data_compression_type", js: "data_compression_type", typ: u(undefined, "") },
        { json: "delete_volume_options", js: "delete_volume_options", typ: u(undefined, "") },
        { json: "nfs_exports", js: "nfs_exports", typ: u(undefined, "") },
        { json: "read_only", js: "read_only", typ: u(undefined, "") },
        { json: "record_size_kib", js: "record_size_kib", typ: u(undefined, "") },
        { json: "user_and_group_quotas", js: "user_and_group_quotas", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceFsxWindowsFileSystem": o([
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "throughput_capacity", js: "throughput_capacity", typ: "" },
        { json: "dns_ips", js: "dns_ips", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "active_directory_id", js: "active_directory_id", typ: u(undefined, "") },
        { json: "aliases", js: "aliases", typ: u(undefined, "") },
        { json: "audit_log_configuration", js: "audit_log_configuration", typ: u(undefined, "") },
        { json: "automatic_backup_retention_days", js: "automatic_backup_retention_days", typ: u(undefined, "") },
        { json: "backup_id", js: "backup_id", typ: u(undefined, "") },
        { json: "copy_tags_to_backups", js: "copy_tags_to_backups", typ: u(undefined, "") },
        { json: "daily_automatic_backup_start_time", js: "daily_automatic_backup_start_time", typ: u(undefined, "") },
        { json: "deployment_type", js: "deployment_type", typ: u(undefined, "") },
        { json: "disk_iops_configuration", js: "disk_iops_configuration", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "preferred_subnet_id", js: "preferred_subnet_id", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "self_managed_active_directory", js: "self_managed_active_directory", typ: u(undefined, "") },
        { json: "skip_final_backup", js: "skip_final_backup", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "storage_capacity", js: "storage_capacity", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "weekly_maintenance_start_time", js: "weekly_maintenance_start_time", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "mode", js: "mode", typ: u(undefined, "") },
        { json: "file_system_administrators_group", js: "file_system_administrators_group", typ: u(undefined, "") },
        { json: "organizational_unit_distinguished_name", js: "organizational_unit_distinguished_name", typ: u(undefined, "") },
        { json: "audit_log_destination", js: "audit_log_destination", typ: u(undefined, "") },
        { json: "file_access_audit_log_level", js: "file_access_audit_log_level", typ: u(undefined, "") },
        { json: "file_share_access_audit_log_level", js: "file_share_access_audit_log_level", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "network_interface_ids", js: "network_interface_ids", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "preferred_file_server_ip", js: "preferred_file_server_ip", typ: u(undefined, "") },
        { json: "remote_administration_endpoint", js: "remote_administration_endpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "GameliftAlias": o([
        { json: "name", js: "name", typ: "" },
        { json: "routing_strategy", js: "routing_strategy", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "fleet_id", js: "fleet_id", typ: u(undefined, "") },
        { json: "message", js: "message", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Gamelift": o([
        { json: "name", js: "name", typ: "" },
        { json: "operating_system", js: "operating_system", typ: u(undefined, "") },
        { json: "storage_location", js: "storage_location", typ: u(undefined, "") },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "object_version", js: "object_version", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "zip_file", js: "zip_file", typ: u(undefined, "") },
    ], false),
    "GameliftFleet": o([
        { json: "ec2_instance_type", js: "ec2_instance_type", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "from_port", js: "from_port", typ: "" },
        { json: "ip_range", js: "ip_range", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "to_port", js: "to_port", typ: "" },
        { json: "concurrent_executions", js: "concurrent_executions", typ: "" },
        { json: "launch_path", js: "launch_path", typ: "" },
        { json: "build_id", js: "build_id", typ: u(undefined, "") },
        { json: "certificate_configuration", js: "certificate_configuration", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "ec2_inbound_permission", js: "ec2_inbound_permission", typ: u(undefined, "") },
        { json: "fleet_type", js: "fleet_type", typ: u(undefined, "") },
        { json: "instance_role_arn", js: "instance_role_arn", typ: u(undefined, "") },
        { json: "metric_groups", js: "metric_groups", typ: u(undefined, "") },
        { json: "new_game_session_protection_policy", js: "new_game_session_protection_policy", typ: u(undefined, "") },
        { json: "resource_creation_limit_policy", js: "resource_creation_limit_policy", typ: u(undefined, "") },
        { json: "runtime_configuration", js: "runtime_configuration", typ: u(undefined, "") },
        { json: "script_id", js: "script_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "certificate_type", js: "certificate_type", typ: u(undefined, "") },
        { json: "new_game_sessions_per_creator", js: "new_game_sessions_per_creator", typ: u(undefined, "") },
        { json: "policy_period_in_minutes", js: "policy_period_in_minutes", typ: u(undefined, "") },
        { json: "game_session_activation_timeout_seconds", js: "game_session_activation_timeout_seconds", typ: u(undefined, "") },
        { json: "max_concurrent_game_session_activations", js: "max_concurrent_game_session_activations", typ: u(undefined, "") },
        { json: "server_process", js: "server_process", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "build_arn", js: "build_arn", typ: u(undefined, "") },
        { json: "operating_system", js: "operating_system", typ: u(undefined, "") },
        { json: "script_arn", js: "script_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GameliftGameServerGroup": o([
        { json: "game_server_group_name", js: "game_server_group_name", typ: "" },
        { json: "max_size", js: "max_size", typ: "" },
        { json: "min_size", js: "min_size", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "target_value", js: "target_value", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "balancing_strategy", js: "balancing_strategy", typ: u(undefined, "") },
        { json: "game_server_protection_policy", js: "game_server_protection_policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_subnets", js: "vpc_subnets", typ: u(undefined, "") },
        { json: "estimated_instance_warmup", js: "estimated_instance_warmup", typ: u(undefined, "") },
        { json: "weighted_capacity", js: "weighted_capacity", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "auto_scaling_group_arn", js: "auto_scaling_group_arn", typ: u(undefined, "") },
    ], false),
    "GameliftGameSessionQueue": o([
        { json: "name", js: "name", typ: "" },
        { json: "timeout_in_seconds", js: "timeout_in_seconds", typ: "" },
        { json: "maximum_individual_player_latency_milliseconds", js: "maximum_individual_player_latency_milliseconds", typ: "" },
        { json: "custom_event_data", js: "custom_event_data", typ: u(undefined, "") },
        { json: "destinations", js: "destinations", typ: u(undefined, "") },
        { json: "notification_target", js: "notification_target", typ: u(undefined, "") },
        { json: "player_latency_policy", js: "player_latency_policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "policy_duration_seconds", js: "policy_duration_seconds", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GlacierVault": o([
        { json: "name", js: "name", typ: "" },
        { json: "events", js: "events", typ: "" },
        { json: "sns_topic", js: "sns_topic", typ: "" },
        { json: "access_policy", js: "access_policy", typ: u(undefined, "") },
        { json: "notification", js: "notification", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GlacierVaultLock": o([
        { json: "complete_lock", js: "complete_lock", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "vault_name", js: "vault_name", typ: "" },
        { json: "ignore_deletion_error", js: "ignore_deletion_error", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceGlobalacceleratorAccelerator": o([
        { json: "name", js: "name", typ: "" },
        { json: "ip_address_type", js: "ip_address_type", typ: u(undefined, "") },
        { json: "ip_addresses", js: "ip_addresses", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "attributes", js: "attributes", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "flow_logs_enabled", js: "flow_logs_enabled", typ: u(undefined, "") },
        { json: "flow_logs_s3_bucket", js: "flow_logs_s3_bucket", typ: u(undefined, "") },
        { json: "flow_logs_s3_prefix", js: "flow_logs_s3_prefix", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "dual_stack_dns_name", js: "dual_stack_dns_name", typ: u(undefined, "") },
        { json: "ip_sets", js: "ip_sets", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "ip_family", js: "ip_family", typ: u(undefined, "") },
    ], false),
    "GlobalacceleratorCustomRoutingEndpointGroup": o([
        { json: "listener_arn", js: "listener_arn", typ: "" },
        { json: "destination_configuration", js: "destination_configuration", typ: "" },
        { json: "from_port", js: "from_port", typ: "" },
        { json: "protocols", js: "protocols", typ: "" },
        { json: "to_port", js: "to_port", typ: "" },
        { json: "endpoint_configuration", js: "endpoint_configuration", typ: u(undefined, "") },
        { json: "endpoint_group_region", js: "endpoint_group_region", typ: u(undefined, "") },
        { json: "endpoint_id", js: "endpoint_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "GlobalacceleratorCustomRoutingListener": o([
        { json: "accelerator_arn", js: "accelerator_arn", typ: "" },
        { json: "port_range", js: "port_range", typ: u(undefined, "") },
        { json: "from_port", js: "from_port", typ: u(undefined, "") },
        { json: "to_port", js: "to_port", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "GlobalacceleratorEndpointGroup": o([
        { json: "listener_arn", js: "listener_arn", typ: "" },
        { json: "endpoint_port", js: "endpoint_port", typ: "" },
        { json: "listener_port", js: "listener_port", typ: "" },
        { json: "endpoint_group_region", js: "endpoint_group_region", typ: u(undefined, "") },
        { json: "health_check_interval_seconds", js: "health_check_interval_seconds", typ: u(undefined, "") },
        { json: "health_check_path", js: "health_check_path", typ: u(undefined, "") },
        { json: "health_check_port", js: "health_check_port", typ: u(undefined, "") },
        { json: "health_check_protocol", js: "health_check_protocol", typ: u(undefined, "") },
        { json: "threshold_count", js: "threshold_count", typ: u(undefined, "") },
        { json: "traffic_dial_percentage", js: "traffic_dial_percentage", typ: u(undefined, "") },
        { json: "endpoint_configuration", js: "endpoint_configuration", typ: u(undefined, "") },
        { json: "port_override", js: "port_override", typ: u(undefined, "") },
        { json: "client_ip_preservation_enabled", js: "client_ip_preservation_enabled", typ: u(undefined, "") },
        { json: "endpoint_id", js: "endpoint_id", typ: u(undefined, "") },
        { json: "weight", js: "weight", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "GlobalacceleratorListener": o([
        { json: "accelerator_arn", js: "accelerator_arn", typ: "" },
        { json: "client_affinity", js: "client_affinity", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "port_range", js: "port_range", typ: u(undefined, "") },
        { json: "from_port", js: "from_port", typ: u(undefined, "") },
        { json: "to_port", js: "to_port", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "GlueCatalogDatabase": o([
        { json: "name", js: "name", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "create_table_default_permission", js: "create_table_default_permission", typ: u(undefined, r("CreateTableDefaultPermission")) },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "location_uri", js: "location_uri", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "target_database", js: "target_database", typ: u(undefined, r("TargetDatabase")) },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CreateTableDefaultPermission": o([
        { json: "permissions", js: "permissions", typ: "" },
        { json: "principal", js: "principal", typ: "" },
        { json: "data_lake_principal_identifier", js: "data_lake_principal_identifier", typ: "" },
    ], false),
    "TargetDatabase": o([
        { json: "catalog_id", js: "catalog_id", typ: "" },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "region", js: "region", typ: "" },
    ], false),
    "GlueClassifier": o([
        { json: "name", js: "name", typ: "" },
        { json: "grok_pattern", js: "grok_pattern", typ: "" },
        { json: "json_path", js: "json_path", typ: "" },
        { json: "csv_classifier", js: "csv_classifier", typ: u(undefined, r("CSVClassifier")) },
        { json: "grok_classifier", js: "grok_classifier", typ: u(undefined, r("GrokClassifier")) },
        { json: "json_classifier", js: "json_classifier", typ: u(undefined, r("JSONClassifier")) },
        { json: "xml_classifier", js: "xml_classifier", typ: u(undefined, r("XMLClassifier")) },
        { json: "quote_symbol", js: "quote_symbol", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CSVClassifier": o([
        { json: "allow_single_column", js: "allow_single_column", typ: "" },
        { json: "contains_header", js: "contains_header", typ: "" },
        { json: "custom_datatype_configured", js: "custom_datatype_configured", typ: "" },
        { json: "custom_datatypes", js: "custom_datatypes", typ: "" },
        { json: "delimiter", js: "delimiter", typ: "" },
        { json: "disable_value_trimming", js: "disable_value_trimming", typ: "" },
        { json: "header", js: "header", typ: "" },
        { json: "quote_symbol", js: "quote_symbol", typ: "" },
    ], false),
    "GrokClassifier": o([
        { json: "classification", js: "classification", typ: "" },
        { json: "custom_patterns", js: "custom_patterns", typ: "" },
        { json: "grok_pattern", js: "grok_pattern", typ: "" },
    ], false),
    "JSONClassifier": o([
        { json: "json_path", js: "json_path", typ: "" },
    ], false),
    "XMLClassifier": o([
        { json: "classification", js: "classification", typ: "" },
        { json: "row_tag", js: "row_tag", typ: "" },
    ], false),
    "ResourceGlueConnection": o([
        { json: "name", js: "name", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "connection_properties", js: "connection_properties", typ: u(undefined, "") },
        { json: "connection_type", js: "connection_type", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "match_criteria", js: "match_criteria", typ: u(undefined, "") },
        { json: "physical_connection_requirements", js: "physical_connection_requirements", typ: u(undefined, r("PhysicalConnectionRequirements")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "PhysicalConnectionRequirements": o([
        { json: "availability_zone", js: "availability_zone", typ: "" },
        { json: "security_group_id_list", js: "security_group_id_list", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: "" },
    ], false),
    "GlueCrawler": o([
        { json: "path", js: "path", typ: "" },
        { json: "connection_name", js: "connection_name", typ: "" },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "tables", js: "tables", typ: "" },
        { json: "paths", js: "paths", typ: "" },
        { json: "maximum_traversal_depth", js: "maximum_traversal_depth", typ: "" },
        { json: "delta_tables", js: "delta_tables", typ: "" },
        { json: "write_manifest", js: "write_manifest", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "scan_all", js: "scan_all", typ: u(undefined, "") },
        { json: "scan_rate", js: "scan_rate", typ: u(undefined, "") },
        { json: "exclusions", js: "exclusions", typ: u(undefined, "") },
        { json: "enable_additional_metadata", js: "enable_additional_metadata", typ: u(undefined, "") },
        { json: "sample_size", js: "sample_size", typ: u(undefined, "") },
        { json: "event_queue_arn", js: "event_queue_arn", typ: u(undefined, "") },
        { json: "dlq_event_queue_arn", js: "dlq_event_queue_arn", typ: u(undefined, "") },
        { json: "delete_behavior", js: "delete_behavior", typ: u(undefined, "") },
        { json: "update_behavior", js: "update_behavior", typ: u(undefined, "") },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "use_lake_formation_credentials", js: "use_lake_formation_credentials", typ: u(undefined, "") },
        { json: "crawler_lineage_settings", js: "crawler_lineage_settings", typ: u(undefined, "") },
        { json: "recrawl_behavior", js: "recrawl_behavior", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GlueDataQualityRuleset": o([
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "ruleset", js: "ruleset", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "target_table", js: "target_table", typ: u(undefined, r("TargetTable")) },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_on", js: "created_on", typ: u(undefined, "") },
        { json: "last_modified_on", js: "last_modified_on", typ: u(undefined, "") },
        { json: "recommendation_run_id", js: "recommendation_run_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "TargetTable": o([
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
    ], false),
    "GlueDevEndpoint": o([
        { json: "name", js: "name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "arguments", js: "arguments", typ: u(undefined, "") },
        { json: "extra_jars_s3_path", js: "extra_jars_s3_path", typ: u(undefined, "") },
        { json: "extra_python_libs_s3_path", js: "extra_python_libs_s3_path", typ: u(undefined, "") },
        { json: "glue_version", js: "glue_version", typ: u(undefined, "") },
        { json: "number_of_nodes", js: "number_of_nodes", typ: u(undefined, "") },
        { json: "number_of_workers", js: "number_of_workers", typ: u(undefined, "") },
        { json: "public_key", js: "public_key", typ: u(undefined, "") },
        { json: "public_keys", js: "public_keys", typ: u(undefined, "") },
        { json: "security_configuration", js: "security_configuration", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "worker_type", js: "worker_type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "private_address", js: "private_address", typ: u(undefined, "") },
        { json: "public_address", js: "public_address", typ: u(undefined, "") },
        { json: "yarn_endpoint_address", js: "yarn_endpoint_address", typ: u(undefined, "") },
        { json: "zeppelin_remote_spark_interpreter_port", js: "zeppelin_remote_spark_interpreter_port", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "failure_reason", js: "failure_reason", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GlueJob": o([
        { json: "command", js: "command", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "script_location", js: "script_location", typ: "" },
        { json: "connections", js: "connections", typ: u(undefined, "") },
        { json: "default_arguments", js: "default_arguments", typ: u(undefined, "") },
        { json: "non_overridable_arguments", js: "non_overridable_arguments", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "execution_property", js: "execution_property", typ: u(undefined, "") },
        { json: "glue_version", js: "glue_version", typ: u(undefined, "") },
        { json: "execution_class", js: "execution_class", typ: u(undefined, "") },
        { json: "max_capacity", js: "max_capacity", typ: u(undefined, "") },
        { json: "max_retries", js: "max_retries", typ: u(undefined, "") },
        { json: "notification_property", js: "notification_property", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "timeout", js: "timeout", typ: u(undefined, "") },
        { json: "security_configuration", js: "security_configuration", typ: u(undefined, "") },
        { json: "number_of_workers", js: "number_of_workers", typ: u(undefined, "") },
        { json: "python_version", js: "python_version", typ: u(undefined, "") },
        { json: "runtime", js: "runtime", typ: u(undefined, "") },
        { json: "max_concurrent_runs", js: "max_concurrent_runs", typ: u(undefined, "") },
        { json: "notify_delay_after", js: "notify_delay_after", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GlueMlTransform": o([
        { json: "name", js: "name", typ: "" },
        { json: "input_record_tables", js: "input_record_tables", typ: r("TargetTable") },
        { json: "parameters", js: "parameters", typ: r("GlueMlTransformParameters") },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "glue_version", js: "glue_version", typ: u(undefined, "") },
        { json: "max_capacity", js: "max_capacity", typ: u(undefined, "") },
        { json: "max_retries", js: "max_retries", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "timeout", js: "timeout", typ: u(undefined, "") },
        { json: "worker_type", js: "worker_type", typ: u(undefined, "") },
        { json: "number_of_workers", js: "number_of_workers", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "label_count", js: "label_count", typ: u(undefined, "") },
        { json: "schema", js: "schema", typ: u(undefined, r("GlueMlTransformSchema")) },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GlueMlTransformParameters": o([
        { json: "transform_type", js: "transform_type", typ: "" },
        { json: "find_matches_parameters", js: "find_matches_parameters", typ: "" },
        { json: "accuracy_cost_trade_off", js: "accuracy_cost_trade_off", typ: u(undefined, "") },
        { json: "enforce_provided_labels", js: "enforce_provided_labels", typ: u(undefined, "") },
        { json: "precision_recall_trade_off", js: "precision_recall_trade_off", typ: u(undefined, "") },
        { json: "primary_key_column_name", js: "primary_key_column_name", typ: u(undefined, "") },
    ], false),
    "GlueMlTransformSchema": o([
        { json: "name", js: "name", typ: "" },
        { json: "data_type", js: "data_type", typ: "" },
    ], false),
    "GluePartition": o([
        { json: "database_name", js: "database_name", typ: "" },
        { json: "partition_values", js: "partition_values", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "column", js: "column", typ: "" },
        { json: "sort_order", js: "sort_order", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "storage_descriptor", js: "storage_descriptor", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "columns", js: "columns", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, "") },
        { json: "input_format", js: "input_format", typ: u(undefined, "") },
        { json: "output_format", js: "output_format", typ: u(undefined, "") },
        { json: "compressed", js: "compressed", typ: u(undefined, "") },
        { json: "number_of_buckets", js: "number_of_buckets", typ: u(undefined, "") },
        { json: "ser_de_info", js: "ser_de_info", typ: u(undefined, "") },
        { json: "bucket_columns", js: "bucket_columns", typ: u(undefined, "") },
        { json: "sort_columns", js: "sort_columns", typ: u(undefined, "") },
        { json: "skewed_info", js: "skewed_info", typ: u(undefined, "") },
        { json: "stored_as_sub_directories", js: "stored_as_sub_directories", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "serialization_library", js: "serialization_library", typ: u(undefined, "") },
        { json: "skewed_column_names", js: "skewed_column_names", typ: u(undefined, "") },
        { json: "skewed_column_value_location_maps", js: "skewed_column_value_location_maps", typ: u(undefined, "") },
        { json: "skewed_column_values", js: "skewed_column_values", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "last_analyzed_time", js: "last_analyzed_time", typ: u(undefined, "") },
        { json: "last_accessed_time", js: "last_accessed_time", typ: u(undefined, "") },
    ], false),
    "GluePartitionIndex": o([
        { json: "table_name", js: "table_name", typ: "" },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "partition_index", js: "partition_index", typ: r("PartitionIndex") },
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "GlueResourcePolicy": o([
        { json: "policy", js: "policy", typ: "" },
        { json: "enable_hybrid", js: "enable_hybrid", typ: u(undefined, "") },
    ], false),
    "GlueSchema": o([
        { json: "schema_name", js: "schema_name", typ: "" },
        { json: "registry_arn", js: "registry_arn", typ: "" },
        { json: "data_format", js: "data_format", typ: "" },
        { json: "compatibility", js: "compatibility", typ: "" },
        { json: "schema_definition", js: "schema_definition", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "registry_name", js: "registry_name", typ: u(undefined, "") },
        { json: "latest_schema_version", js: "latest_schema_version", typ: u(undefined, "") },
        { json: "next_schema_version", js: "next_schema_version", typ: u(undefined, "") },
        { json: "schema_checkpoint", js: "schema_checkpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GlueSecurityConfiguration": o([
        { json: "encryption_configuration", js: "encryption_configuration", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "cloudwatch_encryption ", js: "cloudwatch_encryption ", typ: "" },
        { json: "job_bookmarks_encryption ", js: "job_bookmarks_encryption ", typ: "" },
        { json: "s3_encryption", js: "s3_encryption", typ: "" },
        { json: "cloudwatch_encryption_mode", js: "cloudwatch_encryption_mode", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "job_bookmarks_encryption_mode", js: "job_bookmarks_encryption_mode", typ: u(undefined, "") },
        { json: "s3_encryption_mode", js: "s3_encryption_mode", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "GlueTrigger": o([
        { json: "actions", js: "actions", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "conditions", js: "conditions", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "predicate", js: "predicate", typ: u(undefined, "") },
        { json: "schedule", js: "schedule", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "start_on_creation", js: "start_on_creation", typ: u(undefined, "") },
        { json: "workflow_name", js: "workflow_name", typ: u(undefined, "") },
        { json: "event_batching_condition", js: "event_batching_condition", typ: u(undefined, "") },
        { json: "arguments", js: "arguments", typ: u(undefined, "") },
        { json: "crawler_name", js: "crawler_name", typ: u(undefined, "") },
        { json: "job_name", js: "job_name", typ: u(undefined, "") },
        { json: "timeout", js: "timeout", typ: u(undefined, "") },
        { json: "security_configuration", js: "security_configuration", typ: u(undefined, "") },
        { json: "notification_property", js: "notification_property", typ: u(undefined, "") },
        { json: "notify_delay_after", js: "notify_delay_after", typ: u(undefined, "") },
        { json: "logical", js: "logical", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "crawl_state", js: "crawl_state", typ: u(undefined, "") },
        { json: "logical_operator", js: "logical_operator", typ: u(undefined, "") },
        { json: "batch_size", js: "batch_size", typ: u(undefined, "") },
        { json: "batch_window", js: "batch_window", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GlueUserDefinedFunction": o([
        { json: "name", js: "name", typ: "" },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "class_name", js: "class_name", typ: "" },
        { json: "owner_name", js: "owner_name", typ: "" },
        { json: "owner_type", js: "owner_type", typ: "" },
        { json: "resource_type", js: "resource_type", typ: "" },
        { json: "uri", js: "uri", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
        { json: "resource_uris", js: "resource_uris", typ: u(undefined, "") },
    ], false),
    "GrafanaLicenseAssociation": o([
        { json: "license_type", js: "license_type", typ: "" },
        { json: "workspace_id", js: "workspace_id", typ: "" },
        { json: "free_trial_expiration", js: "free_trial_expiration", typ: u(undefined, "") },
        { json: "license_expiration", js: "license_expiration", typ: u(undefined, "") },
    ], false),
    "GrafanaRoleAssociation": o([
        { json: "role", js: "role", typ: "" },
        { json: "workspace_id", js: "workspace_id", typ: "" },
        { json: "group_ids", js: "group_ids", typ: u(undefined, "") },
        { json: "user_ids", js: "user_ids", typ: u(undefined, "") },
    ], false),
    "ResourceGrafanaWorkspace": o([
        { json: "account_access_type", js: "account_access_type", typ: "" },
        { json: "authentication_providers", js: "authentication_providers", typ: "" },
        { json: "permission_type", js: "permission_type", typ: "" },
        { json: "prefix_list_ids", js: "prefix_list_ids", typ: "" },
        { json: "vpce_ids", js: "vpce_ids", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "configuration", js: "configuration", typ: u(undefined, "") },
        { json: "data_sources", js: "data_sources", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "grafana_version", js: "grafana_version", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "network_access_control", js: "network_access_control", typ: u(undefined, "") },
        { json: "notification_destinations", js: "notification_destinations", typ: u(undefined, "") },
        { json: "organization_role_name", js: "organization_role_name", typ: u(undefined, "") },
        { json: "organizational_units", js: "organizational_units", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "stack_set_name", js: "stack_set_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_configuration", js: "vpc_configuration", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GrafanaWorkspaceAPIKey": o([
        { json: "key", js: "key", typ: u(undefined, "") },
    ], false),
    "GrafanaWorkspaceSamlConfiguration": o([
        { json: "editor_role_values", js: "editor_role_values", typ: "" },
        { json: "workspace_id", js: "workspace_id", typ: "" },
        { json: "admin_role_values", js: "admin_role_values", typ: u(undefined, "") },
        { json: "allowed_organizations", js: "allowed_organizations", typ: u(undefined, "") },
        { json: "email_assertion", js: "email_assertion", typ: u(undefined, "") },
        { json: "groups_assertion", js: "groups_assertion", typ: u(undefined, "") },
        { json: "idp_metadata_url", js: "idp_metadata_url", typ: u(undefined, "") },
        { json: "idp_metadata_xml", js: "idp_metadata_xml", typ: u(undefined, "") },
        { json: "login_assertion", js: "login_assertion", typ: u(undefined, "") },
        { json: "login_validity_duration", js: "login_validity_duration", typ: u(undefined, "") },
        { json: "name_assertion", js: "name_assertion", typ: u(undefined, "") },
        { json: "org_assertion", js: "org_assertion", typ: u(undefined, "") },
        { json: "role_assertion", js: "role_assertion", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "ResourceGuarddutyDetector": o([
        { json: "enable", js: "enable", typ: "" },
        { json: "audit_logs", js: "audit_logs", typ: "" },
        { json: "scan_ec2_instance_with_findings", js: "scan_ec2_instance_with_findings", typ: "" },
        { json: "ebs_volumes", js: "ebs_volumes", typ: "" },
        { json: "finding_publishing_frequency", js: "finding_publishing_frequency", typ: u(undefined, "") },
        { json: "datasources", js: "datasources", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "s3_logs", js: "s3_logs", typ: u(undefined, "") },
        { json: "kubernetes", js: "kubernetes", typ: u(undefined, "") },
        { json: "malware_protection", js: "malware_protection", typ: u(undefined, "") },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GuarddutyFilter": o([
        { json: "detector_id", js: "detector_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "rank", js: "rank", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "finding_criteria", js: "finding_criteria", typ: "" },
        { json: "field", js: "field", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "equals", js: "equals", typ: u(undefined, "") },
        { json: "not_equals", js: "not_equals", typ: u(undefined, "") },
        { json: "greater_than", js: "greater_than", typ: u(undefined, "") },
        { json: "greater_than_or_equal", js: "greater_than_or_equal", typ: u(undefined, "") },
        { json: "less_than", js: "less_than", typ: u(undefined, "") },
        { json: "less_than_or_equal", js: "less_than_or_equal", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GuarddutyInviteAccepter": o([
        { json: "detector_id", js: "detector_id", typ: "" },
        { json: "master_account_id", js: "master_account_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "GuarddutySet": o([
        { json: "activate", js: "activate", typ: "" },
        { json: "detector_id", js: "detector_id", typ: "" },
        { json: "format", js: "format", typ: "" },
        { json: "location", js: "location", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "GuarddutyMember": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "detector_id", js: "detector_id", typ: "" },
        { json: "email", js: "email", typ: "" },
        { json: "invite", js: "invite", typ: u(undefined, "") },
        { json: "invitation_message", js: "invitation_message", typ: u(undefined, "") },
        { json: "disable_email_notification", js: "disable_email_notification", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "relationship_status", js: "relationship_status", typ: u(undefined, "") },
    ], false),
    "OrganizationAdminAccount": o([
        { json: "admin_account_id", js: "admin_account_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "GuarddutyOrganizationConfiguration": o([
        { json: "detector_id", js: "detector_id", typ: "" },
        { json: "audit_logs", js: "audit_logs", typ: "" },
        { json: "enable", js: "enable", typ: "" },
        { json: "scan_ec2_instance_with_findings", js: "scan_ec2_instance_with_findings", typ: "" },
        { json: "ebs_volumes", js: "ebs_volumes", typ: "" },
        { json: "auto_enable", js: "auto_enable", typ: "" },
        { json: "auto_enable_organization_members", js: "auto_enable_organization_members", typ: u(undefined, "") },
        { json: "datasources", js: "datasources", typ: u(undefined, "") },
        { json: "s3_logs", js: "s3_logs", typ: u(undefined, "") },
        { json: "kubernetes", js: "kubernetes", typ: u(undefined, "") },
        { json: "malware_protection", js: "malware_protection", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "GuarddutyPublishingDestination": o([
        { json: "detector_id", js: "detector_id", typ: "" },
        { json: "destination_arn", js: "destination_arn", typ: "" },
        { json: "kms_key_arn", js: "kms_key_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "IamAccessKey": o([
        { json: "user", js: "user", typ: "" },
        { json: "pgp_key", js: "pgp_key", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "create_date", js: "create_date", typ: u(undefined, "") },
        { json: "encrypted_secret", js: "encrypted_secret", typ: u(undefined, "") },
        { json: "encrypted_ses_smtp_password_v4", js: "encrypted_ses_smtp_password_v4", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "key_fingerprint", js: "key_fingerprint", typ: u(undefined, "") },
        { json: "secret", js: "secret", typ: u(undefined, "") },
        { json: "ses_smtp_password_v4", js: "ses_smtp_password_v4", typ: u(undefined, "") },
    ], false),
    "ResourceIamAccountAlias": o([
        { json: "account_alias", js: "account_alias", typ: "" },
    ], false),
    "IamAccountPasswordPolicy": o([
        { json: "allow_users_to_change_password", js: "allow_users_to_change_password", typ: u(undefined, "") },
        { json: "hard_expiry", js: "hard_expiry", typ: u(undefined, "") },
        { json: "max_password_age", js: "max_password_age", typ: u(undefined, "") },
        { json: "minimum_password_length", js: "minimum_password_length", typ: u(undefined, "") },
        { json: "password_reuse_prevention", js: "password_reuse_prevention", typ: u(undefined, "") },
        { json: "require_lowercase_characters", js: "require_lowercase_characters", typ: u(undefined, "") },
        { json: "require_numbers", js: "require_numbers", typ: u(undefined, "") },
        { json: "require_symbols", js: "require_symbols", typ: u(undefined, "") },
        { json: "require_uppercase_characters", js: "require_uppercase_characters", typ: u(undefined, "") },
        { json: "expire_passwords", js: "expire_passwords", typ: u(undefined, "") },
    ], false),
    "ResourceIamGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "unique_id", js: "unique_id", typ: u(undefined, "") },
    ], false),
    "IamGroupMembership": o([
        { json: "name", js: "name", typ: "" },
        { json: "users", js: "users", typ: "" },
        { json: "group", js: "group", typ: "" },
    ], false),
    "IamPolicy": o([
        { json: "policy", js: "policy", typ: "" },
        { json: "group", js: "group", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "role", js: "role", typ: u(undefined, "") },
        { json: "user", js: "user", typ: u(undefined, "") },
    ], false),
    "ResourceIamInstanceProfile": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "role", js: "role", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "create_date", js: "create_date", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "unique_id", js: "unique_id", typ: u(undefined, "") },
    ], false),
    "ResourceIamPolicy": o([
        { json: "policy", js: "policy", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "policy_id", js: "policy_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceIamRole": o([
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "force_detach_policies", js: "force_detach_policies", typ: u(undefined, "") },
        { json: "inline_policy", js: "inline_policy", typ: u(undefined, r("InlinePolicy")) },
        { json: "managed_policy_arns", js: "managed_policy_arns", typ: u(undefined, "") },
        { json: "max_session_duration", js: "max_session_duration", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "permissions_boundary", js: "permissions_boundary", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "create_date", js: "create_date", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "unique_id", js: "unique_id", typ: u(undefined, "") },
    ], false),
    "InlinePolicy": o([
        { json: "name", js: "name", typ: "" },
        { json: "policy", js: "policy", typ: "" },
    ], false),
    "IamRolePolicyAttachment": o([
        { json: "policy_arn", js: "policy_arn", typ: "" },
    ], false),
    "IamSecurityTokenServicePreferences": o([
        { json: "global_endpoint_token_version", js: "global_endpoint_token_version", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceIamServerCertificate": o([
        { json: "certificate_body", js: "certificate_body", typ: "" },
        { json: "private_key", js: "private_key", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "certificate_chain", js: "certificate_chain", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "expiration", js: "expiration", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "upload_date", js: "upload_date", typ: u(undefined, "") },
    ], false),
    "IamServiceLinkedRole": o([
        { json: "aws_service_name", js: "aws_service_name", typ: u(undefined, "") },
        { json: "custom_suffix", js: "custom_suffix", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "create_date", js: "create_date", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "unique_id", js: "unique_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "IamServiceSpecificCredential": o([
        { json: "service_name", js: "service_name", typ: "" },
        { json: "user_name", js: "user_name", typ: "" },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "service_password", js: "service_password", typ: u(undefined, "") },
        { json: "service_user_name", js: "service_user_name", typ: u(undefined, "") },
        { json: "service_specific_credential_id", js: "service_specific_credential_id", typ: u(undefined, "") },
    ], false),
    "IamSigningCertificate": o([
        { json: "certificate_body", js: "certificate_body", typ: "" },
        { json: "user_name", js: "user_name", typ: "" },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "certificate_id", js: "certificate_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceIamUser": o([
        { json: "name", js: "name", typ: "" },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "permissions_boundary", js: "permissions_boundary", typ: u(undefined, "") },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "unique_id", js: "unique_id", typ: u(undefined, "") },
    ], false),
    "IamUserGroupMembership": o([
        { json: "groups", js: "groups", typ: "" },
        { json: "user", js: "user", typ: "" },
    ], false),
    "IamUserLoginProfile": o([
        { json: "user", js: "user", typ: "" },
        { json: "pgp_key", js: "pgp_key", typ: u(undefined, "") },
        { json: "password_length", js: "password_length", typ: u(undefined, "") },
        { json: "password_reset_required", js: "password_reset_required", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "key_fingerprint", js: "key_fingerprint", typ: u(undefined, "") },
    ], false),
    "IamVirtualMfaDevice": o([
        { json: "virtual_mfa_device_name", js: "virtual_mfa_device_name", typ: "" },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "base_32_string_seed", js: "base_32_string_seed", typ: u(undefined, "") },
        { json: "enable_date", js: "enable_date", typ: u(undefined, "") },
        { json: "qr_code_png", js: "qr_code_png", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
    ], false),
    "ResourceIdentitystoreGroup": o([
        { json: "identity_store_id", js: "identity_store_id", typ: "" },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "group_id", js: "group_id", typ: u(undefined, "") },
        { json: "external_ids", js: "external_ids", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "issuer", js: "issuer", typ: u(undefined, "") },
    ], false),
    "IdentitystoreGroupMembership": o([
        { json: "member_id", js: "member_id", typ: "" },
        { json: "group_id", js: "group_id", typ: "" },
        { json: "identity_store_id", js: "identity_store_id", typ: "" },
        { json: "membership_id", js: "membership_id", typ: u(undefined, "") },
    ], false),
    "ResourceIdentitystoreUser": o([
        { json: "display_name", js: "display_name", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "family_name", js: "family_name", typ: "" },
        { json: "given_name", js: "given_name", typ: "" },
        { json: "identity_store_id", js: "identity_store_id", typ: u(undefined, "") },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
        { json: "addresses", js: "addresses", typ: u(undefined, "") },
        { json: "emails", js: "emails", typ: u(undefined, "") },
        { json: "locale", js: "locale", typ: u(undefined, "") },
        { json: "nickname", js: "nickname", typ: u(undefined, "") },
        { json: "phone_numbers", js: "phone_numbers", typ: u(undefined, "") },
        { json: "preferred_language", js: "preferred_language", typ: u(undefined, "") },
        { json: "profile_url", js: "profile_url", typ: u(undefined, "") },
        { json: "timezone", js: "timezone", typ: u(undefined, "") },
        { json: "title", js: "title", typ: u(undefined, "") },
        { json: "user_type", js: "user_type", typ: u(undefined, "") },
        { json: "country", js: "country", typ: u(undefined, "") },
        { json: "formatted", js: "formatted", typ: u(undefined, "") },
        { json: "locality", js: "locality", typ: u(undefined, "") },
        { json: "postal_code", js: "postal_code", typ: u(undefined, "") },
        { json: "primary", js: "primary", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "street_address", js: "street_address", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "honorific_prefix", js: "honorific_prefix", typ: u(undefined, "") },
        { json: "honorific_suffix", js: "honorific_suffix", typ: u(undefined, "") },
        { json: "middle_name", js: "middle_name", typ: u(undefined, "") },
        { json: "user_id", js: "user_id", typ: u(undefined, "") },
    ], false),
    "ResourceImagebuilderContainerRecipe": o([
        { json: "component", js: "component", typ: r("Component") },
        { json: "container_type", js: "container_type", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "service", js: "service", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "dockerfile_template_data", js: "dockerfile_template_data", typ: u(undefined, "") },
        { json: "dockerfile_template_uri", js: "dockerfile_template_uri", typ: u(undefined, "") },
        { json: "instance_configuration", js: "instance_configuration", typ: u(undefined, r("InstanceConfiguration")) },
        { json: "platform_override", js: "platform_override", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "working_directory", js: "working_directory", typ: u(undefined, "") },
        { json: "parameter", js: "parameter", typ: u(undefined, r("Parameter")) },
        { json: "block_device_mapping", js: "block_device_mapping", typ: u(undefined, r("BlockDeviceMapping")) },
        { json: "image", js: "image", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "BlockDeviceMapping": o([
        { json: "device_name", js: "device_name", typ: "" },
        { json: "ebs", js: "ebs", typ: "" },
        { json: "no_device", js: "no_device", typ: "" },
        { json: "virtual_name", js: "virtual_name", typ: "" },
        { json: "delete_on_termination", js: "delete_on_termination", typ: "" },
        { json: "encrypted", js: "encrypted", typ: "" },
        { json: "iops", js: "iops", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "snapshot_id", js: "snapshot_id", typ: "" },
        { json: "throughput", js: "throughput", typ: "" },
        { json: "volume_size", js: "volume_size", typ: "" },
        { json: "volume_type", js: "volume_type", typ: "" },
    ], false),
    "Component": o([
        { json: "component_arn", js: "component_arn", typ: "" },
        { json: "parameter", js: "parameter", typ: u(undefined, "") },
    ], false),
    "InstanceConfiguration": o([
        { json: "block_device_mapping", js: "block_device_mapping", typ: "" },
        { json: "image", js: "image", typ: "" },
    ], false),
    "Parameter": o([
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: "" },
    ], false),
    "ResourceImagebuilderDistributionConfiguration": o([
        { json: "name", js: "name", typ: "" },
        { json: "distribution", js: "distribution", typ: r("Distribution") },
        { json: "repository_name", js: "repository_name", typ: "" },
        { json: "service", js: "service", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ami_distribution_configuration", js: "ami_distribution_configuration", typ: u(undefined, r("AmiDistributionConfiguration")) },
        { json: "container_distribution_configuration", js: "container_distribution_configuration", typ: u(undefined, r("ContainerDistributionConfiguration")) },
        { json: "fast_launch_configuration", js: "fast_launch_configuration", typ: u(undefined, r("FastLaunchConfiguration")) },
        { json: "launch_template_configuration", js: "launch_template_configuration", typ: u(undefined, r("LaunchTemplateConfiguration")) },
        { json: "license_configuration_arns", js: "license_configuration_arns", typ: u(undefined, "") },
        { json: "launch_permission", js: "launch_permission", typ: u(undefined, r("LaunchPermission")) },
        { json: "target_account_ids", js: "target_account_ids", typ: u(undefined, "") },
        { json: "user_ids", js: "user_ids", typ: u(undefined, "") },
        { json: "launch_template", js: "launch_template", typ: u(undefined, r("ImagebuilderDistributionConfigurationLaunchTemplate")) },
        { json: "snapshot_configuration", js: "snapshot_configuration", typ: u(undefined, r("SnapshotConfiguration")) },
        { json: "launch_template_version", js: "launch_template_version", typ: u(undefined, "") },
        { json: "target_resource_count", js: "target_resource_count", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "date_updated", js: "date_updated", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AmiDistributionConfiguration": o([
        { json: "ami_tags", js: "ami_tags", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "launch_permission", js: "launch_permission", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "target_account_ids", js: "target_account_ids", typ: "" },
    ], false),
    "ContainerDistributionConfiguration": o([
        { json: "container_tags", js: "container_tags", typ: "" },
        { json: "description", js: "description", typ: "" },
    ], false),
    "Distribution": o([
        { json: "region", js: "region", typ: "" },
        { json: "ami_distribution_configuration", js: "ami_distribution_configuration", typ: u(undefined, "") },
        { json: "container_distribution_configuration", js: "container_distribution_configuration", typ: u(undefined, "") },
        { json: "fast_launch_configuration", js: "fast_launch_configuration", typ: u(undefined, "") },
        { json: "launch_template_configuration", js: "launch_template_configuration", typ: u(undefined, "") },
        { json: "license_configuration_arns", js: "license_configuration_arns", typ: u(undefined, "") },
    ], false),
    "FastLaunchConfiguration": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "launch_template", js: "launch_template", typ: "" },
        { json: "max_parallel_launches", js: "max_parallel_launches", typ: "" },
        { json: "snapshot_configuration", js: "snapshot_configuration", typ: "" },
    ], false),
    "LaunchPermission": o([
        { json: "organization_arns", js: "organization_arns", typ: "" },
        { json: "organizational_unit_arns", js: "organizational_unit_arns", typ: "" },
        { json: "user_groups", js: "user_groups", typ: "" },
        { json: "user_ids", js: "user_ids", typ: "" },
    ], false),
    "ImagebuilderDistributionConfigurationLaunchTemplate": o([
        { json: "launch_template_id", js: "launch_template_id", typ: "" },
        { json: "launch_template_name", js: "launch_template_name", typ: "" },
        { json: "launch_template_version", js: "launch_template_version", typ: "" },
    ], false),
    "LaunchTemplateConfiguration": o([
        { json: "default", js: "default", typ: "" },
        { json: "account_id", js: "account_id", typ: "" },
        { json: "launch_template_id", js: "launch_template_id", typ: "" },
    ], false),
    "SnapshotConfiguration": o([
        { json: "target_resource_count", js: "target_resource_count", typ: "" },
    ], false),
    "ResourceImagebuilderImagePipeline": o([
        { json: "infrastructure_configuration_arn", js: "infrastructure_configuration_arn", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "container_recipe_arn", js: "container_recipe_arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "distribution_configuration_arn", js: "distribution_configuration_arn", typ: u(undefined, "") },
        { json: "enhanced_image_metadata_enabled", js: "enhanced_image_metadata_enabled", typ: u(undefined, "") },
        { json: "image_recipe_arn", js: "image_recipe_arn", typ: u(undefined, "") },
        { json: "image_scanning_configuration", js: "image_scanning_configuration", typ: u(undefined, r("ImageScanningConfiguration")) },
        { json: "image_tests_configuration", js: "image_tests_configuration", typ: u(undefined, r("ImageTestsConfiguration")) },
        { json: "schedule", js: "schedule", typ: u(undefined, r("ImagebuilderImagePipelineSchedule")) },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ecr_configuration", js: "ecr_configuration", typ: u(undefined, r("EcrConfiguration")) },
        { json: "repository_name", js: "repository_name", typ: u(undefined, "") },
        { json: "timeout_minutes", js: "timeout_minutes", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "date_last_run", js: "date_last_run", typ: u(undefined, "") },
        { json: "date_next_run", js: "date_next_run", typ: u(undefined, "") },
        { json: "date_updated", js: "date_updated", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "EcrConfiguration": o([
        { json: "container tags", js: "container tags", typ: "" },
        { json: "repository_name", js: "repository_name", typ: "" },
    ], false),
    "ImageScanningConfiguration": o([
        { json: "image_scanning_enabled", js: "image_scanning_enabled", typ: "" },
        { json: "ecr_configuration", js: "ecr_configuration", typ: "" },
    ], false),
    "ImagebuilderImagePipelineSchedule": o([
        { json: "pipeline_execution_start_condition", js: "pipeline_execution_start_condition", typ: "" },
        { json: "timezone", js: "timezone", typ: "" },
    ], false),
    "ResourceImagebuilderImageRecipe": o([
        { json: "component", js: "component", typ: u(undefined, r("Component")) },
        { json: "parent_image", js: "parent_image", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "block_device_mapping", js: "block_device_mapping", typ: u(undefined, r("BlockDeviceMapping")) },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "systems_manager_agent", js: "systems_manager_agent", typ: u(undefined, r("SystemsManagerAgent")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "working_directory", js: "working_directory", typ: u(undefined, "") },
        { json: "volume_type", js: "volume_type", typ: u(undefined, "") },
        { json: "parameter", js: "parameter", typ: u(undefined, r("Parameter")) },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SystemsManagerAgent": o([
        { json: "uninstall_after_build", js: "uninstall_after_build", typ: "" },
    ], false),
    "ResourceImagebuilderInfrastructureConfiguration": o([
        { json: "instance_profile_name", js: "instance_profile_name", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "s3_logs", js: "s3_logs", typ: r("S3Logs") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "instance_metadata_options", js: "instance_metadata_options", typ: u(undefined, r("InstanceMetadataOptions")) },
        { json: "instance_types", js: "instance_types", typ: u(undefined, "") },
        { json: "key_pair", js: "key_pair", typ: u(undefined, "") },
        { json: "logging", js: "logging", typ: u(undefined, r("Logging")) },
        { json: "resource_tags", js: "resource_tags", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "sns_topic_arn", js: "sns_topic_arn", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "terminate_instance_on_failure", js: "terminate_instance_on_failure", typ: u(undefined, "") },
        { json: "http_tokens", js: "http_tokens", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "date_created", js: "date_created", typ: u(undefined, "") },
        { json: "date_updated", js: "date_updated", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "InstanceMetadataOptions": o([
        { json: "http_put_response_hop_limit", js: "http_put_response_hop_limit", typ: "" },
        { json: "http_tokens", js: "http_tokens", typ: "" },
    ], false),
    "Logging": o([
        { json: "s3_logs", js: "s3_logs", typ: "" },
    ], false),
    "S3Logs": o([
        { json: "s3_bucket_name", js: "s3_bucket_name", typ: "" },
        { json: "s3_key_prefix", js: "s3_key_prefix", typ: u(undefined, "") },
    ], false),
    "Inspector2DelegatedAdminAccount": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "relationship_status", js: "relationship_status", typ: u(undefined, "") },
    ], false),
    "Inspector2Enabler": o([
        { json: "account_ids", js: "account_ids", typ: "" },
        { json: "resource_types", js: "resource_types", typ: "" },
    ], false),
    "Inspector2MemberAssociation": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "delegated_admin_account_id", js: "delegated_admin_account_id", typ: u(undefined, "") },
        { json: "relationship_status", js: "relationship_status", typ: u(undefined, "") },
        { json: "updated_at", js: "updated_at", typ: u(undefined, "") },
    ], false),
    "Inspector2OrganizationConfiguration": o([
        { json: "auto_enable", js: "auto_enable", typ: "" },
        { json: "ec2", js: "ec2", typ: "" },
        { json: "ecr", js: "ecr", typ: "" },
        { json: "lambda", js: "lambda", typ: u(undefined, "") },
        { json: "max_account_limit_reached", js: "max_account_limit_reached", typ: u(undefined, "") },
    ], false),
    "InspectorAssessmentTemplate": o([
        { json: "name", js: "name", typ: "" },
        { json: "target_arn", js: "target_arn", typ: "" },
        { json: "duration", js: "duration", typ: "" },
        { json: "rules_package_arns", js: "rules_package_arns", typ: "" },
        { json: "event", js: "event", typ: "" },
        { json: "topic_arn", js: "topic_arn", typ: "" },
        { json: "event_subscription", js: "event_subscription", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "InspectorResourceGroup": o([
        { json: "tags", js: "tags", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "ResourceInstance": o([
        { json: "device_name", js: "device_name", typ: "" },
        { json: "device_index", js: "device_index", typ: "" },
        { json: "network_interface_id", js: "network_interface_id", typ: "" },
        { json: "ami", js: "ami", typ: u(undefined, "") },
        { json: "associate_public_ip_address", js: "associate_public_ip_address", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "cpu_options", js: "cpu_options", typ: u(undefined, "") },
        { json: "credit_specification", js: "credit_specification", typ: u(undefined, "") },
        { json: "disable_api_stop", js: "disable_api_stop", typ: u(undefined, "") },
        { json: "disable_api_termination", js: "disable_api_termination", typ: u(undefined, "") },
        { json: "ebs_block_device", js: "ebs_block_device", typ: u(undefined, "") },
        { json: "ebs_optimized", js: "ebs_optimized", typ: u(undefined, "") },
        { json: "enclave_options", js: "enclave_options", typ: u(undefined, "") },
        { json: "ephemeral_block_device", js: "ephemeral_block_device", typ: u(undefined, "") },
        { json: "get_password_data", js: "get_password_data", typ: u(undefined, "") },
        { json: "hibernation", js: "hibernation", typ: u(undefined, "") },
        { json: "host_id", js: "host_id", typ: u(undefined, "") },
        { json: "host_resource_group_arn", js: "host_resource_group_arn", typ: u(undefined, "") },
        { json: "iam_instance_profile", js: "iam_instance_profile", typ: u(undefined, "") },
        { json: "instance_initiated_shutdown_behavior", js: "instance_initiated_shutdown_behavior", typ: u(undefined, "") },
        { json: "instance_market_options", js: "instance_market_options", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "ipv6_addresses", js: "ipv6_addresses", typ: u(undefined, "") },
        { json: "key_name", js: "key_name", typ: u(undefined, "") },
        { json: "launch_template", js: "launch_template", typ: u(undefined, "") },
        { json: "maintenance_options", js: "maintenance_options", typ: u(undefined, "") },
        { json: "metadata_options", js: "metadata_options", typ: u(undefined, "") },
        { json: "monitoring", js: "monitoring", typ: u(undefined, "") },
        { json: "network_interface", js: "network_interface", typ: u(undefined, "") },
        { json: "placement_group", js: "placement_group", typ: u(undefined, "") },
        { json: "placement_partition_number", js: "placement_partition_number", typ: u(undefined, "") },
        { json: "private_dns_name_options", js: "private_dns_name_options", typ: u(undefined, "") },
        { json: "private_ip", js: "private_ip", typ: u(undefined, "") },
        { json: "root_block_device", js: "root_block_device", typ: u(undefined, "") },
        { json: "secondary_private_ips", js: "secondary_private_ips", typ: u(undefined, "") },
        { json: "source_dest_check", js: "source_dest_check", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tenancy", js: "tenancy", typ: u(undefined, "") },
        { json: "user_data", js: "user_data", typ: u(undefined, "") },
        { json: "user_data_base64", js: "user_data_base64", typ: u(undefined, "") },
        { json: "user_data_replace_on_change", js: "user_data_replace_on_change", typ: u(undefined, "") },
        { json: "capacity_reservation_preference", js: "capacity_reservation_preference", typ: u(undefined, "") },
        { json: "capacity_reservation_id", js: "capacity_reservation_id", typ: u(undefined, "") },
        { json: "amd_sev_snp", js: "amd_sev_snp", typ: u(undefined, "") },
        { json: "core_count", js: "core_count", typ: u(undefined, "") },
        { json: "threads_per_core", js: "threads_per_core", typ: u(undefined, "") },
        { json: "delete_on_termination", js: "delete_on_termination", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "throughput", js: "throughput", typ: u(undefined, "") },
        { json: "volume_size", js: "volume_size", typ: u(undefined, "") },
        { json: "volume_type", js: "volume_type", typ: u(undefined, "") },
        { json: "snapshot_id", js: "snapshot_id", typ: u(undefined, "") },
        { json: "no_device", js: "no_device", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "auto_recovery", js: "auto_recovery", typ: u(undefined, "") },
        { json: "market_type", js: "market_type", typ: u(undefined, "") },
        { json: "spot_options", js: "spot_options", typ: u(undefined, "") },
        { json: "http_endpoint", js: "http_endpoint", typ: u(undefined, "") },
        { json: "http_protocol_ipv6", js: "http_protocol_ipv6", typ: u(undefined, "") },
        { json: "http_put_response_hop_limit", js: "http_put_response_hop_limit", typ: u(undefined, "") },
        { json: "http_tokens", js: "http_tokens", typ: u(undefined, "") },
        { json: "network_card_index", js: "network_card_index", typ: u(undefined, "") },
        { json: "enable_resource_name_dns_aaaa_record", js: "enable_resource_name_dns_aaaa_record", typ: u(undefined, "") },
        { json: "enable_resource_name_dns_a_record", js: "enable_resource_name_dns_a_record", typ: u(undefined, "") },
        { json: "hostname_type", js: "hostname_type", typ: u(undefined, "") },
        { json: "instance_interruption_behavior", js: "instance_interruption_behavior", typ: u(undefined, "") },
        { json: "max_price", js: "max_price", typ: u(undefined, "") },
        { json: "spot_instance_type", js: "spot_instance_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "capacity_reservation_specification", js: "capacity_reservation_specification", typ: u(undefined, "") },
        { json: "instance_state", js: "instance_state", typ: u(undefined, "") },
        { json: "outpost_arn", js: "outpost_arn", typ: u(undefined, "") },
        { json: "password_data", js: "password_data", typ: u(undefined, "") },
        { json: "primary_network_interface_id", js: "primary_network_interface_id", typ: u(undefined, "") },
        { json: "private_dns", js: "private_dns", typ: u(undefined, "") },
        { json: "public_dns", js: "public_dns", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "volume_id", js: "volume_id", typ: u(undefined, "") },
        { json: "instance_lifecycle", js: "instance_lifecycle", typ: u(undefined, "") },
        { json: "spot_instance_request_id", js: "spot_instance_request_id", typ: u(undefined, "") },
    ], false),
    "InternetGatewayAttachment": o([
        { json: "internet_gateway_id", js: "internet_gateway_id", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "InternetmonitorMonitor": o([
        { json: "monitor_name", js: "monitor_name", typ: "" },
        { json: "health_events_config", js: "health_events_config", typ: u(undefined, "") },
        { json: "internet_measurements_log_delivery", js: "internet_measurements_log_delivery", typ: u(undefined, "") },
        { json: "max_city_networks_to_monitor", js: "max_city_networks_to_monitor", typ: u(undefined, "") },
        { json: "resources", js: "resources", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "traffic_percentage_to_monitor", js: "traffic_percentage_to_monitor", typ: u(undefined, "") },
        { json: "availability_score_threshold", js: "availability_score_threshold", typ: u(undefined, "") },
        { json: "performance_score_threshold", js: "performance_score_threshold", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "IotAuthorizer": o([
        { json: "authorizer_function_arn", js: "authorizer_function_arn", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "signing_disabled", js: "signing_disabled", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "token_key_name", js: "token_key_name", typ: u(undefined, "") },
        { json: "token_signing_public_keys", js: "token_signing_public_keys", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "IotCertificate": o([
        { json: "active", js: "active", typ: "" },
        { json: "csr", js: "csr", typ: u(undefined, "") },
        { json: "certificate_pem", js: "certificate_pem", typ: u(undefined, "") },
        { json: "ca_pem", js: "ca_pem", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "public_key", js: "public_key", typ: u(undefined, "") },
        { json: "private_key", js: "private_key", typ: u(undefined, "") },
    ], false),
    "IotIndexingConfiguration": o([
        { json: "thing_group_indexing_mode", js: "thing_group_indexing_mode", typ: "" },
        { json: "thing_indexing_mode", js: "thing_indexing_mode", typ: "" },
        { json: "thing_group_indexing_configuration", js: "thing_group_indexing_configuration", typ: u(undefined, r("ThingGroupIndexingConfiguration")) },
        { json: "thing_indexing_configuration", js: "thing_indexing_configuration", typ: u(undefined, r("ThingIndexingConfiguration")) },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "ThingGroupIndexingConfiguration": o([
        { json: "custom_field", js: "custom_field", typ: "" },
        { json: "managed_field", js: "managed_field", typ: "" },
        { json: "thing_group_indexing_mode", js: "thing_group_indexing_mode", typ: "" },
    ], false),
    "ThingIndexingConfiguration": o([
        { json: "custom_field", js: "custom_field", typ: "" },
        { json: "device_defender_indexing_mode", js: "device_defender_indexing_mode", typ: "" },
        { json: "managed_field", js: "managed_field", typ: "" },
        { json: "named_shadow_indexing_mode", js: "named_shadow_indexing_mode", typ: "" },
        { json: "thing_connectivity_indexing_mode", js: "thing_connectivity_indexing_mode", typ: "" },
        { json: "thing_indexing_mode", js: "thing_indexing_mode", typ: "" },
    ], false),
    "IotLoggingOptions": o([
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "default_log_level", js: "default_log_level", typ: u(undefined, "") },
        { json: "disable_all_logs", js: "disable_all_logs", typ: u(undefined, "") },
    ], false),
    "IotPolicy": o([
        { json: "name", js: "name", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "default_version_id", js: "default_version_id", typ: u(undefined, "") },
    ], false),
    "IotPolicyAttachment": o([
        { json: "policy", js: "policy", typ: "" },
        { json: "target", js: "target", typ: "" },
    ], false),
    "IotProvisioningTemplate": o([
        { json: "name", js: "name", typ: "" },
        { json: "provisioning_role_arn", js: "provisioning_role_arn", typ: "" },
        { json: "template_body", js: "template_body", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "pre_provisioning_hook", js: "pre_provisioning_hook", typ: u(undefined, r("PreProvisioningHook")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "default_version_id", js: "default_version_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "PreProvisioningHook": o([
        { json: "payload_version", js: "payload_version", typ: "" },
        { json: "target_arn", js: "target_arn", typ: "" },
    ], false),
    "IotRoleAlias": o([
        { json: "alias", js: "alias", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "credential_duration", js: "credential_duration", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "IotThing": o([
        { json: "name", js: "name", typ: "" },
        { json: "attributes", js: "attributes", typ: u(undefined, "") },
        { json: "thing_type_name", js: "thing_type_name", typ: u(undefined, "") },
        { json: "default_client_id", js: "default_client_id", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "IotThingGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "parent_group_name", js: "parent_group_name", typ: u(undefined, "") },
        { json: "properties", js: "properties", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "attribute_payload", js: "attribute_payload", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "attributes", js: "attributes", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "IotThingGroupMembership": o([
        { json: "thing_name", js: "thing_name", typ: "" },
        { json: "thing_group_name", js: "thing_group_name", typ: "" },
        { json: "override_dynamic_group", js: "override_dynamic_group", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "IotThingPrincipalAttachment": o([
        { json: "principal", js: "principal", typ: "" },
        { json: "thing", js: "thing", typ: "" },
    ], false),
    "IotTopicRule": o([
        { json: "name", js: "name", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "sql", js: "sql", typ: "" },
        { json: "sql_version", js: "sql_version", typ: "" },
        { json: "alarm_name", js: "alarm_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "state_reason", js: "state_reason", typ: "" },
        { json: "state_value", js: "state_value", typ: "" },
        { json: "log_group_name", js: "log_group_name", typ: "" },
        { json: "metric_name", js: "metric_name", typ: "" },
        { json: "metric_namespace", js: "metric_namespace", typ: "" },
        { json: "metric_unit", js: "metric_unit", typ: "" },
        { json: "metric_value", js: "metric_value", typ: "" },
        { json: "hash_key_field", js: "hash_key_field", typ: "" },
        { json: "hash_key_value", js: "hash_key_value", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
        { json: "endpoint", js: "endpoint", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "index", js: "index", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "delivery_stream_name", js: "delivery_stream_name", typ: "" },
        { json: "url", js: "url", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "channel_name", js: "channel_name", typ: "" },
        { json: "input_name", js: "input_name", typ: "" },
        { json: "client_properties", js: "client_properties", typ: "" },
        { json: "destination_arn", js: "destination_arn", typ: "" },
        { json: "stream_name", js: "stream_name", typ: "" },
        { json: "function_arn", js: "function_arn", typ: "" },
        { json: "topic", js: "topic", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "message_format", js: "message_format", typ: "" },
        { json: "target_arn", js: "target_arn", typ: "" },
        { json: "queue_url", js: "queue_url", typ: "" },
        { json: "use_base64", js: "use_base64", typ: "" },
        { json: "state_machine_name", js: "state_machine_name", typ: "" },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "error_action", js: "error_action", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "metric_timestamp", js: "metric_timestamp", typ: u(undefined, "") },
        { json: "hash_key_type", js: "hash_key_type", typ: u(undefined, "") },
        { json: "payload_field", js: "payload_field", typ: u(undefined, "") },
        { json: "range_key_field", js: "range_key_field", typ: u(undefined, "") },
        { json: "range_key_type", js: "range_key_type", typ: u(undefined, "") },
        { json: "range_key_value", js: "range_key_value", typ: u(undefined, "") },
        { json: "operation", js: "operation", typ: u(undefined, "") },
        { json: "separator", js: "separator", typ: u(undefined, "") },
        { json: "batch_mode", js: "batch_mode", typ: u(undefined, "") },
        { json: "confirmation_url", js: "confirmation_url", typ: u(undefined, "") },
        { json: "http_header", js: "http_header", typ: u(undefined, "") },
        { json: "message_id", js: "message_id", typ: u(undefined, "") },
        { json: "partition", js: "partition", typ: u(undefined, "") },
        { json: "partition_key", js: "partition_key", typ: u(undefined, "") },
        { json: "qos", js: "qos", typ: u(undefined, "") },
        { json: "canned_acl", js: "canned_acl", typ: u(undefined, "") },
        { json: "execution_name_prefix", js: "execution_name_prefix", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "IotTopicRuleDestination": o([
        { json: "vpc_configuration", js: "vpc_configuration", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "IvsChannel": o([
        { json: "authorized", js: "authorized", typ: u(undefined, "") },
        { json: "latency_mode", js: "latency_mode", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "recording_configuration_arn", js: "recording_configuration_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "ingest_endpoint", js: "ingest_endpoint", typ: u(undefined, "") },
        { json: "playback_url", js: "playback_url", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "IvsPlaybackKeyPair": o([
        { json: "public_key", js: "public_key", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "fingerprint", js: "fingerprint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "IvsRecordingConfiguration": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "recording_reconnect_window_seconds", js: "recording_reconnect_window_seconds", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "domains", js: "domains", typ: u(undefined, "") },
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
    ], false),
    "IvschatRoom": o([
        { json: "logging_configuration_identifiers", js: "logging_configuration_identifiers", typ: u(undefined, "") },
        { json: "maximum_message_length", js: "maximum_message_length", typ: u(undefined, "") },
        { json: "maximum_message_rate_per_second", js: "maximum_message_rate_per_second", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "KendraDataSource": o([
        { json: "name", js: "name", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "urls", js: "urls", typ: "" },
        { json: "credentials", js: "credentials", typ: "" },
        { json: "host", js: "host", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "seed_urls", js: "seed_urls", typ: "" },
        { json: "site_maps", js: "site_maps", typ: "" },
        { json: "condition_document_attribute_key", js: "condition_document_attribute_key", typ: "" },
        { json: "operator", js: "operator", typ: "" },
        { json: "lambda_arn", js: "lambda_arn", typ: "" },
        { json: "s3_bucket", js: "s3_bucket", typ: "" },
        { json: "index_id", js: "index_id", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "configuration", js: "configuration", typ: u(undefined, "") },
        { json: "custom_document_enrichment_configuration", js: "custom_document_enrichment_configuration", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "language_code", js: "language_code", typ: u(undefined, "") },
        { json: "schedule", js: "schedule", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "s3_configuration", js: "s3_configuration", typ: u(undefined, "") },
        { json: "web_crawler_configuration", js: "web_crawler_configuration", typ: u(undefined, "") },
        { json: "access_control_list_configuration", js: "access_control_list_configuration", typ: u(undefined, "") },
        { json: "documents_metadata_configuration", js: "documents_metadata_configuration", typ: u(undefined, "") },
        { json: "exclusion_patterns", js: "exclusion_patterns", typ: u(undefined, "") },
        { json: "inclusion_patterns", js: "inclusion_patterns", typ: u(undefined, "") },
        { json: "inclusion_prefixes", js: "inclusion_prefixes", typ: u(undefined, "") },
        { json: "key_path", js: "key_path", typ: u(undefined, "") },
        { json: "s3_prefix", js: "s3_prefix", typ: u(undefined, "") },
        { json: "authentication_configuration", js: "authentication_configuration", typ: u(undefined, "") },
        { json: "crawl_depth", js: "crawl_depth", typ: u(undefined, "") },
        { json: "max_content_size_per_page_in_mega_bytes", js: "max_content_size_per_page_in_mega_bytes", typ: u(undefined, "") },
        { json: "max_links_per_page", js: "max_links_per_page", typ: u(undefined, "") },
        { json: "max_urls_per_minute_crawl_rate", js: "max_urls_per_minute_crawl_rate", typ: u(undefined, "") },
        { json: "proxy_configuration", js: "proxy_configuration", typ: u(undefined, "") },
        { json: "url_exclusion_patterns", js: "url_exclusion_patterns", typ: u(undefined, "") },
        { json: "url_inclusion_patterns", js: "url_inclusion_patterns", typ: u(undefined, "") },
        { json: "basic_authentication", js: "basic_authentication", typ: u(undefined, "") },
        { json: "seed_url_configuration", js: "seed_url_configuration", typ: u(undefined, "") },
        { json: "site_maps_configuration", js: "site_maps_configuration", typ: u(undefined, "") },
        { json: "inline_configurations", js: "inline_configurations", typ: u(undefined, "") },
        { json: "post_extraction_hook_configuration", js: "post_extraction_hook_configuration", typ: u(undefined, "") },
        { json: "pre_extraction_hook_configuration", js: "pre_extraction_hook_configuration", typ: u(undefined, "") },
        { json: "condition", js: "condition", typ: u(undefined, "") },
        { json: "document_content_deletion", js: "document_content_deletion", typ: u(undefined, "") },
        { json: "target", js: "target", typ: u(undefined, "") },
        { json: "condition_on_value", js: "condition_on_value", typ: u(undefined, "") },
        { json: "target_document_attribute_key", js: "target_document_attribute_key", typ: u(undefined, "") },
        { json: "target_document_attribute_value", js: "target_document_attribute_value", typ: u(undefined, "") },
        { json: "target_document_attribute_value_deletion", js: "target_document_attribute_value_deletion", typ: u(undefined, "") },
        { json: "date_value", js: "date_value", typ: u(undefined, "") },
        { json: "long_value", js: "long_value", typ: u(undefined, "") },
        { json: "string_list_value", js: "string_list_value", typ: u(undefined, "") },
        { json: "string", js: "string", typ: u(undefined, "") },
        { json: "invocation_condition", js: "invocation_condition", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "data_source_id", js: "data_source_id", typ: u(undefined, "") },
        { json: "error_message", js: "error_message", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "updated_at", js: "updated_at", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceKendraExperience": o([
        { json: "name", js: "name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "identity_attribute_name", js: "identity_attribute_name", typ: "" },
        { json: "index_id", js: "index_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "content_source_configuration", js: "content_source_configuration", typ: u(undefined, "") },
        { json: "user_identity_configuration", js: "user_identity_configuration", typ: u(undefined, "") },
        { json: "data_source_ids", js: "data_source_ids", typ: u(undefined, "") },
        { json: "direct_put_content", js: "direct_put_content", typ: u(undefined, "") },
        { json: "faq_ids", js: "faq_ids", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "experience_id", js: "experience_id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "PurpleKendra": o([
        { json: "name", js: "name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "source_s3_path", js: "source_s3_path", typ: "" },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "index_id", js: "index_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "query_suggestions_block_list_id", js: "query_suggestions_block_list_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "ResourceKeyPair": o([
        { json: "public_key", js: "public_key", typ: "" },
        { json: "key_name", js: "key_name", typ: u(undefined, "") },
        { json: "key_name_prefix", js: "key_name_prefix", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "key_pair_id", js: "key_pair_id", typ: u(undefined, "") },
        { json: "key_type", js: "key_type", typ: u(undefined, "") },
        { json: "fingerprint", js: "fingerprint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "KeyspacesTable": o([
        { json: "keyspace_name", js: "keyspace_name", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "message", js: "message", typ: "" },
        { json: "column", js: "column", typ: "" },
        { json: "partition_key", js: "partition_key", typ: "" },
        { json: "clustering_key", js: "clustering_key", typ: "" },
        { json: "static_column", js: "static_column", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "order_by", js: "order_by", typ: "" },
        { json: "capacity_specification", js: "capacity_specification", typ: u(undefined, "") },
        { json: "client_side_timestamps", js: "client_side_timestamps", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "default_time_to_live", js: "default_time_to_live", typ: u(undefined, "") },
        { json: "encryption_specification", js: "encryption_specification", typ: u(undefined, "") },
        { json: "point_in_time_recovery", js: "point_in_time_recovery", typ: u(undefined, "") },
        { json: "schema_definition", js: "schema_definition", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ttl", js: "ttl", typ: u(undefined, "") },
        { json: "read_capacity_units", js: "read_capacity_units", typ: u(undefined, "") },
        { json: "throughput_mode", js: "throughput_mode", typ: u(undefined, "") },
        { json: "write_capacity_units", js: "write_capacity_units", typ: u(undefined, "") },
        { json: "kms_key_identifier", js: "kms_key_identifier", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "KinesisAnalyticsApplication": o([
        { json: "name", js: "name", typ: "" },
        { json: "log_stream_arn", js: "log_stream_arn", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "name_prefix", js: "name_prefix", typ: "" },
        { json: "schema", js: "schema", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "record_format_type", js: "record_format_type", typ: "" },
        { json: "record_columns", js: "record_columns", typ: "" },
        { json: "record_format", js: "record_format", typ: "" },
        { json: "count", js: "count", typ: "" },
        { json: "lambda", js: "lambda", typ: "" },
        { json: "starting_position", js: "starting_position", typ: "" },
        { json: "sql_type", js: "sql_type", typ: "" },
        { json: "record_column_delimiter", js: "record_column_delimiter", typ: "" },
        { json: "record_row_delimiter", js: "record_row_delimiter", typ: "" },
        { json: "record_row_path", js: "record_row_path", typ: "" },
        { json: "bucket_arn", js: "bucket_arn", typ: "" },
        { json: "file_key", js: "file_key", typ: "" },
        { json: "code", js: "code", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "cloudwatch_logging_options", js: "cloudwatch_logging_options", typ: u(undefined, "") },
        { json: "inputs", js: "inputs", typ: u(undefined, "") },
        { json: "outputs", js: "outputs", typ: u(undefined, "") },
        { json: "reference_data_sources", js: "reference_data_sources", typ: u(undefined, "") },
        { json: "start_application", js: "start_application", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "kinesis_firehose", js: "kinesis_firehose", typ: u(undefined, "") },
        { json: "kinesis_stream", js: "kinesis_stream", typ: u(undefined, "") },
        { json: "parallelism", js: "parallelism", typ: u(undefined, "") },
        { json: "processing_configuration", js: "processing_configuration", typ: u(undefined, "") },
        { json: "s3", js: "s3", typ: u(undefined, "") },
        { json: "record_encoding", js: "record_encoding", typ: u(undefined, "") },
        { json: "mapping", js: "mapping", typ: u(undefined, "") },
        { json: "mapping_parameters", js: "mapping_parameters", typ: u(undefined, "") },
        { json: "csv", js: "csv", typ: u(undefined, "") },
        { json: "json", js: "json", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "create_timestamp", js: "create_timestamp", typ: u(undefined, "") },
        { json: "last_update_timestamp", js: "last_update_timestamp", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "KinesisFirehoseDeliveryStream": o([
        { json: "name", js: "name", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "cluster_jdbcurl", js: "cluster_jdbcurl", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "s3_configuration", js: "s3_configuration", typ: "" },
        { json: "data_table_name", js: "data_table_name", typ: "" },
        { json: "index_name", js: "index_name", typ: "" },
        { json: "hec_endpoint", js: "hec_endpoint", typ: "" },
        { json: "hec_token", js: "hec_token", typ: "" },
        { json: "url", js: "url", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "parameter_name", js: "parameter_name", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "kinesis_source_configuration", js: "kinesis_source_configuration", typ: u(undefined, "") },
        { json: "server_side_encryption", js: "server_side_encryption", typ: u(undefined, "") },
        { json: "extended_s3_configuration", js: "extended_s3_configuration", typ: u(undefined, "") },
        { json: "redshift_configuration", js: "redshift_configuration", typ: u(undefined, "") },
        { json: "elasticsearch_configuration", js: "elasticsearch_configuration", typ: u(undefined, "") },
        { json: "opensearch_configuration", js: "opensearch_configuration", typ: u(undefined, "") },
        { json: "splunk_configuration", js: "splunk_configuration", typ: u(undefined, "") },
        { json: "http_endpoint_configuration", js: "http_endpoint_configuration", typ: u(undefined, "") },
        { json: "key_arn", js: "key_arn", typ: u(undefined, "") },
        { json: "data_format_conversion_configuration", js: "data_format_conversion_configuration", typ: u(undefined, r("DataFormatConversionConfiguration")) },
        { json: "processing_configuration", js: "processing_configuration", typ: u(undefined, "") },
        { json: "s3_backup_mode", js: "s3_backup_mode", typ: u(undefined, "") },
        { json: "s3_backup_configuration", js: "s3_backup_configuration", typ: u(undefined, "") },
        { json: "dynamic_partitioning_configuration", js: "dynamic_partitioning_configuration", typ: u(undefined, "") },
        { json: "retry_duration", js: "retry_duration", typ: u(undefined, "") },
        { json: "copy_options", js: "copy_options", typ: u(undefined, "") },
        { json: "data_table_columns", js: "data_table_columns", typ: u(undefined, "") },
        { json: "cluster_endpoint", js: "cluster_endpoint", typ: u(undefined, "") },
        { json: "index_rotation_period", js: "index_rotation_period", typ: u(undefined, "") },
        { json: "type_name", js: "type_name", typ: u(undefined, "") },
        { json: "vpc_config", js: "vpc_config", typ: u(undefined, "") },
        { json: "hec_acknowledgment_timeout", js: "hec_acknowledgment_timeout", typ: u(undefined, "") },
        { json: "hec_endpoint_type", js: "hec_endpoint_type", typ: u(undefined, "") },
        { json: "access_key", js: "access_key", typ: u(undefined, "") },
        { json: "request_configuration", js: "request_configuration", typ: u(undefined, "") },
        { json: "log_group_name", js: "log_group_name", typ: u(undefined, "") },
        { json: "log_stream_name", js: "log_stream_name", typ: u(undefined, "") },
        { json: "processors", js: "processors", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "content_encoding", js: "content_encoding", typ: u(undefined, "") },
        { json: "common_attributes", js: "common_attributes", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataFormatConversionConfiguration": o([
        { json: "input_format_configuration", js: "input_format_configuration", typ: "" },
        { json: "output_format_configuration", js: "output_format_configuration", typ: "" },
        { json: "schema_configuration", js: "schema_configuration", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "bucket_arn", js: "bucket_arn", typ: "" },
        { json: "prefix", js: "prefix", typ: "" },
        { json: "buffering_size", js: "buffering_size", typ: "" },
        { json: "buffering_interval", js: "buffering_interval", typ: "" },
        { json: "compression_format", js: "compression_format", typ: "" },
        { json: "error_output_prefix", js: "error_output_prefix", typ: "" },
        { json: "kms_key_arn", js: "kms_key_arn", typ: "" },
        { json: "cloudwatch_logging_options", js: "cloudwatch_logging_options", typ: "" },
        { json: "hive_json_ser_de", js: "hive_json_ser_de", typ: "" },
        { json: "open_x_json_ser_de", js: "open_x_json_ser_de", typ: "" },
        { json: "timestamp_formats", js: "timestamp_formats", typ: "" },
        { json: "case_insensitive", js: "case_insensitive", typ: "" },
        { json: "column_to_json_key_mappings", js: "column_to_json_key_mappings", typ: "" },
        { json: "convert_dots_in_json_keys_to_underscores", js: "convert_dots_in_json_keys_to_underscores", typ: "" },
        { json: "orc_ser_de", js: "orc_ser_de", typ: "" },
        { json: "parquet_ser_de", js: "parquet_ser_de", typ: "" },
        { json: "block_size_bytes", js: "block_size_bytes", typ: "" },
        { json: "bloom_filter_columns", js: "bloom_filter_columns", typ: "" },
        { json: "bloom_filter_false_positive_probability", js: "bloom_filter_false_positive_probability", typ: "" },
        { json: "compression", js: "compression", typ: "" },
        { json: "dictionary_key_threshold", js: "dictionary_key_threshold", typ: "" },
        { json: "enable_padding", js: "enable_padding", typ: "" },
        { json: "format_version", js: "format_version", typ: "" },
        { json: "padding_tolerance", js: "padding_tolerance", typ: "" },
        { json: "row_index_stride", js: "row_index_stride", typ: "" },
        { json: "stripe_size_bytes", js: "stripe_size_bytes", typ: "" },
        { json: "enable_dictionary_compression", js: "enable_dictionary_compression", typ: "" },
        { json: "max_padding_bytes", js: "max_padding_bytes", typ: "" },
        { json: "page_size_bytes", js: "page_size_bytes", typ: "" },
        { json: "writer_version", js: "writer_version", typ: "" },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: "" },
        { json: "region", js: "region", typ: "" },
        { json: "version_id", js: "version_id", typ: "" },
    ], false),
    "ResourceKinesisStream": o([
        { json: "name", js: "name", typ: "" },
        { json: "stream_mode", js: "stream_mode", typ: "" },
        { json: "shard_count", js: "shard_count", typ: u(undefined, "") },
        { json: "retention_period", js: "retention_period", typ: u(undefined, "") },
        { json: "shard_level_metrics", js: "shard_level_metrics", typ: u(undefined, "") },
        { json: "enforce_consumer_deletion", js: "enforce_consumer_deletion", typ: u(undefined, "") },
        { json: "encryption_type", js: "encryption_type", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "stream_mode_details", js: "stream_mode_details", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "KinesisVideoStream": o([
        { json: "name", js: "name", typ: "" },
        { json: "data_retention_in_hours", js: "data_retention_in_hours", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "media_type", js: "media_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Kinesisanalyticsv2Application": o([
        { json: "name", js: "name", typ: "" },
        { json: "runtime_environment", js: "runtime_environment", typ: "" },
        { json: "service_execution_role", js: "service_execution_role", typ: "" },
        { json: "application_code_configuration", js: "application_code_configuration", typ: "" },
        { json: "code_content_type", js: "code_content_type", typ: "" },
        { json: "bucket_arn", js: "bucket_arn", typ: "" },
        { json: "file_key", js: "file_key", typ: "" },
        { json: "snapshots_enabled", js: "snapshots_enabled", typ: "" },
        { json: "property_group", js: "property_group", typ: "" },
        { json: "property_group_id", js: "property_group_id", typ: "" },
        { json: "property_map", js: "property_map", typ: "" },
        { json: "configuration_type", js: "configuration_type", typ: "" },
        { json: "application_restore_type", js: "application_restore_type", typ: "" },
        { json: "input_schema", js: "input_schema", typ: "" },
        { json: "name_prefix", js: "name_prefix", typ: "" },
        { json: "input_lambda_processor", js: "input_lambda_processor", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "record_column", js: "record_column", typ: "" },
        { json: "record_format", js: "record_format", typ: "" },
        { json: "sql_type", js: "sql_type", typ: "" },
        { json: "mapping_parameters", js: "mapping_parameters", typ: "" },
        { json: "record_format_type", js: "record_format_type", typ: "" },
        { json: "record_column_delimiter", js: "record_column_delimiter", typ: "" },
        { json: "record_row_delimiter", js: "record_row_delimiter", typ: "" },
        { json: "input_starting_position", js: "input_starting_position", typ: "" },
        { json: "destination_schema", js: "destination_schema", typ: "" },
        { json: "reference_schema", js: "reference_schema", typ: "" },
        { json: "s3_reference_data_source", js: "s3_reference_data_source", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "log_stream_arn", js: "log_stream_arn", typ: "" },
        { json: "application_configuration", js: "application_configuration", typ: u(undefined, "") },
        { json: "cloudwatch_logging_options", js: "cloudwatch_logging_options", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "force_stop", js: "force_stop", typ: u(undefined, "") },
        { json: "start_application", js: "start_application", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "application_snapshot_configuration", js: "application_snapshot_configuration", typ: u(undefined, "") },
        { json: "environment_properties", js: "environment_properties", typ: u(undefined, "") },
        { json: "flink_application_configuration", js: "flink_application_configuration", typ: u(undefined, "") },
        { json: "run_configuration", js: "run_configuration", typ: u(undefined, "") },
        { json: "sql_application_configuration", js: "sql_application_configuration", typ: u(undefined, "") },
        { json: "vpc_configuration", js: "vpc_configuration", typ: u(undefined, "") },
        { json: "code_content", js: "code_content", typ: u(undefined, "") },
        { json: "s3_content_location", js: "s3_content_location", typ: u(undefined, "") },
        { json: "text_content", js: "text_content", typ: u(undefined, "") },
        { json: "object_version", js: "object_version", typ: u(undefined, "") },
        { json: "checkpoint_configuration", js: "checkpoint_configuration", typ: u(undefined, "") },
        { json: "monitoring_configuration", js: "monitoring_configuration", typ: u(undefined, "") },
        { json: "parallelism_configuration", js: "parallelism_configuration", typ: u(undefined, "") },
        { json: "checkpointing_enabled", js: "checkpointing_enabled", typ: u(undefined, "") },
        { json: "checkpoint_interval", js: "checkpoint_interval", typ: u(undefined, "") },
        { json: "min_pause_between_checkpoints", js: "min_pause_between_checkpoints", typ: u(undefined, "") },
        { json: "log_level", js: "log_level", typ: u(undefined, "") },
        { json: "metrics_level", js: "metrics_level", typ: u(undefined, "") },
        { json: "auto_scaling_enabled", js: "auto_scaling_enabled", typ: u(undefined, "") },
        { json: "parallelism", js: "parallelism", typ: u(undefined, "") },
        { json: "parallelism_per_kpu", js: "parallelism_per_kpu", typ: u(undefined, "") },
        { json: "application_restore_configuration", js: "application_restore_configuration", typ: u(undefined, "") },
        { json: "flink_run_configuration", js: "flink_run_configuration", typ: u(undefined, "") },
        { json: "snapshot_name", js: "snapshot_name", typ: u(undefined, "") },
        { json: "allow_non_restored_state", js: "allow_non_restored_state", typ: u(undefined, "") },
        { json: "input", js: "input", typ: u(undefined, "") },
        { json: "output", js: "output", typ: u(undefined, "") },
        { json: "reference_data_source", js: "reference_data_source", typ: u(undefined, "") },
        { json: "input_parallelism", js: "input_parallelism", typ: u(undefined, "") },
        { json: "input_processing_configuration", js: "input_processing_configuration", typ: u(undefined, "") },
        { json: "kinesis_firehose_input", js: "kinesis_firehose_input", typ: u(undefined, "") },
        { json: "kinesis_streams_input", js: "kinesis_streams_input", typ: u(undefined, "") },
        { json: "count", js: "count", typ: u(undefined, "") },
        { json: "record_encoding", js: "record_encoding", typ: u(undefined, "") },
        { json: "mapping", js: "mapping", typ: u(undefined, "") },
        { json: "csv_mapping_parameters", js: "csv_mapping_parameters", typ: u(undefined, "") },
        { json: "json_mapping_parameters", js: "json_mapping_parameters", typ: u(undefined, "") },
        { json: "kinesis_firehose_output", js: "kinesis_firehose_output", typ: u(undefined, "") },
        { json: "kinesis_streams_output", js: "kinesis_streams_output", typ: u(undefined, "") },
        { json: "lambda_output", js: "lambda_output", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "create_timestamp", js: "create_timestamp", typ: u(undefined, "") },
        { json: "last_update_timestamp", js: "last_update_timestamp", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "version_id", js: "version_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Kinesisanalyticsv2ApplicationSnapshot": o([
        { json: "application_name", js: "application_name", typ: "" },
        { json: "snapshot_name", js: "snapshot_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "application_version_id", js: "application_version_id", typ: u(undefined, "") },
        { json: "snapshot_creation_timestamp", js: "snapshot_creation_timestamp", typ: u(undefined, "") },
    ], false),
    "ResourceKmsCustomKeyStore": o([
        { json: "cloud_hsm_cluster_id", js: "cloud_hsm_cluster_id", typ: "" },
        { json: "custom_key_store_name", js: "custom_key_store_name", typ: "" },
        { json: "key_store_password", js: "key_store_password", typ: "" },
        { json: "trust_anchor_certificate", js: "trust_anchor_certificate", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "KmsExternalKey": o([
        { json: "bypass_policy_lockout_safety_check", js: "bypass_policy_lockout_safety_check", typ: u(undefined, "") },
        { json: "deletion_window_in_days", js: "deletion_window_in_days", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "key_material_base64", js: "key_material_base64", typ: u(undefined, "") },
        { json: "multi_region", js: "multi_region", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "valid_to", js: "valid_to", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "expiration_model", js: "expiration_model", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "key_state", js: "key_state", typ: u(undefined, "") },
        { json: "key_usage", js: "key_usage", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "primary_key_arn", js: "primary_key_arn", typ: u(undefined, "") },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
    ], false),
    "KmsGrant": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
        { json: "grantee_principal", js: "grantee_principal", typ: u(undefined, "") },
        { json: "operations", js: "operations", typ: u(undefined, "") },
        { json: "retiring_principal", js: "retiring_principal", typ: u(undefined, "") },
        { json: "constraints", js: "constraints", typ: u(undefined, "") },
        { json: "grant_creation_tokens", js: "grant_creation_tokens", typ: u(undefined, "") },
        { json: "encryption_context_equals", js: "encryption_context_equals", typ: u(undefined, "") },
        { json: "encryption_context_subset", js: "encryption_context_subset", typ: u(undefined, "") },
        { json: "grant_id", js: "grant_id", typ: u(undefined, "") },
        { json: "grant_token", js: "grant_token", typ: u(undefined, "") },
    ], false),
    "ResourceKmsKey": o([
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "key_usage", js: "key_usage", typ: u(undefined, "") },
        { json: "custom_key_store_id", js: "custom_key_store_id", typ: u(undefined, "") },
        { json: "customer_master_key_spec", js: "customer_master_key_spec", typ: u(undefined, "") },
        { json: "bypass_policy_lockout_safety_check", js: "bypass_policy_lockout_safety_check", typ: u(undefined, "") },
        { json: "deletion_window_in_days", js: "deletion_window_in_days", typ: u(undefined, "") },
        { json: "is_enabled", js: "is_enabled", typ: u(undefined, "") },
        { json: "enable_key_rotation", js: "enable_key_rotation", typ: u(undefined, "") },
        { json: "multi_region", js: "multi_region", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "KmsKeyPolicy": o([
        { json: "key_id", js: "key_id", typ: "" },
        { json: "bypass_policy_lockout_safety_check", js: "bypass_policy_lockout_safety_check", typ: u(undefined, "") },
    ], false),
    "KmsReplicaKey": o([
        { json: "primary_key_arn", js: "primary_key_arn", typ: "" },
        { json: "bypass_policy_lockout_safety_check", js: "bypass_policy_lockout_safety_check", typ: u(undefined, "") },
        { json: "deletion_window_in_days", js: "deletion_window_in_days", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
        { json: "key_rotation_enabled", js: "key_rotation_enabled", typ: u(undefined, "") },
        { json: "key_spec", js: "key_spec", typ: u(undefined, "") },
        { json: "key_usage", js: "key_usage", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceLakeformationPermissions": o([
        { json: "permissions", js: "permissions", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "catalog_resource", js: "catalog_resource", typ: u(undefined, "") },
        { json: "data_location", js: "data_location", typ: u(undefined, r("DataLocation")) },
        { json: "database", js: "database", typ: u(undefined, r("LakeformationPermissionsDatabase")) },
        { json: "lf_tag", js: "lf_tag", typ: u(undefined, r("LakeformationLFTagClass")) },
        { json: "lf_tag_policy", js: "lf_tag_policy", typ: u(undefined, r("LFTagPolicy")) },
        { json: "table", js: "table", typ: u(undefined, r("Table")) },
        { json: "table_with_columns", js: "table_with_columns", typ: u(undefined, r("TableWithColumns")) },
        { json: "permissions_with_grant_option", js: "permissions_with_grant_option", typ: u(undefined, "") },
    ], false),
    "ResourceLakeformationResource": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "last_modified", js: "last_modified", typ: u(undefined, "") },
    ], false),
    "LakeformationResourceLFTags": o([
        { json: "lf_tag", js: "lf_tag", typ: r("LakeformationResourceLFTagsLFTag") },
        { json: "database", js: "database", typ: u(undefined, r("LakeformationPermissionsDatabase")) },
        { json: "table", js: "table", typ: u(undefined, r("Table")) },
        { json: "table_with_columns", js: "table_with_columns", typ: u(undefined, r("TableWithColumns")) },
    ], false),
    "LakeformationResourceLFTagsLFTag": o([
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "catalog_id", js: "catalog_id", typ: u(undefined, "") },
    ], false),
    "LambdaEventSourceMapping": o([
        { json: "function_name", js: "function_name", typ: "" },
        { json: "destination_arn", js: "destination_arn", typ: "" },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "endpoints", js: "endpoints", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "uri", js: "uri", typ: "" },
        { json: "amazon_managed_kafka_event_source_config", js: "amazon_managed_kafka_event_source_config", typ: u(undefined, "") },
        { json: "batch_size", js: "batch_size", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "event_source_arn", js: "event_source_arn", typ: u(undefined, "") },
        { json: "filter_criteria", js: "filter_criteria", typ: u(undefined, "") },
        { json: "function_response_types", js: "function_response_types", typ: u(undefined, "") },
        { json: "maximum_batching_window_in_seconds", js: "maximum_batching_window_in_seconds", typ: u(undefined, "") },
        { json: "queues", js: "queues", typ: u(undefined, "") },
        { json: "scaling_config", js: "scaling_config", typ: u(undefined, "") },
        { json: "self_managed_kafka_event_source_config", js: "self_managed_kafka_event_source_config", typ: u(undefined, "") },
        { json: "starting_position", js: "starting_position", typ: u(undefined, "") },
        { json: "starting_position_timestamp", js: "starting_position_timestamp", typ: u(undefined, "") },
        { json: "topics", js: "topics", typ: u(undefined, "") },
        { json: "tumbling_window_in_seconds", js: "tumbling_window_in_seconds", typ: u(undefined, "") },
        { json: "consumer_group_id", js: "consumer_group_id", typ: u(undefined, "") },
        { json: "on_failure", js: "on_failure", typ: u(undefined, "") },
        { json: "collection_name", js: "collection_name", typ: u(undefined, "") },
        { json: "full_document", js: "full_document", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "pattern", js: "pattern", typ: u(undefined, "") },
        { json: "maximum_concurrency", js: "maximum_concurrency", typ: u(undefined, "") },
        { json: "function_arn", js: "function_arn", typ: u(undefined, "") },
        { json: "last_modified", js: "last_modified", typ: u(undefined, "") },
        { json: "last_processing_result", js: "last_processing_result", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "state_transition_reason", js: "state_transition_reason", typ: u(undefined, "") },
        { json: "uuid", js: "uuid", typ: u(undefined, "") },
    ], false),
    "ResourceLambdaFunction": o([
        { json: "function_name", js: "function_name", typ: "" },
        { json: "role", js: "role", typ: "" },
        { json: "target_arn", js: "target_arn", typ: "" },
        { json: "size", js: "size", typ: "" },
        { json: "local_mount_path", js: "local_mount_path", typ: "" },
        { json: "apply_on", js: "apply_on", typ: "" },
        { json: "architectures", js: "architectures", typ: u(undefined, "") },
        { json: "code_signing_config_arn", js: "code_signing_config_arn", typ: u(undefined, "") },
        { json: "dead_letter_config", js: "dead_letter_config", typ: u(undefined, r("DeadLetterConfig")) },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "environment", js: "environment", typ: u(undefined, r("LambdaFunctionEnvironment")) },
        { json: "ephemeral_storage", js: "ephemeral_storage", typ: u(undefined, r("SavedownStorageConfiguration")) },
        { json: "file_system_config", js: "file_system_config", typ: u(undefined, r("FileSystemConfig")) },
        { json: "filename", js: "filename", typ: u(undefined, "") },
        { json: "handler", js: "handler", typ: u(undefined, "") },
        { json: "image_config", js: "image_config", typ: u(undefined, r("ImageConfig")) },
        { json: "image_uri", js: "image_uri", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "layers", js: "layers", typ: u(undefined, "") },
        { json: "memory_size", js: "memory_size", typ: u(undefined, "") },
        { json: "package_type", js: "package_type", typ: u(undefined, "") },
        { json: "publish", js: "publish", typ: u(undefined, "") },
        { json: "reserved_concurrent_executions", js: "reserved_concurrent_executions", typ: u(undefined, "") },
        { json: "runtime", js: "runtime", typ: u(undefined, "") },
        { json: "s3_bucket", js: "s3_bucket", typ: u(undefined, "") },
        { json: "s3_key", js: "s3_key", typ: u(undefined, "") },
        { json: "s3_object_version", js: "s3_object_version", typ: u(undefined, "") },
        { json: "skip_destroy", js: "skip_destroy", typ: u(undefined, "") },
        { json: "source_code_hash", js: "source_code_hash", typ: u(undefined, "") },
        { json: "snap_start", js: "snap_start", typ: u(undefined, r("SnapStart")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "timeout", js: "timeout", typ: u(undefined, "") },
        { json: "tracing_config", js: "tracing_config", typ: u(undefined, r("TracingConfig")) },
        { json: "vpc_config", js: "vpc_config", typ: u(undefined, r("Vpc")) },
        { json: "variables", js: "variables", typ: u(undefined, "") },
        { json: "working_directory", js: "working_directory", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "invoke_arn", js: "invoke_arn", typ: u(undefined, "") },
        { json: "last_modified", js: "last_modified", typ: u(undefined, "") },
        { json: "qualified_arn", js: "qualified_arn", typ: u(undefined, "") },
        { json: "qualified_invoke_arn", js: "qualified_invoke_arn", typ: u(undefined, "") },
        { json: "signing_job_arn", js: "signing_job_arn", typ: u(undefined, "") },
        { json: "signing_profile_version_arn", js: "signing_profile_version_arn", typ: u(undefined, "") },
        { json: "snap_start.optimization_status", js: "snap_start.optimization_status", typ: u(undefined, "") },
        { json: "source_code_size", js: "source_code_size", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "vpc_config.vpc_id", js: "vpc_config.vpc_id", typ: u(undefined, "") },
    ], false),
    "DeadLetterConfig": o([
        { json: "target_arn", js: "target_arn", typ: "" },
    ], false),
    "LambdaFunctionEnvironment": o([
        { json: "variables", js: "variables", typ: "" },
    ], false),
    "FileSystemConfig": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "local_mount_path", js: "local_mount_path", typ: "" },
    ], false),
    "ImageConfig": o([
        { json: "command", js: "command", typ: "" },
        { json: "entry_point", js: "entry_point", typ: "" },
        { json: "working_directory", js: "working_directory", typ: "" },
    ], false),
    "SnapStart": o([
        { json: "apply_on", js: "apply_on", typ: "" },
    ], false),
    "TracingConfig": o([
        { json: "mode", js: "mode", typ: "" },
    ], false),
    "LambdaFunctionEventInvokeConfig": o([
        { json: "function_name", js: "function_name", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "destination_config", js: "destination_config", typ: u(undefined, "") },
        { json: "maximum_event_age_in_seconds", js: "maximum_event_age_in_seconds", typ: u(undefined, "") },
        { json: "maximum_retry_attempts", js: "maximum_retry_attempts", typ: u(undefined, "") },
        { json: "on_failure", js: "on_failure", typ: u(undefined, "") },
        { json: "on_success", js: "on_success", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceLambdaFunctionURL": o([
        { json: "authorization_type", js: "authorization_type", typ: "" },
        { json: "function_name", js: "function_name", typ: "" },
        { json: "cors", js: "cors", typ: u(undefined, r("Cors")) },
        { json: "invoke_mode", js: "invoke_mode", typ: u(undefined, "") },
        { json: "qualifier", js: "qualifier", typ: u(undefined, "") },
        { json: "function_arn", js: "function_arn", typ: u(undefined, "") },
        { json: "function_url", js: "function_url", typ: u(undefined, "") },
        { json: "url_id", js: "url_id", typ: u(undefined, "") },
    ], false),
    "Cors": o([
        { json: "allow_credentials", js: "allow_credentials", typ: "" },
        { json: "allow_headers", js: "allow_headers", typ: "" },
        { json: "expose_headers", js: "expose_headers", typ: "" },
        { json: "max_age", js: "max_age", typ: "" },
    ], false),
    "ResourceLambdaInvocation": o([
        { json: "function_name", js: "function_name", typ: "" },
        { json: "input", js: "input", typ: "" },
        { json: "lifecycle_scope", js: "lifecycle_scope", typ: u(undefined, "") },
        { json: "qualifier", js: "qualifier", typ: u(undefined, "") },
        { json: "terraform_key", js: "terraform_key", typ: u(undefined, "") },
        { json: "triggers", js: "triggers", typ: u(undefined, "") },
        { json: "result", js: "result", typ: u(undefined, "") },
    ], false),
    "LambdaLayerVersionPermission": o([
        { json: "action", js: "action", typ: "" },
        { json: "statement_id", js: "statement_id", typ: "" },
        { json: "skip_destroy", js: "skip_destroy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "revision_id", js: "revision_id", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
    ], false),
    "LambdaPermission": o([
        { json: "action", js: "action", typ: "" },
        { json: "function_name", js: "function_name", typ: "" },
        { json: "principal", js: "principal", typ: "" },
        { json: "event_source_token", js: "event_source_token", typ: u(undefined, "") },
        { json: "function_url_auth_type", js: "function_url_auth_type", typ: u(undefined, "") },
        { json: "qualifier", js: "qualifier", typ: u(undefined, "") },
        { json: "source_account", js: "source_account", typ: u(undefined, "") },
        { json: "source_arn", js: "source_arn", typ: u(undefined, "") },
        { json: "statement_id", js: "statement_id", typ: u(undefined, "") },
        { json: "statement_id_prefix", js: "statement_id_prefix", typ: u(undefined, "") },
        { json: "principal_org_id", js: "principal_org_id", typ: u(undefined, "") },
    ], false),
    "LambdaProvisionedConcurrencyConfig": o([
        { json: "function_name", js: "function_name", typ: "" },
        { json: "provisioned_concurrent_executions", js: "provisioned_concurrent_executions", typ: "" },
        { json: "qualifier", js: "qualifier", typ: "" },
        { json: "skip_destroy", js: "skip_destroy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceLaunchConfiguration": o([
        { json: "image_id", js: "image_id", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "associate_public_ip_address", js: "associate_public_ip_address", typ: u(undefined, "") },
        { json: "ebs_block_device", js: "ebs_block_device", typ: u(undefined, "") },
        { json: "ebs_optimized", js: "ebs_optimized", typ: u(undefined, "") },
        { json: "enable_monitoring", js: "enable_monitoring", typ: u(undefined, "") },
        { json: "ephemeral_block_device", js: "ephemeral_block_device", typ: u(undefined, "") },
        { json: "iam_instance_profile", js: "iam_instance_profile", typ: u(undefined, "") },
        { json: "key_name", js: "key_name", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "placement_tenancy", js: "placement_tenancy", typ: u(undefined, "") },
        { json: "root_block_device", js: "root_block_device", typ: u(undefined, "") },
        { json: "spot_price", js: "spot_price", typ: u(undefined, "") },
        { json: "user_data", js: "user_data", typ: u(undefined, "") },
        { json: "user_data_base64", js: "user_data_base64", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "ResourceLaunchTemplate": o([
        { json: "device_name", js: "device_name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "license_configuration_arn", js: "license_configuration_arn", typ: "" },
        { json: "block_device_mappings", js: "block_device_mappings", typ: u(undefined, "") },
        { json: "capacity_reservation_specification", js: "capacity_reservation_specification", typ: u(undefined, "") },
        { json: "cpu_options", js: "cpu_options", typ: u(undefined, "") },
        { json: "credit_specification", js: "credit_specification", typ: u(undefined, "") },
        { json: "default_version", js: "default_version", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "disable_api_stop", js: "disable_api_stop", typ: u(undefined, "") },
        { json: "disable_api_termination", js: "disable_api_termination", typ: u(undefined, "") },
        { json: "ebs_optimized", js: "ebs_optimized", typ: u(undefined, "") },
        { json: "elastic_gpu_specifications", js: "elastic_gpu_specifications", typ: u(undefined, "") },
        { json: "elastic_inference_accelerator", js: "elastic_inference_accelerator", typ: u(undefined, "") },
        { json: "enclave_options", js: "enclave_options", typ: u(undefined, "") },
        { json: "hibernation_options", js: "hibernation_options", typ: u(undefined, "") },
        { json: "iam_instance_profile", js: "iam_instance_profile", typ: u(undefined, "") },
        { json: "image_id", js: "image_id", typ: u(undefined, "") },
        { json: "instance_initiated_shutdown_behavior", js: "instance_initiated_shutdown_behavior", typ: u(undefined, "") },
        { json: "instance_market_options", js: "instance_market_options", typ: u(undefined, "") },
        { json: "instance_requirements", js: "instance_requirements", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "kernel_id", js: "kernel_id", typ: u(undefined, "") },
        { json: "key_name", js: "key_name", typ: u(undefined, "") },
        { json: "license_specification", js: "license_specification", typ: u(undefined, "") },
        { json: "maintenance_options", js: "maintenance_options", typ: u(undefined, "") },
        { json: "metadata_options", js: "metadata_options", typ: u(undefined, "") },
        { json: "monitoring", js: "monitoring", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "network_interfaces", js: "network_interfaces", typ: u(undefined, "") },
        { json: "placement", js: "placement", typ: u(undefined, "") },
        { json: "private_dns_name_options", js: "private_dns_name_options", typ: u(undefined, "") },
        { json: "ram_disk_id", js: "ram_disk_id", typ: u(undefined, "") },
        { json: "security_group_names", js: "security_group_names", typ: u(undefined, "") },
        { json: "tag_specifications", js: "tag_specifications", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "update_default_version", js: "update_default_version", typ: u(undefined, "") },
        { json: "user_data", js: "user_data", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "ebs", js: "ebs", typ: u(undefined, "") },
        { json: "no_device", js: "no_device", typ: u(undefined, "") },
        { json: "virtual_name", js: "virtual_name", typ: u(undefined, "") },
        { json: "delete_on_termination", js: "delete_on_termination", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "snapshot_id", js: "snapshot_id", typ: u(undefined, "") },
        { json: "throughput", js: "throughput", typ: u(undefined, "") },
        { json: "volume_size", js: "volume_size", typ: u(undefined, "") },
        { json: "volume_type", js: "volume_type", typ: u(undefined, "") },
        { json: "capacity_reservation_preference", js: "capacity_reservation_preference", typ: u(undefined, "") },
        { json: "capacity_reservation_target", js: "capacity_reservation_target", typ: u(undefined, "") },
        { json: "capacity_reservation_id", js: "capacity_reservation_id", typ: u(undefined, "") },
        { json: "capacity_reservation_resource_group_arn", js: "capacity_reservation_resource_group_arn", typ: u(undefined, "") },
        { json: "amd_sev_snp", js: "amd_sev_snp", typ: u(undefined, "") },
        { json: "core_count", js: "core_count", typ: u(undefined, "") },
        { json: "threads_per_core", js: "threads_per_core", typ: u(undefined, "") },
        { json: "cpu_credits", js: "cpu_credits", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "configured", js: "configured", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "bare_metal", js: "bare_metal", typ: u(undefined, "") },
        { json: "burstable_performance", js: "burstable_performance", typ: u(undefined, "") },
        { json: "local_storage", js: "local_storage", typ: u(undefined, "") },
        { json: "on_demand_max_price_percentage_over_lowest_price", js: "on_demand_max_price_percentage_over_lowest_price", typ: u(undefined, "") },
        { json: "require_hibernate_support", js: "require_hibernate_support", typ: u(undefined, "") },
        { json: "spot_max_price_percentage_over_lowest_price", js: "spot_max_price_percentage_over_lowest_price", typ: u(undefined, "") },
        { json: "auto_recovery", js: "auto_recovery", typ: u(undefined, "") },
        { json: "market_type", js: "market_type", typ: u(undefined, "") },
        { json: "spot_options", js: "spot_options", typ: u(undefined, "") },
        { json: "block_duration_minutes", js: "block_duration_minutes", typ: u(undefined, "") },
        { json: "instance_interruption_behavior", js: "instance_interruption_behavior", typ: u(undefined, "") },
        { json: "max_price", js: "max_price", typ: u(undefined, "") },
        { json: "spot_instance_type", js: "spot_instance_type", typ: u(undefined, "") },
        { json: "valid_until", js: "valid_until", typ: u(undefined, "") },
        { json: "http_endpoint", js: "http_endpoint", typ: u(undefined, "") },
        { json: "http_tokens", js: "http_tokens", typ: u(undefined, "") },
        { json: "http_put_response_hop_limit", js: "http_put_response_hop_limit", typ: u(undefined, "") },
        { json: "http_protocol_ipv6", js: "http_protocol_ipv6", typ: u(undefined, "") },
        { json: "instance_metadata_tags", js: "instance_metadata_tags", typ: u(undefined, "") },
        { json: "associate_carrier_ip_address", js: "associate_carrier_ip_address", typ: u(undefined, "") },
        { json: "associate_public_ip_address", js: "associate_public_ip_address", typ: u(undefined, "") },
        { json: "device_index", js: "device_index", typ: u(undefined, "") },
        { json: "interface_type", js: "interface_type", typ: u(undefined, "") },
        { json: "ipv4_prefix_count", js: "ipv4_prefix_count", typ: u(undefined, "") },
        { json: "ipv4_prefixes", js: "ipv4_prefixes", typ: u(undefined, "") },
        { json: "ipv6_addresses", js: "ipv6_addresses", typ: u(undefined, "") },
        { json: "ipv6_address_count", js: "ipv6_address_count", typ: u(undefined, "") },
        { json: "ipv6_prefix_count", js: "ipv6_prefix_count", typ: u(undefined, "") },
        { json: "ipv6_prefixes", js: "ipv6_prefixes", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "network_card_index", js: "network_card_index", typ: u(undefined, "") },
        { json: "private_ip_address", js: "private_ip_address", typ: u(undefined, "") },
        { json: "ipv4_address_count", js: "ipv4_address_count", typ: u(undefined, "") },
        { json: "ipv4_addresses", js: "ipv4_addresses", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "affinity", js: "affinity", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "group_name", js: "group_name", typ: u(undefined, "") },
        { json: "host_id", js: "host_id", typ: u(undefined, "") },
        { json: "host_resource_group_arn", js: "host_resource_group_arn", typ: u(undefined, "") },
        { json: "spread_domain", js: "spread_domain", typ: u(undefined, "") },
        { json: "tenancy", js: "tenancy", typ: u(undefined, "") },
        { json: "partition_number", js: "partition_number", typ: u(undefined, "") },
        { json: "enable_resource_name_dns_aaaa_record", js: "enable_resource_name_dns_aaaa_record", typ: u(undefined, "") },
        { json: "enable_resource_name_dns_a_record", js: "enable_resource_name_dns_a_record", typ: u(undefined, "") },
        { json: "hostname_type", js: "hostname_type", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "latest_version", js: "latest_version", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LB": o([
        { json: "access_logs", js: "access_logs", typ: u(undefined, r("AccessLogs")) },
        { json: "customer_owned_ipv4_pool", js: "customer_owned_ipv4_pool", typ: u(undefined, "") },
        { json: "desync_mitigation_mode", js: "desync_mitigation_mode", typ: u(undefined, "") },
        { json: "drop_invalid_header_fields", js: "drop_invalid_header_fields", typ: u(undefined, "") },
        { json: "enable_cross_zone_load_balancing", js: "enable_cross_zone_load_balancing", typ: u(undefined, "") },
        { json: "enable_deletion_protection", js: "enable_deletion_protection", typ: u(undefined, "") },
        { json: "enable_http2", js: "enable_http2", typ: u(undefined, "") },
        { json: "enable_tls_version_and_cipher_suite_headers", js: "enable_tls_version_and_cipher_suite_headers", typ: u(undefined, "") },
        { json: "enable_xff_client_port", js: "enable_xff_client_port", typ: u(undefined, "") },
        { json: "enable_waf_fail_open", js: "enable_waf_fail_open", typ: u(undefined, "") },
        { json: "idle_timeout", js: "idle_timeout", typ: u(undefined, "") },
        { json: "internal", js: "internal", typ: u(undefined, "") },
        { json: "ip_address_type", js: "ip_address_type", typ: u(undefined, "") },
        { json: "load_balancer_type", js: "load_balancer_type", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "preserve_host_header", js: "preserve_host_header", typ: u(undefined, "") },
        { json: "subnet_mapping", js: "subnet_mapping", typ: u(undefined, r("SubnetMapping")) },
        { json: "subnets", js: "subnets", typ: u(undefined, "") },
        { json: "xff_header_processing_mode", js: "xff_header_processing_mode", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "arn_suffix", js: "arn_suffix", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "subnet_mapping.*.outpost_id", js: "subnet_mapping.*.outpost_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "zone_id", js: "zone_id", typ: u(undefined, "") },
    ], false),
    "AccessLogs": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "prefix", js: "prefix", typ: "" },
    ], false),
    "SubnetMapping": o([
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "allocation_id", js: "allocation_id", typ: "" },
        { json: "ipv6_address", js: "ipv6_address", typ: "" },
        { json: "private_ipv4_address", js: "private_ipv4_address", typ: "" },
    ], false),
    "ResourceLBListener": o([
        { json: "default_action", js: "default_action", typ: r("DefaultAction") },
        { json: "load_balancer_arn", js: "load_balancer_arn", typ: u(undefined, "") },
        { json: "alpn_policy", js: "alpn_policy", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "ssl_policy", js: "ssl_policy", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DefaultAction": o([
        { json: "type", js: "type", typ: "" },
        { json: "user_pool_arn", js: "user_pool_arn", typ: "" },
        { json: "user_pool_client_id", js: "user_pool_client_id", typ: "" },
        { json: "user_pool_domain", js: "user_pool_domain", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "authorization_endpoint", js: "authorization_endpoint", typ: "" },
        { json: "client_id", js: "client_id", typ: "" },
        { json: "client_secret", js: "client_secret", typ: "" },
        { json: "issuer", js: "issuer", typ: "" },
        { json: "token_endpoint", js: "token_endpoint", typ: "" },
        { json: "user_info_endpoint", js: "user_info_endpoint", typ: "" },
        { json: "content_type", js: "content_type", typ: "" },
        { json: "target_group", js: "target_group", typ: "" },
        { json: "arn", js: "arn", typ: "" },
        { json: "duration", js: "duration", typ: "" },
        { json: "status_code", js: "status_code", typ: "" },
        { json: "authenticate_cognito", js: "authenticate_cognito", typ: u(undefined, "") },
        { json: "authenticate_oidc", js: "authenticate_oidc", typ: u(undefined, "") },
        { json: "fixed_response", js: "fixed_response", typ: u(undefined, "") },
        { json: "forward", js: "forward", typ: u(undefined, "") },
        { json: "order", js: "order", typ: u(undefined, "") },
        { json: "redirect", js: "redirect", typ: u(undefined, "") },
        { json: "target_group_arn", js: "target_group_arn", typ: u(undefined, "") },
        { json: "authentication_request_extra_params", js: "authentication_request_extra_params", typ: u(undefined, "") },
        { json: "on_unauthenticated_request", js: "on_unauthenticated_request", typ: u(undefined, "") },
        { json: "scope", js: "scope", typ: u(undefined, "") },
        { json: "session_cookie_name", js: "session_cookie_name", typ: u(undefined, "") },
        { json: "session_timeout", js: "session_timeout", typ: u(undefined, "") },
        { json: "message_body", js: "message_body", typ: u(undefined, "") },
        { json: "stickiness", js: "stickiness", typ: u(undefined, "") },
        { json: "weight", js: "weight", typ: u(undefined, "") },
        { json: "host", js: "host", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "query", js: "query", typ: u(undefined, "") },
    ], false),
    "LBListenerCertificate": o([
        { json: "listener_arn", js: "listener_arn", typ: u(undefined, "") },
        { json: "certificate_arn", js: "certificate_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LBListenerRule": o([
        { json: "action", js: "action", typ: "" },
        { json: "condition", js: "condition", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "target_group", js: "target_group", typ: "" },
        { json: "arn", js: "arn", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "status_code", js: "status_code", typ: "" },
        { json: "content_type", js: "content_type", typ: "" },
        { json: "user_pool_arn", js: "user_pool_arn", typ: "" },
        { json: "user_pool_client_id", js: "user_pool_client_id", typ: "" },
        { json: "user_pool_domain", js: "user_pool_domain", typ: "" },
        { json: "authorization_endpoint", js: "authorization_endpoint", typ: "" },
        { json: "client_id", js: "client_id", typ: "" },
        { json: "client_secret", js: "client_secret", typ: "" },
        { json: "issuer", js: "issuer", typ: "" },
        { json: "token_endpoint", js: "token_endpoint", typ: "" },
        { json: "user_info_endpoint", js: "user_info_endpoint", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "http_header_name", js: "http_header_name", typ: "" },
        { json: "listener_arn", js: "listener_arn", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "target_group_arn", js: "target_group_arn", typ: u(undefined, "") },
        { json: "forward", js: "forward", typ: u(undefined, "") },
        { json: "redirect", js: "redirect", typ: u(undefined, "") },
        { json: "fixed_response", js: "fixed_response", typ: u(undefined, "") },
        { json: "authenticate_cognito", js: "authenticate_cognito", typ: u(undefined, "") },
        { json: "authenticate_oidc", js: "authenticate_oidc", typ: u(undefined, "") },
        { json: "stickiness", js: "stickiness", typ: u(undefined, "") },
        { json: "weight", js: "weight", typ: u(undefined, "") },
        { json: "host", js: "host", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "query", js: "query", typ: u(undefined, "") },
        { json: "message_body", js: "message_body", typ: u(undefined, "") },
        { json: "authentication_request_extra_params", js: "authentication_request_extra_params", typ: u(undefined, "") },
        { json: "on_unauthenticated_request", js: "on_unauthenticated_request", typ: u(undefined, "") },
        { json: "scope", js: "scope", typ: u(undefined, "") },
        { json: "session_cookie_name", js: "session_cookie_name", typ: u(undefined, "") },
        { json: "session_timeout", js: "session_timeout", typ: u(undefined, "") },
        { json: "http_header", js: "http_header", typ: u(undefined, "") },
        { json: "http_request_method", js: "http_request_method", typ: u(undefined, "") },
        { json: "query_string", js: "query_string", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LBTargetGroup": o([
        { json: "connection_termination", js: "connection_termination", typ: u(undefined, "") },
        { json: "deregistration_delay", js: "deregistration_delay", typ: u(undefined, "") },
        { json: "health_check", js: "health_check", typ: u(undefined, r("HealthCheck")) },
        { json: "lambda_multi_value_headers_enabled", js: "lambda_multi_value_headers_enabled", typ: u(undefined, "") },
        { json: "load_balancing_algorithm_type", js: "load_balancing_algorithm_type", typ: u(undefined, "") },
        { json: "load_balancing_cross_zone_enabled", js: "load_balancing_cross_zone_enabled", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "preserve_client_ip", js: "preserve_client_ip", typ: u(undefined, "") },
        { json: "protocol_version", js: "protocol_version", typ: u(undefined, "") },
        { json: "proxy_protocol_v2", js: "proxy_protocol_v2", typ: u(undefined, "") },
        { json: "slow_start", js: "slow_start", typ: u(undefined, "") },
        { json: "stickiness", js: "stickiness", typ: u(undefined, r("Stickiness")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "target_failover", js: "target_failover", typ: u(undefined, r("TargetFailover")) },
        { json: "target_type", js: "target_type", typ: u(undefined, "") },
        { json: "arn_suffix", js: "arn_suffix", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "HealthCheck": o([
        { json: "enabled", js: "enabled", typ: "" },
        { json: "healthy_threshold", js: "healthy_threshold", typ: "" },
        { json: "interval", js: "interval", typ: "" },
        { json: "path", js: "path", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "timeout", js: "timeout", typ: "" },
        { json: "unhealthy_threshold", js: "unhealthy_threshold", typ: "" },
    ], false),
    "Stickiness": o([
        { json: "cookie_duration", js: "cookie_duration", typ: "" },
        { json: "cookie_name", js: "cookie_name", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "TargetFailover": o([
        { json: "on_deregistration", js: "on_deregistration", typ: "" },
        { json: "on_unhealthy", js: "on_unhealthy", typ: "" },
    ], false),
    "LBTargetGroupAttachment": o([
        { json: "target_group_arn", js: "target_group_arn", typ: "" },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceLexBot": o([
        { json: "abort_statement", js: "abort_statement", typ: "" },
        { json: "child_directed", js: "child_directed", typ: "" },
        { json: "clarification_prompt", js: "clarification_prompt", typ: "" },
        { json: "intent", js: "intent", typ: r("Intent") },
        { json: "name", js: "name", typ: "" },
        { json: "intent_version", js: "intent_version", typ: "" },
        { json: "max_attempts", js: "max_attempts", typ: "" },
        { json: "message", js: "message", typ: r("Message") },
        { json: "create_version", js: "create_version", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "detect_sentiment", js: "detect_sentiment", typ: u(undefined, "") },
        { json: "enable_model_improvements", js: "enable_model_improvements", typ: u(undefined, "") },
        { json: "idle_session_ttl_in_seconds", js: "idle_session_ttl_in_seconds", typ: u(undefined, "") },
        { json: "locale", js: "locale", typ: u(undefined, "") },
        { json: "nlu_intent_confidence_threshold", js: "nlu_intent_confidence_threshold", typ: u(undefined, "") },
        { json: "process_behavior", js: "process_behavior", typ: u(undefined, "") },
        { json: "voice_id", js: "voice_id", typ: u(undefined, "") },
        { json: "group_number", js: "group_number", typ: u(undefined, "") },
        { json: "response_card", js: "response_card", typ: u(undefined, "") },
        { json: "checksum", js: "checksum", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "failure_reason", js: "failure_reason", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "Intent": o([
        { json: "intent_name", js: "intent_name", typ: "" },
        { json: "intent_version", js: "intent_version", typ: "" },
    ], false),
    "Message": o([
        { json: "content", js: "content", typ: "" },
        { json: "content_type", js: "content_type", typ: "" },
        { json: "group_number", js: "group_number", typ: u(undefined, "") },
    ], false),
    "LexIntent": o([
        { json: "fulfillment_activity", js: "fulfillment_activity", typ: r("FulfillmentActivity") },
        { json: "uri", js: "uri", typ: "" },
        { json: "prompt", js: "prompt", typ: r("Prompt") },
        { json: "message", js: "message", typ: r("Message") },
        { json: "conclusion_statement", js: "conclusion_statement", typ: u(undefined, "") },
        { json: "confirmation_prompt", js: "confirmation_prompt", typ: u(undefined, "") },
        { json: "create_version", js: "create_version", typ: u(undefined, "") },
        { json: "dialog_code_hook", js: "dialog_code_hook", typ: u(undefined, "") },
        { json: "follow_up_prompt", js: "follow_up_prompt", typ: u(undefined, r("FollowUpPrompt")) },
        { json: "parent_intent_signature", js: "parent_intent_signature", typ: u(undefined, "") },
        { json: "rejection_statement", js: "rejection_statement", typ: u(undefined, "") },
        { json: "slot", js: "slot", typ: u(undefined, r("Slot")) },
        { json: "code_hook", js: "code_hook", typ: u(undefined, r("CodeHook")) },
        { json: "group_number", js: "group_number", typ: u(undefined, "") },
        { json: "value_elicitation_prompt", js: "value_elicitation_prompt", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "checksum", js: "checksum", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "CodeHook": o([
        { json: "message_version", js: "message_version", typ: "" },
        { json: "uri", js: "uri", typ: "" },
    ], false),
    "FollowUpPrompt": o([
        { json: "prompt", js: "prompt", typ: "" },
        { json: "rejection_statement", js: "rejection_statement", typ: "" },
    ], false),
    "FulfillmentActivity": o([
        { json: "type", js: "type", typ: "" },
        { json: "code_hook", js: "code_hook", typ: u(undefined, "") },
    ], false),
    "Prompt": o([
        { json: "max_attempts", js: "max_attempts", typ: "" },
        { json: "message", js: "message", typ: "" },
        { json: "response_card", js: "response_card", typ: u(undefined, "") },
    ], false),
    "Slot": o([
        { json: "name", js: "name", typ: "" },
        { json: "slot_constraint", js: "slot_constraint", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "response_card", js: "response_card", typ: "" },
        { json: "sample_utterances", js: "sample_utterances", typ: "" },
        { json: "slot_type", js: "slot_type", typ: "" },
        { json: "slot_type_version", js: "slot_type_version", typ: "" },
        { json: "value_elicitation_prompt", js: "value_elicitation_prompt", typ: "" },
    ], false),
    "LexSlotType": o([
        { json: "enumeration_value", js: "enumeration_value", typ: r("EnumerationValue") },
        { json: "name", js: "name", typ: "" },
        { json: "create_version", js: "create_version", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "value_selection_strategy", js: "value_selection_strategy", typ: u(undefined, "") },
        { json: "checksum", js: "checksum", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "last_updated_date", js: "last_updated_date", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "EnumerationValue": o([
        { json: "value", js: "value", typ: "" },
        { json: "synonyms", js: "synonyms", typ: u(undefined, "") },
    ], false),
    "Lexv2ModelsBot": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "data_privacy", js: "data_privacy", typ: u(undefined, "") },
        { json: "idle_session_ttl_in_seconds", js: "idle_session_ttl_in_seconds", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "members", js: "members", typ: u(undefined, "") },
        { json: "bot_tags", js: "bot_tags", typ: u(undefined, "") },
        { json: "bot_type", js: "bot_type", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "test_bot_alias_tags", js: "test_bot_alias_tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "child_directed", js: "child_directed", typ: u(undefined, "") },
        { json: "alias_id", js: "alias_id", typ: u(undefined, "") },
        { json: "alias_name", js: "alias_name", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "LicensemanagerAssociation": o([
        { json: "license_configuration_arn", js: "license_configuration_arn", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LicensemanagerGrant": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "allowed_operations", js: "allowed_operations", typ: u(undefined, "") },
        { json: "license_arn", js: "license_arn", typ: u(undefined, "") },
        { json: "principal", js: "principal", typ: u(undefined, "") },
        { json: "home_region", js: "home_region", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "parent_arn", js: "parent_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "grant_arn", js: "grant_arn", typ: u(undefined, "") },
    ], false),
    "LicensemanagerLicenseConfiguration": o([
        { json: "name", js: "name", typ: "" },
        { json: "license_counting_type", js: "license_counting_type", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "license_count", js: "license_count", typ: u(undefined, "") },
        { json: "license_count_hard_limit", js: "license_count_hard_limit", typ: u(undefined, "") },
        { json: "license_rules", js: "license_rules", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LightsailBucket": o([
        { json: "name", js: "name", typ: "" },
        { json: "bundle_id", js: "bundle_id", typ: "" },
        { json: "force_delete", js: "force_delete", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "support_code", js: "support_code", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LightsailBucketAccessKey": o([
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "access_key_id", js: "access_key_id", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "secret_access_key", js: "secret_access_key", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "LightsailBucketResourceAccess": o([
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "resource_name", js: "resource_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LightsailCertificate": o([
        { json: "name", js: "name", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "subject_alternative_names", js: "subject_alternative_names", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "domain_validation_options", js: "domain_validation_options", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "lb_name", js: "lb_name", typ: u(undefined, "") },
    ], false),
    "LightsailContainerService": o([
        { json: "name", js: "name", typ: "" },
        { json: "power", js: "power", typ: "" },
        { json: "scale", js: "scale", typ: "" },
        { json: "is_disabled", js: "is_disabled", typ: u(undefined, "") },
        { json: "public_domain_names", js: "public_domain_names", typ: u(undefined, "") },
        { json: "private_registry_access", js: "private_registry_access", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ecr_image_puller_role", js: "ecr_image_puller_role", typ: u(undefined, "") },
        { json: "is_active", js: "is_active", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "power_id", js: "power_id", typ: u(undefined, "") },
        { json: "private_domain_name", js: "private_domain_name", typ: u(undefined, "") },
        { json: "region_name", js: "region_name", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
    ], false),
    "LightsailContainerServiceDeploymentVersion": o([
        { json: "service_name", js: "service_name", typ: "" },
        { json: "container", js: "container", typ: "" },
        { json: "container_name", js: "container_name", typ: "" },
        { json: "image", js: "image", typ: "" },
        { json: "container_port", js: "container_port", typ: "" },
        { json: "health_check", js: "health_check", typ: "" },
        { json: "public_endpoint", js: "public_endpoint", typ: u(undefined, "") },
        { json: "command", js: "command", typ: u(undefined, "") },
        { json: "environment", js: "environment", typ: u(undefined, "") },
        { json: "ports", js: "ports", typ: u(undefined, "") },
        { json: "healthy_threshold", js: "healthy_threshold", typ: u(undefined, "") },
        { json: "unhealthy_threshold", js: "unhealthy_threshold", typ: u(undefined, "") },
        { json: "timeout_seconds", js: "timeout_seconds", typ: u(undefined, "") },
        { json: "interval_seconds", js: "interval_seconds", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "success_codes", js: "success_codes", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "LightsailDatabase": o([
        { json: "relational_database_name", js: "relational_database_name", typ: "" },
        { json: "master_database_name", js: "master_database_name", typ: "" },
        { json: "blueprint_id", js: "blueprint_id", typ: "" },
        { json: "bundle_id", js: "bundle_id", typ: "" },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "master_password", js: "master_password", typ: u(undefined, "") },
        { json: "master_username", js: "master_username", typ: u(undefined, "") },
        { json: "preferred_backup_window", js: "preferred_backup_window", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "backup_retention_enabled", js: "backup_retention_enabled", typ: u(undefined, "") },
        { json: "skip_final_snapshot", js: "skip_final_snapshot", typ: u(undefined, "") },
        { json: "final_snapshot_name", js: "final_snapshot_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "ca_certificate_identifier", js: "ca_certificate_identifier", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "cpu_count", js: "cpu_count", typ: u(undefined, "") },
        { json: "ram_size", js: "ram_size", typ: u(undefined, "") },
        { json: "disk_size", js: "disk_size", typ: u(undefined, "") },
        { json: "master_endpoint_port", js: "master_endpoint_port", typ: u(undefined, "") },
        { json: "master_endpoint_address", js: "master_endpoint_address", typ: u(undefined, "") },
        { json: "secondary_availability_zone", js: "secondary_availability_zone", typ: u(undefined, "") },
        { json: "support_code", js: "support_code", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LightsailDisk": o([
        { json: "name", js: "name", typ: "" },
        { json: "size_in_gb", js: "size_in_gb", typ: "" },
        { json: "availability_zone", js: "availability_zone", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "support_code", js: "support_code", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LightsailDiskAttachment": o([
        { json: "disk_name", js: "disk_name", typ: "" },
        { json: "instance_name", js: "instance_name", typ: "" },
        { json: "disk_path", js: "disk_path", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LightsailDistribution": o([
        { json: "bundle_id", js: "bundle_id", typ: "" },
        { json: "default_cache_behavior", js: "default_cache_behavior", typ: r("CacheBehavior") },
        { json: "origin", js: "origin", typ: r("Origin") },
        { json: "cache_behavior_settings", js: "cache_behavior_settings", typ: r("CacheBehaviorSettings") },
        { json: "query_strings_allowed_list", js: "query_strings_allowed_list", typ: "" },
        { json: "cache_behavior", js: "cache_behavior", typ: u(undefined, r("CacheBehavior")) },
        { json: "certificate_name", js: "certificate_name", typ: u(undefined, "") },
        { json: "ip_address_type", js: "ip_address_type", typ: u(undefined, "") },
        { json: "is_enabled", js: "is_enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
        { json: "alternative_domain_names", js: "alternative_domain_names", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "location", js: "location", typ: u(undefined, r("Location")) },
        { json: "origin_public_dns", js: "origin_public_dns", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "support_code", js: "support_code", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CacheBehavior": o([
        { json: "behavior", js: "behavior", typ: "" },
    ], false),
    "CacheBehaviorSettings": o([
        { json: "forwarded_cookies", js: "forwarded_cookies", typ: "" },
        { json: "forwarded_headers", js: "forwarded_headers", typ: "" },
        { json: "forwarded_query_strings", js: "forwarded_query_strings", typ: "" },
        { json: "cookies_allow_list", js: "cookies_allow_list", typ: "" },
        { json: "headers_allow_list", js: "headers_allow_list", typ: "" },
        { json: "query_strings_allowed_list", js: "query_strings_allowed_list", typ: "" },
        { json: "allowed_http_methods", js: "allowed_http_methods", typ: u(undefined, "") },
        { json: "cached_http_methods", js: "cached_http_methods", typ: u(undefined, "") },
        { json: "default_ttl", js: "default_ttl", typ: u(undefined, "") },
        { json: "maximum_ttl", js: "maximum_ttl", typ: u(undefined, "") },
        { json: "minimum_ttl", js: "minimum_ttl", typ: u(undefined, "") },
        { json: "option", js: "option", typ: u(undefined, "") },
    ], false),
    "Location": o([
        { json: "availability_zone", js: "availability_zone", typ: "" },
        { json: "region_name", js: "region_name", typ: "" },
    ], false),
    "Origin": o([
        { json: "name", js: "name", typ: "" },
        { json: "region_name", js: "region_name", typ: "" },
        { json: "protocol_policy", js: "protocol_policy", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
    ], false),
    "LightsailDomain": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "LightsailDomainEntry": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "is_alias", js: "is_alias", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LightsailInstance": o([
        { json: "name", js: "name", typ: "" },
        { json: "availability_zone", js: "availability_zone", typ: "" },
        { json: "blueprint_id", js: "blueprint_id", typ: "" },
        { json: "bundle_id", js: "bundle_id", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "snapshot_time", js: "snapshot_time", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "key_pair_name", js: "key_pair_name", typ: u(undefined, "") },
        { json: "user_data", js: "user_data", typ: u(undefined, "") },
        { json: "ip_address_type", js: "ip_address_type", typ: u(undefined, "") },
        { json: "add_on", js: "add_on", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "cpu_count", js: "cpu_count", typ: u(undefined, "") },
        { json: "ram_size", js: "ram_size", typ: u(undefined, "") },
        { json: "ipv6_addresses", js: "ipv6_addresses", typ: u(undefined, "") },
        { json: "private_ip_address", js: "private_ip_address", typ: u(undefined, "") },
        { json: "public_ip_address", js: "public_ip_address", typ: u(undefined, "") },
        { json: "is_static_ip", js: "is_static_ip", typ: u(undefined, "") },
        { json: "username", js: "username", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LightsailInstancePublicPorts": o([
        { json: "instance_name", js: "instance_name", typ: "" },
        { json: "port_info", js: "port_info", typ: r("PortInfo") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "PortInfo": o([
        { json: "from_port", js: "from_port", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "to_port", js: "to_port", typ: "" },
        { json: "cidrs", js: "cidrs", typ: u(undefined, "") },
        { json: "cidr_list_aliases", js: "cidr_list_aliases", typ: u(undefined, "") },
    ], false),
    "LightsailKeyPair": o([
        { json: "public_key", js: "public_key", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "pgp_key", js: "pgp_key", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "encrypted_fingerprint", js: "encrypted_fingerprint", typ: u(undefined, "") },
        { json: "encrypted_private_key", js: "encrypted_private_key", typ: u(undefined, "") },
        { json: "fingerprint", js: "fingerprint", typ: u(undefined, "") },
        { json: "private_key", js: "private_key", typ: u(undefined, "") },
    ], false),
    "LightsailLB": o([
        { json: "name", js: "name", typ: "" },
        { json: "instance_port", js: "instance_port", typ: "" },
        { json: "health_check_path", js: "health_check_path", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "public_ports", js: "public_ports", typ: u(undefined, "") },
        { json: "support_code", js: "support_code", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "LightsailLBAttachment": o([
        { json: "lb_name", js: "lb_name", typ: "" },
        { json: "instance_name", js: "instance_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LightsailLBCertificateAttachment": o([
        { json: "lb_name", js: "lb_name", typ: "" },
        { json: "certificate_name", js: "certificate_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LightsailLBPolicy": o([
        { json: "lb_name", js: "lb_name", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "cookie_duration", js: "cookie_duration", typ: u(undefined, "") },
    ], false),
    "LightsailStaticIP": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "ip_address", js: "ip_address", typ: u(undefined, "") },
        { json: "support_code", js: "support_code", typ: u(undefined, "") },
    ], false),
    "LightsailStaticIPAttachment": o([
        { json: "static_ip_name", js: "static_ip_name", typ: "" },
        { json: "instance_name", js: "instance_name", typ: "" },
        { json: "ip_address", js: "ip_address", typ: u(undefined, "") },
    ], false),
    "LoadBalancerBackendServerPolicy": o([
        { json: "load_balancer_name", js: "load_balancer_name", typ: "" },
        { json: "policy_names", js: "policy_names", typ: "" },
        { json: "instance_port", js: "instance_port", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LoadBalancerListenerPolicy": o([
        { json: "load_balancer_name", js: "load_balancer_name", typ: "" },
        { json: "load_balancer_port", js: "load_balancer_port", typ: "" },
        { json: "policy_names", js: "policy_names", typ: "" },
        { json: "triggers", js: "triggers", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "LoadBalancerPolicy": o([
        { json: "load_balancer_name", js: "load_balancer_name", typ: "" },
        { json: "policy_name", js: "policy_name", typ: "" },
        { json: "policy_type_name", js: "policy_type_name", typ: "" },
        { json: "policy_attribute", js: "policy_attribute", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceLocationPlaceIndex": o([
        { json: "data_source", js: "data_source", typ: "" },
        { json: "index_name", js: "index_name", typ: "" },
        { json: "data_source_configuration", js: "data_source_configuration", typ: u(undefined, r("DataSourceConfiguration")) },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "index_arn", js: "index_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "update_time", js: "update_time", typ: u(undefined, "") },
    ], false),
    "DataSourceConfiguration": o([
        { json: "intended_use", js: "intended_use", typ: "" },
    ], false),
    "Macie2Account": o([
        { json: "finding_publishing_frequency", js: "finding_publishing_frequency", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "service_role", js: "service_role", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "updated_at", js: "updated_at", typ: u(undefined, "") },
    ], false),
    "Macie2ClassificationExportConfiguration": o([
        { json: "s3_destination", js: "s3_destination", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "kms_key_arn", js: "kms_key_arn", typ: "" },
        { json: "key_prefix", js: "key_prefix", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Macie2ClassificationJob": o([
        { json: "job_type", js: "job_type", typ: "" },
        { json: "comparator", js: "comparator", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "tag_values", js: "tag_values", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "account_id", js: "account_id", typ: "" },
        { json: "buckets", js: "buckets", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "schedule_frequency", js: "schedule_frequency", typ: u(undefined, "") },
        { json: "custom_data_identifier_ids", js: "custom_data_identifier_ids", typ: u(undefined, "") },
        { json: "sampling_percentage", js: "sampling_percentage", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "initial_run", js: "initial_run", typ: u(undefined, "") },
        { json: "s3_job_definition", js: "s3_job_definition", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "job_status", js: "job_status", typ: u(undefined, "") },
        { json: "daily_schedule", js: "daily_schedule", typ: u(undefined, "") },
        { json: "weekly_schedule", js: "weekly_schedule", typ: u(undefined, "") },
        { json: "monthly_schedule", js: "monthly_schedule", typ: u(undefined, "") },
        { json: "bucket_criteria", js: "bucket_criteria", typ: u(undefined, "") },
        { json: "bucket_definitions", js: "bucket_definitions", typ: u(undefined, "") },
        { json: "scoping", js: "scoping", typ: u(undefined, "") },
        { json: "excludes", js: "excludes", typ: u(undefined, "") },
        { json: "includes", js: "includes", typ: u(undefined, "") },
        { json: "and", js: "and", typ: u(undefined, "") },
        { json: "simple_criterion", js: "simple_criterion", typ: u(undefined, "") },
        { json: "tag_criterion", js: "tag_criterion", typ: u(undefined, "") },
        { json: "simple_scope_term", js: "simple_scope_term", typ: u(undefined, "") },
        { json: "tag_scope_term", js: "tag_scope_term", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "user_paused_details", js: "user_paused_details", typ: u(undefined, "") },
    ], false),
    "Macie2CustomDataIdentifier": o([
        { json: "regex", js: "regex", typ: u(undefined, "") },
        { json: "keywords", js: "keywords", typ: u(undefined, "") },
        { json: "ignore_words", js: "ignore_words", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "maximum_match_distance", js: "maximum_match_distance", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "deleted", js: "deleted", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "Macie2FindingsFilter": o([
        { json: "finding_criteria", js: "finding_criteria", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "field", js: "field", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "position", js: "position", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "criterion", js: "criterion", typ: u(undefined, "") },
        { json: "eq_exact_match", js: "eq_exact_match", typ: u(undefined, "") },
        { json: "eq", js: "eq", typ: u(undefined, "") },
        { json: "neq", js: "neq", typ: u(undefined, "") },
        { json: "lt", js: "lt", typ: u(undefined, "") },
        { json: "lte", js: "lte", typ: u(undefined, "") },
        { json: "gt", js: "gt", typ: u(undefined, "") },
        { json: "gte", js: "gte", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "Macie2InvitationAccepter": o([
        { json: "administrator_account_id", js: "administrator_account_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "invitation_id", js: "invitation_id", typ: u(undefined, "") },
    ], false),
    "Macie2Member": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "email", js: "email", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "invite", js: "invite", typ: u(undefined, "") },
        { json: "invitation_message", js: "invitation_message", typ: u(undefined, "") },
        { json: "invitation_disable_email_notification", js: "invitation_disable_email_notification", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "relationship_status", js: "relationship_status", typ: u(undefined, "") },
        { json: "administrator_account_id", js: "administrator_account_id", typ: u(undefined, "") },
        { json: "invited_at", js: "invited_at", typ: u(undefined, "") },
        { json: "updated_at", js: "updated_at", typ: u(undefined, "") },
    ], false),
    "MainRouteTableAssociation": o([
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "route_table_id", js: "route_table_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "original_route_table_id", js: "original_route_table_id", typ: u(undefined, "") },
    ], false),
    "MediaConvertQueue": o([
        { json: "name", js: "name", typ: "" },
        { json: "commitment", js: "commitment", typ: "" },
        { json: "renewal_type", js: "renewal_type", typ: "" },
        { json: "reserved_slots", js: "reserved_slots", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "pricing_plan", js: "pricing_plan", typ: u(undefined, "") },
        { json: "reservation_plan_settings", js: "reservation_plan_settings", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "MediaStoreContainerPolicy": o([
        { json: "container_name", js: "container_name", typ: "" },
        { json: "policy", js: "policy", typ: "" },
    ], false),
    "MedialiveChannel": o([
        { json: "channel_class", js: "channel_class", typ: "" },
        { json: "destinations", js: "destinations", typ: "" },
        { json: "encoder_settings", js: "encoder_settings", typ: "" },
        { json: "input_specification", js: "input_specification", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "resolution", js: "resolution", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "audio_descriptions", js: "audio_descriptions", typ: "" },
        { json: "output_groups", js: "output_groups", typ: "" },
        { json: "timecode_config", js: "timecode_config", typ: "" },
        { json: "video_descriptions", js: "video_descriptions", typ: "" },
        { json: "input_id", js: "input_id", typ: "" },
        { json: "group_id", js: "group_id", typ: "" },
        { json: "language_code", js: "language_code", typ: "" },
        { json: "pid", js: "pid", typ: "" },
        { json: "tracks", js: "tracks", typ: "" },
        { json: "track", js: "track", typ: "" },
        { json: "program_selection", js: "program_selection", typ: "" },
        { json: "height", js: "height", typ: "" },
        { json: "left_offset", js: "left_offset", typ: "" },
        { json: "top_offset", js: "top_offset", typ: "" },
        { json: "width", js: "width", typ: "" },
        { json: "secondary_input_id", js: "secondary_input_id", typ: "" },
        { json: "audio_selector_name", js: "audio_selector_name", typ: "" },
        { json: "channel_id", js: "channel_id", typ: "" },
        { json: "multiplex_id", js: "multiplex_id", typ: "" },
        { json: "cbet_check_digit", js: "cbet_check_digit", typ: "" },
        { json: "cbet_stepaside", js: "cbet_stepaside", typ: "" },
        { json: "csid", js: "csid", typ: "" },
        { json: "check_digit", js: "check_digit", typ: "" },
        { json: "sid", js: "sid", typ: "" },
        { json: "output_group_settings", js: "output_group_settings", typ: "" },
        { json: "outputs", js: "outputs", typ: "" },
        { json: "output_settings", js: "output_settings", typ: "" },
        { json: "output_name", js: "output_name", typ: "" },
        { json: "bitrate", js: "bitrate", typ: "" },
        { json: "framerate_denominator", js: "framerate_denominator", typ: "" },
        { json: "framerate_numerator", js: "framerate_numerator", typ: "" },
        { json: "caption_selector_name", js: "caption_selector_name", typ: "" },
        { json: "uri", js: "uri", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "destination_ref_id", js: "destination_ref_id", typ: "" },
        { json: "container_settings", js: "container_settings", typ: "" },
        { json: "cdi_input_specification", js: "cdi_input_specification", typ: u(undefined, "") },
        { json: "input_attachments", js: "input_attachments", typ: u(undefined, "") },
        { json: "log_level", js: "log_level", typ: u(undefined, "") },
        { json: "maintenance", js: "maintenance", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "start_channel", js: "start_channel", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc", js: "vpc", typ: u(undefined, "") },
        { json: "media_package_settings", js: "media_package_settings", typ: u(undefined, "") },
        { json: "multiplex_settings", js: "multiplex_settings", typ: u(undefined, "") },
        { json: "settings", js: "settings", typ: u(undefined, "") },
        { json: "caption_descriptions", js: "caption_descriptions", typ: u(undefined, "") },
        { json: "global_configuration", js: "global_configuration", typ: u(undefined, "") },
        { json: "motion_graphics_configuration", js: "motion_graphics_configuration", typ: u(undefined, "") },
        { json: "nielsen_configuration", js: "nielsen_configuration", typ: u(undefined, "") },
        { json: "avail_blanking", js: "avail_blanking", typ: u(undefined, "") },
        { json: "input_attachment_name", js: "input_attachment_name", typ: u(undefined, "") },
        { json: "input_settings", js: "input_settings", typ: u(undefined, "") },
        { json: "automatic_input_failover_settings", js: "automatic_input_failover_settings", typ: u(undefined, "") },
        { json: "audio_selectors", js: "audio_selectors", typ: u(undefined, "") },
        { json: "caption_selectors", js: "caption_selectors", typ: u(undefined, "") },
        { json: "deblock_filter", js: "deblock_filter", typ: u(undefined, "") },
        { json: "denoise_filter", js: "denoise_filter", typ: u(undefined, "") },
        { json: "filter_strength", js: "filter_strength", typ: u(undefined, "") },
        { json: "input_filter", js: "input_filter", typ: u(undefined, "") },
        { json: "network_input_settings", js: "network_input_settings", typ: u(undefined, "") },
        { json: "scte35_pid", js: "scte35_pid", typ: u(undefined, "") },
        { json: "smpte2038_data_preference", js: "smpte2038_data_preference", typ: u(undefined, "") },
        { json: "source_end_behavior", js: "source_end_behavior", typ: u(undefined, "") },
        { json: "selector_settings", js: "selector_settings", typ: u(undefined, "") },
        { json: "audio_hls_rendition_selection", js: "audio_hls_rendition_selection", typ: u(undefined, "") },
        { json: "audio_language_selection", js: "audio_language_selection", typ: u(undefined, "") },
        { json: "audio_pid_selection", js: "audio_pid_selection", typ: u(undefined, "") },
        { json: "audio_track_selection", js: "audio_track_selection", typ: u(undefined, "") },
        { json: "language_selection_policy", js: "language_selection_policy", typ: u(undefined, "") },
        { json: "dolby_e_decode", js: "dolby_e_decode", typ: u(undefined, "") },
        { json: "ancillary_source_settings", js: "ancillary_source_settings", typ: u(undefined, "") },
        { json: "arib_source_settings", js: "arib_source_settings", typ: u(undefined, "") },
        { json: "dvb_sub_source_settings", js: "dvb_sub_source_settings", typ: u(undefined, "") },
        { json: "embedded_source_settings", js: "embedded_source_settings", typ: u(undefined, "") },
        { json: "scte20_source_settings", js: "scte20_source_settings", typ: u(undefined, "") },
        { json: "scte27_source_settings", js: "scte27_source_settings", typ: u(undefined, "") },
        { json: "teletext_source_settings", js: "teletext_source_settings", typ: u(undefined, "") },
        { json: "source_ancillary_channel_number", js: "source_ancillary_channel_number", typ: u(undefined, "") },
        { json: "ocr_language", js: "ocr_language", typ: u(undefined, "") },
        { json: "convert_608_to_708", js: "convert_608_to_708", typ: u(undefined, "") },
        { json: "scte20_detection", js: "scte20_detection", typ: u(undefined, "") },
        { json: "source_608_channel_number", js: "source_608_channel_number", typ: u(undefined, "") },
        { json: "output_rectangle", js: "output_rectangle", typ: u(undefined, "") },
        { json: "page_number", js: "page_number", typ: u(undefined, "") },
        { json: "hls_input_settings", js: "hls_input_settings", typ: u(undefined, "") },
        { json: "server_validation", js: "server_validation", typ: u(undefined, "") },
        { json: "bandwidth", js: "bandwidth", typ: u(undefined, "") },
        { json: "buffer_segments", js: "buffer_segments", typ: u(undefined, "") },
        { json: "retries", js: "retries", typ: u(undefined, "") },
        { json: "retry_interval", js: "retry_interval", typ: u(undefined, "") },
        { json: "scte35_source_type", js: "scte35_source_type", typ: u(undefined, "") },
        { json: "error_clear_time_msec", js: "error_clear_time_msec", typ: u(undefined, "") },
        { json: "failover_conditions", js: "failover_conditions", typ: u(undefined, "") },
        { json: "input_preference", js: "input_preference", typ: u(undefined, "") },
        { json: "failover_condition_settings", js: "failover_condition_settings", typ: u(undefined, "") },
        { json: "audio_silence_settings", js: "audio_silence_settings", typ: u(undefined, "") },
        { json: "input_loss_settings", js: "input_loss_settings", typ: u(undefined, "") },
        { json: "video_black_settings", js: "video_black_settings", typ: u(undefined, "") },
        { json: "audio_silence_threshold_msec", js: "audio_silence_threshold_msec", typ: u(undefined, "") },
        { json: "input_loss_threshold_msec", js: "input_loss_threshold_msec", typ: u(undefined, "") },
        { json: "black_detect_threshold", js: "black_detect_threshold", typ: u(undefined, "") },
        { json: "video_black_threshold_msec", js: "video_black_threshold_msec", typ: u(undefined, "") },
        { json: "maintenance_day", js: "maintenance_day", typ: u(undefined, "") },
        { json: "maintenance_start_time", js: "maintenance_start_time", typ: u(undefined, "") },
        { json: "program_name", js: "program_name", typ: u(undefined, "") },
        { json: "password_param", js: "password_param", typ: u(undefined, "") },
        { json: "stream_name", js: "stream_name", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "username", js: "username", typ: u(undefined, "") },
        { json: "audio_normalization_settings", js: "audio_normalization_settings", typ: u(undefined, "") },
        { json: "audio_type", js: "audio_type", typ: u(undefined, "") },
        { json: "audio_type_control", js: "audio_type_control", typ: u(undefined, "") },
        { json: "audio_watermark_settings", js: "audio_watermark_settings", typ: u(undefined, "") },
        { json: "codec_settings", js: "codec_settings", typ: u(undefined, "") },
        { json: "algorithm", js: "algorithm", typ: u(undefined, "") },
        { json: "algorithm_control", js: "algorithm_control", typ: u(undefined, "") },
        { json: "target_lkfs", js: "target_lkfs", typ: u(undefined, "") },
        { json: "nielsen_watermark_settings", js: "nielsen_watermark_settings", typ: u(undefined, "") },
        { json: "aac_settings", js: "aac_settings", typ: u(undefined, "") },
        { json: "ac3_settings", js: "ac3_settings", typ: u(undefined, "") },
        { json: "eac3_atmos_settings", js: "eac3_atmos_settings", typ: u(undefined, "") },
        { json: "eac3_settings", js: "eac3_settings", typ: u(undefined, "") },
        { json: "coding_mode", js: "coding_mode", typ: u(undefined, "") },
        { json: "input_type", js: "input_type", typ: u(undefined, "") },
        { json: "profile", js: "profile", typ: u(undefined, "") },
        { json: "rate_control_mode", js: "rate_control_mode", typ: u(undefined, "") },
        { json: "raw_format", js: "raw_format", typ: u(undefined, "") },
        { json: "sample_rate", js: "sample_rate", typ: u(undefined, "") },
        { json: "spec", js: "spec", typ: u(undefined, "") },
        { json: "vbr_quality", js: "vbr_quality", typ: u(undefined, "") },
        { json: "bitstream_mode", js: "bitstream_mode", typ: u(undefined, "") },
        { json: "dialnorm", js: "dialnorm", typ: u(undefined, "") },
        { json: "drc_profile", js: "drc_profile", typ: u(undefined, "") },
        { json: "lfe_filter", js: "lfe_filter", typ: u(undefined, "") },
        { json: "metadata_control", js: "metadata_control", typ: u(undefined, "") },
        { json: "drc_line", js: "drc_line", typ: u(undefined, "") },
        { json: "drc_rf", js: "drc_rf", typ: u(undefined, "") },
        { json: "height_trim", js: "height_trim", typ: u(undefined, "") },
        { json: "surround_trim", js: "surround_trim", typ: u(undefined, "") },
        { json: "attenuation_control", js: "attenuation_control", typ: u(undefined, "") },
        { json: "nielsen_cbet_settings", js: "nielsen_cbet_settings", typ: u(undefined, "") },
        { json: "nielsen_distribution_type", js: "nielsen_distribution_type", typ: u(undefined, "") },
        { json: "nielsen_naes_ii_nw_settings", js: "nielsen_naes_ii_nw_settings", typ: u(undefined, "") },
        { json: "archive_group_settings", js: "archive_group_settings", typ: u(undefined, "") },
        { json: "media_package_group_settings", js: "media_package_group_settings", typ: u(undefined, "") },
        { json: "multiplex_group_sttings", js: "multiplex_group_sttings", typ: u(undefined, "") },
        { json: "rtmp_group_settings", js: "rtmp_group_settings", typ: u(undefined, "") },
        { json: "udp_group_sttings", js: "udp_group_sttings", typ: u(undefined, "") },
        { json: "audio_description_names", js: "audio_description_names", typ: u(undefined, "") },
        { json: "caption_description_names", js: "caption_description_names", typ: u(undefined, "") },
        { json: "video_description_name", js: "video_description_name", typ: u(undefined, "") },
        { json: "source", js: "source", typ: u(undefined, "") },
        { json: "sync_threshold", js: "sync_threshold", typ: u(undefined, "") },
        { json: "respond_to_afd", js: "respond_to_afd", typ: u(undefined, "") },
        { json: "scaling_behavior", js: "scaling_behavior", typ: u(undefined, "") },
        { json: "sharpness", js: "sharpness", typ: u(undefined, "") },
        { json: "frame_capture_settings", js: "frame_capture_settings", typ: u(undefined, "") },
        { json: "h264_settings", js: "h264_settings", typ: u(undefined, "") },
        { json: "capture_interval", js: "capture_interval", typ: u(undefined, "") },
        { json: "capture_interval_units", js: "capture_interval_units", typ: u(undefined, "") },
        { json: "adaptive_quantization", js: "adaptive_quantization", typ: u(undefined, "") },
        { json: "afd_signaling", js: "afd_signaling", typ: u(undefined, "") },
        { json: "buf_fil_pct", js: "buf_fil_pct", typ: u(undefined, "") },
        { json: "buf_size", js: "buf_size", typ: u(undefined, "") },
        { json: "color_metadata", js: "color_metadata", typ: u(undefined, "") },
        { json: "entropy_encoding", js: "entropy_encoding", typ: u(undefined, "") },
        { json: "filter_settings", js: "filter_settings", typ: u(undefined, "") },
        { json: "fixed_afd", js: "fixed_afd", typ: u(undefined, "") },
        { json: "flicer_aq", js: "flicer_aq", typ: u(undefined, "") },
        { json: "force_field_pictures", js: "force_field_pictures", typ: u(undefined, "") },
        { json: "framerate_control", js: "framerate_control", typ: u(undefined, "") },
        { json: "gop_b_reference", js: "gop_b_reference", typ: u(undefined, "") },
        { json: "gop_closed_cadence", js: "gop_closed_cadence", typ: u(undefined, "") },
        { json: "gop_num_b_frames", js: "gop_num_b_frames", typ: u(undefined, "") },
        { json: "gop_size", js: "gop_size", typ: u(undefined, "") },
        { json: "gop_size_units", js: "gop_size_units", typ: u(undefined, "") },
        { json: "level", js: "level", typ: u(undefined, "") },
        { json: "look_ahead_rate_control", js: "look_ahead_rate_control", typ: u(undefined, "") },
        { json: "max_bitrate", js: "max_bitrate", typ: u(undefined, "") },
        { json: "min_interval", js: "min_interval", typ: u(undefined, "") },
        { json: "num_ref_frames", js: "num_ref_frames", typ: u(undefined, "") },
        { json: "par_control", js: "par_control", typ: u(undefined, "") },
        { json: "par_denominator", js: "par_denominator", typ: u(undefined, "") },
        { json: "par_numerator", js: "par_numerator", typ: u(undefined, "") },
        { json: "quality_level", js: "quality_level", typ: u(undefined, "") },
        { json: "qvbr_quality_level", js: "qvbr_quality_level", typ: u(undefined, "") },
        { json: "scan_type", js: "scan_type", typ: u(undefined, "") },
        { json: "scene_change_detect", js: "scene_change_detect", typ: u(undefined, "") },
        { json: "slices", js: "slices", typ: u(undefined, "") },
        { json: "softness", js: "softness", typ: u(undefined, "") },
        { json: "spatial_aq", js: "spatial_aq", typ: u(undefined, "") },
        { json: "subgop_length", js: "subgop_length", typ: u(undefined, "") },
        { json: "syntax", js: "syntax", typ: u(undefined, "") },
        { json: "temporal_aq", js: "temporal_aq", typ: u(undefined, "") },
        { json: "timecode_insertion", js: "timecode_insertion", typ: u(undefined, "") },
        { json: "temporal_filter_settings", js: "temporal_filter_settings", typ: u(undefined, "") },
        { json: "alternative_transfer_function", js: "alternative_transfer_function", typ: u(undefined, "") },
        { json: "tier", js: "tier", typ: u(undefined, "") },
        { json: "timecode_burnin_settings", js: "timecode_burnin_settings", typ: u(undefined, "") },
        { json: "color_space_passthrough_settings", js: "color_space_passthrough_settings", typ: u(undefined, "") },
        { json: "dolby_vision81_settings", js: "dolby_vision81_settings", typ: u(undefined, "") },
        { json: "hdr10_settings", js: "hdr10_settings", typ: u(undefined, "") },
        { json: "rec601_settings", js: "rec601_settings", typ: u(undefined, "") },
        { json: "rec709_settings", js: "rec709_settings", typ: u(undefined, "") },
        { json: "max_cll", js: "max_cll", typ: u(undefined, "") },
        { json: "max_fall", js: "max_fall", typ: u(undefined, "") },
        { json: "timecode_burnin_font_size", js: "timecode_burnin_font_size", typ: u(undefined, "") },
        { json: "timecode_burnin_position", js: "timecode_burnin_position", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "post_filter_sharpening", js: "post_filter_sharpening", typ: u(undefined, "") },
        { json: "strength", js: "strength", typ: u(undefined, "") },
        { json: "accessibility", js: "accessibility", typ: u(undefined, "") },
        { json: "destination_settings", js: "destination_settings", typ: u(undefined, "") },
        { json: "language_description", js: "language_description", typ: u(undefined, "") },
        { json: "arib_destination_settings", js: "arib_destination_settings", typ: u(undefined, "") },
        { json: "burn_in_destination_settings", js: "burn_in_destination_settings", typ: u(undefined, "") },
        { json: "dvb_sub_destination_settings", js: "dvb_sub_destination_settings", typ: u(undefined, "") },
        { json: "ebu_tt_d_destination_settings", js: "ebu_tt_d_destination_settings", typ: u(undefined, "") },
        { json: "embedded_destination_settings", js: "embedded_destination_settings", typ: u(undefined, "") },
        { json: "embedded_plus_scte20_destination_settings", js: "embedded_plus_scte20_destination_settings", typ: u(undefined, "") },
        { json: "rtmp_caption_info_destination_settings", js: "rtmp_caption_info_destination_settings", typ: u(undefined, "") },
        { json: "scte20_plus_embedded_destination_settings", js: "scte20_plus_embedded_destination_settings", typ: u(undefined, "") },
        { json: "scte27_destination_settings", js: "scte27_destination_settings", typ: u(undefined, "") },
        { json: "smpte_tt_destination_settings", js: "smpte_tt_destination_settings", typ: u(undefined, "") },
        { json: "teletext_destination_settings", js: "teletext_destination_settings", typ: u(undefined, "") },
        { json: "ttml_destination_settings", js: "ttml_destination_settings", typ: u(undefined, "") },
        { json: "webvtt_destination_settings", js: "webvtt_destination_settings", typ: u(undefined, "") },
        { json: "alignment", js: "alignment", typ: u(undefined, "") },
        { json: "background_color", js: "background_color", typ: u(undefined, "") },
        { json: "background_opacity", js: "background_opacity", typ: u(undefined, "") },
        { json: "font", js: "font", typ: u(undefined, "") },
        { json: "font_color", js: "font_color", typ: u(undefined, "") },
        { json: "font_opacity", js: "font_opacity", typ: u(undefined, "") },
        { json: "font_resolution", js: "font_resolution", typ: u(undefined, "") },
        { json: "font_size", js: "font_size", typ: u(undefined, "") },
        { json: "outline_color", js: "outline_color", typ: u(undefined, "") },
        { json: "outline_size", js: "outline_size", typ: u(undefined, "") },
        { json: "shadow_color", js: "shadow_color", typ: u(undefined, "") },
        { json: "shadow_opacity", js: "shadow_opacity", typ: u(undefined, "") },
        { json: "shadow_x_offset", js: "shadow_x_offset", typ: u(undefined, "") },
        { json: "shadow_y_offset", js: "shadow_y_offset", typ: u(undefined, "") },
        { json: "teletext_grid_control", js: "teletext_grid_control", typ: u(undefined, "") },
        { json: "x_position", js: "x_position", typ: u(undefined, "") },
        { json: "y_position", js: "y_position", typ: u(undefined, "") },
        { json: "copyright_holder", js: "copyright_holder", typ: u(undefined, "") },
        { json: "fill_line_gap", js: "fill_line_gap", typ: u(undefined, "") },
        { json: "font_family", js: "font_family", typ: u(undefined, "") },
        { json: "style_control", js: "style_control", typ: u(undefined, "") },
        { json: "initial_audio_gain", js: "initial_audio_gain", typ: u(undefined, "") },
        { json: "input_end_action", js: "input_end_action", typ: u(undefined, "") },
        { json: "input_loss_behavior", js: "input_loss_behavior", typ: u(undefined, "") },
        { json: "output_locking_mode", js: "output_locking_mode", typ: u(undefined, "") },
        { json: "output_timing_source", js: "output_timing_source", typ: u(undefined, "") },
        { json: "support_low_framerate_inputs", js: "support_low_framerate_inputs", typ: u(undefined, "") },
        { json: "motion_graphics_insertion", js: "motion_graphics_insertion", typ: u(undefined, "") },
        { json: "html_motion_graphics_settings", js: "html_motion_graphics_settings", typ: u(undefined, "") },
        { json: "distributor_id", js: "distributor_id", typ: u(undefined, "") },
        { json: "nielsen_pcm_to_id3_tagging", js: "nielsen_pcm_to_id3_tagging", typ: u(undefined, "") },
        { json: "avail_blanking_image", js: "avail_blanking_image", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "archive_cdn_settings", js: "archive_cdn_settings", typ: u(undefined, "") },
        { json: "rollover_interval", js: "rollover_interval", typ: u(undefined, "") },
        { json: "ad_markers", js: "ad_markers", typ: u(undefined, "") },
        { json: "authentication_scheme", js: "authentication_scheme", typ: u(undefined, "") },
        { json: "cache_full_behavior", js: "cache_full_behavior", typ: u(undefined, "") },
        { json: "cache_length", js: "cache_length", typ: u(undefined, "") },
        { json: "caption_data", js: "caption_data", typ: u(undefined, "") },
        { json: "input_loss_action", js: "input_loss_action", typ: u(undefined, "") },
        { json: "restart_delay", js: "restart_delay", typ: u(undefined, "") },
        { json: "timed_metadata_id3_frame", js: "timed_metadata_id3_frame", typ: u(undefined, "") },
        { json: "archive_s3_settings", js: "archive_s3_settings", typ: u(undefined, "") },
        { json: "canned_acl", js: "canned_acl", typ: u(undefined, "") },
        { json: "archive_output_settings", js: "archive_output_settings", typ: u(undefined, "") },
        { json: "media_package_output_settings", js: "media_package_output_settings", typ: u(undefined, "") },
        { json: "multiplex_output_settings", js: "multiplex_output_settings", typ: u(undefined, "") },
        { json: "rtmp_output_settings", js: "rtmp_output_settings", typ: u(undefined, "") },
        { json: "udp_output_settings", js: "udp_output_settings", typ: u(undefined, "") },
        { json: "extension", js: "extension", typ: u(undefined, "") },
        { json: "name_modifier", js: "name_modifier", typ: u(undefined, "") },
        { json: "m2ts_settings", js: "m2ts_settings", typ: u(undefined, "") },
        { json: "buffer_msec", js: "buffer_msec", typ: u(undefined, "") },
        { json: "fec_output_setting", js: "fec_output_setting", typ: u(undefined, "") },
        { json: "column_depth", js: "column_depth", typ: u(undefined, "") },
        { json: "include_fec", js: "include_fec", typ: u(undefined, "") },
        { json: "row_length", js: "row_length", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "MedialiveInput": o([
        { json: "name", js: "name", typ: "" },
        { json: "input_security_groups", js: "input_security_groups", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "destinations", js: "destinations", typ: u(undefined, "") },
        { json: "input_devices", js: "input_devices", typ: u(undefined, "") },
        { json: "media_connect_flows", js: "media_connect_flows", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "sources", js: "sources", typ: u(undefined, "") },
        { json: "vpc", js: "vpc", typ: u(undefined, "") },
        { json: "stream_name", js: "stream_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "flow_arn", js: "flow_arn", typ: u(undefined, "") },
        { json: "password_param", js: "password_param", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "username", js: "username", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "attached_channels", js: "attached_channels", typ: u(undefined, "") },
        { json: "input_class", js: "input_class", typ: u(undefined, "") },
        { json: "input_partner_ids", js: "input_partner_ids", typ: u(undefined, "") },
        { json: "input_source_type", js: "input_source_type", typ: u(undefined, "") },
    ], false),
    "MedialiveInputSecurityGroup": o([
        { json: "whitelist_rules", js: "whitelist_rules", typ: "" },
        { json: "cidr", js: "cidr", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "inputs", js: "inputs", typ: u(undefined, "") },
    ], false),
    "MedialiveMultiplex": o([
        { json: "availability_zones", js: "availability_zones", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "transport_stream_bitrate", js: "transport_stream_bitrate", typ: "" },
        { json: "transport_stream_id", js: "transport_stream_id", typ: "" },
        { json: "start_multiplex", js: "start_multiplex", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "transport_stream_reserved_bitrate", js: "transport_stream_reserved_bitrate", typ: u(undefined, "") },
        { json: "maximum_video_buffer_delay_milliseconds", js: "maximum_video_buffer_delay_milliseconds", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "MedialiveMultiplexProgram": o([
        { json: "multiplex_id", js: "multiplex_id", typ: "" },
        { json: "program_name", js: "program_name", typ: "" },
        { json: "multiplex_program_settings", js: "multiplex_program_settings", typ: "" },
        { json: "program_number", js: "program_number", typ: "" },
        { json: "preferred_channel_pipeline", js: "preferred_channel_pipeline", typ: "" },
        { json: "provider_name", js: "provider_name", typ: "" },
        { json: "service_name", js: "service_name", typ: "" },
        { json: "service_descriptor", js: "service_descriptor", typ: u(undefined, "") },
        { json: "video_settings", js: "video_settings", typ: u(undefined, "") },
        { json: "constant_bitrate", js: "constant_bitrate", typ: u(undefined, "") },
        { json: "statmux_settings", js: "statmux_settings", typ: u(undefined, "") },
        { json: "minimum_bitrate", js: "minimum_bitrate", typ: u(undefined, "") },
        { json: "maximum_bitrate", js: "maximum_bitrate", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "example_attribute", js: "example_attribute", typ: u(undefined, "") },
    ], false),
    "ResourceMemorydbUser": o([
        { json: "access_string", js: "access_string", typ: "" },
        { json: "authentication_mode", js: "authentication_mode", typ: "" },
        { json: "passwords", js: "passwords", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "minimum_engine_version", js: "minimum_engine_version", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceMqBroker": o([
        { json: "broker_name", js: "broker_name", typ: "" },
        { json: "engine_type", js: "engine_type", typ: "" },
        { json: "engine_version", js: "engine_version", typ: "" },
        { json: "host_instance_type", js: "host_instance_type", typ: "" },
        { json: "user", js: "user", typ: r("User") },
        { json: "time_zone", js: "time_zone", typ: "" },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "authentication_strategy", js: "authentication_strategy", typ: u(undefined, "") },
        { json: "auto_minor_version_upgrade", js: "auto_minor_version_upgrade", typ: u(undefined, "") },
        { json: "configuration", js: "configuration", typ: u(undefined, r("MqBrokerConfiguration")) },
        { json: "deployment_mode", js: "deployment_mode", typ: u(undefined, "") },
        { json: "encryption_options", js: "encryption_options", typ: u(undefined, r("EncryptionOptions")) },
        { json: "ldap_server_metadata", js: "ldap_server_metadata", typ: u(undefined, r("LDAPServerMetadata")) },
        { json: "logs", js: "logs", typ: u(undefined, r("Logs")) },
        { json: "maintenance_window_start_time", js: "maintenance_window_start_time", typ: u(undefined, r("MaintenanceWindowStartTime")) },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "revision", js: "revision", typ: u(undefined, "") },
        { json: "use_aws_owned_key", js: "use_aws_owned_key", typ: u(undefined, "") },
        { json: "user_search_subtree", js: "user_search_subtree", typ: u(undefined, "") },
        { json: "general", js: "general", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "MqBrokerConfiguration": o([
        { json: "id", js: "id", typ: "" },
        { json: "revision", js: "revision", typ: "" },
    ], false),
    "EncryptionOptions": o([
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "use_aws_owned_key", js: "use_aws_owned_key", typ: "" },
    ], false),
    "LDAPServerMetadata": o([
        { json: "hosts", js: "hosts", typ: "" },
        { json: "role_base", js: "role_base", typ: "" },
        { json: "role_name", js: "role_name", typ: "" },
        { json: "role_search_matching", js: "role_search_matching", typ: "" },
        { json: "role_search_subtree", js: "role_search_subtree", typ: "" },
        { json: "service_account_password", js: "service_account_password", typ: "" },
        { json: "service_account_username", js: "service_account_username", typ: "" },
        { json: "user_base", js: "user_base", typ: "" },
        { json: "user_role_name", js: "user_role_name", typ: "" },
        { json: "user_search_matching", js: "user_search_matching", typ: "" },
        { json: "user_search_subtree", js: "user_search_subtree", typ: "" },
    ], false),
    "Logs": o([
        { json: "audit", js: "audit", typ: "" },
        { json: "general", js: "general", typ: "" },
    ], false),
    "MaintenanceWindowStartTime": o([
        { json: "day_of_week", js: "day_of_week", typ: "" },
        { json: "time_of_day", js: "time_of_day", typ: "" },
        { json: "time_zone", js: "time_zone", typ: "" },
    ], false),
    "User": o([
        { json: "password", js: "password", typ: "" },
        { json: "console_access", js: "console_access", typ: u(undefined, "") },
        { json: "groups", js: "groups", typ: u(undefined, "") },
        { json: "replication_user", js: "replication_user", typ: u(undefined, "") },
    ], false),
    "MqConfiguration": o([
        { json: "data", js: "data", typ: "" },
        { json: "engine_type", js: "engine_type", typ: "" },
        { json: "engine_version", js: "engine_version", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "authentication_strategy", js: "authentication_strategy", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "latest_revision", js: "latest_revision", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceMskCluster": o([
        { json: "broker_node_group_info", js: "broker_node_group_info", typ: "" },
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "kafka_version", js: "kafka_version", typ: "" },
        { json: "number_of_broker_nodes", js: "number_of_broker_nodes", typ: "" },
        { json: "client_subnets", js: "client_subnets", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "security_groups", js: "security_groups", typ: "" },
        { json: "arn", js: "arn", typ: "" },
        { json: "revision", js: "revision", typ: "" },
        { json: "prometheus", js: "prometheus", typ: "" },
        { json: "enabled_in_broker", js: "enabled_in_broker", typ: "" },
        { json: "broker_logs", js: "broker_logs", typ: "" },
        { json: "client_authentication", js: "client_authentication", typ: u(undefined, "") },
        { json: "configuration_info", js: "configuration_info", typ: u(undefined, "") },
        { json: "encryption_info", js: "encryption_info", typ: u(undefined, "") },
        { json: "enhanced_monitoring", js: "enhanced_monitoring", typ: u(undefined, "") },
        { json: "open_monitoring", js: "open_monitoring", typ: u(undefined, "") },
        { json: "logging_info", js: "logging_info", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "az_distribution", js: "az_distribution", typ: u(undefined, "") },
        { json: "connectivity_info", js: "connectivity_info", typ: u(undefined, "") },
        { json: "storage_info", js: "storage_info", typ: u(undefined, "") },
        { json: "public_access", js: "public_access", typ: u(undefined, "") },
        { json: "vpc_connectivity", js: "vpc_connectivity", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "sasl", js: "sasl", typ: u(undefined, "") },
        { json: "tls", js: "tls", typ: u(undefined, "") },
        { json: "iam", js: "iam", typ: u(undefined, "") },
        { json: "scram", js: "scram", typ: u(undefined, "") },
        { json: "ebs_storage_info", js: "ebs_storage_info", typ: u(undefined, "") },
        { json: "provisioned_throughput", js: "provisioned_throughput", typ: u(undefined, "") },
        { json: "volume_size", js: "volume_size", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "volume_throughput", js: "volume_throughput", typ: u(undefined, "") },
        { json: "unauthenticated", js: "unauthenticated", typ: u(undefined, "") },
        { json: "certificate_authority_arns", js: "certificate_authority_arns", typ: u(undefined, "") },
        { json: "encryption_in_transit", js: "encryption_in_transit", typ: u(undefined, "") },
        { json: "encryption_at_rest_kms_key_arn", js: "encryption_at_rest_kms_key_arn", typ: u(undefined, "") },
        { json: "client_broker", js: "client_broker", typ: u(undefined, "") },
        { json: "in_cluster", js: "in_cluster", typ: u(undefined, "") },
        { json: "jmx_exporter", js: "jmx_exporter", typ: u(undefined, "") },
        { json: "node_exporter", js: "node_exporter", typ: u(undefined, "") },
        { json: "log_group", js: "log_group", typ: u(undefined, "") },
        { json: "delivery_stream", js: "delivery_stream", typ: u(undefined, "") },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "bootstrap_brokers", js: "bootstrap_brokers", typ: u(undefined, "") },
        { json: "bootstrap_brokers_public_sasl_iam", js: "bootstrap_brokers_public_sasl_iam", typ: u(undefined, "") },
        { json: "bootstrap_brokers_public_sasl_scram", js: "bootstrap_brokers_public_sasl_scram", typ: u(undefined, "") },
        { json: "bootstrap_brokers_public_tls", js: "bootstrap_brokers_public_tls", typ: u(undefined, "") },
        { json: "bootstrap_brokers_sasl_iam", js: "bootstrap_brokers_sasl_iam", typ: u(undefined, "") },
        { json: "bootstrap_brokers_sasl_scram", js: "bootstrap_brokers_sasl_scram", typ: u(undefined, "") },
        { json: "bootstrap_brokers_tls", js: "bootstrap_brokers_tls", typ: u(undefined, "") },
        { json: "bootstrap_brokers_vpc_connectivity_sasl_iam", js: "bootstrap_brokers_vpc_connectivity_sasl_iam", typ: u(undefined, "") },
        { json: "bootstrap_brokers_vpc_connectivity_sasl_scram", js: "bootstrap_brokers_vpc_connectivity_sasl_scram", typ: u(undefined, "") },
        { json: "bootstrap_brokers_vpc_connectivity_tls", js: "bootstrap_brokers_vpc_connectivity_tls", typ: u(undefined, "") },
        { json: "current_version", js: "current_version", typ: u(undefined, "") },
        { json: "encryption_info.0.encryption_at_rest_kms_key_arn", js: "encryption_info.0.encryption_at_rest_kms_key_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "storage_mode", js: "storage_mode", typ: u(undefined, "") },
        { json: "zookeeper_connect_string", js: "zookeeper_connect_string", typ: u(undefined, "") },
        { json: "zookeeper_connect_string_tls", js: "zookeeper_connect_string_tls", typ: u(undefined, "") },
    ], false),
    "MskClusterPolicy": o([
        { json: "cluster_arn", js: "cluster_arn", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "MskScramSecretAssociation": o([
        { json: "secret_arn_list", js: "secret_arn_list", typ: "" },
        { json: "cluster_arn", js: "cluster_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "MskServerlessCluster": o([
        { json: "client_authentication", js: "client_authentication", typ: "" },
        { json: "cluster_name", js: "cluster_name", typ: "" },
        { json: "vpc_config", js: "vpc_config", typ: "" },
        { json: "sasl", js: "sasl", typ: "" },
        { json: "iam", js: "iam", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "PurpleMskconnectConnector": o([
        { json: "capacity", js: "capacity", typ: "" },
        { json: "connector_configuration", js: "connector_configuration", typ: "" },
        { json: "kafka_cluster", js: "kafka_cluster", typ: "" },
        { json: "kafka_cluster_client_authentication", js: "kafka_cluster_client_authentication", typ: "" },
        { json: "kafka_cluster_encryption_in_transit", js: "kafka_cluster_encryption_in_transit", typ: "" },
        { json: "kafkaconnect_version", js: "kafkaconnect_version", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "plugin", js: "plugin", typ: "" },
        { json: "service_execution_role_arn", js: "service_execution_role_arn", typ: "" },
        { json: "max_worker_count", js: "max_worker_count", typ: "" },
        { json: "min_worker_count", js: "min_worker_count", typ: "" },
        { json: "cpu_utilization_percentage", js: "cpu_utilization_percentage", typ: "" },
        { json: "worker_count", js: "worker_count", typ: "" },
        { json: "apache_kafka_cluster", js: "apache_kafka_cluster", typ: "" },
        { json: "bootstrap_servers", js: "bootstrap_servers", typ: "" },
        { json: "vpc", js: "vpc", typ: "" },
        { json: "security_groups", js: "security_groups", typ: "" },
        { json: "subnets", js: "subnets", typ: "" },
        { json: "worker_log_delivery", js: "worker_log_delivery", typ: "" },
        { json: "log_group", js: "log_group", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "custom_plugin", js: "custom_plugin", typ: "" },
        { json: "arn", js: "arn", typ: "" },
        { json: "revision", js: "revision", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "log_delivery", js: "log_delivery", typ: u(undefined, "") },
        { json: "worker_configuration", js: "worker_configuration", typ: u(undefined, "") },
        { json: "autoscaling", js: "autoscaling", typ: u(undefined, "") },
        { json: "provisioned_capacity", js: "provisioned_capacity", typ: u(undefined, "") },
        { json: "mcu_count", js: "mcu_count", typ: u(undefined, "") },
        { json: "scale_in_policy", js: "scale_in_policy", typ: u(undefined, "") },
        { json: "scale_out_policy", js: "scale_out_policy", typ: u(undefined, "") },
        { json: "authentication_type", js: "authentication_type", typ: u(undefined, "") },
        { json: "encryption_type", js: "encryption_type", typ: u(undefined, "") },
        { json: "cloudwatch_logs", js: "cloudwatch_logs", typ: u(undefined, "") },
        { json: "firehose", js: "firehose", typ: u(undefined, "") },
        { json: "s3", js: "s3", typ: u(undefined, "") },
        { json: "delivery_stream", js: "delivery_stream", typ: u(undefined, "") },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "MskconnectCustomPlugin": o([
        { json: "name", js: "name", typ: "" },
        { json: "content_type", js: "content_type", typ: "" },
        { json: "location", js: "location", typ: "" },
        { json: "s3", js: "s3", typ: "" },
        { json: "bucket_arn", js: "bucket_arn", typ: "" },
        { json: "file_key", js: "file_key", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "object_version", js: "object_version", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "latest_revision", js: "latest_revision", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
    ], false),
    "MwaaEnvironment": o([
        { json: "dag_s3_path", js: "dag_s3_path", typ: "" },
        { json: "execution_role_arn", js: "execution_role_arn", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "network_configuration", js: "network_configuration", typ: "" },
        { json: "source_bucket_arn", js: "source_bucket_arn", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "airflow_configuration_options", js: "airflow_configuration_options", typ: u(undefined, "") },
        { json: "airflow_version", js: "airflow_version", typ: u(undefined, "") },
        { json: "environment_class", js: "environment_class", typ: u(undefined, "") },
        { json: "kms_key", js: "kms_key", typ: u(undefined, "") },
        { json: "logging_configuration", js: "logging_configuration", typ: u(undefined, "") },
        { json: "max_workers", js: "max_workers", typ: u(undefined, "") },
        { json: "min_workers", js: "min_workers", typ: u(undefined, "") },
        { json: "plugins_s3_object_version", js: "plugins_s3_object_version", typ: u(undefined, "") },
        { json: "plugins_s3_path", js: "plugins_s3_path", typ: u(undefined, "") },
        { json: "requirements_s3_object_version", js: "requirements_s3_object_version", typ: u(undefined, "") },
        { json: "requirements_s3_path", js: "requirements_s3_path", typ: u(undefined, "") },
        { json: "schedulers", js: "schedulers", typ: u(undefined, "") },
        { json: "startup_script_s3_object_version", js: "startup_script_s3_object_version", typ: u(undefined, "") },
        { json: "startup_script_s3_path", js: "startup_script_s3_path", typ: u(undefined, "") },
        { json: "webserver_access_mode", js: "webserver_access_mode", typ: u(undefined, "") },
        { json: "weekly_maintenance_window_start", js: "weekly_maintenance_window_start", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "dag_processing_logs", js: "dag_processing_logs", typ: u(undefined, "") },
        { json: "scheduler_logs", js: "scheduler_logs", typ: u(undefined, "") },
        { json: "task_logs", js: "task_logs", typ: u(undefined, "") },
        { json: "webserver_logs", js: "webserver_logs", typ: u(undefined, "") },
        { json: "worker_logs", js: "worker_logs", typ: u(undefined, "") },
        { json: "log_level", js: "log_level", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "logging_configuration[0].<LOG_CONFIGURATION_TYPE>[0].cloud_watch_log_group_arn", js: "logging_configuration[0].<LOG_CONFIGURATION_TYPE>[0].cloud_watch_log_group_arn", typ: u(undefined, "") },
        { json: "service_role_arn", js: "service_role_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "webserver_url", js: "webserver_url", typ: u(undefined, "") },
    ], false),
    "ResourceNatGateway": o([
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "allocation_id", js: "allocation_id", typ: u(undefined, "") },
        { json: "connectivity_type", js: "connectivity_type", typ: u(undefined, "") },
        { json: "private_ip", js: "private_ip", typ: u(undefined, "") },
        { json: "secondary_allocation_ids", js: "secondary_allocation_ids", typ: u(undefined, "") },
        { json: "secondary_private_ip_address_count", js: "secondary_private_ip_address_count", typ: u(undefined, "") },
        { json: "secondary_private_ip_addresses", js: "secondary_private_ip_addresses", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "public_ip", js: "public_ip", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "NeptuneCluster": o([
        { json: "allow_major_version_upgrade", js: "allow_major_version_upgrade", typ: u(undefined, "") },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "backup_retention_period", js: "backup_retention_period", typ: u(undefined, "") },
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "cluster_identifier_prefix", js: "cluster_identifier_prefix", typ: u(undefined, "") },
        { json: "copy_tags_to_snapshot", js: "copy_tags_to_snapshot", typ: u(undefined, "") },
        { json: "enable_cloudwatch_logs_exports", js: "enable_cloudwatch_logs_exports", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "final_snapshot_identifier", js: "final_snapshot_identifier", typ: u(undefined, "") },
        { json: "global_cluster_identifier", js: "global_cluster_identifier", typ: u(undefined, "") },
        { json: "iam_roles", js: "iam_roles", typ: u(undefined, "") },
        { json: "iam_database_authentication_enabled", js: "iam_database_authentication_enabled", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "neptune_subnet_group_name", js: "neptune_subnet_group_name", typ: u(undefined, "") },
        { json: "neptune_cluster_parameter_group_name", js: "neptune_cluster_parameter_group_name", typ: u(undefined, "") },
        { json: "neptune_instance_parameter_group_name", js: "neptune_instance_parameter_group_name", typ: u(undefined, "") },
        { json: "preferred_backup_window", js: "preferred_backup_window", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "replication_source_identifier", js: "replication_source_identifier", typ: u(undefined, "") },
        { json: "skip_final_snapshot", js: "skip_final_snapshot", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "deletion_protection", js: "deletion_protection", typ: u(undefined, "") },
        { json: "serverless_v2_scaling_configuration", js: "serverless_v2_scaling_configuration", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cluster_resource_id", js: "cluster_resource_id", typ: u(undefined, "") },
        { json: "cluster_members", js: "cluster_members", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "reader_endpoint", js: "reader_endpoint", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ClusterEndpoint": o([
        { json: "endpoint_type", js: "endpoint_type", typ: u(undefined, "") },
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "cluster_endpoint_identifier", js: "cluster_endpoint_identifier", typ: u(undefined, "") },
        { json: "excluded_members", js: "excluded_members", typ: u(undefined, "") },
        { json: "static_members", js: "static_members", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "custom_endpoint_type", js: "custom_endpoint_type", typ: u(undefined, "") },
    ], false),
    "NeptuneGlobalCluster": o([
        { json: "global_cluster_identifier", js: "global_cluster_identifier", typ: u(undefined, "") },
        { json: "deletion_protection", js: "deletion_protection", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "source_db_cluster_identifier", js: "source_db_cluster_identifier", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "create", js: "create", typ: u(undefined, "") },
        { json: "update", js: "update", typ: u(undefined, "") },
        { json: "delete", js: "delete", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "global_cluster_resource_id", js: "global_cluster_resource_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "NetworkACLAssociation": o([
        { json: "network_acl_id", js: "network_acl_id", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "NetworkACLRule": o([
        { json: "network_acl_id", js: "network_acl_id", typ: "" },
        { json: "rule_number", js: "rule_number", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "rule_action", js: "rule_action", typ: "" },
        { json: "egress", js: "egress", typ: u(undefined, "") },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "ipv6_cidr_block", js: "ipv6_cidr_block", typ: u(undefined, "") },
        { json: "from_port", js: "from_port", typ: u(undefined, "") },
        { json: "to_port", js: "to_port", typ: u(undefined, "") },
        { json: "icmp_type", js: "icmp_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceNetworkInterface": o([
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "instance", js: "instance", typ: "" },
        { json: "device_index", js: "device_index", typ: "" },
        { json: "attachment", js: "attachment", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "interface_type", js: "interface_type", typ: u(undefined, "") },
        { json: "ipv4_prefix_count", js: "ipv4_prefix_count", typ: u(undefined, "") },
        { json: "ipv4_prefixes", js: "ipv4_prefixes", typ: u(undefined, "") },
        { json: "ipv6_address_count", js: "ipv6_address_count", typ: u(undefined, "") },
        { json: "ipv6_address_list_enabled", js: "ipv6_address_list_enabled", typ: u(undefined, "") },
        { json: "ipv6_address_list", js: "ipv6_address_list", typ: u(undefined, "") },
        { json: "ipv6_addresses", js: "ipv6_addresses", typ: u(undefined, "") },
        { json: "ipv6_prefix_count", js: "ipv6_prefix_count", typ: u(undefined, "") },
        { json: "ipv6_prefixes", js: "ipv6_prefixes", typ: u(undefined, "") },
        { json: "private_ip_list", js: "private_ip_list", typ: u(undefined, "") },
        { json: "private_ip_list_enabled", js: "private_ip_list_enabled", typ: u(undefined, "") },
        { json: "private_ips", js: "private_ips", typ: u(undefined, "") },
        { json: "private_ips_count", js: "private_ips_count", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "source_dest_check", js: "source_dest_check", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "mac_address", js: "mac_address", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "private_dns_name", js: "private_dns_name", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "NetworkInterfaceAttachment": o([
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "network_interface_id", js: "network_interface_id", typ: "" },
        { json: "device_index", js: "device_index", typ: "" },
        { json: "attachment_id", js: "attachment_id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "NetworkInterfaceSgAttachment": o([
        { json: "security_group_id", js: "security_group_id", typ: "" },
        { json: "network_interface_id", js: "network_interface_id", typ: "" },
    ], false),
    "ResourceNetworkfirewallFirewall": o([
        { json: "firewall_policy_arn", js: "firewall_policy_arn", typ: "" },
        { json: "subnet_mapping", js: "subnet_mapping", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "delete_protection", js: "delete_protection", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, "") },
        { json: "firewall_policy_change_protection", js: "firewall_policy_change_protection", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "subnet_change_protection", js: "subnet_change_protection", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
        { json: "ip_address_type", js: "ip_address_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "update_token", js: "update_token", typ: u(undefined, "") },
    ], false),
    "ResourceNetworkfirewallFirewallPolicy": o([
        { json: "firewall_policy", js: "firewall_policy", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "stateless_default_actions", js: "stateless_default_actions", typ: "" },
        { json: "stateless_fragment_default_actions", js: "stateless_fragment_default_actions", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "ip_set", js: "ip_set", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "action_definition", js: "action_definition", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "publish_metric_action", js: "publish_metric_action", typ: "" },
        { json: "dimension", js: "dimension", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
        { json: "policy_variables", js: "policy_variables", typ: u(undefined, "") },
        { json: "stateful_default_actions", js: "stateful_default_actions", typ: u(undefined, "") },
        { json: "stateful_engine_options", js: "stateful_engine_options", typ: u(undefined, "") },
        { json: "stateful_rule_group_reference", js: "stateful_rule_group_reference", typ: u(undefined, "") },
        { json: "stateless_custom_action", js: "stateless_custom_action", typ: u(undefined, "") },
        { json: "stateless_rule_group_reference", js: "stateless_rule_group_reference", typ: u(undefined, "") },
        { json: "rule_order", js: "rule_order", typ: u(undefined, "") },
        { json: "stream_exception_policy", js: "stream_exception_policy", typ: u(undefined, "") },
        { json: "override", js: "override", typ: u(undefined, "") },
        { json: "action", js: "action", typ: u(undefined, "") },
        { json: "action_name", js: "action_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "update_token", js: "update_token", typ: u(undefined, "") },
    ], false),
    "NetworkfirewallLoggingConfiguration": o([
        { json: "logging_configuration", js: "logging_configuration", typ: "" },
        { json: "log_destination_config", js: "log_destination_config", typ: "" },
        { json: "log_destination_type", js: "log_destination_type", typ: "" },
        { json: "log_type", js: "log_type", typ: "" },
        { json: "firewall_arn", js: "firewall_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "NetworkfirewallResourcePolicy": o([
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "NetworkfirewallRuleGroup": o([
        { json: "type", js: "type", typ: "" },
        { json: "rules_source", js: "rules_source", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "ip_set", js: "ip_set", typ: "" },
        { json: "definition", js: "definition", typ: "" },
        { json: "reference_arn", js: "reference_arn", typ: "" },
        { json: "port_set", js: "port_set", typ: "" },
        { json: "rule_order", js: "rule_order", typ: "" },
        { json: "generated_rules_type", js: "generated_rules_type", typ: "" },
        { json: "target_types", js: "target_types", typ: "" },
        { json: "targets", js: "targets", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "header", js: "header", typ: "" },
        { json: "rule_option", js: "rule_option", typ: "" },
        { json: "stateless_rule", js: "stateless_rule", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "destination_port", js: "destination_port", typ: "" },
        { json: "direction", js: "direction", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "source_port", js: "source_port", typ: "" },
        { json: "keyword", js: "keyword", typ: "" },
        { json: "action_definition", js: "action_definition", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "rule_definition", js: "rule_definition", typ: "" },
        { json: "actions", js: "actions", typ: "" },
        { json: "match_attributes", js: "match_attributes", typ: "" },
        { json: "publish_metric_action", js: "publish_metric_action", typ: "" },
        { json: "dimension", js: "dimension", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "address_definition", js: "address_definition", typ: "" },
        { json: "from_port", js: "from_port", typ: "" },
        { json: "flags", js: "flags", typ: "" },
        { json: "capacity", js: "capacity", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "rule_group", js: "rule_group", typ: u(undefined, "") },
        { json: "rules", js: "rules", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
        { json: "reference_sets", js: "reference_sets", typ: u(undefined, "") },
        { json: "stateful_rule_options", js: "stateful_rule_options", typ: u(undefined, "") },
        { json: "ip_set_reference", js: "ip_set_reference", typ: u(undefined, "") },
        { json: "ip_sets", js: "ip_sets", typ: u(undefined, "") },
        { json: "port_sets", js: "port_sets", typ: u(undefined, "") },
        { json: "custom_action", js: "custom_action", typ: u(undefined, "") },
        { json: "settings", js: "settings", typ: u(undefined, "") },
        { json: "action_name", js: "action_name", typ: u(undefined, "") },
        { json: "protocols", js: "protocols", typ: u(undefined, "") },
        { json: "tcp_flag", js: "tcp_flag", typ: u(undefined, "") },
        { json: "to_port", js: "to_port", typ: u(undefined, "") },
        { json: "masks", js: "masks", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "update_token", js: "update_token", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerCoreNetwork": o([
        { json: "global_network_id", js: "global_network_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "base_policy_regions", js: "base_policy_regions", typ: u(undefined, "") },
        { json: "create_base_policy", js: "create_base_policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "edges", js: "edges", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "segments", js: "segments", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "asn", js: "asn", typ: u(undefined, "") },
        { json: "edge_location", js: "edge_location", typ: u(undefined, "") },
        { json: "inside_cidr_blocks", js: "inside_cidr_blocks", typ: u(undefined, "") },
        { json: "edge_locations", js: "edge_locations", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "shared_segments", js: "shared_segments", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerCoreNetworkPolicyAttachment": o([
        { json: "core_network_id", js: "core_network_id", typ: "" },
        { json: "policy_document", js: "policy_document", typ: "" },
        { json: "state", js: "state", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerAssociation": o([
        { json: "customer_gateway_arn", js: "customer_gateway_arn", typ: u(undefined, "") },
        { json: "device_id", js: "device_id", typ: "" },
        { json: "global_network_id", js: "global_network_id", typ: "" },
        { json: "link_id", js: "link_id", typ: u(undefined, "") },
        { json: "transit_gateway_connect_peer_arn", js: "transit_gateway_connect_peer_arn", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerTransitGatewayPeering": o([
        { json: "core_network_id", js: "core_network_id", typ: "" },
        { json: "transit_gateway_arn", js: "transit_gateway_arn", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "core_network_arn", js: "core_network_arn", typ: u(undefined, "") },
        { json: "edge_location", js: "edge_location", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
        { json: "peering_type", js: "peering_type", typ: u(undefined, "") },
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "transit_gateway_peering_attachment_id", js: "transit_gateway_peering_attachment_id", typ: u(undefined, "") },
    ], false),
    "NetworkmanagerTransitGatewayRegistration": o([
        { json: "global_network_id", js: "global_network_id", typ: "" },
        { json: "transit_gateway_arn", js: "transit_gateway_arn", typ: "" },
    ], false),
    "NetworkmanagerAttachment": o([
        { json: "peering_id", js: "peering_id", typ: u(undefined, "") },
        { json: "transit_gateway_route_table_arn", js: "transit_gateway_route_table_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "attachment_policy_rule_number", js: "attachment_policy_rule_number", typ: u(undefined, "") },
        { json: "attachment_type", js: "attachment_type", typ: u(undefined, "") },
        { json: "core_network_arn", js: "core_network_arn", typ: u(undefined, "") },
        { json: "core_network_id", js: "core_network_id", typ: u(undefined, "") },
        { json: "edge_location", js: "edge_location", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
        { json: "segment_name", js: "segment_name", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "subnet_arns", js: "subnet_arns", typ: u(undefined, "") },
        { json: "vpc_arn", js: "vpc_arn", typ: u(undefined, "") },
        { json: "options", js: "options", typ: u(undefined, r("Options")) },
    ], false),
    "Options": o([
        { json: "appliance_mode_support", js: "appliance_mode_support", typ: "" },
        { json: "ipv6_support", js: "ipv6_support", typ: "" },
    ], false),
    "OamSinkPolicy": o([
        { json: "sink_identifier", js: "sink_identifier", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "sink_id", js: "sink_id", typ: u(undefined, "") },
    ], false),
    "OpensearchDomain": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "unit", js: "unit", typ: "" },
        { json: "user_pool_id", js: "user_pool_id", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "automated_snapshot_start_hour", js: "automated_snapshot_start_hour", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "access_policies", js: "access_policies", typ: u(undefined, "") },
        { json: "advanced_options", js: "advanced_options", typ: u(undefined, "") },
        { json: "advanced_security_options", js: "advanced_security_options", typ: u(undefined, r("AdvancedSecurityOptions")) },
        { json: "auto_tune_options", js: "auto_tune_options", typ: u(undefined, r("AutoTuneOptions")) },
        { json: "cluster_config", js: "cluster_config", typ: u(undefined, r("ClusterConfig")) },
        { json: "cognito_options", js: "cognito_options", typ: u(undefined, r("CognitoOptions")) },
        { json: "domain_endpoint_options", js: "domain_endpoint_options", typ: u(undefined, r("DomainEndpointOptions")) },
        { json: "ebs_options", js: "ebs_options", typ: u(undefined, r("EbsOptions")) },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "encrypt_at_rest", js: "encrypt_at_rest", typ: u(undefined, r("EncryptAtREST")) },
        { json: "log_publishing_options", js: "log_publishing_options", typ: u(undefined, r("LogPublishingOptions")) },
        { json: "node_to_node_encryption", js: "node_to_node_encryption", typ: u(undefined, r("SoftwareTokenMfaConfigurationClass")) },
        { json: "snapshot_options", js: "snapshot_options", typ: u(undefined, r("SnapshotOptions")) },
        { json: "software_update_options", js: "software_update_options", typ: u(undefined, r("SoftwareUpdateOptions")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_options", js: "vpc_options", typ: u(undefined, r("Vpc")) },
        { json: "off_peak_window_options", js: "off_peak_window_options", typ: u(undefined, r("SoftwareTokenMfaConfigurationClass")) },
        { json: "master_user_password", js: "master_user_password", typ: u(undefined, "") },
        { json: "availability_zone_count", js: "availability_zone_count", typ: u(undefined, "") },
        { json: "tls_security_policy", js: "tls_security_policy", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "domain_id", js: "domain_id", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "dashboard_endpoint", js: "dashboard_endpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_options.0.availability_zones", js: "vpc_options.0.availability_zones", typ: u(undefined, "") },
        { json: "vpc_options.0.vpc_id", js: "vpc_options.0.vpc_id", typ: u(undefined, "") },
    ], false),
    "SoftwareUpdateOptions": o([
        { json: "auto_software_update_enabled", js: "auto_software_update_enabled", typ: "" },
    ], false),
    "OpensearchInboundConnectionAccepter": o([
        { json: "connection_id", js: "connection_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "connection_status", js: "connection_status", typ: u(undefined, "") },
    ], false),
    "OpensearchOutboundConnection": o([
        { json: "connection_alias", js: "connection_alias", typ: u(undefined, "") },
        { json: "connection_mode", js: "connection_mode", typ: u(undefined, "") },
        { json: "accept_connection", js: "accept_connection", typ: u(undefined, "") },
        { json: "connection_properties", js: "connection_properties", typ: u(undefined, r("ConnectionProperties")) },
        { json: "local_domain_info", js: "local_domain_info", typ: u(undefined, r("DomainInfo")) },
        { json: "remote_domain_info", js: "remote_domain_info", typ: u(undefined, r("DomainInfo")) },
        { json: "cross_cluster_search", js: "cross_cluster_search", typ: u(undefined, r("CrossClusterSearch")) },
        { json: "skip_unavailable", js: "skip_unavailable", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "connection_status", js: "connection_status", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
    ], false),
    "ConnectionProperties": o([
        { json: "cross_cluster_search", js: "cross_cluster_search", typ: "" },
    ], false),
    "CrossClusterSearch": o([
        { json: "skip_unavailable", js: "skip_unavailable", typ: "" },
    ], false),
    "DomainInfo": o([
        { json: "owner_id", js: "owner_id", typ: "" },
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "region", js: "region", typ: "" },
    ], false),
    "OpensearchPackage": o([
        { json: "package_name", js: "package_name", typ: u(undefined, "") },
        { json: "package_type", js: "package_type", typ: u(undefined, "") },
        { json: "package_source", js: "package_source", typ: u(undefined, r("PackageSource")) },
        { json: "package_description", js: "package_description", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "available_package_version", js: "available_package_version", typ: u(undefined, "") },
    ], false),
    "PackageSource": o([
        { json: "s3_bucket_name", js: "s3_bucket_name", typ: "" },
        { json: "s3_key", js: "s3_key", typ: "" },
    ], false),
    "OpensearchPackageAssociation": o([
        { json: "package_id", js: "package_id", typ: u(undefined, "") },
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "OpensearchVpcEndpoint": o([
        { json: "vpc_options", js: "vpc_options", typ: r("Vpc") },
        { json: "domain_arn", js: "domain_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
    ], false),
    "ResourceOpensearchserverlessSecurityConfig": o([
        { json: "saml_options", js: "saml_options", typ: r("OpensearchserverlessSecurityConfigSamlOptions") },
        { json: "type", js: "type", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "config_version", js: "config_version", typ: u(undefined, "") },
    ], false),
    "OpsworksApplication": o([
        { json: "name", js: "name", typ: "" },
        { json: "short_name", js: "short_name", typ: "" },
        { json: "stack_id", js: "stack_id", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "url", js: "url", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "private_key", js: "private_key", typ: "" },
        { json: "certificate", js: "certificate", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "environment", js: "environment", typ: u(undefined, "") },
        { json: "enable_ssl", js: "enable_ssl", typ: u(undefined, "") },
        { json: "ssl_configuration", js: "ssl_configuration", typ: u(undefined, "") },
        { json: "app_source", js: "app_source", typ: u(undefined, "") },
        { json: "data_source_arn", js: "data_source_arn", typ: u(undefined, "") },
        { json: "data_source_type", js: "data_source_type", typ: u(undefined, "") },
        { json: "data_source_database_name", js: "data_source_database_name", typ: u(undefined, "") },
        { json: "domains", js: "domains", typ: u(undefined, "") },
        { json: "document_root", js: "document_root", typ: u(undefined, "") },
        { json: "auto_bundle_on_deploy", js: "auto_bundle_on_deploy", typ: u(undefined, "") },
        { json: "rails_env", js: "rails_env", typ: u(undefined, "") },
        { json: "aws_flow_ruby_settings", js: "aws_flow_ruby_settings", typ: u(undefined, "") },
        { json: "username", js: "username", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "ssh_key", js: "ssh_key", typ: u(undefined, "") },
        { json: "revision", js: "revision", typ: u(undefined, "") },
        { json: "secure", js: "secure", typ: u(undefined, "") },
        { json: "chain", js: "chain", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "OpsworksCustomLayer": o([
        { json: "name", js: "name", typ: "" },
        { json: "short_name", js: "short_name", typ: "" },
        { json: "stack_id", js: "stack_id", typ: "" },
        { json: "mount_point", js: "mount_point", typ: "" },
        { json: "size", js: "size", typ: "" },
        { json: "number_of_disks", js: "number_of_disks", typ: "" },
        { json: "raid_level", js: "raid_level", typ: "" },
        { json: "log_group_name", js: "log_group_name", typ: "" },
        { json: "auto_assign_elastic_ips", js: "auto_assign_elastic_ips", typ: u(undefined, "") },
        { json: "auto_assign_public_ips", js: "auto_assign_public_ips", typ: u(undefined, "") },
        { json: "cloudwatch_configuration", js: "cloudwatch_configuration", typ: u(undefined, "") },
        { json: "custom_instance_profile_arn", js: "custom_instance_profile_arn", typ: u(undefined, "") },
        { json: "custom_security_group_ids", js: "custom_security_group_ids", typ: u(undefined, "") },
        { json: "auto_healing", js: "auto_healing", typ: u(undefined, "") },
        { json: "install_updates_on_boot", js: "install_updates_on_boot", typ: u(undefined, "") },
        { json: "instance_shutdown_timeout", js: "instance_shutdown_timeout", typ: u(undefined, "") },
        { json: "elastic_load_balancer", js: "elastic_load_balancer", typ: u(undefined, "") },
        { json: "drain_elb_on_shutdown", js: "drain_elb_on_shutdown", typ: u(undefined, "") },
        { json: "load_based_auto_scaling", js: "load_based_auto_scaling", typ: u(undefined, "") },
        { json: "system_packages", js: "system_packages", typ: u(undefined, "") },
        { json: "use_ebs_optimized_instances", js: "use_ebs_optimized_instances", typ: u(undefined, "") },
        { json: "ebs_volume", js: "ebs_volume", typ: u(undefined, "") },
        { json: "custom_json", js: "custom_json", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "log_streams", js: "log_streams", typ: u(undefined, "") },
        { json: "batch_count", js: "batch_count", typ: u(undefined, "") },
        { json: "batch_size", js: "batch_size", typ: u(undefined, "") },
        { json: "buffer_duration", js: "buffer_duration", typ: u(undefined, "") },
        { json: "datetime_format", js: "datetime_format", typ: u(undefined, "") },
        { json: "encoding", js: "encoding", typ: u(undefined, "") },
        { json: "file_fingerprint_lines", js: "file_fingerprint_lines", typ: u(undefined, "") },
        { json: "initial_position", js: "initial_position", typ: u(undefined, "") },
        { json: "multiline_start_pattern", js: "multiline_start_pattern", typ: u(undefined, "") },
        { json: "time_zone", js: "time_zone", typ: u(undefined, "") },
        { json: "downscaling", js: "downscaling", typ: u(undefined, "") },
        { json: "enable", js: "enable", typ: u(undefined, "") },
        { json: "upscaling", js: "upscaling", typ: u(undefined, "") },
        { json: "alarms", js: "alarms", typ: u(undefined, "") },
        { json: "cpu_threshold", js: "cpu_threshold", typ: u(undefined, "") },
        { json: "ignore_metrics_time", js: "ignore_metrics_time", typ: u(undefined, "") },
        { json: "instance_count", js: "instance_count", typ: u(undefined, "") },
        { json: "load_threshold", js: "load_threshold", typ: u(undefined, "") },
        { json: "memory_threshold", js: "memory_threshold", typ: u(undefined, "") },
        { json: "thresholds_wait_time", js: "thresholds_wait_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "OpsworksLayer": o([
        { json: "stack_id", js: "stack_id", typ: "" },
        { json: "ecs_cluster_arn", js: "ecs_cluster_arn", typ: u(undefined, "") },
        { json: "mount_point", js: "mount_point", typ: "" },
        { json: "size", js: "size", typ: "" },
        { json: "number_of_disks", js: "number_of_disks", typ: "" },
        { json: "raid_level", js: "raid_level", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "auto_assign_elastic_ips", js: "auto_assign_elastic_ips", typ: u(undefined, "") },
        { json: "auto_assign_public_ips", js: "auto_assign_public_ips", typ: u(undefined, "") },
        { json: "custom_instance_profile_arn", js: "custom_instance_profile_arn", typ: u(undefined, "") },
        { json: "custom_security_group_ids", js: "custom_security_group_ids", typ: u(undefined, "") },
        { json: "auto_healing", js: "auto_healing", typ: u(undefined, "") },
        { json: "install_updates_on_boot", js: "install_updates_on_boot", typ: u(undefined, "") },
        { json: "instance_shutdown_timeout", js: "instance_shutdown_timeout", typ: u(undefined, "") },
        { json: "elastic_load_balancer", js: "elastic_load_balancer", typ: u(undefined, "") },
        { json: "drain_elb_on_shutdown", js: "drain_elb_on_shutdown", typ: u(undefined, "") },
        { json: "system_packages", js: "system_packages", typ: u(undefined, "") },
        { json: "use_ebs_optimized_instances", js: "use_ebs_optimized_instances", typ: u(undefined, "") },
        { json: "ebs_volume", js: "ebs_volume", typ: u(undefined, "") },
        { json: "custom_json", js: "custom_json", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "username", js: "username", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "stats_password", js: "stats_password", typ: u(undefined, "") },
        { json: "healthcheck_method", js: "healthcheck_method", typ: u(undefined, "") },
        { json: "healthcheck_url", js: "healthcheck_url", typ: u(undefined, "") },
        { json: "stats_enabled", js: "stats_enabled", typ: u(undefined, "") },
        { json: "stats_url", js: "stats_url", typ: u(undefined, "") },
        { json: "stats_user", js: "stats_user", typ: u(undefined, "") },
        { json: "app_server", js: "app_server", typ: u(undefined, "") },
        { json: "app_server_version", js: "app_server_version", typ: u(undefined, "") },
        { json: "jvm_type", js: "jvm_type", typ: u(undefined, "") },
        { json: "jvm_options", js: "jvm_options", typ: u(undefined, "") },
        { json: "jvm_version", js: "jvm_version", typ: u(undefined, "") },
        { json: "allocated_memory", js: "allocated_memory", typ: u(undefined, "") },
        { json: "root_password", js: "root_password", typ: u(undefined, "") },
        { json: "root_password_on_all_instances", js: "root_password_on_all_instances", typ: u(undefined, "") },
        { json: "nodejs_version", js: "nodejs_version", typ: u(undefined, "") },
        { json: "bundler_version", js: "bundler_version", typ: u(undefined, "") },
        { json: "manage_bundler", js: "manage_bundler", typ: u(undefined, "") },
        { json: "passenger_version", js: "passenger_version", typ: u(undefined, "") },
        { json: "ruby_version", js: "ruby_version", typ: u(undefined, "") },
        { json: "rubygems_version", js: "rubygems_version", typ: u(undefined, "") },
    ], false),
    "OpsworksInstance": o([
        { json: "layer_ids", js: "layer_ids", typ: "" },
        { json: "stack_id", js: "stack_id", typ: "" },
        { json: "agent_version", js: "agent_version", typ: u(undefined, "") },
        { json: "ami_id", js: "ami_id", typ: u(undefined, "") },
        { json: "architecture", js: "architecture", typ: u(undefined, "") },
        { json: "auto_scaling_type", js: "auto_scaling_type", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "delete_ebs", js: "delete_ebs", typ: u(undefined, "") },
        { json: "delete_eip", js: "delete_eip", typ: u(undefined, "") },
        { json: "ebs_block_device", js: "ebs_block_device", typ: u(undefined, "") },
        { json: "ebs_optimized", js: "ebs_optimized", typ: u(undefined, "") },
        { json: "ecs_cluster_arn", js: "ecs_cluster_arn", typ: u(undefined, "") },
        { json: "elastic_ip", js: "elastic_ip", typ: u(undefined, "") },
        { json: "ephemeral_block_device", js: "ephemeral_block_device", typ: u(undefined, "") },
        { json: "hostname", js: "hostname", typ: u(undefined, "") },
        { json: "infrastructure_class", js: "infrastructure_class", typ: u(undefined, "") },
        { json: "install_updates_on_boot", js: "install_updates_on_boot", typ: u(undefined, "") },
        { json: "instance_profile_arn", js: "instance_profile_arn", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "os", js: "os", typ: u(undefined, "") },
        { json: "root_block_device", js: "root_block_device", typ: u(undefined, "") },
        { json: "root_device_type", js: "root_device_type", typ: u(undefined, "") },
        { json: "ssh_key_name", js: "ssh_key_name", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "tenancy", js: "tenancy", typ: u(undefined, "") },
        { json: "virtualization_type", js: "virtualization_type", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "ec2_instance_id", js: "ec2_instance_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_service_error_id", js: "last_service_error_id", typ: u(undefined, "") },
        { json: "platform", js: "platform", typ: u(undefined, "") },
        { json: "private_dns", js: "private_dns", typ: u(undefined, "") },
        { json: "private_ip", js: "private_ip", typ: u(undefined, "") },
        { json: "public_dns", js: "public_dns", typ: u(undefined, "") },
        { json: "public_ip", js: "public_ip", typ: u(undefined, "") },
        { json: "registered_by", js: "registered_by", typ: u(undefined, "") },
        { json: "reported_agent_version", js: "reported_agent_version", typ: u(undefined, "") },
        { json: "reported_os_family", js: "reported_os_family", typ: u(undefined, "") },
        { json: "reported_os_name", js: "reported_os_name", typ: u(undefined, "") },
        { json: "reported_os_version", js: "reported_os_version", typ: u(undefined, "") },
        { json: "root_device_volume_id", js: "root_device_volume_id", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "ssh_host_dsa_key_fingerprint", js: "ssh_host_dsa_key_fingerprint", typ: u(undefined, "") },
        { json: "ssh_host_rsa_key_fingerprint", js: "ssh_host_rsa_key_fingerprint", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "OpsworksPermission": o([
        { json: "user_arn", js: "user_arn", typ: "" },
        { json: "stack_id", js: "stack_id", typ: "" },
        { json: "allow_ssh", js: "allow_ssh", typ: u(undefined, "") },
        { json: "allow_sudo", js: "allow_sudo", typ: u(undefined, "") },
        { json: "level", js: "level", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "OpsworksRDSDBInstance": o([
        { json: "stack_id", js: "stack_id", typ: "" },
        { json: "rds_db_instance_arn", js: "rds_db_instance_arn", typ: "" },
        { json: "db_user", js: "db_user", typ: "" },
        { json: "db_password", js: "db_password", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "OpsworksStack": o([
        { json: "name", js: "name", typ: "" },
        { json: "region", js: "region", typ: "" },
        { json: "service_role_arn", js: "service_role_arn", typ: "" },
        { json: "default_instance_profile_arn", js: "default_instance_profile_arn", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "url", js: "url", typ: "" },
        { json: "agent_version", js: "agent_version", typ: u(undefined, "") },
        { json: "berkshelf_version", js: "berkshelf_version", typ: u(undefined, "") },
        { json: "color", js: "color", typ: u(undefined, "") },
        { json: "configuration_manager_name", js: "configuration_manager_name", typ: u(undefined, "") },
        { json: "configuration_manager_version", js: "configuration_manager_version", typ: u(undefined, "") },
        { json: "custom_cookbooks_source", js: "custom_cookbooks_source", typ: u(undefined, "") },
        { json: "custom_json", js: "custom_json", typ: u(undefined, "") },
        { json: "default_availability_zone", js: "default_availability_zone", typ: u(undefined, "") },
        { json: "default_os", js: "default_os", typ: u(undefined, "") },
        { json: "default_root_device_type", js: "default_root_device_type", typ: u(undefined, "") },
        { json: "default_ssh_key_name", js: "default_ssh_key_name", typ: u(undefined, "") },
        { json: "default_subnet_id", js: "default_subnet_id", typ: u(undefined, "") },
        { json: "hostname_theme", js: "hostname_theme", typ: u(undefined, "") },
        { json: "manage_berkshelf", js: "manage_berkshelf", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "use_custom_cookbooks", js: "use_custom_cookbooks", typ: u(undefined, "") },
        { json: "use_opsworks_security_groups", js: "use_opsworks_security_groups", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "username", js: "username", typ: u(undefined, "") },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "ssh_key", js: "ssh_key", typ: u(undefined, "") },
        { json: "revision", js: "revision", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "OpsworksUserProfile": o([
        { json: "user_arn", js: "user_arn", typ: "" },
        { json: "ssh_username", js: "ssh_username", typ: "" },
        { json: "allow_self_management", js: "allow_self_management", typ: u(undefined, "") },
        { json: "ssh_public_key", js: "ssh_public_key", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "OrganizationsAccount": o([
        { json: "email", js: "email", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "close_on_deletion", js: "close_on_deletion", typ: u(undefined, "") },
        { json: "create_govcloud", js: "create_govcloud", typ: u(undefined, "") },
        { json: "iam_user_access_to_billing", js: "iam_user_access_to_billing", typ: u(undefined, "") },
        { json: "parent_id", js: "parent_id", typ: u(undefined, "") },
        { json: "role_name", js: "role_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "govcloud_id", js: "govcloud_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "OrganizationsDelegatedAdministrator": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "service_principal", js: "service_principal", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "delegation_enabled_date", js: "delegation_enabled_date", typ: u(undefined, "") },
        { json: "email", js: "email", typ: u(undefined, "") },
        { json: "joined_method", js: "joined_method", typ: u(undefined, "") },
        { json: "joined_timestamp", js: "joined_timestamp", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "OrganizationsPolicyAttachment": o([
        { json: "policy_id", js: "policy_id", typ: "" },
        { json: "target_id", js: "target_id", typ: "" },
    ], false),
    "PinpointAdmChannel": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "client_id", js: "client_id", typ: "" },
        { json: "client_secret", js: "client_secret", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
    ], false),
    "PinpointApnsChannel": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "certificate", js: "certificate", typ: "" },
        { json: "private_key", js: "private_key", typ: "" },
        { json: "bundle_id", js: "bundle_id", typ: "" },
        { json: "team_id", js: "team_id", typ: "" },
        { json: "token_key", js: "token_key", typ: "" },
        { json: "token_key_id", js: "token_key_id", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "default_authentication_method", js: "default_authentication_method", typ: u(undefined, "") },
    ], false),
    "PinpointApp": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "campaign_hook", js: "campaign_hook", typ: u(undefined, "") },
        { json: "limits", js: "limits", typ: u(undefined, "") },
        { json: "quiet_time", js: "quiet_time", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "lambda_function_name", js: "lambda_function_name", typ: u(undefined, "") },
        { json: "mode", js: "mode", typ: u(undefined, "") },
        { json: "web_url", js: "web_url", typ: u(undefined, "") },
        { json: "daily", js: "daily", typ: u(undefined, "") },
        { json: "maximum_duration", js: "maximum_duration", typ: u(undefined, "") },
        { json: "messages_per_second", js: "messages_per_second", typ: u(undefined, "") },
        { json: "total", js: "total", typ: u(undefined, "") },
        { json: "end", js: "end", typ: u(undefined, "") },
        { json: "start", js: "start", typ: u(undefined, "") },
        { json: "application_id", js: "application_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "PinpointChannel": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "api_key", js: "api_key", typ: "" },
        { json: "secret_key", js: "secret_key", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
    ], false),
    "PinpointEmailChannel": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "from_address", js: "from_address", typ: "" },
        { json: "identity", js: "identity", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "configuration_set", js: "configuration_set", typ: u(undefined, "") },
        { json: "role_arn", js: "role_arn", typ: u(undefined, "") },
        { json: "messages_per_second", js: "messages_per_second", typ: u(undefined, "") },
    ], false),
    "PinpointEventStream": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "destination_stream_arn", js: "destination_stream_arn", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
    ], false),
    "PinpointSMSChannel": o([
        { json: "application_id", js: "application_id", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "sender_id", js: "sender_id", typ: u(undefined, "") },
        { json: "short_code", js: "short_code", typ: u(undefined, "") },
        { json: "promotional_messages_per_second", js: "promotional_messages_per_second", typ: u(undefined, "") },
        { json: "transactional_messages_per_second", js: "transactional_messages_per_second", typ: u(undefined, "") },
    ], false),
    "PipesPipe": o([
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "pattern", js: "pattern", typ: "" },
        { json: "credentials", js: "credentials", typ: "" },
        { json: "queue_name", js: "queue_name", typ: "" },
        { json: "basic_auth", js: "basic_auth", typ: "" },
        { json: "starting_position", js: "starting_position", typ: "" },
        { json: "topic_name", js: "topic_name", typ: "" },
        { json: "job_definition", js: "job_definition", typ: "" },
        { json: "job_name", js: "job_name", typ: "" },
        { json: "size_in_gib", js: "size_in_gib", typ: "" },
        { json: "partition_key", js: "partition_key", typ: "" },
        { json: "database", js: "database", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "desired_state", js: "desired_state", typ: u(undefined, "") },
        { json: "enrichment", js: "enrichment", typ: u(undefined, "") },
        { json: "enrichment_parameters", js: "enrichment_parameters", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "source_parameters", js: "source_parameters", typ: u(undefined, "") },
        { json: "target_parameters", js: "target_parameters", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "input_template", js: "input_template", typ: u(undefined, "") },
        { json: "http_parameters", js: "http_parameters", typ: u(undefined, "") },
        { json: "header_parameters", js: "header_parameters", typ: u(undefined, "") },
        { json: "query_string_parameters", js: "query_string_parameters", typ: u(undefined, "") },
        { json: "activemq_broker_parameters", js: "activemq_broker_parameters", typ: u(undefined, "") },
        { json: "dynamodb_stream_parameters", js: "dynamodb_stream_parameters", typ: u(undefined, "") },
        { json: "filter_criteria", js: "filter_criteria", typ: u(undefined, "") },
        { json: "kinesis_stream_parameters", js: "kinesis_stream_parameters", typ: u(undefined, "") },
        { json: "managed_streaming_kafka_parameters", js: "managed_streaming_kafka_parameters", typ: u(undefined, "") },
        { json: "rabbitmq_broker_parameters", js: "rabbitmq_broker_parameters", typ: u(undefined, "") },
        { json: "self_managed_kafka_parameters", js: "self_managed_kafka_parameters", typ: u(undefined, "") },
        { json: "sqs_queue_parameters", js: "sqs_queue_parameters", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "batch_size", js: "batch_size", typ: u(undefined, "") },
        { json: "maximum_batching_window_in_seconds", js: "maximum_batching_window_in_seconds", typ: u(undefined, "") },
        { json: "dead_letter_config", js: "dead_letter_config", typ: u(undefined, "") },
        { json: "maximum_record_age_in_seconds", js: "maximum_record_age_in_seconds", typ: u(undefined, "") },
        { json: "maximum_retry_attempts", js: "maximum_retry_attempts", typ: u(undefined, "") },
        { json: "on_partial_batch_item_failure", js: "on_partial_batch_item_failure", typ: u(undefined, "") },
        { json: "parallelization_factor", js: "parallelization_factor", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "starting_position_timestamp", js: "starting_position_timestamp", typ: u(undefined, "") },
        { json: "consumer_group_id", js: "consumer_group_id", typ: u(undefined, "") },
        { json: "client_certificate_tls_auth", js: "client_certificate_tls_auth", typ: u(undefined, "") },
        { json: "sasl_scram_512_auth", js: "sasl_scram_512_auth", typ: u(undefined, "") },
        { json: "virtual_host", js: "virtual_host", typ: u(undefined, "") },
        { json: "additional_bootstrap_servers", js: "additional_bootstrap_servers", typ: u(undefined, "") },
        { json: "server_root_ca_certificate", js: "server_root_ca_certificate", typ: u(undefined, "") },
        { json: "vpc", js: "vpc", typ: u(undefined, "") },
        { json: "sasl_scram_256_auth", js: "sasl_scram_256_auth", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "subnets", js: "subnets", typ: u(undefined, "") },
        { json: "batch_job_parameters", js: "batch_job_parameters", typ: u(undefined, "") },
        { json: "cloudwatch_logs_parameters", js: "cloudwatch_logs_parameters", typ: u(undefined, "") },
        { json: "ecs_task_parameters", js: "ecs_task_parameters", typ: u(undefined, "") },
        { json: "eventbridge_event_bus_parameters", js: "eventbridge_event_bus_parameters", typ: u(undefined, "") },
        { json: "lambda_function_parameters", js: "lambda_function_parameters", typ: u(undefined, "") },
        { json: "redshift_data_parameters", js: "redshift_data_parameters", typ: u(undefined, "") },
        { json: "sagemaker_pipeline_parameters", js: "sagemaker_pipeline_parameters", typ: u(undefined, "") },
        { json: "step_function_state_machine_parameters", js: "step_function_state_machine_parameters", typ: u(undefined, "") },
        { json: "array_properties", js: "array_properties", typ: u(undefined, "") },
        { json: "container_overrides", js: "container_overrides", typ: u(undefined, "") },
        { json: "depends_on", js: "depends_on", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "retry_strategy", js: "retry_strategy", typ: u(undefined, "") },
        { json: "size", js: "size", typ: u(undefined, "") },
        { json: "command", js: "command", typ: u(undefined, "") },
        { json: "environment", js: "environment", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "resource_requirement", js: "resource_requirement", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "job_id", js: "job_id", typ: u(undefined, "") },
        { json: "attempts", js: "attempts", typ: u(undefined, "") },
        { json: "log_stream_name", js: "log_stream_name", typ: u(undefined, "") },
        { json: "timestamp", js: "timestamp", typ: u(undefined, "") },
        { json: "capacity_provider_strategy", js: "capacity_provider_strategy", typ: u(undefined, "") },
        { json: "enable_ecs_managed_tags", js: "enable_ecs_managed_tags", typ: u(undefined, "") },
        { json: "enable_execute_command", js: "enable_execute_command", typ: u(undefined, "") },
        { json: "group", js: "group", typ: u(undefined, "") },
        { json: "launch_type", js: "launch_type", typ: u(undefined, "") },
        { json: "network_configuration", js: "network_configuration", typ: u(undefined, "") },
        { json: "overrides", js: "overrides", typ: u(undefined, "") },
        { json: "placement_constraint", js: "placement_constraint", typ: u(undefined, "") },
        { json: "placement_strategy", js: "placement_strategy", typ: u(undefined, "") },
        { json: "platform_version", js: "platform_version", typ: u(undefined, "") },
        { json: "propagate_tags", js: "propagate_tags", typ: u(undefined, "") },
        { json: "reference_id", js: "reference_id", typ: u(undefined, "") },
        { json: "task_count", js: "task_count", typ: u(undefined, "") },
        { json: "task_definition_arn", js: "task_definition_arn", typ: u(undefined, "") },
        { json: "base", js: "base", typ: u(undefined, "") },
        { json: "capacity_provider", js: "capacity_provider", typ: u(undefined, "") },
        { json: "weight", js: "weight", typ: u(undefined, "") },
        { json: "aws_vpc_configuration", js: "aws_vpc_configuration", typ: u(undefined, "") },
        { json: "assign_public_ip", js: "assign_public_ip", typ: u(undefined, "") },
        { json: "container_override", js: "container_override", typ: u(undefined, "") },
        { json: "cpu", js: "cpu", typ: u(undefined, "") },
        { json: "ephemeral_storage", js: "ephemeral_storage", typ: u(undefined, "") },
        { json: "execution_role_arn", js: "execution_role_arn", typ: u(undefined, "") },
        { json: "inference_accelerator_override", js: "inference_accelerator_override", typ: u(undefined, "") },
        { json: "memory", js: "memory", typ: u(undefined, "") },
        { json: "task_role_arn", js: "task_role_arn", typ: u(undefined, "") },
        { json: "environment_file", js: "environment_file", typ: u(undefined, "") },
        { json: "memory_reservation", js: "memory_reservation", typ: u(undefined, "") },
        { json: "device_name", js: "device_name", typ: u(undefined, "") },
        { json: "device_type", js: "device_type", typ: u(undefined, "") },
        { json: "expression", js: "expression", typ: u(undefined, "") },
        { json: "field", js: "field", typ: u(undefined, "") },
        { json: "detail_type", js: "detail_type", typ: u(undefined, "") },
        { json: "endpoint_id", js: "endpoint_id", typ: u(undefined, "") },
        { json: "resources", js: "resources", typ: u(undefined, "") },
        { json: "time", js: "time", typ: u(undefined, "") },
        { json: "invocation_type", js: "invocation_type", typ: u(undefined, "") },
        { json: "db_user", js: "db_user", typ: u(undefined, "") },
        { json: "secret_manager_arn", js: "secret_manager_arn", typ: u(undefined, "") },
        { json: "sqls", js: "sqls", typ: u(undefined, "") },
        { json: "statement_name", js: "statement_name", typ: u(undefined, "") },
        { json: "with_event", js: "with_event", typ: u(undefined, "") },
        { json: "pipeline_parameter", js: "pipeline_parameter", typ: u(undefined, "") },
        { json: "message_deduplication_id", js: "message_deduplication_id", typ: u(undefined, "") },
        { json: "message_group_id", js: "message_group_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "PlacementGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "strategy", js: "strategy", typ: "" },
        { json: "partition_count", js: "partition_count", typ: u(undefined, "") },
        { json: "spread_level", js: "spread_level", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "placement_group_id", js: "placement_group_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "PrometheusAlertManagerDefinition": o([
        { json: "workspace_id", js: "workspace_id", typ: "" },
        { json: "definition", js: "definition", typ: "" },
    ], false),
    "PrometheusRuleGroupNamespace": o([
        { json: "name", js: "name", typ: "" },
        { json: "workspace_id", js: "workspace_id", typ: "" },
        { json: "data", js: "data", typ: "" },
    ], false),
    "ResourcePrometheusWorkspace": o([
        { json: "log_group_arn", js: "log_group_arn", typ: "" },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "logging_configuration", js: "logging_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "prometheus_endpoint", js: "prometheus_endpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ProxyProtocolPolicy": o([
        { json: "load_balancer", js: "load_balancer", typ: "" },
        { json: "instance_ports", js: "instance_ports", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "QldbLedger": o([
        { json: "permissions_mode", js: "permissions_mode", typ: "" },
        { json: "deletion_protection", js: "deletion_protection", typ: u(undefined, "") },
        { json: "kms_key", js: "kms_key", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "QldbStream": o([
        { json: "inclusive_start_time", js: "inclusive_start_time", typ: "" },
        { json: "kinesis_configuration", js: "kinesis_configuration", typ: r("KinesisConfiguration") },
        { json: "ledger_name", js: "ledger_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "stream_name", js: "stream_name", typ: "" },
        { json: "exclusive_end_time", js: "exclusive_end_time", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "KinesisConfiguration": o([
        { json: "stream_arn", js: "stream_arn", typ: "" },
        { json: "aggregation_enabled", js: "aggregation_enabled", typ: u(undefined, "") },
    ], false),
    "QuicksightAccountSubscription": o([
        { json: "account_name", js: "account_name", typ: "" },
        { json: "authentication_method", js: "authentication_method", typ: "" },
        { json: "edition", js: "edition", typ: "" },
        { json: "notification_email", js: "notification_email", typ: "" },
        { json: "active_directory_name", js: "active_directory_name", typ: u(undefined, "") },
        { json: "admin_group", js: "admin_group", typ: u(undefined, "") },
        { json: "author_group", js: "author_group", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "contact_number", js: "contact_number", typ: u(undefined, "") },
        { json: "directory_id", js: "directory_id", typ: u(undefined, "") },
        { json: "email_address", js: "email_address", typ: u(undefined, "") },
        { json: "first_name", js: "first_name", typ: u(undefined, "") },
        { json: "last_name", js: "last_name", typ: u(undefined, "") },
        { json: "reader_group", js: "reader_group", typ: u(undefined, "") },
        { json: "realm", js: "realm", typ: u(undefined, "") },
        { json: "account_subscription_status", js: "account_subscription_status", typ: u(undefined, "") },
    ], false),
    "QuicksightAnalysis": o([
        { json: "name", js: "name", typ: "" },
        { json: "principal", js: "principal", typ: "" },
        { json: "data_set_references", js: "data_set_references", typ: r("DataSetReferences") },
        { json: "data_set_placeholder", js: "data_set_placeholder", typ: "" },
        { json: "analysis_id", js: "analysis_id", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "definition", js: "definition", typ: u(undefined, r("Definition")) },
        { json: "parameters", js: "parameters", typ: u(undefined, r("QuicksightAnalysisParameters")) },
        { json: "permissions", js: "permissions", typ: u(undefined, r("Permissions")) },
        { json: "recovery_window_in_days", js: "recovery_window_in_days", typ: u(undefined, "") },
        { json: "source_entity", js: "source_entity", typ: u(undefined, r("QuicksightAnalysisSourceEntity")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "theme_arn", js: "theme_arn", typ: u(undefined, "") },
        { json: "source_template", js: "source_template", typ: u(undefined, r("Source")) },
        { json: "string_parameters", js: "string_parameters", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataSetReferences": o([
        { json: "data_set_arn", js: "data_set_arn", typ: "" },
        { json: "data_set_placeholder", js: "data_set_placeholder", typ: "" },
    ], false),
    "Definition": o([
        { json: "data_set_identifiers_declarations", js: "data_set_identifiers_declarations", typ: u(undefined, "") },
        { json: "analysis_defaults", js: "analysis_defaults", typ: "" },
        { json: "calculated_fields", js: "calculated_fields", typ: "" },
        { json: "column_configurations", js: "column_configurations", typ: "" },
        { json: "filter_groups", js: "filter_groups", typ: "" },
        { json: "parameters_declarations", js: "parameters_declarations", typ: "" },
        { json: "sheets", js: "sheets", typ: "" },
        { json: "data_set_configuration", js: "data_set_configuration", typ: u(undefined, "") },
    ], false),
    "QuicksightAnalysisParameters": o([
        { json: "date_time_parameters", js: "date_time_parameters", typ: "" },
        { json: "decimal_parameters", js: "decimal_parameters", typ: "" },
        { json: "integer_parameters", js: "integer_parameters", typ: "" },
        { json: "string_parameters", js: "string_parameters", typ: "" },
    ], false),
    "QuicksightAnalysisSourceEntity": o([
        { json: "source_template", js: "source_template", typ: "" },
    ], false),
    "Source": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "data_set_references", js: "data_set_references", typ: "" },
    ], false),
    "QuicksightDashboard": o([
        { json: "name", js: "name", typ: "" },
        { json: "version_description", js: "version_description", typ: "" },
        { json: "principal", js: "principal", typ: "" },
        { json: "data_set_references", js: "data_set_references", typ: r("DataSetReferences") },
        { json: "data_set_placeholder", js: "data_set_placeholder", typ: "" },
        { json: "dashboard_id", js: "dashboard_id", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "dashboard_publish_options", js: "dashboard_publish_options", typ: u(undefined, r("DashboardPublishOptions")) },
        { json: "definition", js: "definition", typ: u(undefined, r("Definition")) },
        { json: "parameters", js: "parameters", typ: u(undefined, r("QuicksightAnalysisParameters")) },
        { json: "permissions", js: "permissions", typ: u(undefined, r("Permissions")) },
        { json: "source_entity", js: "source_entity", typ: u(undefined, r("QuicksightAnalysisSourceEntity")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "theme_arn", js: "theme_arn", typ: u(undefined, "") },
        { json: "source_template", js: "source_template", typ: u(undefined, r("Source")) },
        { json: "ad_hoc_filtering_option", js: "ad_hoc_filtering_option", typ: u(undefined, r("Option")) },
        { json: "data_point_drill_up_down_option", js: "data_point_drill_up_down_option", typ: u(undefined, r("Option")) },
        { json: "data_point_menu_label_option", js: "data_point_menu_label_option", typ: u(undefined, r("Option")) },
        { json: "data_point_tooltip_option", js: "data_point_tooltip_option", typ: u(undefined, r("Option")) },
        { json: "export_to_csv_option", js: "export_to_csv_option", typ: u(undefined, r("Option")) },
        { json: "export_with_hidden_fields_option", js: "export_with_hidden_fields_option", typ: u(undefined, r("Option")) },
        { json: "sheet_controls_option", js: "sheet_controls_option", typ: u(undefined, r("SheetControlsOption")) },
        { json: "sheet_layout_element_maximization_option", js: "sheet_layout_element_maximization_option", typ: u(undefined, r("Option")) },
        { json: "visual_axis_sort_option", js: "visual_axis_sort_option", typ: u(undefined, r("Option")) },
        { json: "visual_menu_option", js: "visual_menu_option", typ: u(undefined, r("Option")) },
        { json: "availability_status", js: "availability_status", typ: u(undefined, "") },
        { json: "visibility_state", js: "visibility_state", typ: u(undefined, "") },
        { json: "string_parameters", js: "string_parameters", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "source_entity_arn", js: "source_entity_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "version_number", js: "version_number", typ: u(undefined, "") },
    ], false),
    "Option": o([
        { json: "availability_status", js: "availability_status", typ: "" },
    ], false),
    "DashboardPublishOptions": o([
        { json: "ad_hoc_filtering_option", js: "ad_hoc_filtering_option", typ: "" },
        { json: "data_point_drill_up_down_option", js: "data_point_drill_up_down_option", typ: "" },
        { json: "data_point_menu_label_option", js: "data_point_menu_label_option", typ: "" },
        { json: "data_point_tooltip_option", js: "data_point_tooltip_option", typ: "" },
        { json: "export_to_csv_option", js: "export_to_csv_option", typ: "" },
        { json: "export_with_hidden_fields_option", js: "export_with_hidden_fields_option", typ: "" },
        { json: "sheet_controls_option", js: "sheet_controls_option", typ: "" },
        { json: "sheet_layout_element_maximization_option", js: "sheet_layout_element_maximization_option", typ: "" },
        { json: "visual_axis_sort_option", js: "visual_axis_sort_option", typ: "" },
        { json: "visual_menu_option", js: "visual_menu_option", typ: "" },
    ], false),
    "SheetControlsOption": o([
        { json: "visibility_state", js: "visibility_state", typ: "" },
    ], false),
    "ResourceQuicksightDataSet": o([
        { json: "import_mode", js: "import_mode", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "physical_table_map", js: "physical_table_map", typ: r("PhysicalTableMap") },
        { json: "input_columns", js: "input_columns", typ: r("AuditmanagerFrameworkClass") },
        { json: "columns", js: "columns", typ: r("Columns") },
        { json: "expression", js: "expression", typ: "" },
        { json: "condition_expression", js: "condition_expression", typ: "" },
        { json: "projected_columns", js: "projected_columns", typ: "" },
        { json: "new_column_name", js: "new_column_name", typ: "" },
        { json: "tag_names", js: "tag_names", typ: "" },
        { json: "principal", js: "principal", typ: "" },
        { json: "tag_rules", js: "tag_rules", typ: r("TagRules") },
        { json: "refresh_configuration", js: "refresh_configuration", typ: r("RefreshConfiguration") },
        { json: "incremental_refresh", js: "incremental_refresh", typ: r("IncrementalRefresh") },
        { json: "lookback_window", js: "lookback_window", typ: r("LookbackWindow") },
        { json: "size_unit", js: "size_unit", typ: "" },
        { json: "data_set_id", js: "data_set_id", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "column_groups", js: "column_groups", typ: u(undefined, r("ColumnGroups")) },
        { json: "column_level_permission_rules", js: "column_level_permission_rules", typ: u(undefined, r("ColumnLevelPermissionRules")) },
        { json: "data_set_usage_configuration", js: "data_set_usage_configuration", typ: u(undefined, r("DataSetUsageConfiguration")) },
        { json: "field_folders", js: "field_folders", typ: u(undefined, r("FieldFolders")) },
        { json: "logical_table_map", js: "logical_table_map", typ: u(undefined, r("LogicalTableMap")) },
        { json: "permissions", js: "permissions", typ: u(undefined, r("Permissions")) },
        { json: "row_level_permission_data_set", js: "row_level_permission_data_set", typ: u(undefined, r("RowLevelPermissionDataSet")) },
        { json: "row_level_permission_tag_configuration", js: "row_level_permission_tag_configuration", typ: u(undefined, r("RowLevelPermissionTagConfiguration")) },
        { json: "tags", js: "tags", typ: u(undefined, r("QuicksightDataSetTags")) },
        { json: "custom_sql", js: "custom_sql", typ: u(undefined, r("CustomSQL")) },
        { json: "relational_table", js: "relational_table", typ: u(undefined, r("RelationalTable")) },
        { json: "s3_source", js: "s3_source", typ: u(undefined, r("S3Source")) },
        { json: "schema", js: "schema", typ: u(undefined, "") },
        { json: "upload_settings", js: "upload_settings", typ: u(undefined, r("UploadSettings")) },
        { json: "format", js: "format", typ: u(undefined, "") },
        { json: "text_qualifier", js: "text_qualifier", typ: u(undefined, "") },
        { json: "geo_spatial_column_group", js: "geo_spatial_column_group", typ: u(undefined, r("GeoSpatialColumnGroup")) },
        { json: "principals", js: "principals", typ: u(undefined, "") },
        { json: "disable_use_as_imported_source", js: "disable_use_as_imported_source", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "data_transforms", js: "data_transforms", typ: u(undefined, r("DataTransforms")) },
        { json: "source", js: "source", typ: u(undefined, r("SourceClass")) },
        { json: "cast_column_type_operation", js: "cast_column_type_operation", typ: u(undefined, r("CastColumnTypeOperation")) },
        { json: "create_columns_operation", js: "create_columns_operation", typ: u(undefined, r("CreateColumnsOperation")) },
        { json: "filter_operation", js: "filter_operation", typ: u(undefined, r("FilterOperation")) },
        { json: "project_operation", js: "project_operation", typ: u(undefined, r("ProjectOperation")) },
        { json: "rename_column_operation", js: "rename_column_operation", typ: u(undefined, r("RenameColumnOperation")) },
        { json: "tag_column_operation", js: "tag_column_operation", typ: u(undefined, r("TagColumnOperation")) },
        { json: "untag_column_operation", js: "untag_column_operation", typ: u(undefined, r("UntagColumnOperation")) },
        { json: "column_description", js: "column_description", typ: u(undefined, r("ColumnDescription")) },
        { json: "column_geographic_role", js: "column_geographic_role", typ: u(undefined, "") },
        { json: "text", js: "text", typ: u(undefined, "") },
        { json: "join_instruction", js: "join_instruction", typ: u(undefined, r("JoinInstruction")) },
        { json: "physical_table_id", js: "physical_table_id", typ: u(undefined, "") },
        { json: "left_join_key_properties", js: "left_join_key_properties", typ: u(undefined, r("TJoinKeyProperties")) },
        { json: "right_join_key_properties", js: "right_join_key_properties", typ: u(undefined, r("TJoinKeyProperties")) },
        { json: "unique_key", js: "unique_key", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CastColumnTypeOperation": o([
        { json: "column_name", js: "column_name", typ: "" },
        { json: "new_column_type", js: "new_column_type", typ: "" },
        { json: "format", js: "format", typ: "" },
    ], false),
    "ColumnDescription": o([
        { json: "text", js: "text", typ: "" },
    ], false),
    "ColumnGroups": o([
        { json: "geo_spatial_column_group", js: "geo_spatial_column_group", typ: "" },
    ], false),
    "ColumnLevelPermissionRules": o([
        { json: "column_names", js: "column_names", typ: "" },
        { json: "principals", js: "principals", typ: "" },
    ], false),
    "Columns": o([
        { json: "column_id", js: "column_id", typ: "" },
        { json: "column_name", js: "column_name", typ: "" },
        { json: "expression", js: "expression", typ: "" },
    ], false),
    "CreateColumnsOperation": o([
        { json: "columns", js: "columns", typ: "" },
    ], false),
    "CustomSQL": o([
        { json: "data_source_arn", js: "data_source_arn", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "sql_query", js: "sql_query", typ: "" },
        { json: "columns", js: "columns", typ: "" },
    ], false),
    "DataSetUsageConfiguration": o([
        { json: "disable_use_as_direct_query_source", js: "disable_use_as_direct_query_source", typ: "" },
        { json: "disable_use_as_imported_source", js: "disable_use_as_imported_source", typ: "" },
    ], false),
    "DataTransforms": o([
        { json: "cast_column_type_operation", js: "cast_column_type_operation", typ: "" },
        { json: "create_columns_operation", js: "create_columns_operation", typ: "" },
        { json: "filter_operation", js: "filter_operation", typ: "" },
        { json: "project_operation", js: "project_operation", typ: "" },
        { json: "rename_column_operation", js: "rename_column_operation", typ: "" },
        { json: "tag_column_operation", js: "tag_column_operation", typ: "" },
        { json: "untag_column_operation", js: "untag_column_operation", typ: "" },
    ], false),
    "FieldFolders": o([
        { json: "field_folders_id", js: "field_folders_id", typ: "" },
        { json: "columns", js: "columns", typ: "" },
        { json: "description", js: "description", typ: "" },
    ], false),
    "FilterOperation": o([
        { json: "condition_expression", js: "condition_expression", typ: "" },
    ], false),
    "GeoSpatialColumnGroup": o([
        { json: "columns", js: "columns", typ: "" },
        { json: "country_code", js: "country_code", typ: "" },
        { json: "name", js: "name", typ: "" },
    ], false),
    "IncrementalRefresh": o([
        { json: "lookback_window", js: "lookback_window", typ: "" },
    ], false),
    "JoinInstruction": o([
        { json: "left_operand", js: "left_operand", typ: "" },
        { json: "on_clause", js: "on_clause", typ: "" },
        { json: "right_operand", js: "right_operand", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "left_join_key_properties", js: "left_join_key_properties", typ: "" },
        { json: "right_join_key_properties", js: "right_join_key_properties", typ: "" },
    ], false),
    "TJoinKeyProperties": o([
        { json: "unique_key", js: "unique_key", typ: "" },
    ], false),
    "LogicalTableMap": o([
        { json: "alias", js: "alias", typ: "" },
        { json: "logical_table_map_id", js: "logical_table_map_id", typ: "" },
        { json: "data_transforms", js: "data_transforms", typ: "" },
        { json: "source", js: "source", typ: "" },
    ], false),
    "LookbackWindow": o([
        { json: "column_name", js: "column_name", typ: "" },
        { json: "size", js: "size", typ: "" },
        { json: "size_unit", js: "size_unit", typ: "" },
    ], false),
    "PhysicalTableMap": o([
        { json: "physical_table_map_id", js: "physical_table_map_id", typ: "" },
        { json: "custom_sql", js: "custom_sql", typ: u(undefined, "") },
        { json: "relational_table", js: "relational_table", typ: u(undefined, "") },
        { json: "s3_source", js: "s3_source", typ: u(undefined, "") },
    ], false),
    "ProjectOperation": o([
        { json: "projected_columns", js: "projected_columns", typ: "" },
    ], false),
    "RefreshConfiguration": o([
        { json: "incremental_refresh", js: "incremental_refresh", typ: "" },
    ], false),
    "RelationalTable": o([
        { json: "data_source_arn", js: "data_source_arn", typ: "" },
        { json: "input_columns", js: "input_columns", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "catalog", js: "catalog", typ: "" },
        { json: "schema", js: "schema", typ: "" },
    ], false),
    "RenameColumnOperation": o([
        { json: "column_name", js: "column_name", typ: "" },
        { json: "new_column_name", js: "new_column_name", typ: "" },
    ], false),
    "RowLevelPermissionDataSet": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "permission_policy", js: "permission_policy", typ: "" },
        { json: "format_version", js: "format_version", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "status", js: "status", typ: "" },
    ], false),
    "RowLevelPermissionTagConfiguration": o([
        { json: "tag_rules", js: "tag_rules", typ: "" },
        { json: "status", js: "status", typ: "" },
    ], false),
    "S3Source": o([
        { json: "data_source_arn", js: "data_source_arn", typ: "" },
        { json: "input_columns", js: "input_columns", typ: "" },
        { json: "upload_settings", js: "upload_settings", typ: "" },
    ], false),
    "SourceClass": o([
        { json: "data_set_arn", js: "data_set_arn", typ: "" },
        { json: "join_instruction", js: "join_instruction", typ: "" },
        { json: "physical_table_id", js: "physical_table_id", typ: "" },
    ], false),
    "TagColumnOperation": o([
        { json: "column_name", js: "column_name", typ: "" },
        { json: "tags", js: "tags", typ: "" },
    ], false),
    "TagRules": o([
        { json: "column_name", js: "column_name", typ: "" },
        { json: "tag_key", js: "tag_key", typ: "" },
        { json: "match_all_value", js: "match_all_value", typ: u(undefined, "") },
        { json: "tag_multi_value_delimiter", js: "tag_multi_value_delimiter", typ: u(undefined, "") },
    ], false),
    "QuicksightDataSetTags": o([
        { json: "column_description", js: "column_description", typ: "" },
        { json: "column_geographic_role", js: "column_geographic_role", typ: "" },
    ], false),
    "UntagColumnOperation": o([
        { json: "column_name", js: "column_name", typ: "" },
        { json: "tag_names", js: "tag_names", typ: "" },
    ], false),
    "UploadSettings": o([
        { json: "contains_header", js: "contains_header", typ: "" },
        { json: "delimiter", js: "delimiter", typ: "" },
        { json: "format", js: "format", typ: "" },
        { json: "start_from_row", js: "start_from_row", typ: "" },
        { json: "text_qualifier", js: "text_qualifier", typ: "" },
    ], false),
    "QuicksightDataSource": o([
        { json: "name", js: "name", typ: "" },
        { json: "parameters", js: "parameters", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "actions", js: "actions", typ: "" },
        { json: "principal", js: "principal", typ: "" },
        { json: "disable_ssl", js: "disable_ssl", typ: "" },
        { json: "vpc_connection_arn", js: "vpc_connection_arn", typ: "" },
        { json: "domain", js: "domain", typ: "" },
        { json: "database", js: "database", typ: "" },
        { json: "host", js: "host", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "data_set_name", js: "data_set_name", typ: "" },
        { json: "site_base_url", js: "site_base_url", typ: "" },
        { json: "catalog", js: "catalog", typ: "" },
        { json: "manifest_file_location", js: "manifest_file_location", typ: "" },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "warehouse", js: "warehouse", typ: "" },
        { json: "max_rows", js: "max_rows", typ: "" },
        { json: "query", js: "query", typ: "" },
        { json: "data_source_id", js: "data_source_id", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "credentials", js: "credentials", typ: u(undefined, "") },
        { json: "permission", js: "permission", typ: u(undefined, "") },
        { json: "ssl_properties", js: "ssl_properties", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "amazon_elasticsearch", js: "amazon_elasticsearch", typ: u(undefined, "") },
        { json: "athena", js: "athena", typ: u(undefined, "") },
        { json: "aurora", js: "aurora", typ: u(undefined, "") },
        { json: "aurora_postgresql", js: "aurora_postgresql", typ: u(undefined, "") },
        { json: "aws_iot_analytics", js: "aws_iot_analytics", typ: u(undefined, "") },
        { json: "jira", js: "jira", typ: u(undefined, "") },
        { json: "maria_db", js: "maria_db", typ: u(undefined, "") },
        { json: "mysql", js: "mysql", typ: u(undefined, "") },
        { json: "oracle", js: "oracle", typ: u(undefined, "") },
        { json: "postgresql", js: "postgresql", typ: u(undefined, "") },
        { json: "presto", js: "presto", typ: u(undefined, "") },
        { json: "rds", js: "rds", typ: u(undefined, "") },
        { json: "redshift", js: "redshift", typ: u(undefined, "") },
        { json: "s3", js: "s3", typ: u(undefined, "") },
        { json: "service_now", js: "service_now", typ: u(undefined, "") },
        { json: "snowflake", js: "snowflake", typ: u(undefined, "") },
        { json: "spark", js: "spark", typ: u(undefined, "") },
        { json: "sql_server", js: "sql_server", typ: u(undefined, "") },
        { json: "teradata", js: "teradata", typ: u(undefined, "") },
        { json: "twitter", js: "twitter", typ: u(undefined, "") },
        { json: "work_group", js: "work_group", typ: u(undefined, "") },
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
        { json: "cluster_id", js: "cluster_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "QuicksightFolder": o([
        { json: "name", js: "name", typ: "" },
        { json: "folder_id", js: "folder_id", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "folder_type", js: "folder_type", typ: u(undefined, "") },
        { json: "parent_folder_arn", js: "parent_folder_arn", typ: u(undefined, "") },
        { json: "permissions", js: "permissions", typ: u(undefined, r("Permissions")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "folder_path", js: "folder_path", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "QuicksightFolderMembership": o([
        { json: "folder_id", js: "folder_id", typ: u(undefined, "") },
        { json: "member_id", js: "member_id", typ: u(undefined, "") },
        { json: "member_type", js: "member_type", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "QuicksightGroupMembership": o([
        { json: "group_name", js: "group_name", typ: "" },
        { json: "member_name", js: "member_name", typ: "" },
        { json: "namespace", js: "namespace", typ: "" },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
    ], false),
    "QuicksightIamPolicyAssignment": o([
        { json: "assignment_name", js: "assignment_name", typ: "" },
        { json: "assignment_status", js: "assignment_status", typ: "" },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "identities", js: "identities", typ: u(undefined, r("IamUserGroupMembership")) },
        { json: "namespace", js: "namespace", typ: u(undefined, "") },
        { json: "policy_arn", js: "policy_arn", typ: u(undefined, "") },
        { json: "assignment_id", js: "assignment_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "QuicksightIngestion": o([
        { json: "data_set_id", js: "data_set_id", typ: "" },
        { json: "ingestion_id", js: "ingestion_id", typ: "" },
        { json: "ingestion_type", js: "ingestion_type", typ: "" },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ingestion_status", js: "ingestion_status", typ: u(undefined, "") },
    ], false),
    "QuicksightNamespace": o([
        { json: "namespace", js: "namespace", typ: "" },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "identity_store", js: "identity_store", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "capacity_region", js: "capacity_region", typ: u(undefined, "") },
        { json: "creation_status", js: "creation_status", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "QuicksightRefreshSchedule": o([
        { json: "schedule", js: "schedule", typ: r("QuicksightRefreshScheduleSchedule") },
        { json: "data_set_id", js: "data_set_id", typ: u(undefined, "") },
        { json: "schedule_id", js: "schedule_id", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "schedule_frequency", js: "schedule_frequency", typ: u(undefined, r("ScheduleFrequency")) },
        { json: "refresh_on_day", js: "refresh_on_day", typ: u(undefined, r("RefreshOnDay")) },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "RefreshOnDay": o([
        { json: "day_of_month", js: "day_of_month", typ: "" },
        { json: "day_of_week", js: "day_of_week", typ: "" },
    ], false),
    "QuicksightRefreshScheduleSchedule": o([
        { json: "refresh_type", js: "refresh_type", typ: "" },
        { json: "schedule_frequency", js: "schedule_frequency", typ: u(undefined, "") },
    ], false),
    "ScheduleFrequency": o([
        { json: "interval", js: "interval", typ: "" },
        { json: "time_of_the_day", js: "time_of_the_day", typ: "" },
        { json: "timezone", js: "timezone", typ: "" },
        { json: "refresh_on_day", js: "refresh_on_day", typ: "" },
    ], false),
    "QuicksightTemplate": o([
        { json: "name", js: "name", typ: "" },
        { json: "version_description", js: "version_description", typ: "" },
        { json: "principal", js: "principal", typ: "" },
        { json: "arn", js: "arn", typ: "" },
        { json: "data_set_references", js: "data_set_references", typ: r("DataSetReferences") },
        { json: "data_set_placeholder", js: "data_set_placeholder", typ: "" },
        { json: "template_id", js: "template_id", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "definition", js: "definition", typ: u(undefined, r("Definition")) },
        { json: "permissions", js: "permissions", typ: u(undefined, r("Permissions")) },
        { json: "source_entity", js: "source_entity", typ: u(undefined, r("QuicksightTemplateSourceEntity")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "source_analysis", js: "source_analysis", typ: u(undefined, r("Source")) },
        { json: "source_template", js: "source_template", typ: u(undefined, r("GlobalacceleratorAccelerator")) },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "source_entity_arn", js: "source_entity_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "version_number", js: "version_number", typ: u(undefined, "") },
    ], false),
    "QuicksightTemplateSourceEntity": o([
        { json: "source_analysis", js: "source_analysis", typ: "" },
        { json: "source_template", js: "source_template", typ: "" },
    ], false),
    "QuicksightTemplateAlias": o([
        { json: "template_version_number", js: "template_version_number", typ: "" },
        { json: "alias_name", js: "alias_name", typ: u(undefined, "") },
        { json: "template_id", js: "template_id", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceQuicksightUser": o([
        { json: "email", js: "email", typ: "" },
        { json: "identity_type", js: "identity_type", typ: "" },
        { json: "user_role", js: "user_role", typ: "" },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "iam_arn", js: "iam_arn", typ: u(undefined, "") },
        { json: "session_name", js: "session_name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "QuicksightVpcConnection": o([
        { json: "vpc_connection_id", js: "vpc_connection_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "aws_account_id", js: "aws_account_id", typ: u(undefined, "") },
        { json: "dns_resolvers", js: "dns_resolvers", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "availability_status", js: "availability_status", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RAMPrincipalAssociation": o([
        { json: "principal", js: "principal", typ: "" },
        { json: "resource_share_arn", js: "resource_share_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "RAMResourceAssociation": o([
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "resource_share_arn", js: "resource_share_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceRAMResourceShare": o([
        { json: "name", js: "name", typ: "" },
        { json: "allow_external_principals", js: "allow_external_principals", typ: u(undefined, "") },
        { json: "permission_arns", js: "permission_arns", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RAMResourceShareAccepter": o([
        { json: "share_arn", js: "share_arn", typ: "" },
        { json: "invitation_arn", js: "invitation_arn", typ: u(undefined, "") },
        { json: "share_id", js: "share_id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "receiver_account_id", js: "receiver_account_id", typ: u(undefined, "") },
        { json: "sender_account_id", js: "sender_account_id", typ: u(undefined, "") },
        { json: "share_name", js: "share_name", typ: u(undefined, "") },
        { json: "resources", js: "resources", typ: u(undefined, "") },
    ], false),
    "RbinRule": o([
        { json: "resource_type", js: "resource_type", typ: "" },
        { json: "retention_period", js: "retention_period", typ: r("RetentionPeriod") },
        { json: "retention_period_value", js: "retention_period_value", typ: "" },
        { json: "unlock_delay", js: "unlock_delay", typ: r("UnlockDelay") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "resource_tags", js: "resource_tags", typ: u(undefined, r("ResourceTags")) },
        { json: "lock_configuration", js: "lock_configuration", typ: u(undefined, r("LockConfiguration")) },
        { json: "resource_tag_value", js: "resource_tag_value", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "lock_end_time", js: "lock_end_time", typ: u(undefined, "") },
        { json: "lock_state", js: "lock_state", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "LockConfiguration": o([
        { json: "unlock_delay", js: "unlock_delay", typ: "" },
    ], false),
    "ResourceTags": o([
        { json: "resource_tag_key", js: "resource_tag_key", typ: "" },
        { json: "resource_tag_value", js: "resource_tag_value", typ: "" },
    ], false),
    "RetentionPeriod": o([
        { json: "retention_period_unit", js: "retention_period_unit", typ: "" },
        { json: "retention_period_value", js: "retention_period_value", typ: "" },
    ], false),
    "UnlockDelay": o([
        { json: "unlock_delay_unit", js: "unlock_delay_unit", typ: "" },
        { json: "unlock_delay_value", js: "unlock_delay_value", typ: "" },
    ], false),
    "ResourceRDSCluster": o([
        { json: "engine", js: "engine", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "ingestion_role", js: "ingestion_role", typ: "" },
        { json: "source_engine", js: "source_engine", typ: "" },
        { json: "source_cluster_identifier", js: "source_cluster_identifier", typ: "" },
        { json: "max_capacity", js: "max_capacity", typ: "" },
        { json: "min_capacity", js: "min_capacity", typ: "" },
        { json: "allocated_storage", js: "allocated_storage", typ: u(undefined, "") },
        { json: "allow_major_version_upgrade", js: "allow_major_version_upgrade", typ: u(undefined, "") },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "backtrack_window", js: "backtrack_window", typ: u(undefined, "") },
        { json: "backup_retention_period", js: "backup_retention_period", typ: u(undefined, "") },
        { json: "cluster_identifier_prefix", js: "cluster_identifier_prefix", typ: u(undefined, "") },
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "copy_tags_to_snapshot", js: "copy_tags_to_snapshot", typ: u(undefined, "") },
        { json: "database_name", js: "database_name", typ: u(undefined, "") },
        { json: "db_cluster_instance_class", js: "db_cluster_instance_class", typ: u(undefined, "") },
        { json: "db_cluster_parameter_group_name", js: "db_cluster_parameter_group_name", typ: u(undefined, "") },
        { json: "db_instance_parameter_group_name", js: "db_instance_parameter_group_name", typ: u(undefined, "") },
        { json: "db_system_id", js: "db_system_id", typ: u(undefined, "") },
        { json: "deletion_protection", js: "deletion_protection", typ: u(undefined, "") },
        { json: "enable_global_write_forwarding", js: "enable_global_write_forwarding", typ: u(undefined, "") },
        { json: "enable_http_endpoint", js: "enable_http_endpoint", typ: u(undefined, "") },
        { json: "enabled_cloudwatch_logs_exports", js: "enabled_cloudwatch_logs_exports", typ: u(undefined, "") },
        { json: "engine_mode", js: "engine_mode", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "final_snapshot_identifier", js: "final_snapshot_identifier", typ: u(undefined, "") },
        { json: "global_cluster_identifier", js: "global_cluster_identifier", typ: u(undefined, "") },
        { json: "iam_database_authentication_enabled", js: "iam_database_authentication_enabled", typ: u(undefined, "") },
        { json: "iam_roles", js: "iam_roles", typ: u(undefined, "") },
        { json: "iops", js: "iops", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "manage_master_user_password", js: "manage_master_user_password", typ: u(undefined, "") },
        { json: "master_password", js: "master_password", typ: u(undefined, "") },
        { json: "master_user_secret_kms_key_id", js: "master_user_secret_kms_key_id", typ: u(undefined, "") },
        { json: "master_username", js: "master_username", typ: u(undefined, "") },
        { json: "network_type", js: "network_type", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "preferred_backup_window", js: "preferred_backup_window", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "replication_source_identifier", js: "replication_source_identifier", typ: u(undefined, "") },
        { json: "restore_to_point_in_time", js: "restore_to_point_in_time", typ: u(undefined, "") },
        { json: "scaling_configuration", js: "scaling_configuration", typ: u(undefined, "") },
        { json: "skip_final_snapshot", js: "skip_final_snapshot", typ: u(undefined, "") },
        { json: "source_region", js: "source_region", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "storage_type", js: "storage_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "bucket_prefix", js: "bucket_prefix", typ: u(undefined, "") },
        { json: "restore_type", js: "restore_type", typ: u(undefined, "") },
        { json: "use_latest_restorable_time", js: "use_latest_restorable_time", typ: u(undefined, "") },
        { json: "auto_pause", js: "auto_pause", typ: u(undefined, "") },
        { json: "seconds_until_auto_pause", js: "seconds_until_auto_pause", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "cluster_resource_id", js: "cluster_resource_id", typ: u(undefined, "") },
        { json: "cluster_members", js: "cluster_members", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "reader_endpoint", js: "reader_endpoint", typ: u(undefined, "") },
        { json: "engine_version_actual", js: "engine_version_actual", typ: u(undefined, "") },
        { json: "master_user_secret", js: "master_user_secret", typ: u(undefined, r("MasterUserSecret")) },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RDSClusterActivityStream": o([
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
        { json: "mode", js: "mode", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "engine_native_audit_fields_included", js: "engine_native_audit_fields_included", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "kinesis_stream_name", js: "kinesis_stream_name", typ: u(undefined, "") },
    ], false),
    "RDSClusterInstance": o([
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "auto_minor_version_upgrade", js: "auto_minor_version_upgrade", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "ca_cert_identifier", js: "ca_cert_identifier", typ: u(undefined, "") },
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "copy_tags_to_snapshot", js: "copy_tags_to_snapshot", typ: u(undefined, "") },
        { json: "custom_iam_instance_profile", js: "custom_iam_instance_profile", typ: u(undefined, "") },
        { json: "db_parameter_group_name", js: "db_parameter_group_name", typ: u(undefined, "") },
        { json: "engine_version", js: "engine_version", typ: u(undefined, "") },
        { json: "engine", js: "engine", typ: u(undefined, "") },
        { json: "identifier_prefix", js: "identifier_prefix", typ: u(undefined, "") },
        { json: "identifier", js: "identifier", typ: u(undefined, "") },
        { json: "monitoring_interval", js: "monitoring_interval", typ: u(undefined, "") },
        { json: "monitoring_role_arn", js: "monitoring_role_arn", typ: u(undefined, "") },
        { json: "performance_insights_enabled", js: "performance_insights_enabled", typ: u(undefined, "") },
        { json: "performance_insights_kms_key_id", js: "performance_insights_kms_key_id", typ: u(undefined, "") },
        { json: "performance_insights_retention_period", js: "performance_insights_retention_period", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "promotion_tier", js: "promotion_tier", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "writer", js: "writer", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "engine_version_actual", js: "engine_version_actual", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "storage_encrypted", js: "storage_encrypted", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "network_type", js: "network_type", typ: u(undefined, "") },
        { json: "dbi_resource_id", js: "dbi_resource_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RDSCustomDBEngineVersion": o([
        { json: "database_installation_files_s3_bucket_name", js: "database_installation_files_s3_bucket_name", typ: "" },
        { json: "database_installation_files_s3_prefix", js: "database_installation_files_s3_prefix", typ: "" },
        { json: "engine_version", js: "engine_version", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "filename", js: "filename", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "manifest", js: "manifest", typ: u(undefined, "") },
        { json: "manifest_hash", js: "manifest_hash", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "source_image_id", js: "source_image_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "create_time", js: "create_time", typ: u(undefined, "") },
        { json: "db_parameter_group_family", js: "db_parameter_group_family", typ: u(undefined, "") },
        { json: "image_id", js: "image_id", typ: u(undefined, "") },
        { json: "major_engine_version", js: "major_engine_version", typ: u(undefined, "") },
        { json: "manifest_computed", js: "manifest_computed", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RDSExportTask": o([
        { json: "export_task_identifier", js: "export_task_identifier", typ: "" },
        { json: "iam_role_arn", js: "iam_role_arn", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "s3_bucket_name", js: "s3_bucket_name", typ: "" },
        { json: "source_arn", js: "source_arn", typ: "" },
        { json: "export_only", js: "export_only", typ: u(undefined, "") },
        { json: "s3_prefix", js: "s3_prefix", typ: u(undefined, "") },
        { json: "failure_cause", js: "failure_cause", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "percent_progress", js: "percent_progress", typ: u(undefined, "") },
        { json: "snapshot_time", js: "snapshot_time", typ: u(undefined, "") },
        { json: "source_type", js: "source_type", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "task_end_time", js: "task_end_time", typ: u(undefined, "") },
        { json: "task_start_time", js: "task_start_time", typ: u(undefined, "") },
        { json: "warning_message", js: "warning_message", typ: u(undefined, "") },
    ], false),
    "RDSReservedInstance": o([
        { json: "offering_id", js: "offering_id", typ: "" },
        { json: "instance_count", js: "instance_count", typ: u(undefined, "") },
        { json: "reservation_id", js: "reservation_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "currency_code", js: "currency_code", typ: u(undefined, "") },
        { json: "duration", js: "duration", typ: u(undefined, "") },
        { json: "fixed_price", js: "fixed_price", typ: u(undefined, "") },
        { json: "db_instance_class", js: "db_instance_class", typ: u(undefined, "") },
        { json: "lease_id", js: "lease_id", typ: u(undefined, "") },
        { json: "multi_az", js: "multi_az", typ: u(undefined, "") },
        { json: "offering_type", js: "offering_type", typ: u(undefined, "") },
        { json: "product_description", js: "product_description", typ: u(undefined, "") },
        { json: "recurring_charges", js: "recurring_charges", typ: u(undefined, "") },
        { json: "start_time", js: "start_time", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "usage_price", js: "usage_price", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RedshiftAuthenticationProfile": o([
        { json: "authentication_profile_content", js: "authentication_profile_content", typ: "" },
        { json: "authentication_profile_name", js: "authentication_profile_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceRedshiftCluster": o([
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "node_type", js: "node_type", typ: "" },
        { json: "enable", js: "enable", typ: "" },
        { json: "destination_region", js: "destination_region", typ: "" },
        { json: "database_name", js: "database_name", typ: u(undefined, "") },
        { json: "default_iam_role_arn", js: "default_iam_role_arn", typ: u(undefined, "") },
        { json: "cluster_type", js: "cluster_type", typ: u(undefined, "") },
        { json: "master_password", js: "master_password", typ: u(undefined, "") },
        { json: "master_username", js: "master_username", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "cluster_subnet_group_name", js: "cluster_subnet_group_name", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "availability_zone_relocation_enabled", js: "availability_zone_relocation_enabled", typ: u(undefined, "") },
        { json: "preferred_maintenance_window", js: "preferred_maintenance_window", typ: u(undefined, "") },
        { json: "cluster_parameter_group_name", js: "cluster_parameter_group_name", typ: u(undefined, "") },
        { json: "automated_snapshot_retention_period", js: "automated_snapshot_retention_period", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "cluster_version", js: "cluster_version", typ: u(undefined, "") },
        { json: "allow_version_upgrade", js: "allow_version_upgrade", typ: u(undefined, "") },
        { json: "apply_immediately", js: "apply_immediately", typ: u(undefined, "") },
        { json: "number_of_nodes", js: "number_of_nodes", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "encrypted", js: "encrypted", typ: u(undefined, "") },
        { json: "enhanced_vpc_routing", js: "enhanced_vpc_routing", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "elastic_ip", js: "elastic_ip", typ: u(undefined, "") },
        { json: "skip_final_snapshot", js: "skip_final_snapshot", typ: u(undefined, "") },
        { json: "final_snapshot_identifier", js: "final_snapshot_identifier", typ: u(undefined, "") },
        { json: "snapshot_identifier", js: "snapshot_identifier", typ: u(undefined, "") },
        { json: "snapshot_cluster_identifier", js: "snapshot_cluster_identifier", typ: u(undefined, "") },
        { json: "owner_account", js: "owner_account", typ: u(undefined, "") },
        { json: "iam_roles", js: "iam_roles", typ: u(undefined, "") },
        { json: "logging", js: "logging", typ: u(undefined, "") },
        { json: "maintenance_track_name", js: "maintenance_track_name", typ: u(undefined, "") },
        { json: "manual_snapshot_retention_period", js: "manual_snapshot_retention_period", typ: u(undefined, "") },
        { json: "snapshot_copy", js: "snapshot_copy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "bucket_name", js: "bucket_name", typ: u(undefined, "") },
        { json: "s3_key_prefix", js: "s3_key_prefix", typ: u(undefined, "") },
        { json: "log_destination_type", js: "log_destination_type", typ: u(undefined, "") },
        { json: "log_exports", js: "log_exports", typ: u(undefined, "") },
        { json: "retention_period", js: "retention_period", typ: u(undefined, "") },
        { json: "grant_name", js: "grant_name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "cluster_public_key", js: "cluster_public_key", typ: u(undefined, "") },
        { json: "cluster_revision_number", js: "cluster_revision_number", typ: u(undefined, "") },
        { json: "cluster_nodes", js: "cluster_nodes", typ: u(undefined, "") },
        { json: "cluster_namespace_arn", js: "cluster_namespace_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "node_role", js: "node_role", typ: u(undefined, "") },
        { json: "private_ip_address", js: "private_ip_address", typ: u(undefined, "") },
        { json: "public_ip_address", js: "public_ip_address", typ: u(undefined, "") },
    ], false),
    "RedshiftClusterIamRoles": o([
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "iam_role_arns", js: "iam_role_arns", typ: u(undefined, "") },
        { json: "default_iam_role_arn", js: "default_iam_role_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "RedshiftClusterSnapshot": o([
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "snapshot_identifier", js: "snapshot_identifier", typ: u(undefined, "") },
        { json: "manual_snapshot_retention_period", js: "manual_snapshot_retention_period", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "owner_account", js: "owner_account", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RedshiftEndpointAccess": o([
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "endpoint_name", js: "endpoint_name", typ: "" },
        { json: "subnet_group_name", js: "subnet_group_name", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "vpc_security_group_ids", js: "vpc_security_group_ids", typ: u(undefined, "") },
        { json: "address", js: "address", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "vpc_endpoint", js: "vpc_endpoint", typ: u(undefined, "") },
        { json: "network_interface", js: "network_interface", typ: u(undefined, "") },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "private_ip_address", js: "private_ip_address", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "workgroup_name", js: "workgroup_name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "RedshiftEndpointAuthorization": o([
        { json: "account", js: "account", typ: "" },
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "force_delete", js: "force_delete", typ: u(undefined, "") },
        { json: "vpc_ids", js: "vpc_ids", typ: u(undefined, "") },
        { json: "allowed_all_vpcs", js: "allowed_all_vpcs", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "endpoint_count", js: "endpoint_count", typ: u(undefined, "") },
        { json: "grantee", js: "grantee", typ: u(undefined, "") },
        { json: "grantor", js: "grantor", typ: u(undefined, "") },
    ], false),
    "RedshiftHSMClientCertificate": o([
        { json: "hsm_client_certificate_identifier", js: "hsm_client_certificate_identifier", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "hsm_client_certificate_public_key", js: "hsm_client_certificate_public_key", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RedshiftHSMConfiguration": o([
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "hsm_configuration_identifier", js: "hsm_configuration_identifier", typ: u(undefined, "") },
        { json: "hsm_ip_address", js: "hsm_ip_address", typ: u(undefined, "") },
        { json: "hsm_partition_name", js: "hsm_partition_name", typ: u(undefined, "") },
        { json: "hsm_partition_password", js: "hsm_partition_password", typ: u(undefined, "") },
        { json: "hsm_server_public_certificate", js: "hsm_server_public_certificate", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "hsm_configuration_public_key", js: "hsm_configuration_public_key", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RedshiftPartner": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "database_name", js: "database_name", typ: "" },
        { json: "partner_name", js: "partner_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
    ], false),
    "RedshiftScheduledAction": o([
        { json: "name", js: "name", typ: "" },
        { json: "iam_role", js: "iam_role", typ: "" },
        { json: "target_action", js: "target_action", typ: "" },
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "enable", js: "enable", typ: u(undefined, "") },
        { json: "start_time", js: "start_time", typ: u(undefined, "") },
        { json: "end_time", js: "end_time", typ: u(undefined, "") },
        { json: "pause_cluster", js: "pause_cluster", typ: u(undefined, "") },
        { json: "resize_cluster", js: "resize_cluster", typ: u(undefined, "") },
        { json: "resume_cluster", js: "resume_cluster", typ: u(undefined, "") },
        { json: "classic", js: "classic", typ: u(undefined, "") },
        { json: "cluster_type", js: "cluster_type", typ: u(undefined, "") },
        { json: "node_type", js: "node_type", typ: u(undefined, "") },
        { json: "number_of_nodes", js: "number_of_nodes", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "RedshiftSnapshotCopyGrant": o([
        { json: "snapshot_copy_grant_name", js: "snapshot_copy_grant_name", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RedshiftSnapshotSchedule": o([
        { json: "identifier", js: "identifier", typ: u(undefined, "") },
        { json: "identifier_prefix", js: "identifier_prefix", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RedshiftSnapshotScheduleAssociation": o([
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "schedule_identifier", js: "schedule_identifier", typ: u(undefined, "") },
    ], false),
    "RedshiftUsageLimit": o([
        { json: "amount", js: "amount", typ: "" },
        { json: "cluster_identifier", js: "cluster_identifier", typ: "" },
        { json: "feature_type", js: "feature_type", typ: "" },
        { json: "limit_type", js: "limit_type", typ: "" },
        { json: "breach_action", js: "breach_action", typ: u(undefined, "") },
        { json: "period", js: "period", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RedshiftdataStatement": o([
        { json: "database", js: "database", typ: "" },
        { json: "sql", js: "sql", typ: "" },
        { json: "cluster_identifier", js: "cluster_identifier", typ: u(undefined, "") },
        { json: "db_user", js: "db_user", typ: u(undefined, "") },
        { json: "secret_arn", js: "secret_arn", typ: u(undefined, "") },
        { json: "statement_name", js: "statement_name", typ: u(undefined, "") },
        { json: "with_event", js: "with_event", typ: u(undefined, "") },
        { json: "workgroup_name", js: "workgroup_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceRedshiftserverlessNamespace": o([
        { json: "namespace_name", js: "namespace_name", typ: "" },
        { json: "admin_user_password", js: "admin_user_password", typ: u(undefined, "") },
        { json: "admin_username", js: "admin_username", typ: u(undefined, "") },
        { json: "db_name", js: "db_name", typ: u(undefined, "") },
        { json: "default_iam_role_arn", js: "default_iam_role_arn", typ: u(undefined, "") },
        { json: "iam_roles", js: "iam_roles", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "log_exports", js: "log_exports", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "namespace_id", js: "namespace_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RedshiftserverlessSnapshot": o([
        { json: "namespace_name", js: "namespace_name", typ: "" },
        { json: "snapshot_name", js: "snapshot_name", typ: "" },
        { json: "retention_period", js: "retention_period", typ: u(undefined, "") },
        { json: "accounts_with_provisioned_restore_access", js: "accounts_with_provisioned_restore_access", typ: u(undefined, "") },
        { json: "accounts_with_restore_access", js: "accounts_with_restore_access", typ: u(undefined, "") },
        { json: "admin_username", js: "admin_username", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "namespace_arn", js: "namespace_arn", typ: u(undefined, "") },
        { json: "owner_account", js: "owner_account", typ: u(undefined, "") },
    ], false),
    "RedshiftserverlessUsageLimit": o([
        { json: "amount", js: "amount", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "usage_type", js: "usage_type", typ: "" },
        { json: "breach_action", js: "breach_action", typ: u(undefined, "") },
        { json: "period", js: "period", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceRedshiftserverlessWorkgroup": o([
        { json: "namespace_name", js: "namespace_name", typ: "" },
        { json: "workgroup_name", js: "workgroup_name", typ: "" },
        { json: "parameter_key", js: "parameter_key", typ: "" },
        { json: "parameter_value", js: "parameter_value", typ: "" },
        { json: "base_capacity", js: "base_capacity", typ: u(undefined, "") },
        { json: "config_parameter", js: "config_parameter", typ: u(undefined, "") },
        { json: "enhanced_vpc_routing", js: "enhanced_vpc_routing", typ: u(undefined, "") },
        { json: "publicly_accessible", js: "publicly_accessible", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "workgroup_id", js: "workgroup_id", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "address", js: "address", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "vpc_endpoint", js: "vpc_endpoint", typ: u(undefined, "") },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "network_interface", js: "network_interface", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "private_ip_address", js: "private_ip_address", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
    ], false),
    "Resourceexplorer2View": o([
        { json: "name", js: "name", typ: "" },
        { json: "filter_string", js: "filter_string", typ: "" },
        { json: "default_view", js: "default_view", typ: u(undefined, "") },
        { json: "filters", js: "filters", typ: u(undefined, "") },
        { json: "included_property", js: "included_property", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourcegroupsGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "resource_query", js: "resource_query", typ: "" },
        { json: "query", js: "query", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "configuration", js: "configuration", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "values", js: "values", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourcegroupsResource": o([
        { json: "group_arn", js: "group_arn", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
    ], false),
    "RolesanywhereProfile": o([
        { json: "name", js: "name", typ: "" },
        { json: "role_arns", js: "role_arns", typ: "" },
        { json: "duration_seconds", js: "duration_seconds", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "managed_policy_arns", js: "managed_policy_arns", typ: u(undefined, "") },
        { json: "require_instance_properties", js: "require_instance_properties", typ: u(undefined, "") },
        { json: "session_policy", js: "session_policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RolesanywhereTrustAnchor": o([
        { json: "name", js: "name", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "source_data", js: "source_data", typ: "" },
        { json: "source_type", js: "source_type", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "acm_pca_arn", js: "acm_pca_arn", typ: u(undefined, "") },
        { json: "x509_certificate_data", js: "x509_certificate_data", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ResourceRoute": o([
        { json: "route_table_id", js: "route_table_id", typ: "" },
        { json: "destination_cidr_block", js: "destination_cidr_block", typ: u(undefined, "") },
        { json: "destination_ipv6_cidr_block", js: "destination_ipv6_cidr_block", typ: u(undefined, "") },
        { json: "destination_prefix_list_id", js: "destination_prefix_list_id", typ: u(undefined, "") },
        { json: "carrier_gateway_id", js: "carrier_gateway_id", typ: u(undefined, "") },
        { json: "core_network_arn", js: "core_network_arn", typ: u(undefined, "") },
        { json: "egress_only_gateway_id", js: "egress_only_gateway_id", typ: u(undefined, "") },
        { json: "gateway_id", js: "gateway_id", typ: u(undefined, "") },
        { json: "nat_gateway_id", js: "nat_gateway_id", typ: u(undefined, "") },
        { json: "local_gateway_id", js: "local_gateway_id", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: u(undefined, "") },
        { json: "vpc_peering_connection_id", js: "vpc_peering_connection_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
        { json: "instance_owner_id", js: "instance_owner_id", typ: u(undefined, "") },
        { json: "origin", js: "origin", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
    ], false),
    "Route53CIDRLocation": o([
        { json: "cidr_blocks", js: "cidr_blocks", typ: "" },
        { json: "cidr_collection_id", js: "cidr_collection_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Route53HealthCheck": o([
        { json: "type", js: "type", typ: "" },
        { json: "request_interval", js: "request_interval", typ: "" },
        { json: "reference_name", js: "reference_name", typ: u(undefined, "") },
        { json: "fqdn", js: "fqdn", typ: u(undefined, "") },
        { json: "ip_address", js: "ip_address", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "failure_threshold", js: "failure_threshold", typ: u(undefined, "") },
        { json: "resource_path", js: "resource_path", typ: u(undefined, "") },
        { json: "search_string", js: "search_string", typ: u(undefined, "") },
        { json: "measure_latency", js: "measure_latency", typ: u(undefined, "") },
        { json: "invert_healthcheck", js: "invert_healthcheck", typ: u(undefined, "") },
        { json: "enable_sni", js: "enable_sni", typ: u(undefined, "") },
        { json: "child_healthchecks", js: "child_healthchecks", typ: u(undefined, "") },
        { json: "child_health_threshold", js: "child_health_threshold", typ: u(undefined, "") },
        { json: "cloudwatch_alarm_name", js: "cloudwatch_alarm_name", typ: u(undefined, "") },
        { json: "cloudwatch_alarm_region", js: "cloudwatch_alarm_region", typ: u(undefined, "") },
        { json: "insufficient_data_health_status", js: "insufficient_data_health_status", typ: u(undefined, "") },
        { json: "regions", js: "regions", typ: u(undefined, "") },
        { json: "routing_control_arn", js: "routing_control_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53HostedZoneDnssec": o([
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: "" },
        { json: "signing_status", js: "signing_status", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Route53KeySigningKey": o([
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: "" },
        { json: "key_management_service_arn", js: "key_management_service_arn", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "digest_algorithm_mnemonic", js: "digest_algorithm_mnemonic", typ: u(undefined, "") },
        { json: "digest_algorithm_type", js: "digest_algorithm_type", typ: u(undefined, "") },
        { json: "digest_value", js: "digest_value", typ: u(undefined, "") },
        { json: "dnskey_record", js: "dnskey_record", typ: u(undefined, "") },
        { json: "ds_record", js: "ds_record", typ: u(undefined, "") },
        { json: "flag", js: "flag", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "key_tag", js: "key_tag", typ: u(undefined, "") },
        { json: "public_key", js: "public_key", typ: u(undefined, "") },
        { json: "signing_algorithm_mnemonic", js: "signing_algorithm_mnemonic", typ: u(undefined, "") },
        { json: "signing_algorithm_type", js: "signing_algorithm_type", typ: u(undefined, "") },
    ], false),
    "Route53QueryLog": o([
        { json: "cloudwatch_log_group_arn", js: "cloudwatch_log_group_arn", typ: "" },
        { json: "zone_id", js: "zone_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Route53Record": o([
        { json: "zone_id", js: "zone_id", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "evaluate_target_health", js: "evaluate_target_health", typ: "" },
        { json: "collection_id", js: "collection_id", typ: "" },
        { json: "region", js: "region", typ: "" },
        { json: "weight", js: "weight", typ: "" },
        { json: "ttl", js: "ttl", typ: u(undefined, "") },
        { json: "records", js: "records", typ: u(undefined, "") },
        { json: "set_identifier", js: "set_identifier", typ: u(undefined, "") },
        { json: "health_check_id", js: "health_check_id", typ: u(undefined, "") },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "cidr_routing_policy", js: "cidr_routing_policy", typ: u(undefined, "") },
        { json: "failover_routing_policy", js: "failover_routing_policy", typ: u(undefined, "") },
        { json: "geolocation_routing_policy", js: "geolocation_routing_policy", typ: u(undefined, "") },
        { json: "latency_routing_policy", js: "latency_routing_policy", typ: u(undefined, "") },
        { json: "multivalue_answer_routing_policy", js: "multivalue_answer_routing_policy", typ: u(undefined, "") },
        { json: "weighted_routing_policy", js: "weighted_routing_policy", typ: u(undefined, "") },
        { json: "allow_overwrite", js: "allow_overwrite", typ: u(undefined, "") },
        { json: "continent", js: "continent", typ: u(undefined, "") },
        { json: "subdivision", js: "subdivision", typ: u(undefined, "") },
        { json: "fqdn", js: "fqdn", typ: u(undefined, "") },
    ], false),
    "Route53ResolverDnssecConfig": o([
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "validation_status", js: "validation_status", typ: u(undefined, "") },
    ], false),
    "ResourceRoute53ResolverEndpoint": o([
        { json: "direction", js: "direction", typ: "" },
        { json: "ip_address", js: "ip_address", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "ip", js: "ip", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "host_vpc_id", js: "host_vpc_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53ResolverFirewallRule": o([
        { json: "name", js: "name", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "firewall_domain_list_id", js: "firewall_domain_list_id", typ: "" },
        { json: "firewall_rule_group_id", js: "firewall_rule_group_id", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "block_override_dns_type", js: "block_override_dns_type", typ: u(undefined, "") },
        { json: "block_override_domain", js: "block_override_domain", typ: u(undefined, "") },
        { json: "block_override_ttl", js: "block_override_ttl", typ: u(undefined, "") },
        { json: "block_response", js: "block_response", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceRoute53ResolverFirewallRuleGroupAssociation": o([
        { json: "name", js: "name", typ: "" },
        { json: "firewall_rule_group_id", js: "firewall_rule_group_id", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "mutation_protection", js: "mutation_protection", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53ResolverQueryLogConfigAssociation": o([
        { json: "resolver_query_log_config_id", js: "resolver_query_log_config_id", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
    ], false),
    "Route53ResolverRule": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "rule_type", js: "rule_type", typ: "" },
        { json: "ip", js: "ip", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "target_ip", js: "target_ip", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "share_status", js: "share_status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53ResolverRuleAssociation": o([
        { json: "resolver_rule_id", js: "resolver_rule_id", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Route53TrafficPolicy": o([
        { json: "name", js: "name", typ: "" },
        { json: "document", js: "document", typ: "" },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "Route53TrafficPolicyInstance": o([
        { json: "name", js: "name", typ: "" },
        { json: "traffic_policy_id", js: "traffic_policy_id", typ: "" },
        { json: "traffic_policy_version", js: "traffic_policy_version", typ: "" },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: "" },
        { json: "ttl", js: "ttl", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Route53Ation": o([
        { json: "zone_id", js: "zone_id", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "vpc_region", js: "vpc_region", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owning_account", js: "owning_account", typ: u(undefined, "") },
    ], false),
    "ResourceRoute53Zone": o([
        { json: "name", js: "name", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "delegation_set_id", js: "delegation_set_id", typ: u(undefined, "") },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc", js: "vpc", typ: u(undefined, "") },
        { json: "vpc_region", js: "vpc_region", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "zone_id", js: "zone_id", typ: u(undefined, "") },
        { json: "name_servers", js: "name_servers", typ: u(undefined, "") },
        { json: "primary_name_server", js: "primary_name_server", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53DomainsRegisteredDomain": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "admin_contact", js: "admin_contact", typ: u(undefined, "") },
        { json: "admin_privacy", js: "admin_privacy", typ: u(undefined, "") },
        { json: "auto_renew", js: "auto_renew", typ: u(undefined, "") },
        { json: "name_server", js: "name_server", typ: u(undefined, "") },
        { json: "registrant_contact", js: "registrant_contact", typ: u(undefined, "") },
        { json: "registrant_privacy", js: "registrant_privacy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tech_contact", js: "tech_contact", typ: u(undefined, "") },
        { json: "tech_privacy", js: "tech_privacy", typ: u(undefined, "") },
        { json: "transfer_lock", js: "transfer_lock", typ: u(undefined, "") },
        { json: "address_line_1", js: "address_line_1", typ: u(undefined, "") },
        { json: "address_line_2", js: "address_line_2", typ: u(undefined, "") },
        { json: "city", js: "city", typ: u(undefined, "") },
        { json: "contact_type", js: "contact_type", typ: u(undefined, "") },
        { json: "country_code", js: "country_code", typ: u(undefined, "") },
        { json: "email", js: "email", typ: u(undefined, "") },
        { json: "extra_params", js: "extra_params", typ: u(undefined, "") },
        { json: "fax", js: "fax", typ: u(undefined, "") },
        { json: "first_name", js: "first_name", typ: u(undefined, "") },
        { json: "last_name", js: "last_name", typ: u(undefined, "") },
        { json: "organization_name", js: "organization_name", typ: u(undefined, "") },
        { json: "phone_number", js: "phone_number", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "zip_code", js: "zip_code", typ: u(undefined, "") },
        { json: "glue_ips", js: "glue_ips", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "abuse_contact_email", js: "abuse_contact_email", typ: u(undefined, "") },
        { json: "abuse_contact_phone", js: "abuse_contact_phone", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "expiration_date", js: "expiration_date", typ: u(undefined, "") },
        { json: "registrar_name", js: "registrar_name", typ: u(undefined, "") },
        { json: "registrar_url", js: "registrar_url", typ: u(undefined, "") },
        { json: "reseller", js: "reseller", typ: u(undefined, "") },
        { json: "status_list", js: "status_list", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "updated_date", js: "updated_date", typ: u(undefined, "") },
        { json: "whois_server", js: "whois_server", typ: u(undefined, "") },
    ], false),
    "Route53RecoverycontrolconfigCluster": o([
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cluster_endpoints", js: "cluster_endpoints", typ: u(undefined, r("ClusterEndpoints")) },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "ClusterEndpoints": o([
        { json: "endpoint", js: "endpoint", typ: "" },
        { json: "region", js: "region", typ: "" },
    ], false),
    "Route53RecoverycontrolconfigControlPanel": o([
        { json: "cluster_arn", js: "cluster_arn", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "default_control_panel", js: "default_control_panel", typ: u(undefined, "") },
        { json: "routing_control_count", js: "routing_control_count", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "Route53RecoverycontrolconfigRoutingControl": o([
        { json: "cluster_arn", js: "cluster_arn", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "control_panel_arn", js: "control_panel_arn", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "Route53RecoverycontrolconfigSafetyRule": o([
        { json: "control_panel_arn", js: "control_panel_arn", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "rule_config", js: "rule_config", typ: r("RuleConfig") },
        { json: "wait_period_ms", js: "wait_period_ms", typ: "" },
        { json: "asserted_controls", js: "asserted_controls", typ: u(undefined, "") },
        { json: "gating_controls", js: "gating_controls", typ: u(undefined, "") },
        { json: "target_controls", js: "target_controls", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "RuleConfig": o([
        { json: "inverted", js: "inverted", typ: "" },
        { json: "threshold", js: "threshold", typ: "" },
        { json: "type", js: "type", typ: "" },
    ], false),
    "Route53RecoveryreadinessCell": o([
        { json: "cell_name", js: "cell_name", typ: "" },
        { json: "cells", js: "cells", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "parent_readiness_scopes", js: "parent_readiness_scopes", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53RecoveryreadinessReadinessCheck": o([
        { json: "readiness_check_name", js: "readiness_check_name", typ: "" },
        { json: "resource_set_name", js: "resource_set_name", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53RecoveryreadinessRecoveryGroup": o([
        { json: "recovery_group_name", js: "recovery_group_name", typ: "" },
        { json: "cells", js: "cells", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Route53RecoveryreadinessResourceSet": o([
        { json: "resource_set_name", js: "resource_set_name", typ: "" },
        { json: "resource_set_type", js: "resource_set_type", typ: "" },
        { json: "arn", js: "arn", typ: "" },
        { json: "resources", js: "resources", typ: u(undefined, r("Resources")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "dns_target_resource", js: "dns_target_resource", typ: u(undefined, r("DNSTargetResource")) },
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
        { json: "target_resource", js: "target_resource", typ: u(undefined, r("TargetResource")) },
        { json: "nlb_resource", js: "nlb_resource", typ: u(undefined, r("GlobalacceleratorAccelerator")) },
        { json: "r53_resource", js: "r53_resource", typ: u(undefined, r("R53Resource")) },
        { json: "resources.#.component_id", js: "resources.#.component_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DNSTargetResource": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "hosted_zone_arn", js: "hosted_zone_arn", typ: "" },
        { json: "record_set_id", js: "record_set_id", typ: "" },
        { json: "record_type", js: "record_type", typ: "" },
        { json: "target_resource", js: "target_resource", typ: "" },
    ], false),
    "R53Resource": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "record_set_id", js: "record_set_id", typ: "" },
    ], false),
    "Resources": o([
        { json: "dns_target_resource", js: "dns_target_resource", typ: "" },
        { json: "readiness_scopes", js: "readiness_scopes", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
    ], false),
    "TargetResource": o([
        { json: "nlb_resource", js: "nlb_resource", typ: "" },
        { json: "r53_resource", js: "r53_resource", typ: "" },
    ], false),
    "ResourceRouteTable": o([
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "cidr_block", js: "cidr_block", typ: "" },
        { json: "route", js: "route", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "propagating_vgws", js: "propagating_vgws", typ: u(undefined, "") },
        { json: "ipv6_cidr_block", js: "ipv6_cidr_block", typ: u(undefined, "") },
        { json: "destination_prefix_list_id", js: "destination_prefix_list_id", typ: u(undefined, "") },
        { json: "carrier_gateway_id", js: "carrier_gateway_id", typ: u(undefined, "") },
        { json: "core_network_arn", js: "core_network_arn", typ: u(undefined, "") },
        { json: "egress_only_gateway_id", js: "egress_only_gateway_id", typ: u(undefined, "") },
        { json: "gateway_id", js: "gateway_id", typ: u(undefined, "") },
        { json: "local_gateway_id", js: "local_gateway_id", typ: u(undefined, "") },
        { json: "nat_gateway_id", js: "nat_gateway_id", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: u(undefined, "") },
        { json: "vpc_peering_connection_id", js: "vpc_peering_connection_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "RouteTableAssociation": o([
        { json: "route_table_id", js: "route_table_id", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "gateway_id", js: "gateway_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "RumAppMonitor": o([
        { json: "name", js: "name", typ: "" },
        { json: "domain", js: "domain", typ: "" },
        { json: "app_monitor_configuration", js: "app_monitor_configuration", typ: u(undefined, r("AppMonitorConfiguration")) },
        { json: "cw_log_enabled", js: "cw_log_enabled", typ: u(undefined, "") },
        { json: "custom_events", js: "custom_events", typ: u(undefined, r("CustomEvents")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "telemetries", js: "telemetries", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "app_monitor_id", js: "app_monitor_id", typ: u(undefined, "") },
        { json: "cw_log_group", js: "cw_log_group", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AppMonitorConfiguration": o([
        { json: "allow_cookies", js: "allow_cookies", typ: "" },
        { json: "enable_xray", js: "enable_xray", typ: "" },
        { json: "excluded_pages", js: "excluded_pages", typ: "" },
        { json: "favorite_pages", js: "favorite_pages", typ: "" },
        { json: "guest_role_arn", js: "guest_role_arn", typ: "" },
        { json: "identity_pool_id", js: "identity_pool_id", typ: "" },
        { json: "included_pages", js: "included_pages", typ: "" },
        { json: "session_sample_rate", js: "session_sample_rate", typ: "" },
        { json: "telemetries", js: "telemetries", typ: "" },
    ], false),
    "CustomEvents": o([
        { json: "status", js: "status", typ: "" },
    ], false),
    "RumMetricsDestination": o([
        { json: "app_monitor_name", js: "app_monitor_name", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "destination_arn", js: "destination_arn", typ: u(undefined, "") },
        { json: "iam_role_arn", js: "iam_role_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "S3AccessPoint": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "bucket_account_id", js: "bucket_account_id", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "public_access_block_configuration", js: "public_access_block_configuration", typ: u(undefined, "") },
        { json: "vpc_configuration", js: "vpc_configuration", typ: u(undefined, "") },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "endpoints", js: "endpoints", typ: u(undefined, "") },
        { json: "has_public_access_policy", js: "has_public_access_policy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "network_origin", js: "network_origin", typ: u(undefined, "") },
    ], false),
    "ResourceS3Bucket": o([
        { json: "allowed_methods", js: "allowed_methods", typ: "" },
        { json: "allowed_origins", js: "allowed_origins", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "permissions", js: "permissions", typ: "" },
        { json: "enabled", js: "enabled", typ: "" },
        { json: "storage_class", js: "storage_class", typ: "" },
        { json: "days", js: "days", typ: "" },
        { json: "target_bucket", js: "target_bucket", typ: "" },
        { json: "mode", js: "mode", typ: "" },
        { json: "role", js: "role", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "rule", js: "rule", typ: "" },
        { json: "apply_server_side_encryption_by_default", js: "apply_server_side_encryption_by_default", typ: "" },
        { json: "sse_algorithm", js: "sse_algorithm", typ: "" },
        { json: "bucket_prefix", js: "bucket_prefix", typ: u(undefined, "") },
        { json: "object_lock_enabled", js: "object_lock_enabled", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "allowed_headers", js: "allowed_headers", typ: u(undefined, "") },
        { json: "expose_headers", js: "expose_headers", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "expiration", js: "expiration", typ: u(undefined, "") },
        { json: "transition", js: "transition", typ: u(undefined, "") },
        { json: "noncurrent_version_expiration", js: "noncurrent_version_expiration", typ: u(undefined, "") },
        { json: "noncurrent_version_transition", js: "noncurrent_version_transition", typ: u(undefined, "") },
        { json: "date", js: "date", typ: u(undefined, "") },
        { json: "expired_object_delete_marker", js: "expired_object_delete_marker", typ: u(undefined, "") },
        { json: "delete_marker_replication_status", js: "delete_marker_replication_status", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "source_selection_criteria", js: "source_selection_criteria", typ: u(undefined, "") },
        { json: "replica_kms_key_id", js: "replica_kms_key_id", typ: u(undefined, "") },
        { json: "access_control_translation", js: "access_control_translation", typ: u(undefined, "") },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "replication_time", js: "replication_time", typ: u(undefined, "") },
        { json: "metrics", js: "metrics", typ: u(undefined, "") },
        { json: "minutes", js: "minutes", typ: u(undefined, "") },
        { json: "sse_kms_encrypted_objects", js: "sse_kms_encrypted_objects", typ: u(undefined, "") },
        { json: "bucket_key_enabled", js: "bucket_key_enabled", typ: u(undefined, "") },
        { json: "index_document", js: "index_document", typ: u(undefined, "") },
        { json: "error_document", js: "error_document", typ: u(undefined, "") },
        { json: "redirect_all_requests_to", js: "redirect_all_requests_to", typ: u(undefined, "") },
        { json: "routing_rules", js: "routing_rules", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "bucket_domain_name", js: "bucket_domain_name", typ: u(undefined, "") },
        { json: "bucket_regional_domain_name", js: "bucket_regional_domain_name", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
        { json: "region", js: "region", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "S3Bucket": o([
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "cors_rule", js: "cors_rule", typ: u(undefined, r("CorsRule")) },
        { json: "payer", js: "payer", typ: u(undefined, "") },
        { json: "versioning_configuration", js: "versioning_configuration", typ: u(undefined, r("VersioningConfiguration")) },
    ], false),
    "CorsRule": o([
        { json: "allowed_methods", js: "allowed_methods", typ: "" },
        { json: "allowed_origins", js: "allowed_origins", typ: "" },
        { json: "allowed_headers", js: "allowed_headers", typ: u(undefined, "") },
        { json: "expose_headers", js: "expose_headers", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "max_age_seconds", js: "max_age_seconds", typ: u(undefined, "") },
    ], false),
    "VersioningConfiguration": o([
        { json: "status", js: "status", typ: "" },
        { json: "mfa_delete", js: "mfa_delete", typ: u(undefined, "") },
    ], false),
    "S3BucketACL": o([
        { json: "grant", js: "grant", typ: r("TargetGrantClass") },
        { json: "owner", js: "owner", typ: r("Owner") },
        { json: "grantee", js: "grantee", typ: r("Grantee") },
        { json: "permission", js: "permission", typ: "" },
        { json: "acl", js: "acl", typ: u(undefined, "") },
        { json: "access_control_policy", js: "access_control_policy", typ: u(undefined, r("AccessControlPolicy")) },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AccessControlPolicy": o([
        { json: "grant", js: "grant", typ: "" },
        { json: "owner", js: "owner", typ: "" },
    ], false),
    "TargetGrantClass": o([
        { json: "grantee", js: "grantee", typ: "" },
        { json: "permission", js: "permission", typ: "" },
    ], false),
    "Grantee": o([
        { json: "type", js: "type", typ: "" },
        { json: "email_address", js: "email_address", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "uri", js: "uri", typ: u(undefined, "") },
    ], false),
    "Owner": o([
        { json: "id", js: "id", typ: "" },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
    ], false),
    "S3BucketAnalyticsConfiguration": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "data_export", js: "data_export", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "s3_bucket_destination", js: "s3_bucket_destination", typ: "" },
        { json: "bucket_arn", js: "bucket_arn", typ: "" },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "storage_class_analysis", js: "storage_class_analysis", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "output_schema_version", js: "output_schema_version", typ: u(undefined, "") },
        { json: "bucket_account_id", js: "bucket_account_id", typ: u(undefined, "") },
        { json: "format", js: "format", typ: u(undefined, "") },
    ], false),
    "S3BucketIntelligentTieringConfiguration": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "tiering", js: "tiering", typ: "" },
        { json: "access_tier", js: "access_tier", typ: "" },
        { json: "days", js: "days", typ: "" },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "S3BucketInventory": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "included_object_versions", js: "included_object_versions", typ: "" },
        { json: "schedule", js: "schedule", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "frequency", js: "frequency", typ: "" },
        { json: "bucket_arn", js: "bucket_arn", typ: "" },
        { json: "format", js: "format", typ: "" },
        { json: "key_id", js: "key_id", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "optional_fields", js: "optional_fields", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "encryption", js: "encryption", typ: u(undefined, "") },
        { json: "sse_kms", js: "sse_kms", typ: u(undefined, "") },
        { json: "sse_s3", js: "sse_s3", typ: u(undefined, "") },
    ], false),
    "S3BucketLifecycleConfiguration": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "abort_incomplete_multipart_upload", js: "abort_incomplete_multipart_upload", typ: u(undefined, r("AbortIncompleteMultipartUpload")) },
        { json: "expiration", js: "expiration", typ: u(undefined, r("Expiration")) },
        { json: "filter", js: "filter", typ: u(undefined, r("S3BucketLifecycleConfigurationFilter")) },
        { json: "noncurrent_version_expiration", js: "noncurrent_version_expiration", typ: u(undefined, r("NoncurrentVersionExpiration")) },
        { json: "noncurrent_version_transition", js: "noncurrent_version_transition", typ: u(undefined, r("NoncurrentVersionTransition")) },
        { json: "transition", js: "transition", typ: u(undefined, r("Transition")) },
        { json: "days_after_initiation", js: "days_after_initiation", typ: u(undefined, "") },
        { json: "object_size_greater_than", js: "object_size_greater_than", typ: u(undefined, "") },
        { json: "object_size_less_than", js: "object_size_less_than", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "tag", js: "tag", typ: u(undefined, r("EnvironmentClass")) },
        { json: "storage_class", js: "storage_class", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "AbortIncompleteMultipartUpload": o([
        { json: "days_after_initiation", js: "days_after_initiation", typ: "" },
    ], false),
    "Expiration": o([
        { json: "date", js: "date", typ: "" },
        { json: "days", js: "days", typ: "" },
        { json: "expired_object_delete_marker", js: "expired_object_delete_marker", typ: "" },
    ], false),
    "S3BucketLifecycleConfigurationFilter": o([
        { json: "object_size_greater_than", js: "object_size_greater_than", typ: "" },
        { json: "object_size_less_than", js: "object_size_less_than", typ: "" },
        { json: "prefix", js: "prefix", typ: "" },
        { json: "tag", js: "tag", typ: "" },
    ], false),
    "NoncurrentVersionExpiration": o([
        { json: "newer_noncurrent_versions", js: "newer_noncurrent_versions", typ: "" },
        { json: "noncurrent_days", js: "noncurrent_days", typ: "" },
    ], false),
    "NoncurrentVersionTransition": o([
        { json: "newer_noncurrent_versions", js: "newer_noncurrent_versions", typ: "" },
        { json: "noncurrent_days", js: "noncurrent_days", typ: "" },
        { json: "storage_class", js: "storage_class", typ: "" },
    ], false),
    "Transition": o([
        { json: "date", js: "date", typ: "" },
        { json: "days", js: "days", typ: "" },
        { json: "storage_class", js: "storage_class", typ: "" },
    ], false),
    "S3BucketLogging": o([
        { json: "target_bucket", js: "target_bucket", typ: "" },
        { json: "target_prefix", js: "target_prefix", typ: "" },
        { json: "grantee", js: "grantee", typ: r("Grantee") },
        { json: "permission", js: "permission", typ: "" },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "target_grant", js: "target_grant", typ: u(undefined, r("TargetGrantClass")) },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "S3BucketMetric": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
    ], false),
    "S3BucketNotification": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "events", js: "events", typ: "" },
        { json: "lambda_function_arn", js: "lambda_function_arn", typ: "" },
        { json: "queue_arn", js: "queue_arn", typ: "" },
        { json: "topic_arn", js: "topic_arn", typ: "" },
        { json: "eventbridge", js: "eventbridge", typ: u(undefined, "") },
        { json: "lambda_function", js: "lambda_function", typ: u(undefined, "") },
        { json: "queue", js: "queue", typ: u(undefined, "") },
        { json: "topic", js: "topic", typ: u(undefined, "") },
        { json: "filter_prefix", js: "filter_prefix", typ: u(undefined, "") },
        { json: "filter_suffix", js: "filter_suffix", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceS3BucketObject": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "acl", js: "acl", typ: u(undefined, "") },
        { json: "bucket_key_enabled", js: "bucket_key_enabled", typ: u(undefined, "") },
        { json: "cache_control", js: "cache_control", typ: u(undefined, "") },
        { json: "content_base64", js: "content_base64", typ: u(undefined, "") },
        { json: "content_disposition", js: "content_disposition", typ: u(undefined, "") },
        { json: "content_encoding", js: "content_encoding", typ: u(undefined, "") },
        { json: "content_language", js: "content_language", typ: u(undefined, "") },
        { json: "content_type", js: "content_type", typ: u(undefined, "") },
        { json: "content", js: "content", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "metadata", js: "metadata", typ: u(undefined, "") },
        { json: "object_lock_legal_hold_status", js: "object_lock_legal_hold_status", typ: u(undefined, "") },
        { json: "object_lock_mode", js: "object_lock_mode", typ: u(undefined, "") },
        { json: "object_lock_retain_until_date", js: "object_lock_retain_until_date", typ: u(undefined, "") },
        { json: "server_side_encryption", js: "server_side_encryption", typ: u(undefined, "") },
        { json: "source_hash", js: "source_hash", typ: u(undefined, "") },
        { json: "source", js: "source", typ: u(undefined, "") },
        { json: "storage_class", js: "storage_class", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "version_id", js: "version_id", typ: u(undefined, "") },
        { json: "checksum_algorithm", js: "checksum_algorithm", typ: u(undefined, "") },
        { json: "checksum_crc32", js: "checksum_crc32", typ: u(undefined, "") },
        { json: "checksum_crc32c", js: "checksum_crc32c", typ: u(undefined, "") },
        { json: "checksum_sha1", js: "checksum_sha1", typ: u(undefined, "") },
        { json: "checksum_sha256", js: "checksum_sha256", typ: u(undefined, "") },
    ], false),
    "S3BucketObjectLockConfiguration": o([
        { json: "default_retention", js: "default_retention", typ: r("DefaultRetention") },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "object_lock_enabled", js: "object_lock_enabled", typ: u(undefined, "") },
        { json: "rule", js: "rule", typ: u(undefined, r("S3BucketObjectLockConfigurationRule")) },
        { json: "token", js: "token", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "DefaultRetention": o([
        { json: "mode", js: "mode", typ: "" },
        { json: "days", js: "days", typ: u(undefined, "") },
        { json: "years", js: "years", typ: u(undefined, "") },
    ], false),
    "S3BucketObjectLockConfigurationRule": o([
        { json: "default_retention", js: "default_retention", typ: "" },
    ], false),
    "S3BucketOwnershipControls": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "rule", js: "rule", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "S3": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "S3BucketReplicationConfiguration": o([
        { json: "role", js: "role", typ: "" },
        { json: "rule", js: "rule", typ: r("S3BucketReplicationConfigurationRule") },
        { json: "destination", js: "destination", typ: r("Destination") },
        { json: "owner", js: "owner", typ: "" },
        { json: "replica_kms_key_id", js: "replica_kms_key_id", typ: "" },
        { json: "minutes", js: "minutes", typ: "" },
        { json: "time", js: "time", typ: r("EventThreshold") },
        { json: "value", js: "value", typ: "" },
        { json: "delete_marker_replication", js: "delete_marker_replication", typ: u(undefined, r("CustomEvents")) },
        { json: "existing_object_replication", js: "existing_object_replication", typ: u(undefined, r("CustomEvents")) },
        { json: "filter", js: "filter", typ: u(undefined, r("S3BucketReplicationConfigurationFilter")) },
        { json: "source_selection_criteria", js: "source_selection_criteria", typ: u(undefined, r("SourceSelectionCriteria")) },
        { json: "access_control_translation", js: "access_control_translation", typ: u(undefined, r("AccessControlTranslation")) },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, r("S3BucketReplicationConfigurationEncryptionConfiguration")) },
        { json: "metrics", js: "metrics", typ: u(undefined, r("Metrics")) },
        { json: "replication_time", js: "replication_time", typ: u(undefined, r("ReplicationTime")) },
        { json: "storage_class", js: "storage_class", typ: u(undefined, "") },
        { json: "event_threshold", js: "event_threshold", typ: u(undefined, r("EventThreshold")) },
        { json: "and", js: "and", typ: u(undefined, r("And")) },
        { json: "tag", js: "tag", typ: u(undefined, r("EnvironmentClass")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "replica_modifications", js: "replica_modifications", typ: u(undefined, r("CustomEvents")) },
        { json: "sse_kms_encrypted_objects", js: "sse_kms_encrypted_objects", typ: u(undefined, r("CustomEvents")) },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "AccessControlTranslation": o([
        { json: "owner", js: "owner", typ: "" },
    ], false),
    "And": o([
        { json: "prefix", js: "prefix", typ: "" },
        { json: "tags", js: "tags", typ: "" },
    ], false),
    "Destination": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "access_control_translation", js: "access_control_translation", typ: u(undefined, "") },
        { json: "account", js: "account", typ: u(undefined, "") },
        { json: "encryption_configuration", js: "encryption_configuration", typ: u(undefined, "") },
        { json: "metrics", js: "metrics", typ: u(undefined, "") },
        { json: "replication_time", js: "replication_time", typ: u(undefined, "") },
        { json: "storage_class", js: "storage_class", typ: u(undefined, "") },
    ], false),
    "S3BucketReplicationConfigurationEncryptionConfiguration": o([
        { json: "replica_kms_key_id", js: "replica_kms_key_id", typ: "" },
    ], false),
    "EventThreshold": o([
        { json: "minutes", js: "minutes", typ: "" },
    ], false),
    "S3BucketReplicationConfigurationFilter": o([
        { json: "and", js: "and", typ: "" },
        { json: "prefix", js: "prefix", typ: "" },
        { json: "tag", js: "tag", typ: "" },
    ], false),
    "Metrics": o([
        { json: "event_threshold", js: "event_threshold", typ: "" },
        { json: "status", js: "status", typ: "" },
    ], false),
    "ReplicationTime": o([
        { json: "status", js: "status", typ: "" },
        { json: "time", js: "time", typ: "" },
    ], false),
    "S3BucketReplicationConfigurationRule": o([
        { json: "destination", js: "destination", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "delete_marker_replication", js: "delete_marker_replication", typ: u(undefined, "") },
        { json: "existing_object_replication", js: "existing_object_replication", typ: u(undefined, "") },
        { json: "filter", js: "filter", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "source_selection_criteria", js: "source_selection_criteria", typ: u(undefined, "") },
    ], false),
    "SourceSelectionCriteria": o([
        { json: "replica_modifications", js: "replica_modifications", typ: "" },
        { json: "sse_kms_encrypted_objects", js: "sse_kms_encrypted_objects", typ: "" },
    ], false),
    "S3BucketServerSideEncryptionConfiguration": o([
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "rule", js: "rule", typ: u(undefined, r("S3BucketServerSideEncryptionConfigurationRule")) },
        { json: "apply_server_side_encryption_by_default", js: "apply_server_side_encryption_by_default", typ: u(undefined, r("ApplyServerSideEncryptionByDefault")) },
        { json: "bucket_key_enabled", js: "bucket_key_enabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ApplyServerSideEncryptionByDefault": o([
        { json: "sse_algorithm", js: "sse_algorithm", typ: "" },
        { json: "kms_master_key_id", js: "kms_master_key_id", typ: "" },
    ], false),
    "S3BucketServerSideEncryptionConfigurationRule": o([
        { json: "apply_server_side_encryption_by_default", js: "apply_server_side_encryption_by_default", typ: "" },
        { json: "bucket_key_enabled", js: "bucket_key_enabled", typ: "" },
    ], false),
    "S3BucketWebsiteConfiguration": o([
        { json: "key", js: "key", typ: "" },
        { json: "suffix", js: "suffix", typ: "" },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "error_document", js: "error_document", typ: u(undefined, r("GrafanaWorkspaceAPIKey")) },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "index_document", js: "index_document", typ: u(undefined, r("IndexDocument")) },
        { json: "redirect_all_requests_to", js: "redirect_all_requests_to", typ: u(undefined, r("RedirectAllRequestsTo")) },
        { json: "routing_rule", js: "routing_rule", typ: u(undefined, r("RoutingRule")) },
        { json: "routing_rules", js: "routing_rules", typ: u(undefined, "") },
        { json: "condition", js: "condition", typ: u(undefined, r("S3BucketWebsiteConfigurationCondition")) },
        { json: "redirect", js: "redirect", typ: u(undefined, r("Redirect")) },
        { json: "key_prefix_equals", js: "key_prefix_equals", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "website_domain", js: "website_domain", typ: u(undefined, "") },
        { json: "website_endpoint", js: "website_endpoint", typ: u(undefined, "") },
    ], false),
    "S3BucketWebsiteConfigurationCondition": o([
        { json: "http_error_code_returned_equals", js: "http_error_code_returned_equals", typ: "" },
        { json: "key_prefix_equals", js: "key_prefix_equals", typ: "" },
    ], false),
    "IndexDocument": o([
        { json: "suffix", js: "suffix", typ: "" },
    ], false),
    "Redirect": o([
        { json: "host_name", js: "host_name", typ: "" },
        { json: "http_redirect_code", js: "http_redirect_code", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "replace_key_prefix_with", js: "replace_key_prefix_with", typ: "" },
        { json: "replace_key_with", js: "replace_key_with", typ: "" },
    ], false),
    "RedirectAllRequestsTo": o([
        { json: "host_name", js: "host_name", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
    ], false),
    "RoutingRule": o([
        { json: "condition", js: "condition", typ: "" },
        { json: "redirect", js: "redirect", typ: "" },
    ], false),
    "S3ObjectCopy": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "acl", js: "acl", typ: u(undefined, "") },
        { json: "cache_control", js: "cache_control", typ: u(undefined, "") },
        { json: "checksum_algorithm", js: "checksum_algorithm", typ: u(undefined, "") },
        { json: "content_disposition", js: "content_disposition", typ: u(undefined, "") },
        { json: "content_encoding", js: "content_encoding", typ: u(undefined, "") },
        { json: "content_language", js: "content_language", typ: u(undefined, "") },
        { json: "content_type", js: "content_type", typ: u(undefined, "") },
        { json: "copy_if_match", js: "copy_if_match", typ: u(undefined, "") },
        { json: "copy_if_modified_since", js: "copy_if_modified_since", typ: u(undefined, "") },
        { json: "copy_if_none_match", js: "copy_if_none_match", typ: u(undefined, "") },
        { json: "copy_if_unmodified_since", js: "copy_if_unmodified_since", typ: u(undefined, "") },
        { json: "customer_algorithm", js: "customer_algorithm", typ: u(undefined, "") },
        { json: "customer_key", js: "customer_key", typ: u(undefined, "") },
        { json: "customer_key_md5", js: "customer_key_md5", typ: u(undefined, "") },
        { json: "expected_bucket_owner", js: "expected_bucket_owner", typ: u(undefined, "") },
        { json: "expected_source_bucket_owner", js: "expected_source_bucket_owner", typ: u(undefined, "") },
        { json: "expires", js: "expires", typ: u(undefined, "") },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "grant", js: "grant", typ: u(undefined, r("S3ObjectCopyGrant")) },
        { json: "kms_encryption_context", js: "kms_encryption_context", typ: u(undefined, "") },
        { json: "metadata", js: "metadata", typ: u(undefined, "") },
        { json: "metadata_directive", js: "metadata_directive", typ: u(undefined, "") },
        { json: "object_lock_legal_hold_status", js: "object_lock_legal_hold_status", typ: u(undefined, "") },
        { json: "object_lock_mode", js: "object_lock_mode", typ: u(undefined, "") },
        { json: "object_lock_retain_until_date", js: "object_lock_retain_until_date", typ: u(undefined, "") },
        { json: "request_payer", js: "request_payer", typ: u(undefined, "") },
        { json: "server_side_encryption", js: "server_side_encryption", typ: u(undefined, "") },
        { json: "source_customer_algorithm", js: "source_customer_algorithm", typ: u(undefined, "") },
        { json: "source_customer_key", js: "source_customer_key", typ: u(undefined, "") },
        { json: "source_customer_key_md5", js: "source_customer_key_md5", typ: u(undefined, "") },
        { json: "storage_class", js: "storage_class", typ: u(undefined, "") },
        { json: "tagging_directive", js: "tagging_directive", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "website_redirect", js: "website_redirect", typ: u(undefined, "") },
        { json: "checksum_crc32", js: "checksum_crc32", typ: u(undefined, "") },
        { json: "checksum_crc32c", js: "checksum_crc32c", typ: u(undefined, "") },
        { json: "checksum_sha1", js: "checksum_sha1", typ: u(undefined, "") },
        { json: "checksum_sha256", js: "checksum_sha256", typ: u(undefined, "") },
        { json: "etag", js: "etag", typ: u(undefined, "") },
        { json: "expiration", js: "expiration", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_modified", js: "last_modified", typ: u(undefined, "") },
        { json: "request_charged", js: "request_charged", typ: u(undefined, "") },
        { json: "source_version_id", js: "source_version_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "version_id", js: "version_id", typ: u(undefined, "") },
    ], false),
    "S3ObjectCopyGrant": o([
        { json: "permissions", js: "permissions", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "email", js: "email", typ: "" },
        { json: "id", js: "id", typ: "" },
    ], false),
    "S3ControlAccessPointPolicy": o([
        { json: "access_point_arn", js: "access_point_arn", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "has_public_access_policy", js: "has_public_access_policy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "S3ControlBucket": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "outpost_id", js: "outpost_id", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "public_access_block_enabled", js: "public_access_block_enabled", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "S3ControlBucketPolicy": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceS3ControlMultiRegionAccessPoint": o([
        { json: "details", js: "details", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "domain_name", js: "domain_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "S3ControlMultiRegionAccessPointPolicy": o([
        { json: "details", js: "details", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "established", js: "established", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "proposed", js: "proposed", typ: u(undefined, "") },
    ], false),
    "S3ControlObjectLambdaAccessPoint": o([
        { json: "configuration", js: "configuration", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "supporting_access_point", js: "supporting_access_point", typ: "" },
        { json: "transformation_configuration", js: "transformation_configuration", typ: "" },
        { json: "actions", js: "actions", typ: "" },
        { json: "content_transformation", js: "content_transformation", typ: "" },
        { json: "aws_lambda", js: "aws_lambda", typ: "" },
        { json: "function_arn", js: "function_arn", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "allowed_features", js: "allowed_features", typ: u(undefined, "") },
        { json: "cloud_watch_metrics_enabled", js: "cloud_watch_metrics_enabled", typ: u(undefined, "") },
        { json: "function_payload", js: "function_payload", typ: u(undefined, "") },
        { json: "alias", js: "alias", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "S3ControlObjectLambdaAccessPointPolicy": o([
        { json: "name", js: "name", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "has_public_access_policy", js: "has_public_access_policy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "S3ControlStorageLensConfiguration": o([
        { json: "config_id", js: "config_id", typ: "" },
        { json: "storage_lens_configuration", js: "storage_lens_configuration", typ: "" },
        { json: "account_id", js: "account_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "S3OutpostsEndpoint": o([
        { json: "outpost_id", js: "outpost_id", typ: "" },
        { json: "security_group_id", js: "security_group_id", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "access_type", js: "access_type", typ: u(undefined, "") },
        { json: "customer_owned_ipv4_pool", js: "customer_owned_ipv4_pool", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SagemakerApp": o([
        { json: "app_name", js: "app_name", typ: "" },
        { json: "app_type", js: "app_type", typ: "" },
        { json: "domain_id", js: "domain_id", typ: "" },
        { json: "user_profile_name", js: "user_profile_name", typ: u(undefined, "") },
        { json: "resource_spec", js: "resource_spec", typ: u(undefined, "") },
        { json: "space_name", js: "space_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "lifecycle_config_arn", js: "lifecycle_config_arn", typ: u(undefined, "") },
        { json: "sagemaker_image_arn", js: "sagemaker_image_arn", typ: u(undefined, "") },
        { json: "sagemaker_image_version_arn", js: "sagemaker_image_version_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerAppImageConfig": o([
        { json: "app_image_config_name", js: "app_image_config_name", typ: "" },
        { json: "kernel_spec", js: "kernel_spec", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "kernel_gateway_image_config", js: "kernel_gateway_image_config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "file_system_config", js: "file_system_config", typ: u(undefined, "") },
        { json: "default_gid", js: "default_gid", typ: u(undefined, "") },
        { json: "default_uid", js: "default_uid", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerCodeRepository": o([
        { json: "code_repository_name", js: "code_repository_name", typ: "" },
        { json: "git_config", js: "git_config", typ: "" },
        { json: "repository_url", js: "repository_url", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "branch", js: "branch", typ: u(undefined, "") },
        { json: "secret_arn", js: "secret_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerDataQualityJobDefinition": o([
        { json: "data_quality_app_specification", js: "data_quality_app_specification", typ: r("DataQualityAppSpecification") },
        { json: "data_quality_job_input", js: "data_quality_job_input", typ: r("DataQualityJobInput") },
        { json: "data_quality_job_output_config", js: "data_quality_job_output_config", typ: r("DataQualityJobOutputConfig") },
        { json: "job_resources", js: "job_resources", typ: r("JobResources") },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "s3_uri", js: "s3_uri", typ: "" },
        { json: "volume_size_in_gb", js: "volume_size_in_gb", typ: "" },
        { json: "subnets", js: "subnets", typ: "" },
        { json: "data_quality_baseline_config", js: "data_quality_baseline_config", typ: u(undefined, r("DataQualityBaselineConfig")) },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "network_config", js: "network_config", typ: u(undefined, r("NetworkConfig")) },
        { json: "stopping_condition", js: "stopping_condition", typ: u(undefined, r("StoppingCondition")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "record_preprocessor_source_uri", js: "record_preprocessor_source_uri", typ: u(undefined, "") },
        { json: "s3_input_mode", js: "s3_input_mode", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DataQualityAppSpecification": o([
        { json: "image_uri", js: "image_uri", typ: "" },
        { json: "environment", js: "environment", typ: u(undefined, "") },
        { json: "post_analytics_processor_source_uri", js: "post_analytics_processor_source_uri", typ: u(undefined, "") },
        { json: "record_preprocessor_source_uri", js: "record_preprocessor_source_uri", typ: u(undefined, "") },
    ], false),
    "DataQualityBaselineConfig": o([
        { json: "constraints_resource", js: "constraints_resource", typ: "" },
        { json: "statistics_resource", js: "statistics_resource", typ: "" },
        { json: "s3_uri", js: "s3_uri", typ: "" },
    ], false),
    "DataQualityJobInput": o([
        { json: "data_captured_destination_s3_uri", js: "data_captured_destination_s3_uri", typ: "" },
        { json: "dataset_format", js: "dataset_format", typ: "" },
        { json: "endpoint_name", js: "endpoint_name", typ: "" },
        { json: "batch_transform_input", js: "batch_transform_input", typ: u(undefined, "") },
        { json: "endpoint_input", js: "endpoint_input", typ: u(undefined, "") },
        { json: "local_path", js: "local_path", typ: u(undefined, "") },
        { json: "s3_data_distribution_type", js: "s3_data_distribution_type", typ: u(undefined, "") },
        { json: "s3_input_mode", js: "s3_input_mode", typ: u(undefined, "") },
        { json: "csv", js: "csv", typ: u(undefined, "") },
        { json: "json", js: "json", typ: u(undefined, "") },
        { json: "header", js: "header", typ: u(undefined, "") },
        { json: "line", js: "line", typ: u(undefined, "") },
    ], false),
    "DataQualityJobOutputConfig": o([
        { json: "monitoring_outputs", js: "monitoring_outputs", typ: "" },
        { json: "s3_output", js: "s3_output", typ: "" },
        { json: "s3_uri", js: "s3_uri", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "local_path", js: "local_path", typ: u(undefined, "") },
        { json: "s3_upload_mode", js: "s3_upload_mode", typ: u(undefined, "") },
    ], false),
    "JobResources": o([
        { json: "cluster_config", js: "cluster_config", typ: "" },
        { json: "instance_count", js: "instance_count", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "volume_size_in_gb", js: "volume_size_in_gb", typ: "" },
        { json: "volume_kms_key_id", js: "volume_kms_key_id", typ: u(undefined, "") },
    ], false),
    "NetworkConfig": o([
        { json: "enable_inter_container_traffic_encryption", js: "enable_inter_container_traffic_encryption", typ: "" },
        { json: "enable_network_isolation", js: "enable_network_isolation", typ: "" },
        { json: "vpc_config", js: "vpc_config", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "subnets", js: "subnets", typ: "" },
    ], false),
    "StoppingCondition": o([
        { json: "max_runtime_in_seconds", js: "max_runtime_in_seconds", typ: "" },
    ], false),
    "SagemakerDevice": o([
        { json: "device_fleet_name", js: "device_fleet_name", typ: "" },
        { json: "device", js: "device", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "device_name", js: "device_name", typ: u(undefined, "") },
        { json: "iot_thing_name", js: "iot_thing_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "SagemakerDeviceFleet": o([
        { json: "device_fleet_name", js: "device_fleet_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "output_config", js: "output_config", typ: "" },
        { json: "s3_output_location", js: "s3_output_location", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "enable_iot_role_alias", js: "enable_iot_role_alias", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerDomain": o([
        { json: "auth_mode", js: "auth_mode", typ: "" },
        { json: "default_space_settings", js: "default_space_settings", typ: r("DefaultSpaceSettings") },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "execution_role", js: "execution_role", typ: "" },
        { json: "app_image_config_name", js: "app_image_config_name", typ: "" },
        { json: "image_name", js: "image_name", typ: "" },
        { json: "app_network_access_type", js: "app_network_access_type", typ: u(undefined, "") },
        { json: "app_security_group_management", js: "app_security_group_management", typ: u(undefined, "") },
        { json: "domain_settings", js: "domain_settings", typ: u(undefined, r("DomainSettings")) },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "retention_policy", js: "retention_policy", typ: u(undefined, r("RetentionPolicy")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "canvas_app_settings", js: "canvas_app_settings", typ: u(undefined, "") },
        { json: "r_session_app_settings", js: "r_session_app_settings", typ: u(undefined, "") },
        { json: "r_studio_server_pro_app_settings", js: "r_studio_server_pro_app_settings", typ: u(undefined, "") },
        { json: "sharing_settings", js: "sharing_settings", typ: u(undefined, "") },
        { json: "tensor_board_app_settings", js: "tensor_board_app_settings", typ: u(undefined, "") },
        { json: "access_status", js: "access_status", typ: u(undefined, "") },
        { json: "user_group", js: "user_group", typ: u(undefined, "") },
        { json: "model_register_settings", js: "model_register_settings", typ: u(undefined, "") },
        { json: "time_series_forecasting_settings", js: "time_series_forecasting_settings", typ: u(undefined, "") },
        { json: "workspace_settings", js: "workspace_settings", typ: u(undefined, "") },
        { json: "cross_account_model_register_role_arn", js: "cross_account_model_register_role_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "amazon_forecast_role_arn", js: "amazon_forecast_role_arn", typ: u(undefined, "") },
        { json: "s3_artifact_path", js: "s3_artifact_path", typ: u(undefined, "") },
        { json: "s3_kms_key_id", js: "s3_kms_key_id", typ: u(undefined, "") },
        { json: "notebook_output_option", js: "notebook_output_option", typ: u(undefined, "") },
        { json: "s3_output_path", js: "s3_output_path", typ: u(undefined, "") },
        { json: "custom_image", js: "custom_image", typ: u(undefined, "") },
        { json: "lifecycle_config_arns", js: "lifecycle_config_arns", typ: u(undefined, "") },
        { json: "code_repository", js: "code_repository", typ: u(undefined, "") },
        { json: "repository_url", js: "repository_url", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "lifecycle_config_arn", js: "lifecycle_config_arn", typ: u(undefined, "") },
        { json: "sagemaker_image_arn", js: "sagemaker_image_arn", typ: u(undefined, "") },
        { json: "sagemaker_image_version_arn", js: "sagemaker_image_version_arn", typ: u(undefined, "") },
        { json: "image_version_number", js: "image_version_number", typ: u(undefined, "") },
        { json: "r_studio_package_manager_url", js: "r_studio_package_manager_url", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "single_sign_on_managed_application_instance_id", js: "single_sign_on_managed_application_instance_id", typ: u(undefined, "") },
        { json: "security_group_id_for_domain_boundary", js: "security_group_id_for_domain_boundary", typ: u(undefined, "") },
        { json: "home_efs_file_system_id", js: "home_efs_file_system_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "DefaultSpaceSettings": o([
        { json: "execution_role", js: "execution_role", typ: "" },
        { json: "jupyter_server_app_settings", js: "jupyter_server_app_settings", typ: u(undefined, "") },
        { json: "kernel_gateway_app_settings", js: "kernel_gateway_app_settings", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
    ], false),
    "DomainSettings": o([
        { json: "execution_role_identity_config", js: "execution_role_identity_config", typ: "" },
        { json: "r_studio_server_pro_domain_settings", js: "r_studio_server_pro_domain_settings", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "default_resource_spec", js: "default_resource_spec", typ: "" },
        { json: "domain_execution_role_arn", js: "domain_execution_role_arn", typ: "" },
        { json: "r_studio_connect_url", js: "r_studio_connect_url", typ: "" },
        { json: "r_studio_package_manager_url", js: "r_studio_package_manager_url", typ: "" },
    ], false),
    "RetentionPolicy": o([
        { json: "home_efs_file_system", js: "home_efs_file_system", typ: "" },
    ], false),
    "SagemakerEndpoint": o([
        { json: "endpoint_config_name", js: "endpoint_config_name", typ: "" },
        { json: "traffic_routing_configuration", js: "traffic_routing_configuration", typ: "" },
        { json: "maximum_batch_size", js: "maximum_batch_size", typ: "" },
        { json: "wait_interval_in_seconds", js: "wait_interval_in_seconds", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "alarms", js: "alarms", typ: "" },
        { json: "alarm_name", js: "alarm_name", typ: "" },
        { json: "deployment_config", js: "deployment_config", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "blue_green_update_policy", js: "blue_green_update_policy", typ: u(undefined, "") },
        { json: "auto_rollback_configuration", js: "auto_rollback_configuration", typ: u(undefined, "") },
        { json: "rolling_update_policy", js: "rolling_update_policy", typ: u(undefined, "") },
        { json: "maximum_execution_timeout_in_seconds", js: "maximum_execution_timeout_in_seconds", typ: u(undefined, "") },
        { json: "termination_wait_in_seconds", js: "termination_wait_in_seconds", typ: u(undefined, "") },
        { json: "rollback_maximum_batch_size", js: "rollback_maximum_batch_size", typ: u(undefined, "") },
        { json: "canary_size", js: "canary_size", typ: u(undefined, "") },
        { json: "linear_step_size", js: "linear_step_size", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerEndpointConfiguration": o([
        { json: "production_variants", js: "production_variants", typ: r("ProductionVariants") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "data_capture_config", js: "data_capture_config", typ: u(undefined, r("DataCaptureConfig")) },
        { json: "async_inference_config", js: "async_inference_config", typ: u(undefined, r("AsyncInferenceConfig")) },
        { json: "shadow_production_variants", js: "shadow_production_variants", typ: u(undefined, "") },
        { json: "provisioned_concurrency", js: "provisioned_concurrency", typ: u(undefined, "") },
        { json: "json_content_types", js: "json_content_types", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "AsyncInferenceConfig": o([
        { json: "output_config", js: "output_config", typ: "" },
        { json: "client_config", js: "client_config", typ: "" },
        { json: "max_concurrent_invocations_per_instance", js: "max_concurrent_invocations_per_instance", typ: "" },
        { json: "s3_output_path", js: "s3_output_path", typ: "" },
        { json: "s3_failure_path", js: "s3_failure_path", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "notification_config", js: "notification_config", typ: "" },
        { json: "include_inference_response_in", js: "include_inference_response_in", typ: "" },
        { json: "error_topic", js: "error_topic", typ: "" },
        { json: "success_topic", js: "success_topic", typ: "" },
    ], false),
    "DataCaptureConfig": o([
        { json: "initial_sampling_percentage", js: "initial_sampling_percentage", typ: "" },
        { json: "destination_s3_uri", js: "destination_s3_uri", typ: "" },
        { json: "capture_options", js: "capture_options", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "enable_capture", js: "enable_capture", typ: "" },
        { json: "capture_content_type_header", js: "capture_content_type_header", typ: "" },
        { json: "capture_mode", js: "capture_mode", typ: "" },
        { json: "csv_content_types", js: "csv_content_types", typ: "" },
        { json: "json_content_types", js: "json_content_types", typ: "" },
    ], false),
    "ProductionVariants": o([
        { json: "model_name", js: "model_name", typ: "" },
        { json: "destination_s3_uri", js: "destination_s3_uri", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: "" },
        { json: "max_concurrency", js: "max_concurrency", typ: "" },
        { json: "memory_size_in_mb", js: "memory_size_in_mb", typ: "" },
        { json: "accelerator_type", js: "accelerator_type", typ: u(undefined, "") },
        { json: "container_startup_health_check_timeout_in_seconds", js: "container_startup_health_check_timeout_in_seconds", typ: u(undefined, "") },
        { json: "core_dump_config", js: "core_dump_config", typ: u(undefined, "") },
        { json: "enable_ssm_access", js: "enable_ssm_access", typ: u(undefined, "") },
        { json: "initial_instance_count", js: "initial_instance_count", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "initial_variant_weight", js: "initial_variant_weight", typ: u(undefined, "") },
        { json: "model_data_download_timeout_in_seconds", js: "model_data_download_timeout_in_seconds", typ: u(undefined, "") },
        { json: "serverless_config", js: "serverless_config", typ: u(undefined, "") },
        { json: "variant_name", js: "variant_name", typ: u(undefined, "") },
        { json: "volume_size_in_gb", js: "volume_size_in_gb", typ: u(undefined, "") },
        { json: "provisioned_concurrency", js: "provisioned_concurrency", typ: u(undefined, "") },
    ], false),
    "SagemakerFeatureGroup": o([
        { json: "feature_group_name", js: "feature_group_name", typ: "" },
        { json: "record_identifier_feature_name", js: "record_identifier_feature_name", typ: "" },
        { json: "event_time_feature_name", js: "event_time_feature_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "feature_name", js: "feature_name", typ: "" },
        { json: "feature_type", js: "feature_type", typ: "" },
        { json: "s3_storage_config", js: "s3_storage_config", typ: "" },
        { json: "security_config", js: "security_config", typ: "" },
        { json: "s3_uri", js: "s3_uri", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "feature_definition", js: "feature_definition", typ: u(undefined, "") },
        { json: "offline_store_config", js: "offline_store_config", typ: u(undefined, "") },
        { json: "online_store_config", js: "online_store_config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "enable_online_store", js: "enable_online_store", typ: u(undefined, "") },
        { json: "data_catalog_config", js: "data_catalog_config", typ: u(undefined, "") },
        { json: "table_format", js: "table_format", typ: u(undefined, "") },
        { json: "disable_glue_table_creation", js: "disable_glue_table_creation", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "catalog", js: "catalog", typ: u(undefined, "") },
        { json: "database", js: "database", typ: u(undefined, "") },
        { json: "table_name", js: "table_name", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerFlowDefinition": o([
        { json: "flow_definition_name", js: "flow_definition_name", typ: "" },
        { json: "human_loop_config", js: "human_loop_config", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "output_config", js: "output_config", typ: "" },
        { json: "human_task_ui_arn", js: "human_task_ui_arn", typ: "" },
        { json: "task_availability_lifetime_in_seconds", js: "task_availability_lifetime_in_seconds", typ: "" },
        { json: "task_count", js: "task_count", typ: "" },
        { json: "task_description", js: "task_description", typ: "" },
        { json: "task_title", js: "task_title", typ: "" },
        { json: "workteam_arn", js: "workteam_arn", typ: "" },
        { json: "human_loop_activation_conditions_config", js: "human_loop_activation_conditions_config", typ: "" },
        { json: "human_loop_activation_conditions", js: "human_loop_activation_conditions", typ: "" },
        { json: "aws_managed_human_loop_request_source", js: "aws_managed_human_loop_request_source", typ: "" },
        { json: "s3_output_path", js: "s3_output_path", typ: "" },
        { json: "human_loop_activation_config", js: "human_loop_activation_config", typ: u(undefined, "") },
        { json: "human_loop_request_source", js: "human_loop_request_source", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "public_workforce_task_price", js: "public_workforce_task_price", typ: u(undefined, "") },
        { json: "task_keywords", js: "task_keywords", typ: u(undefined, "") },
        { json: "task_time_limit_in_seconds", js: "task_time_limit_in_seconds", typ: u(undefined, "") },
        { json: "amount_in_usd", js: "amount_in_usd", typ: u(undefined, "") },
        { json: "cents", js: "cents", typ: u(undefined, "") },
        { json: "dollars", js: "dollars", typ: u(undefined, "") },
        { json: "tenth_fractions_of_a_cent", js: "tenth_fractions_of_a_cent", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerHumanTaskUI": o([
        { json: "human_task_ui_name", js: "human_task_ui_name", typ: "" },
        { json: "ui_template", js: "ui_template", typ: "" },
        { json: "content", js: "content", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "content_sha256", js: "content_sha256", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
    ], false),
    "SagemakerImage": o([
        { json: "image_name", js: "image_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerImageVersion": o([
        { json: "image_name", js: "image_name", typ: "" },
        { json: "base_image", js: "base_image", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "container_image", js: "container_image", typ: u(undefined, "") },
    ], false),
    "SagemakerModel": o([
        { json: "execution_role_arn", js: "execution_role_arn", typ: "" },
        { json: "repository_access_mode", js: "repository_access_mode", typ: "" },
        { json: "repository_credentials_provider_arn", js: "repository_credentials_provider_arn", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "primary_container", js: "primary_container", typ: u(undefined, "") },
        { json: "inference_execution_config", js: "inference_execution_config", typ: u(undefined, "") },
        { json: "container", js: "container", typ: u(undefined, "") },
        { json: "enable_network_isolation", js: "enable_network_isolation", typ: u(undefined, "") },
        { json: "vpc_config", js: "vpc_config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "image", js: "image", typ: u(undefined, "") },
        { json: "mode", js: "mode", typ: u(undefined, "") },
        { json: "model_data_url", js: "model_data_url", typ: u(undefined, "") },
        { json: "model_package_name", js: "model_package_name", typ: u(undefined, "") },
        { json: "container_hostname", js: "container_hostname", typ: u(undefined, "") },
        { json: "environment", js: "environment", typ: u(undefined, "") },
        { json: "image_config", js: "image_config", typ: u(undefined, "") },
        { json: "repository_auth_config", js: "repository_auth_config", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerModelPackageGroup": o([
        { json: "model_package_group_name", js: "model_package_group_name", typ: "" },
        { json: "model_package_group_description", js: "model_package_group_description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerModelPackageGroupPolicy": o([
        { json: "model_package_group_name", js: "model_package_group_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SagemakerNotebookInstance": o([
        { json: "name", js: "name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "instance_type", js: "instance_type", typ: "" },
        { json: "platform_identifier", js: "platform_identifier", typ: u(undefined, "") },
        { json: "volume_size", js: "volume_size", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "accelerator_types", js: "accelerator_types", typ: u(undefined, "") },
        { json: "additional_code_repositories", js: "additional_code_repositories", typ: u(undefined, "") },
        { json: "default_code_repository", js: "default_code_repository", typ: u(undefined, "") },
        { json: "direct_internet_access", js: "direct_internet_access", typ: u(undefined, "") },
        { json: "instance_metadata_service_configuration", js: "instance_metadata_service_configuration", typ: u(undefined, r("InstanceMetadataServiceConfiguration")) },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "lifecycle_config_name", js: "lifecycle_config_name", typ: u(undefined, "") },
        { json: "root_access", js: "root_access", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "network_interface_id", js: "network_interface_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "InstanceMetadataServiceConfiguration": o([
        { json: "minimum_instance_metadata_service_version", js: "minimum_instance_metadata_service_version", typ: "" },
    ], false),
    "SagemakerNotebookInstanceLifecycleConfiguration": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "on_create", js: "on_create", typ: u(undefined, "") },
        { json: "on_start", js: "on_start", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "SagemakerPipeline": o([
        { json: "pipeline_name", js: "pipeline_name", typ: "" },
        { json: "pipeline_display_name", js: "pipeline_display_name", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "max_parallel_execution_steps", js: "max_parallel_execution_steps", typ: "" },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "object_key", js: "object_key", typ: "" },
        { json: "pipeline_description", js: "pipeline_description", typ: u(undefined, "") },
        { json: "pipeline_definition", js: "pipeline_definition", typ: u(undefined, "") },
        { json: "pipeline_definition_s3_location", js: "pipeline_definition_s3_location", typ: u(undefined, "") },
        { json: "parallelism_configuration", js: "parallelism_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version_id", js: "version_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerProject": o([
        { json: "project_name", js: "project_name", typ: "" },
        { json: "service_catalog_provisioning_details", js: "service_catalog_provisioning_details", typ: "" },
        { json: "product_id", js: "product_id", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "project_description", js: "project_description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "path_id", js: "path_id", typ: u(undefined, "") },
        { json: "provisioning_artifact_id", js: "provisioning_artifact_id", typ: u(undefined, "") },
        { json: "provisioning_parameter", js: "provisioning_parameter", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "project_id", js: "project_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerServicecatalogPortfolioStatus": o([
        { json: "status", js: "status", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SagemakerSpace": o([
        { json: "space_name", js: "space_name", typ: "" },
        { json: "domain_id", js: "domain_id", typ: "" },
        { json: "space_settings", js: "space_settings", typ: "" },
        { json: "app_image_config_name", js: "app_image_config_name", typ: "" },
        { json: "image_name", js: "image_name", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "jupyter_server_app_settings", js: "jupyter_server_app_settings", typ: u(undefined, "") },
        { json: "kernel_gateway_app_settings", js: "kernel_gateway_app_settings", typ: u(undefined, "") },
        { json: "default_resource_spec", js: "default_resource_spec", typ: u(undefined, "") },
        { json: "custom_image", js: "custom_image", typ: u(undefined, "") },
        { json: "lifecycle_config_arns", js: "lifecycle_config_arns", typ: u(undefined, "") },
        { json: "code_repository", js: "code_repository", typ: u(undefined, "") },
        { json: "repository_url", js: "repository_url", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "lifecycle_config_arn", js: "lifecycle_config_arn", typ: u(undefined, "") },
        { json: "sagemaker_image_arn", js: "sagemaker_image_arn", typ: u(undefined, "") },
        { json: "sagemaker_image_version_arn", js: "sagemaker_image_version_arn", typ: u(undefined, "") },
        { json: "image_version_number", js: "image_version_number", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "home_efs_file_system_uid", js: "home_efs_file_system_uid", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerStudioLifecycleConfig": o([
        { json: "studio_lifecycle_config_name", js: "studio_lifecycle_config_name", typ: "" },
        { json: "studio_lifecycle_config_app_type", js: "studio_lifecycle_config_app_type", typ: "" },
        { json: "studio_lifecycle_config_content", js: "studio_lifecycle_config_content", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerUserProfile": o([
        { json: "user_profile_name", js: "user_profile_name", typ: "" },
        { json: "domain_id", js: "domain_id", typ: "" },
        { json: "single_sign_on_user_value", js: "single_sign_on_user_value", typ: "" },
        { json: "user_settings", js: "user_settings", typ: "" },
        { json: "execution_role", js: "execution_role", typ: "" },
        { json: "app_image_config_name", js: "app_image_config_name", typ: "" },
        { json: "image_name", js: "image_name", typ: "" },
        { json: "single_sign_on_user_identifier", js: "single_sign_on_user_identifier", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "sharing_settings", js: "sharing_settings", typ: u(undefined, "") },
        { json: "tensor_board_app_settings", js: "tensor_board_app_settings", typ: u(undefined, "") },
        { json: "jupyter_server_app_settings", js: "jupyter_server_app_settings", typ: u(undefined, "") },
        { json: "kernel_gateway_app_settings", js: "kernel_gateway_app_settings", typ: u(undefined, "") },
        { json: "r_session_app_settings", js: "r_session_app_settings", typ: u(undefined, "") },
        { json: "r_studio_server_pro_app_settings", js: "r_studio_server_pro_app_settings", typ: u(undefined, "") },
        { json: "canvas_app_settings", js: "canvas_app_settings", typ: u(undefined, "") },
        { json: "model_register_settings", js: "model_register_settings", typ: u(undefined, "") },
        { json: "time_series_forecasting_settings", js: "time_series_forecasting_settings", typ: u(undefined, "") },
        { json: "workspace_settings", js: "workspace_settings", typ: u(undefined, "") },
        { json: "notebook_output_option", js: "notebook_output_option", typ: u(undefined, "") },
        { json: "s3_kms_key_id", js: "s3_kms_key_id", typ: u(undefined, "") },
        { json: "s3_output_path", js: "s3_output_path", typ: u(undefined, "") },
        { json: "default_resource_spec", js: "default_resource_spec", typ: u(undefined, "") },
        { json: "custom_image", js: "custom_image", typ: u(undefined, "") },
        { json: "lifecycle_config_arns", js: "lifecycle_config_arns", typ: u(undefined, "") },
        { json: "code_repository", js: "code_repository", typ: u(undefined, "") },
        { json: "access_status", js: "access_status", typ: u(undefined, "") },
        { json: "user_group", js: "user_group", typ: u(undefined, "") },
        { json: "repository_url", js: "repository_url", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "lifecycle_config_arn", js: "lifecycle_config_arn", typ: u(undefined, "") },
        { json: "sagemaker_image_arn", js: "sagemaker_image_arn", typ: u(undefined, "") },
        { json: "sagemaker_image_version_arn", js: "sagemaker_image_version_arn", typ: u(undefined, "") },
        { json: "image_version_number", js: "image_version_number", typ: u(undefined, "") },
        { json: "amazon_forecast_role_arn", js: "amazon_forecast_role_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "cross_account_model_register_role_arn", js: "cross_account_model_register_role_arn", typ: u(undefined, "") },
        { json: "s3_artifact_path", js: "s3_artifact_path", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "home_efs_file_system_uid", js: "home_efs_file_system_uid", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SagemakerWorkforce": o([
        { json: "workforce_name", js: "workforce_name", typ: "" },
        { json: "client_id", js: "client_id", typ: "" },
        { json: "user_pool", js: "user_pool", typ: "" },
        { json: "authorization_endpoint", js: "authorization_endpoint", typ: "" },
        { json: "client_secret", js: "client_secret", typ: "" },
        { json: "issuer", js: "issuer", typ: "" },
        { json: "jwks_uri", js: "jwks_uri", typ: "" },
        { json: "logout_endpoint", js: "logout_endpoint", typ: "" },
        { json: "token_endpoint", js: "token_endpoint", typ: "" },
        { json: "user_info_endpoint", js: "user_info_endpoint", typ: "" },
        { json: "cidrs", js: "cidrs", typ: "" },
        { json: "cognito_config", js: "cognito_config", typ: u(undefined, "") },
        { json: "oidc_config", js: "oidc_config", typ: u(undefined, "") },
        { json: "source_ip_config", js: "source_ip_config", typ: u(undefined, "") },
        { json: "workforce_vpc_config", js: "workforce_vpc_config", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnets", js: "subnets", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "subdomain", js: "subdomain", typ: u(undefined, "") },
        { json: "workforce_vpc_config.0.vpc_endpoint_id", js: "workforce_vpc_config.0.vpc_endpoint_id", typ: u(undefined, "") },
    ], false),
    "SagemakerWorkteam": o([
        { json: "description", js: "description", typ: "" },
        { json: "workforce_name", js: "workforce_name", typ: "" },
        { json: "workteam_name", js: "workteam_name", typ: "" },
        { json: "member_definition", js: "member_definition", typ: "" },
        { json: "client_id", js: "client_id", typ: "" },
        { json: "user_pool", js: "user_pool", typ: "" },
        { json: "user_group", js: "user_group", typ: "" },
        { json: "groups", js: "groups", typ: "" },
        { json: "notification_topic_arn", js: "notification_topic_arn", typ: "" },
        { json: "notification_configuration", js: "notification_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "cognito_member_definition", js: "cognito_member_definition", typ: u(undefined, "") },
        { json: "oidc_member_definition", js: "oidc_member_definition", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "subdomain", js: "subdomain", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SchedulerSchedule": o([
        { json: "flexible_time_window", js: "flexible_time_window", typ: "" },
        { json: "schedule_expression", js: "schedule_expression", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "mode", js: "mode", typ: "" },
        { json: "arn", js: "arn", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "task_definition_arn", js: "task_definition_arn", typ: "" },
        { json: "capacity_provider", js: "capacity_provider", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "detail_type", js: "detail_type", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "partition_key", js: "partition_key", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "end_date", js: "end_date", typ: u(undefined, "") },
        { json: "group_name", js: "group_name", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "schedule_expression_timezone", js: "schedule_expression_timezone", typ: u(undefined, "") },
        { json: "start_date", js: "start_date", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "maximum_window_in_minutes", js: "maximum_window_in_minutes", typ: u(undefined, "") },
        { json: "dead_letter_config", js: "dead_letter_config", typ: u(undefined, "") },
        { json: "ecs_parameters", js: "ecs_parameters", typ: u(undefined, "") },
        { json: "eventbridge_parameters", js: "eventbridge_parameters", typ: u(undefined, "") },
        { json: "input", js: "input", typ: u(undefined, "") },
        { json: "kinesis_parameters", js: "kinesis_parameters", typ: u(undefined, "") },
        { json: "retry_policy", js: "retry_policy", typ: u(undefined, "") },
        { json: "sagemaker_pipeline_parameters", js: "sagemaker_pipeline_parameters", typ: u(undefined, "") },
        { json: "sqs_parameters", js: "sqs_parameters", typ: u(undefined, "") },
        { json: "capacity_provider_strategy", js: "capacity_provider_strategy", typ: u(undefined, "") },
        { json: "enable_ecs_managed_tags", js: "enable_ecs_managed_tags", typ: u(undefined, "") },
        { json: "enable_execute_command", js: "enable_execute_command", typ: u(undefined, "") },
        { json: "group", js: "group", typ: u(undefined, "") },
        { json: "launch_type", js: "launch_type", typ: u(undefined, "") },
        { json: "network_configuration", js: "network_configuration", typ: u(undefined, "") },
        { json: "placement_constraints", js: "placement_constraints", typ: u(undefined, "") },
        { json: "placement_strategy", js: "placement_strategy", typ: u(undefined, "") },
        { json: "platform_version", js: "platform_version", typ: u(undefined, "") },
        { json: "propagate_tags", js: "propagate_tags", typ: u(undefined, "") },
        { json: "reference_id", js: "reference_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "task_count", js: "task_count", typ: u(undefined, "") },
        { json: "base", js: "base", typ: u(undefined, "") },
        { json: "weight", js: "weight", typ: u(undefined, "") },
        { json: "assign_public_ip", js: "assign_public_ip", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: u(undefined, "") },
        { json: "subnets", js: "subnets", typ: u(undefined, "") },
        { json: "expression", js: "expression", typ: u(undefined, "") },
        { json: "field", js: "field", typ: u(undefined, "") },
        { json: "maximum_event_age_in_seconds", js: "maximum_event_age_in_seconds", typ: u(undefined, "") },
        { json: "maximum_retry_attempts", js: "maximum_retry_attempts", typ: u(undefined, "") },
        { json: "pipeline_parameter", js: "pipeline_parameter", typ: u(undefined, "") },
        { json: "message_group_id", js: "message_group_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SchedulerScheduleGroup": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "last_modification_date", js: "last_modification_date", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SchemasRegistryPolicy": o([
        { json: "registry_name", js: "registry_name", typ: "" },
        { json: "policy", js: "policy", typ: "" },
    ], false),
    "SchemasSchema": o([
        { json: "name", js: "name", typ: "" },
        { json: "content", js: "content", typ: "" },
        { json: "registry_name", js: "registry_name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "last_modified", js: "last_modified", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "version_created_date", js: "version_created_date", typ: u(undefined, "") },
    ], false),
    "ResourceSecretsmanagerSecret": o([
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "recovery_window_in_days", js: "recovery_window_in_days", typ: u(undefined, "") },
        { json: "replica", js: "replica", typ: u(undefined, r("Replica")) },
        { json: "force_overwrite_replica_secret", js: "force_overwrite_replica_secret", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Replica": o([
        { json: "last_accessed_date", js: "last_accessed_date", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "status_message", js: "status_message", typ: "" },
    ], false),
    "SecretsmanagerSecretPolicy": o([
        { json: "policy", js: "policy", typ: "" },
        { json: "secret_arn", js: "secret_arn", typ: "" },
        { json: "block_public_policy", js: "block_public_policy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceSecretsmanagerSecretRotation": o([
        { json: "secret_id", js: "secret_id", typ: "" },
        { json: "rotation_lambda_arn", js: "rotation_lambda_arn", typ: "" },
        { json: "rotation_rules", js: "rotation_rules", typ: u(undefined, r("RotationRules")) },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "rotation_enabled", js: "rotation_enabled", typ: u(undefined, "") },
    ], false),
    "RotationRules": o([
        { json: "automatically_after_days", js: "automatically_after_days", typ: "" },
        { json: "duration", js: "duration", typ: "" },
        { json: "schedule_expression", js: "schedule_expression", typ: "" },
    ], false),
    "SecurityGroup": o([
        { json: "egress", js: "egress", typ: u(undefined, r("Gress")) },
        { json: "ingress", js: "ingress", typ: u(undefined, r("Gress")) },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "revoke_rules_on_delete", js: "revoke_rules_on_delete", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "Gress": o([
        { json: "from_port", js: "from_port", typ: "" },
        { json: "cidr_blocks", js: "cidr_blocks", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "ipv6_cidr_blocks", js: "ipv6_cidr_blocks", typ: "" },
        { json: "prefix_list_ids", js: "prefix_list_ids", typ: "" },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "security_groups", js: "security_groups", typ: "" },
        { json: "self", js: "self", typ: "" },
        { json: "to_port", js: "to_port", typ: u(undefined, "") },
    ], false),
    "SecurityGroupRule": o([
        { json: "from_port", js: "from_port", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "security_group_id", js: "security_group_id", typ: "" },
        { json: "to_port", js: "to_port", typ: "" },
        { json: "cidr_blocks", js: "cidr_blocks", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "ipv6_cidr_blocks", js: "ipv6_cidr_blocks", typ: u(undefined, "") },
        { json: "prefix_list_ids", js: "prefix_list_ids", typ: u(undefined, "") },
        { json: "self", js: "self", typ: u(undefined, "") },
        { json: "source_security_group_id", js: "source_security_group_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "security_group_rule_id", js: "security_group_rule_id", typ: u(undefined, "") },
    ], false),
    "SecurityhubAccount": o([
        { json: "enable_default_standards", js: "enable_default_standards", typ: u(undefined, "") },
        { json: "control_finding_generator", js: "control_finding_generator", typ: u(undefined, "") },
        { json: "auto_enable_controls", js: "auto_enable_controls", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "SecurityhubInsight": o([
        { json: "group_by_attribute", js: "group_by_attribute", typ: "" },
        { json: "unit", js: "unit", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "cidr", js: "cidr", typ: "" },
        { json: "comparison", js: "comparison", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "filters", js: "filters", typ: u(undefined, r("Filters")) },
        { json: "workflow_status", js: "workflow_status", typ: u(undefined, "") },
        { json: "date_range", js: "date_range", typ: u(undefined, "") },
        { json: "end", js: "end", typ: u(undefined, "") },
        { json: "start", js: "start", typ: u(undefined, "") },
        { json: "eq", js: "eq", typ: u(undefined, "") },
        { json: "gte", js: "gte", typ: u(undefined, "") },
        { json: "lte", js: "lte", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "Filters": o([
        { json: "aws_account_id", js: "aws_account_id", typ: "" },
        { json: "company_name", js: "company_name", typ: "" },
        { json: "compliance_status", js: "compliance_status", typ: "" },
        { json: "confidence", js: "confidence", typ: "" },
        { json: "created_at", js: "created_at", typ: "" },
        { json: "criticality", js: "criticality", typ: "" },
        { json: "description", js: "description", typ: "" },
        { json: "finding_provider_fields_confidence", js: "finding_provider_fields_confidence", typ: "" },
        { json: "finding_provider_fields_criticality", js: "finding_provider_fields_criticality", typ: "" },
        { json: "finding_provider_fields_related_findings_id", js: "finding_provider_fields_related_findings_id", typ: "" },
        { json: "finding_provider_fields_related_findings_product_arn", js: "finding_provider_fields_related_findings_product_arn", typ: "" },
        { json: "finding_provider_fields_severity_label", js: "finding_provider_fields_severity_label", typ: "" },
        { json: "finding_provider_fields_severity_original", js: "finding_provider_fields_severity_original", typ: "" },
        { json: "finding_provider_fields_types", js: "finding_provider_fields_types", typ: "" },
        { json: "first_observed_at", js: "first_observed_at", typ: "" },
        { json: "generator_id", js: "generator_id", typ: "" },
        { json: "id", js: "id", typ: "" },
        { json: "keyword", js: "keyword", typ: "" },
        { json: "last_observed_at", js: "last_observed_at", typ: "" },
        { json: "malware_name", js: "malware_name", typ: "" },
        { json: "malware_path", js: "malware_path", typ: "" },
        { json: "malware_state", js: "malware_state", typ: "" },
        { json: "malware_type", js: "malware_type", typ: "" },
        { json: "network_destination_domain", js: "network_destination_domain", typ: "" },
        { json: "network_destination_ipv4", js: "network_destination_ipv4", typ: "" },
        { json: "network_destination_ipv6", js: "network_destination_ipv6", typ: "" },
        { json: "network_destination_port", js: "network_destination_port", typ: "" },
        { json: "network_direction", js: "network_direction", typ: "" },
        { json: "network_protocol", js: "network_protocol", typ: "" },
        { json: "network_source_domain", js: "network_source_domain", typ: "" },
        { json: "network_source_ipv4", js: "network_source_ipv4", typ: "" },
        { json: "network_source_ipv6", js: "network_source_ipv6", typ: "" },
        { json: "network_source_mac", js: "network_source_mac", typ: "" },
        { json: "network_source_port", js: "network_source_port", typ: "" },
        { json: "note_text", js: "note_text", typ: "" },
        { json: "note_updated_at", js: "note_updated_at", typ: "" },
        { json: "note_updated_by", js: "note_updated_by", typ: "" },
        { json: "process_launched_at", js: "process_launched_at", typ: "" },
        { json: "process_name", js: "process_name", typ: "" },
        { json: "process_parent_pid", js: "process_parent_pid", typ: "" },
        { json: "process_path", js: "process_path", typ: "" },
        { json: "process_pid", js: "process_pid", typ: "" },
        { json: "process_terminated_at", js: "process_terminated_at", typ: "" },
        { json: "product_arn", js: "product_arn", typ: "" },
        { json: "product_fields", js: "product_fields", typ: "" },
        { json: "product_name", js: "product_name", typ: "" },
        { json: "recommendation_text", js: "recommendation_text", typ: "" },
        { json: "record_state", js: "record_state", typ: "" },
        { json: "related_findings_id", js: "related_findings_id", typ: "" },
        { json: "related_findings_product_arn", js: "related_findings_product_arn", typ: "" },
        { json: "resource_aws_ec2_instance_iam_instance_profile_arn", js: "resource_aws_ec2_instance_iam_instance_profile_arn", typ: "" },
        { json: "resource_aws_ec2_instance_image_id", js: "resource_aws_ec2_instance_image_id", typ: "" },
        { json: "resource_aws_ec2_instance_ipv4_addresses", js: "resource_aws_ec2_instance_ipv4_addresses", typ: "" },
        { json: "resource_aws_ec2_instance_ipv6_addresses", js: "resource_aws_ec2_instance_ipv6_addresses", typ: "" },
        { json: "resource_aws_ec2_instance_key_name", js: "resource_aws_ec2_instance_key_name", typ: "" },
        { json: "resource_aws_ec2_instance_launched_at", js: "resource_aws_ec2_instance_launched_at", typ: "" },
        { json: "resource_aws_ec2_instance_subnet_id", js: "resource_aws_ec2_instance_subnet_id", typ: "" },
        { json: "resource_aws_ec2_instance_type", js: "resource_aws_ec2_instance_type", typ: "" },
        { json: "resource_aws_ec2_instance_vpc_id", js: "resource_aws_ec2_instance_vpc_id", typ: "" },
        { json: "resource_aws_iam_access_key_created_at", js: "resource_aws_iam_access_key_created_at", typ: "" },
        { json: "resource_aws_iam_access_key_status", js: "resource_aws_iam_access_key_status", typ: "" },
        { json: "resource_aws_iam_access_key_user_name", js: "resource_aws_iam_access_key_user_name", typ: "" },
        { json: "resource_aws_s3_bucket_owner_id", js: "resource_aws_s3_bucket_owner_id", typ: "" },
        { json: "resource_aws_s3_bucket_owner_name", js: "resource_aws_s3_bucket_owner_name", typ: "" },
        { json: "resource_container_image_id", js: "resource_container_image_id", typ: "" },
        { json: "resource_container_image_name", js: "resource_container_image_name", typ: "" },
        { json: "resource_container_launched_at", js: "resource_container_launched_at", typ: "" },
        { json: "resource_container_name", js: "resource_container_name", typ: "" },
        { json: "resource_details_other", js: "resource_details_other", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "resource_partition", js: "resource_partition", typ: "" },
        { json: "resource_region", js: "resource_region", typ: "" },
        { json: "resource_tags", js: "resource_tags", typ: "" },
        { json: "resource_type", js: "resource_type", typ: "" },
        { json: "severity_label", js: "severity_label", typ: "" },
        { json: "source_url", js: "source_url", typ: "" },
        { json: "threat_intel_indicator_category", js: "threat_intel_indicator_category", typ: "" },
        { json: "threat_intel_indicator_last_observed_at", js: "threat_intel_indicator_last_observed_at", typ: "" },
        { json: "threat_intel_indicator_source", js: "threat_intel_indicator_source", typ: "" },
        { json: "threat_intel_indicator_source_url", js: "threat_intel_indicator_source_url", typ: "" },
        { json: "threat_intel_indicator_type", js: "threat_intel_indicator_type", typ: "" },
        { json: "threat_intel_indicator_value", js: "threat_intel_indicator_value", typ: "" },
        { json: "title", js: "title", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "updated_at", js: "updated_at", typ: "" },
        { json: "user_defined_values", js: "user_defined_values", typ: "" },
        { json: "verification_state", js: "verification_state", typ: "" },
        { json: "workflow_status", js: "workflow_status", typ: "" },
    ], false),
    "SecurityhubInviteAccepter": o([
        { json: "master_id", js: "master_id", typ: "" },
        { json: "invitation_id", js: "invitation_id", typ: u(undefined, "") },
    ], false),
    "SecurityhubMember": o([
        { json: "account_id", js: "account_id", typ: "" },
        { json: "email", js: "email", typ: u(undefined, "") },
        { json: "invite", js: "invite", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "master_id", js: "master_id", typ: u(undefined, "") },
        { json: "member_status", js: "member_status", typ: u(undefined, "") },
    ], false),
    "SecurityhubOrganizationConfiguration": o([
        { json: "auto_enable", js: "auto_enable", typ: "" },
        { json: "auto_enable_standards", js: "auto_enable_standards", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SecurityhubProductSubscription": o([
        { json: "product_arn", js: "product_arn", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "SecurityhubStandardsControl": o([
        { json: "standards_control_arn", js: "standards_control_arn", typ: "" },
        { json: "control_status", js: "control_status", typ: "" },
        { json: "disabled_reason", js: "disabled_reason", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "control_id", js: "control_id", typ: u(undefined, "") },
        { json: "control_status_updated_at", js: "control_status_updated_at", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "related_requirements", js: "related_requirements", typ: u(undefined, "") },
        { json: "remediation_url", js: "remediation_url", typ: u(undefined, "") },
        { json: "severity_rating", js: "severity_rating", typ: u(undefined, "") },
        { json: "title", js: "title", typ: u(undefined, "") },
    ], false),
    "SecurityhubStandardsSubscription": o([
        { json: "standards_arn", js: "standards_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ServerlessapplicationrepositoryCloudformationStack": o([
        { json: "name", js: "name", typ: "" },
        { json: "application_id", js: "application_id", typ: "" },
        { json: "capabilities", js: "capabilities", typ: "" },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "semantic_version", js: "semantic_version", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "outputs", js: "outputs", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ServiceDiscoveryInstance": o([
        { json: "attributes", js: "attributes", typ: "" },
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
        { json: "service_id", js: "service_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ServicecatalogBudgetResourceAssociation": o([
        { json: "budget_name", js: "budget_name", typ: "" },
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ServicecatalogPortfolioShare": o([
        { json: "portfolio_id", js: "portfolio_id", typ: "" },
        { json: "principal_id", js: "principal_id", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "share_principals", js: "share_principals", typ: u(undefined, "") },
        { json: "share_tag_options", js: "share_tag_options", typ: u(undefined, "") },
        { json: "wait_for_acceptance", js: "wait_for_acceptance", typ: u(undefined, "") },
        { json: "accepted", js: "accepted", typ: u(undefined, "") },
    ], false),
    "ServicecatalogPrincipalPortfolioAssociation": o([
        { json: "portfolio_id", js: "portfolio_id", typ: "" },
        { json: "principal_arn", js: "principal_arn", typ: "" },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "principal_type", js: "principal_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ServicecatalogProductPortfolioAssociation": o([
        { json: "portfolio_id", js: "portfolio_id", typ: "" },
        { json: "product_id", js: "product_id", typ: "" },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "source_portfolio_id", js: "source_portfolio_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ServicecatalogProvisionedProduct": o([
        { json: "name", js: "name", typ: "" },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "ignore_errors", js: "ignore_errors", typ: u(undefined, "") },
        { json: "notification_arns", js: "notification_arns", typ: u(undefined, "") },
        { json: "path_id", js: "path_id", typ: u(undefined, "") },
        { json: "path_name", js: "path_name", typ: u(undefined, "") },
        { json: "product_id", js: "product_id", typ: u(undefined, "") },
        { json: "product_name", js: "product_name", typ: u(undefined, "") },
        { json: "provisioning_artifact_id", js: "provisioning_artifact_id", typ: u(undefined, "") },
        { json: "provisioning_artifact_name", js: "provisioning_artifact_name", typ: u(undefined, "") },
        { json: "provisioning_parameters", js: "provisioning_parameters", typ: u(undefined, r("ProvisioningParameters")) },
        { json: "retain_physical_resources", js: "retain_physical_resources", typ: u(undefined, "") },
        { json: "stack_set_provisioning_preferences", js: "stack_set_provisioning_preferences", typ: u(undefined, r("StackSetProvisioningPreferences")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cloudwatch_dashboard_names", js: "cloudwatch_dashboard_names", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_provisioning_record_id", js: "last_provisioning_record_id", typ: u(undefined, "") },
        { json: "last_record_id", js: "last_record_id", typ: u(undefined, "") },
        { json: "last_successful_provisioning_record_id", js: "last_successful_provisioning_record_id", typ: u(undefined, "") },
        { json: "launch_role_arn", js: "launch_role_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "AVAILABLE", js: "AVAILABLE", typ: u(undefined, "") },
        { json: "UNDER_CHANGE", js: "UNDER_CHANGE", typ: u(undefined, "") },
        { json: "TAINTED", js: "TAINTED", typ: u(undefined, "") },
        { json: "ERROR", js: "ERROR", typ: u(undefined, "") },
        { json: "PLAN_IN_PROGRESS", js: "PLAN_IN_PROGRESS", typ: u(undefined, "") },
    ], false),
    "ProvisioningParameters": o([
        { json: "key", js: "key", typ: "" },
        { json: "use_previous_value", js: "use_previous_value", typ: "" },
        { json: "value", js: "value", typ: "" },
    ], false),
    "StackSetProvisioningPreferences": o([
        { json: "accounts", js: "accounts", typ: "" },
        { json: "failure_tolerance_count", js: "failure_tolerance_count", typ: "" },
        { json: "failure_tolerance_percentage", js: "failure_tolerance_percentage", typ: "" },
        { json: "max_concurrency_count", js: "max_concurrency_count", typ: "" },
        { json: "max_concurrency_percentage", js: "max_concurrency_percentage", typ: "" },
        { json: "regions", js: "regions", typ: "" },
    ], false),
    "ServicecatalogProvisioningArtifact": o([
        { json: "product_id", js: "product_id", typ: "" },
        { json: "template_physical_id", js: "template_physical_id", typ: u(undefined, "") },
        { json: "template_url", js: "template_url", typ: u(undefined, "") },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "active", js: "active", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "disable_template_validation", js: "disable_template_validation", typ: u(undefined, "") },
        { json: "guidance", js: "guidance", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "provisioning_artifact_id", js: "provisioning_artifact_id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "ServicecatalogServiceAction": o([
        { json: "definition", js: "definition", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "version", js: "version", typ: "" },
        { json: "accept_language", js: "accept_language", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "assume_role", js: "assume_role", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ServicecatalogTagOption": o([
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "active", js: "active", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
    ], false),
    "ServicecatalogTagOptionResourceAssociation": o([
        { json: "resource_id", js: "resource_id", typ: "" },
        { json: "tag_option_id", js: "tag_option_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
        { json: "resource_created_time", js: "resource_created_time", typ: u(undefined, "") },
        { json: "resource_description", js: "resource_description", typ: u(undefined, "") },
        { json: "resource_name", js: "resource_name", typ: u(undefined, "") },
    ], false),
    "SesReceiptRuleSet": o([
        { json: "rule_set_name", js: "rule_set_name", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SesConfigurationSet": o([
        { json: "name", js: "name", typ: "" },
        { json: "delivery_options", js: "delivery_options", typ: u(undefined, r("SesConfigurationSetDeliveryOptions")) },
        { json: "reputation_metrics_enabled", js: "reputation_metrics_enabled", typ: u(undefined, "") },
        { json: "sending_enabled", js: "sending_enabled", typ: u(undefined, "") },
        { json: "tls_policy", js: "tls_policy", typ: u(undefined, "") },
        { json: "custom_redirect_domain", js: "custom_redirect_domain", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_fresh_start", js: "last_fresh_start", typ: u(undefined, "") },
    ], false),
    "SesConfigurationSetDeliveryOptions": o([
        { json: "tls_policy", js: "tls_policy", typ: "" },
    ], false),
    "SesDomainDKIM": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "dkim_tokens", js: "dkim_tokens", typ: u(undefined, "") },
    ], false),
    "SesDomainIdentityVerification": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "SesDomainMailFrom": o([
        { json: "domain", js: "domain", typ: "" },
        { json: "mail_from_domain", js: "mail_from_domain", typ: "" },
        { json: "behavior_on_mx_failure", js: "behavior_on_mx_failure", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SesEventDestination": o([
        { json: "name", js: "name", typ: "" },
        { json: "configuration_set_name", js: "configuration_set_name", typ: "" },
        { json: "matching_types", js: "matching_types", typ: "" },
        { json: "default_value", js: "default_value", typ: "" },
        { json: "dimension_name", js: "dimension_name", typ: "" },
        { json: "value_source", js: "value_source", typ: "" },
        { json: "stream_arn", js: "stream_arn", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "topic_arn", js: "topic_arn", typ: "" },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "cloudwatch_destination", js: "cloudwatch_destination", typ: u(undefined, "") },
        { json: "kinesis_destination", js: "kinesis_destination", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "SesIdentityNotificationTopic": o([
        { json: "notification_type", js: "notification_type", typ: "" },
        { json: "identity", js: "identity", typ: "" },
        { json: "topic_arn", js: "topic_arn", typ: u(undefined, "") },
        { json: "include_original_headers", js: "include_original_headers", typ: u(undefined, "") },
    ], false),
    "SesIdentityPolicy": o([
        { json: "identity", js: "identity", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "policy", js: "policy", typ: "" },
    ], false),
    "SesReceiptFilter": o([
        { json: "name", js: "name", typ: "" },
        { json: "cidr", js: "cidr", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "SesReceiptRule": o([
        { json: "name", js: "name", typ: "" },
        { json: "rule_set_name", js: "rule_set_name", typ: "" },
        { json: "header_name", js: "header_name", typ: "" },
        { json: "header_value", js: "header_value", typ: "" },
        { json: "position", js: "position", typ: "" },
        { json: "message", js: "message", typ: "" },
        { json: "sender", js: "sender", typ: "" },
        { json: "smtp_reply_code", js: "smtp_reply_code", typ: "" },
        { json: "function_arn", js: "function_arn", typ: "" },
        { json: "bucket_name", js: "bucket_name", typ: "" },
        { json: "topic_arn", js: "topic_arn", typ: "" },
        { json: "scope", js: "scope", typ: "" },
        { json: "organization_arn", js: "organization_arn", typ: "" },
        { json: "after", js: "after", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "recipients", js: "recipients", typ: u(undefined, "") },
        { json: "scan_enabled", js: "scan_enabled", typ: u(undefined, "") },
        { json: "tls_policy", js: "tls_policy", typ: u(undefined, "") },
        { json: "add_header_action", js: "add_header_action", typ: u(undefined, "") },
        { json: "bounce_action", js: "bounce_action", typ: u(undefined, "") },
        { json: "lambda_action", js: "lambda_action", typ: u(undefined, "") },
        { json: "s3_action", js: "s3_action", typ: u(undefined, "") },
        { json: "sns_action", js: "sns_action", typ: u(undefined, "") },
        { json: "stop_action", js: "stop_action", typ: u(undefined, "") },
        { json: "workmail_action", js: "workmail_action", typ: u(undefined, "") },
        { json: "status_code", js: "status_code", typ: u(undefined, "") },
        { json: "invocation_type", js: "invocation_type", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "object_key_prefix", js: "object_key_prefix", typ: u(undefined, "") },
        { json: "encoding", js: "encoding", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "SesTemplate": o([
        { json: "name", js: "name", typ: "" },
        { json: "html", js: "html", typ: u(undefined, "") },
        { json: "subject", js: "subject", typ: u(undefined, "") },
        { json: "text", js: "text", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceSesv2ConfigurationSet": o([
        { json: "configuration_set_name", js: "configuration_set_name", typ: "" },
        { json: "custom_redirect_domain", js: "custom_redirect_domain", typ: "" },
        { json: "delivery_options", js: "delivery_options", typ: u(undefined, r("Sesv2ConfigurationSetDeliveryOptions")) },
        { json: "reputation_options", js: "reputation_options", typ: u(undefined, r("ReputationOptions")) },
        { json: "sending_options", js: "sending_options", typ: u(undefined, r("SendingOptions")) },
        { json: "suppression_options", js: "suppression_options", typ: u(undefined, r("SuppressionOptions")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tracking_options", js: "tracking_options", typ: u(undefined, r("TrackingOptions")) },
        { json: "vdm_options", js: "vdm_options", typ: u(undefined, r("VDMOptions")) },
        { json: "tls_policy", js: "tls_policy", typ: u(undefined, "") },
        { json: "reputation_metrics_enabled", js: "reputation_metrics_enabled", typ: u(undefined, "") },
        { json: "sending_enabled", js: "sending_enabled", typ: u(undefined, "") },
        { json: "suppressed_reasons", js: "suppressed_reasons", typ: u(undefined, "") },
        { json: "dashboard_options", js: "dashboard_options", typ: u(undefined, r("DashboardOptions")) },
        { json: "guardian_options", js: "guardian_options", typ: u(undefined, r("GuardianOptions")) },
        { json: "engagement_metrics", js: "engagement_metrics", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "DashboardOptions": o([
        { json: "engagement_metrics", js: "engagement_metrics", typ: "" },
    ], false),
    "Sesv2ConfigurationSetDeliveryOptions": o([
        { json: "sending_pool_name", js: "sending_pool_name", typ: "" },
        { json: "tls_policy", js: "tls_policy", typ: "" },
    ], false),
    "GuardianOptions": o([
        { json: "optimized_shared_delivery", js: "optimized_shared_delivery", typ: "" },
    ], false),
    "ReputationOptions": o([
        { json: "reputation_metrics_enabled", js: "reputation_metrics_enabled", typ: "" },
    ], false),
    "SendingOptions": o([
        { json: "sending_enabled", js: "sending_enabled", typ: "" },
    ], false),
    "SuppressionOptions": o([
        { json: "suppressed_reasons", js: "suppressed_reasons", typ: "" },
    ], false),
    "TrackingOptions": o([
        { json: "custom_redirect_domain", js: "custom_redirect_domain", typ: "" },
    ], false),
    "VDMOptions": o([
        { json: "dashboard_options", js: "dashboard_options", typ: "" },
        { json: "guardian_options", js: "guardian_options", typ: "" },
    ], false),
    "Sesv2ConfigurationSetEventDestination": o([
        { json: "configuration_set_name", js: "configuration_set_name", typ: "" },
        { json: "event_destination", js: "event_destination", typ: r("EventDestination") },
        { json: "event_destination_name", js: "event_destination_name", typ: "" },
        { json: "dimension_configuration", js: "dimension_configuration", typ: r("DimensionConfiguration") },
        { json: "dimension_value_source", js: "dimension_value_source", typ: "" },
        { json: "iam_role_arn", js: "iam_role_arn", typ: "" },
        { json: "pinpoint_application_arn", js: "pinpoint_application_arn", typ: "" },
        { json: "cloud_watch_destination", js: "cloud_watch_destination", typ: u(undefined, r("CloudWatchDestination")) },
        { json: "kinesis_firehose_destination", js: "kinesis_firehose_destination", typ: u(undefined, r("KinesisFirehoseDestination")) },
        { json: "pinpoint_destination", js: "pinpoint_destination", typ: u(undefined, r("PinpointDestination")) },
        { json: "sns_destination", js: "sns_destination", typ: u(undefined, r("SnsDestination")) },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "CloudWatchDestination": o([
        { json: "dimension_configuration", js: "dimension_configuration", typ: "" },
    ], false),
    "DimensionConfiguration": o([
        { json: "default_dimension_value", js: "default_dimension_value", typ: "" },
        { json: "dimension_name", js: "dimension_name", typ: "" },
        { json: "dimension_value_source", js: "dimension_value_source", typ: "" },
    ], false),
    "EventDestination": o([
        { json: "matching_event_types", js: "matching_event_types", typ: "" },
        { json: "cloud_watch_destination", js: "cloud_watch_destination", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "kinesis_firehose_destination", js: "kinesis_firehose_destination", typ: u(undefined, "") },
        { json: "pinpoint_destination", js: "pinpoint_destination", typ: u(undefined, "") },
        { json: "sns_destination", js: "sns_destination", typ: u(undefined, "") },
    ], false),
    "KinesisFirehoseDestination": o([
        { json: "delivery_stream_arn", js: "delivery_stream_arn", typ: "" },
        { json: "iam_role_arn", js: "iam_role_arn", typ: "" },
    ], false),
    "PinpointDestination": o([
        { json: "pinpoint_application_arn", js: "pinpoint_application_arn", typ: "" },
    ], false),
    "SnsDestination": o([
        { json: "topic_arn", js: "topic_arn", typ: "" },
    ], false),
    "Sesv2ContactList": o([
        { json: "contact_list_name", js: "contact_list_name", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "topic", js: "topic", typ: u(undefined, r("Topic")) },
        { json: "created_timestamp", js: "created_timestamp", typ: u(undefined, "") },
        { json: "last_updated_timestamp", js: "last_updated_timestamp", typ: u(undefined, "") },
    ], false),
    "Topic": o([
        { json: "default_subscription_status", js: "default_subscription_status", typ: "" },
        { json: "display_name", js: "display_name", typ: "" },
        { json: "topic_name", js: "topic_name", typ: "" },
        { json: "description", js: "description", typ: "" },
    ], false),
    "Sesv2DedicatedIPAssignment": o([
        { json: "ip", js: "ip", typ: "" },
        { json: "destination_pool_name", js: "destination_pool_name", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceSesv2EmailIdentity": o([
        { json: "email_identity", js: "email_identity", typ: "" },
        { json: "configuration_set_name", js: "configuration_set_name", typ: u(undefined, "") },
        { json: "dkim_signing_attributes", js: "dkim_signing_attributes", typ: u(undefined, r("DKIMSigningAttributes")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "identity_type", js: "identity_type", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "verified_for_sending_status", js: "verified_for_sending_status", typ: u(undefined, "") },
    ], false),
    "DKIMSigningAttributes": o([
        { json: "domain_signing_selector", js: "domain_signing_selector", typ: "" },
        { json: "next_signing_key_length", js: "next_signing_key_length", typ: "" },
    ], false),
    "Sesv2EmailIdentityFeedbackAttributes": o([
        { json: "email_identity", js: "email_identity", typ: "" },
        { json: "email_forwarding_enabled", js: "email_forwarding_enabled", typ: u(undefined, "") },
    ], false),
    "ResourceSfnAlias": o([
        { json: "name", js: "name", typ: "" },
        { json: "routing_configuration", js: "routing_configuration", typ: "" },
        { json: "state_machine_version_arn", js: "state_machine_version_arn", typ: "" },
        { json: "weight", js: "weight", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
    ], false),
    "ResourceSfnStateMachine": o([
        { json: "definition", js: "definition", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "logging_configuration", js: "logging_configuration", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "publish", js: "publish", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tracing_configuration", js: "tracing_configuration", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
        { json: "include_execution_data", js: "include_execution_data", typ: u(undefined, "") },
        { json: "level", js: "level", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "creation_date", js: "creation_date", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ShieldApplicationLayerAutomaticResponse": o([
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "action", js: "action", typ: "" },
    ], false),
    "ShieldDrtAccessLogBucketAssociation": o([
        { json: "log_bucket", js: "log_bucket", typ: "" },
        { json: "role_arn_association_id", js: "role_arn_association_id", typ: "" },
    ], false),
    "ShieldDrtAccessRoleArnAssociation": o([
        { json: "role_arn", js: "role_arn", typ: "" },
    ], false),
    "ShieldProtectionGroup": o([
        { json: "aggregation", js: "aggregation", typ: "" },
        { json: "pattern", js: "pattern", typ: "" },
        { json: "protection_group_id", js: "protection_group_id", typ: "" },
        { json: "members", js: "members", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "protection_group_arn", js: "protection_group_arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "ShieldProtectionHealthCheckAssociation": o([
        { json: "health_check_arn", js: "health_check_arn", typ: "" },
        { json: "shield_protection_id", js: "shield_protection_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceSignerSigningJob": o([
        { json: "profile_name", js: "profile_name", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "destination", js: "destination", typ: "" },
        { json: "s3", js: "s3", typ: "" },
        { json: "bucket", js: "bucket", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "version", js: "version", typ: "" },
        { json: "ignore_signing_job_failure", js: "ignore_signing_job_failure", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "completed_at", js: "completed_at", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "job_id", js: "job_id", typ: u(undefined, "") },
        { json: "job_invoker", js: "job_invoker", typ: u(undefined, "") },
        { json: "job_owner", js: "job_owner", typ: u(undefined, "") },
        { json: "platform_display_name", js: "platform_display_name", typ: u(undefined, "") },
        { json: "platform_id", js: "platform_id", typ: u(undefined, "") },
        { json: "profile_version", js: "profile_version", typ: u(undefined, "") },
        { json: "requested_by", js: "requested_by", typ: u(undefined, "") },
        { json: "revocation_record", js: "revocation_record", typ: u(undefined, "") },
        { json: "signature_expires_at", js: "signature_expires_at", typ: u(undefined, "") },
        { json: "signed_object", js: "signed_object", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "status_reason", js: "status_reason", typ: u(undefined, "") },
    ], false),
    "SignerSigningProfilePermission": o([
        { json: "profile_name", js: "profile_name", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "principal", js: "principal", typ: "" },
        { json: "profile_version", js: "profile_version", typ: u(undefined, "") },
        { json: "statement_id", js: "statement_id", typ: u(undefined, "") },
        { json: "statement_id_prefix", js: "statement_id_prefix", typ: u(undefined, "") },
    ], false),
    "SnapshotCreateVolumePermission": o([
        { json: "snapshot_id", js: "snapshot_id", typ: "" },
        { json: "account_id", js: "account_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SnsPlatformApplication": o([
        { json: "name", js: "name", typ: "" },
        { json: "platform", js: "platform", typ: "" },
        { json: "platform_credential", js: "platform_credential", typ: "" },
        { json: "apple_platform_team_id", js: "apple_platform_team_id", typ: "" },
        { json: "apple_platform_bundle_id", js: "apple_platform_bundle_id", typ: "" },
        { json: "event_delivery_failure_topic_arn", js: "event_delivery_failure_topic_arn", typ: u(undefined, "") },
        { json: "event_endpoint_created_topic_arn", js: "event_endpoint_created_topic_arn", typ: u(undefined, "") },
        { json: "event_endpoint_deleted_topic_arn", js: "event_endpoint_deleted_topic_arn", typ: u(undefined, "") },
        { json: "event_endpoint_updated_topic_arn", js: "event_endpoint_updated_topic_arn", typ: u(undefined, "") },
        { json: "failure_feedback_role_arn", js: "failure_feedback_role_arn", typ: u(undefined, "") },
        { json: "platform_principal", js: "platform_principal", typ: u(undefined, "") },
        { json: "success_feedback_role_arn", js: "success_feedback_role_arn", typ: u(undefined, "") },
        { json: "success_feedback_sample_rate", js: "success_feedback_sample_rate", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "SnsSMSPreferences": o([
        { json: "monthly_spend_limit", js: "monthly_spend_limit", typ: u(undefined, "") },
        { json: "delivery_status_iam_role_arn", js: "delivery_status_iam_role_arn", typ: u(undefined, "") },
        { json: "delivery_status_success_sampling_rate", js: "delivery_status_success_sampling_rate", typ: u(undefined, "") },
        { json: "default_sender_id", js: "default_sender_id", typ: u(undefined, "") },
        { json: "default_sms_type", js: "default_sms_type", typ: u(undefined, "") },
        { json: "usage_report_s3_bucket", js: "usage_report_s3_bucket", typ: u(undefined, "") },
    ], false),
    "SnsTopic": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "delivery_policy", js: "delivery_policy", typ: u(undefined, "") },
        { json: "application_success_feedback_role_arn", js: "application_success_feedback_role_arn", typ: u(undefined, "") },
        { json: "application_success_feedback_sample_rate", js: "application_success_feedback_sample_rate", typ: u(undefined, "") },
        { json: "application_failure_feedback_role_arn", js: "application_failure_feedback_role_arn", typ: u(undefined, "") },
        { json: "http_success_feedback_role_arn", js: "http_success_feedback_role_arn", typ: u(undefined, "") },
        { json: "http_success_feedback_sample_rate", js: "http_success_feedback_sample_rate", typ: u(undefined, "") },
        { json: "http_failure_feedback_role_arn", js: "http_failure_feedback_role_arn", typ: u(undefined, "") },
        { json: "kms_master_key_id", js: "kms_master_key_id", typ: u(undefined, "") },
        { json: "signature_version", js: "signature_version", typ: u(undefined, "") },
        { json: "tracing_config", js: "tracing_config", typ: u(undefined, "") },
        { json: "fifo_topic", js: "fifo_topic", typ: u(undefined, "") },
        { json: "content_based_deduplication", js: "content_based_deduplication", typ: u(undefined, "") },
        { json: "lambda_success_feedback_role_arn", js: "lambda_success_feedback_role_arn", typ: u(undefined, "") },
        { json: "lambda_success_feedback_sample_rate", js: "lambda_success_feedback_sample_rate", typ: u(undefined, "") },
        { json: "lambda_failure_feedback_role_arn", js: "lambda_failure_feedback_role_arn", typ: u(undefined, "") },
        { json: "sqs_success_feedback_role_arn", js: "sqs_success_feedback_role_arn", typ: u(undefined, "") },
        { json: "sqs_success_feedback_sample_rate", js: "sqs_success_feedback_sample_rate", typ: u(undefined, "") },
        { json: "sqs_failure_feedback_role_arn", js: "sqs_failure_feedback_role_arn", typ: u(undefined, "") },
        { json: "firehose_success_feedback_role_arn", js: "firehose_success_feedback_role_arn", typ: u(undefined, "") },
        { json: "firehose_success_feedback_sample_rate", js: "firehose_success_feedback_sample_rate", typ: u(undefined, "") },
        { json: "firehose_failure_feedback_role_arn", js: "firehose_failure_feedback_role_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SnsTopicDataProtectionPolicy": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "policy", js: "policy", typ: "" },
    ], false),
    "SnsTopicPolicy": o([
        { json: "arn", js: "arn", typ: "" },
        { json: "policy", js: "policy", typ: "" },
        { json: "owner", js: "owner", typ: u(undefined, "") },
    ], false),
    "SnsTopicSubscription": o([
        { json: "endpoint", js: "endpoint", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "topic_arn", js: "topic_arn", typ: "" },
        { json: "subscription_role_arn", js: "subscription_role_arn", typ: u(undefined, "") },
        { json: "confirmation_timeout_in_minutes", js: "confirmation_timeout_in_minutes", typ: u(undefined, "") },
        { json: "delivery_policy", js: "delivery_policy", typ: u(undefined, "") },
        { json: "endpoint_auto_confirms", js: "endpoint_auto_confirms", typ: u(undefined, "") },
        { json: "filter_policy", js: "filter_policy", typ: u(undefined, "") },
        { json: "filter_policy_scope", js: "filter_policy_scope", typ: u(undefined, "") },
        { json: "raw_message_delivery", js: "raw_message_delivery", typ: u(undefined, "") },
        { json: "redrive_policy", js: "redrive_policy", typ: u(undefined, "") },
        { json: "application", js: "application", typ: u(undefined, "") },
        { json: "firehose", js: "firehose", typ: u(undefined, "") },
        { json: "lambda", js: "lambda", typ: u(undefined, "") },
        { json: "sms", js: "sms", typ: u(undefined, "") },
        { json: "email", js: "email", typ: u(undefined, "") },
        { json: "email-json", js: "email-json", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "confirmation_was_authenticated", js: "confirmation_was_authenticated", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "pending_confirmation", js: "pending_confirmation", typ: u(undefined, "") },
    ], false),
    "SpotDatafeedSubscription": o([
        { json: "bucket", js: "bucket", typ: "" },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
    ], false),
    "SpotFleetRequest": o([
        { json: "iam_fleet_role", js: "iam_fleet_role", typ: "" },
        { json: "launch_template_specification", js: "launch_template_specification", typ: "" },
        { json: "context", js: "context", typ: u(undefined, "") },
        { json: "replace_unhealthy_instances", js: "replace_unhealthy_instances", typ: u(undefined, "") },
        { json: "launch_template_config", js: "launch_template_config", typ: u(undefined, "") },
        { json: "spot_maintenance_strategies", js: "spot_maintenance_strategies", typ: u(undefined, r("MaintenanceStrategies")) },
        { json: "spot_price", js: "spot_price", typ: u(undefined, "") },
        { json: "wait_for_fulfillment", js: "wait_for_fulfillment", typ: u(undefined, "") },
        { json: "target_capacity", js: "target_capacity", typ: u(undefined, "") },
        { json: "target_capacity_unit_type", js: "target_capacity_unit_type", typ: u(undefined, "") },
        { json: "allocation_strategy", js: "allocation_strategy", typ: u(undefined, "") },
        { json: "instance_pools_to_use_count", js: "instance_pools_to_use_count", typ: u(undefined, "") },
        { json: "excess_capacity_termination_policy", js: "excess_capacity_termination_policy", typ: u(undefined, "") },
        { json: "terminate_instances_with_expiration", js: "terminate_instances_with_expiration", typ: u(undefined, "") },
        { json: "terminate_instances_on_delete", js: "terminate_instances_on_delete", typ: u(undefined, "") },
        { json: "instance_interruption_behaviour", js: "instance_interruption_behaviour", typ: u(undefined, "") },
        { json: "fleet_type", js: "fleet_type", typ: u(undefined, "") },
        { json: "valid_until", js: "valid_until", typ: u(undefined, "") },
        { json: "valid_from", js: "valid_from", typ: u(undefined, "") },
        { json: "on_demand_allocation_strategy", js: "on_demand_allocation_strategy", typ: u(undefined, "") },
        { json: "on_demand_max_total_price", js: "on_demand_max_total_price", typ: u(undefined, "") },
        { json: "on_demand_target_capacity", js: "on_demand_target_capacity", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "overrides", js: "overrides", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "capacity_rebalance", js: "capacity_rebalance", typ: u(undefined, r("CapacityRebalance")) },
        { json: "replacement_strategy", js: "replacement_strategy", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "instance_requirements", js: "instance_requirements", typ: u(undefined, "") },
        { json: "instance_type", js: "instance_type", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "subnet_id", js: "subnet_id", typ: u(undefined, "") },
        { json: "weighted_capacity", js: "weighted_capacity", typ: u(undefined, "") },
        { json: "bare_metal", js: "bare_metal", typ: u(undefined, "") },
        { json: "burstable_performance", js: "burstable_performance", typ: u(undefined, "") },
        { json: "local_storage", js: "local_storage", typ: u(undefined, "") },
        { json: "on_demand_max_price_percentage_over_lowest_price", js: "on_demand_max_price_percentage_over_lowest_price", typ: u(undefined, "") },
        { json: "require_hibernate_support", js: "require_hibernate_support", typ: u(undefined, "") },
        { json: "spot_max_price_percentage_over_lowest_price", js: "spot_max_price_percentage_over_lowest_price", typ: u(undefined, "") },
        { json: "spot_request_state", js: "spot_request_state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SpotInstanceRequest": o([
        { json: "spot_price", js: "spot_price", typ: u(undefined, "") },
        { json: "wait_for_fulfillment", js: "wait_for_fulfillment", typ: u(undefined, "") },
        { json: "spot_type", js: "spot_type", typ: u(undefined, "") },
        { json: "launch_group", js: "launch_group", typ: u(undefined, "") },
        { json: "block_duration_minutes", js: "block_duration_minutes", typ: u(undefined, "") },
        { json: "instance_interruption_behavior", js: "instance_interruption_behavior", typ: u(undefined, "") },
        { json: "valid_until", js: "valid_until", typ: u(undefined, "") },
        { json: "valid_from", js: "valid_from", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "spot_bid_status", js: "spot_bid_status", typ: u(undefined, "") },
        { json: "spot_instance_id", js: "spot_instance_id", typ: u(undefined, "") },
        { json: "public_dns", js: "public_dns", typ: u(undefined, "") },
        { json: "public_ip", js: "public_ip", typ: u(undefined, "") },
        { json: "private_dns", js: "private_dns", typ: u(undefined, "") },
        { json: "private_ip", js: "private_ip", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "PurpleSqsQueue": o([
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "visibility_timeout_seconds", js: "visibility_timeout_seconds", typ: u(undefined, "") },
        { json: "message_retention_seconds", js: "message_retention_seconds", typ: u(undefined, "") },
        { json: "max_message_size", js: "max_message_size", typ: u(undefined, "") },
        { json: "delay_seconds", js: "delay_seconds", typ: u(undefined, "") },
        { json: "receive_wait_time_seconds", js: "receive_wait_time_seconds", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "redrive_allow_policy", js: "redrive_allow_policy", typ: u(undefined, "") },
        { json: "fifo_queue", js: "fifo_queue", typ: u(undefined, "") },
        { json: "content_based_deduplication", js: "content_based_deduplication", typ: u(undefined, "") },
        { json: "sqs_managed_sse_enabled", js: "sqs_managed_sse_enabled", typ: u(undefined, "") },
        { json: "kms_master_key_id", js: "kms_master_key_id", typ: u(undefined, "") },
        { json: "kms_data_key_reuse_period_seconds", js: "kms_data_key_reuse_period_seconds", typ: u(undefined, "") },
        { json: "deduplication_scope", js: "deduplication_scope", typ: u(undefined, "") },
        { json: "fifo_throughput_limit", js: "fifo_throughput_limit", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
    ], false),
    "SqsQueuePolicy": o([
        { json: "queue_url", js: "queue_url", typ: "" },
        { json: "policy", js: "policy", typ: "" },
    ], false),
    "SqsQueueRedriveAllowPolicy": o([
        { json: "queue_url", js: "queue_url", typ: "" },
        { json: "redrive_allow_policy", js: "redrive_allow_policy", typ: "" },
    ], false),
    "SqsQueueRedrivePolicy": o([
        { json: "queue_url", js: "queue_url", typ: "" },
        { json: "redrive_policy", js: "redrive_policy", typ: "" },
    ], false),
    "SsmActivation": o([
        { json: "iam_role", js: "iam_role", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "expiration_date", js: "expiration_date", typ: u(undefined, "") },
        { json: "registration_limit", js: "registration_limit", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "activation_code", js: "activation_code", typ: u(undefined, "") },
        { json: "expired", js: "expired", typ: u(undefined, "") },
        { json: "registration_count", js: "registration_count", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SsmAssociation": o([
        { json: "name", js: "name", typ: "" },
        { json: "s3_bucket_name", js: "s3_bucket_name", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "apply_only_at_cron_interval", js: "apply_only_at_cron_interval", typ: u(undefined, "") },
        { json: "association_name", js: "association_name", typ: u(undefined, "") },
        { json: "automation_target_parameter_name", js: "automation_target_parameter_name", typ: u(undefined, "") },
        { json: "compliance_severity", js: "compliance_severity", typ: u(undefined, "") },
        { json: "document_version", js: "document_version", typ: u(undefined, "") },
        { json: "max_concurrency", js: "max_concurrency", typ: u(undefined, "") },
        { json: "max_errors", js: "max_errors", typ: u(undefined, "") },
        { json: "output_location", js: "output_location", typ: u(undefined, "") },
        { json: "parameters", js: "parameters", typ: u(undefined, "") },
        { json: "schedule_expression", js: "schedule_expression", typ: u(undefined, "") },
        { json: "sync_compliance", js: "sync_compliance", typ: u(undefined, "") },
        { json: "targets", js: "targets", typ: u(undefined, "") },
        { json: "wait_for_success_timeout_seconds", js: "wait_for_success_timeout_seconds", typ: u(undefined, "") },
        { json: "s3_key_prefix", js: "s3_key_prefix", typ: u(undefined, "") },
        { json: "s3_region", js: "s3_region", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "association_id", js: "association_id", typ: u(undefined, "") },
        { json: "instance_id", js: "instance_id", typ: u(undefined, "") },
    ], false),
    "SsmDefaultPatchBaseline": o([
        { json: "baseline_id", js: "baseline_id", typ: "" },
        { json: "operating_system", js: "operating_system", typ: "" },
    ], false),
    "ResourceSsmDocument": o([
        { json: "name", js: "name", typ: "" },
        { json: "content", js: "content", typ: "" },
        { json: "document_type", js: "document_type", typ: "" },
        { json: "attachments_source", js: "attachments_source", typ: u(undefined, "") },
        { json: "document_format", js: "document_format", typ: u(undefined, "") },
        { json: "permissions", js: "permissions", typ: u(undefined, "") },
        { json: "target_type", js: "target_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "version_name", js: "version_name", typ: u(undefined, "") },
        { json: "created_date", js: "created_date", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "schema_version", js: "schema_version", typ: u(undefined, "") },
        { json: "default_version", js: "default_version", typ: u(undefined, "") },
        { json: "document_version", js: "document_version", typ: u(undefined, "") },
        { json: "hash", js: "hash", typ: u(undefined, "") },
        { json: "hash_type", js: "hash_type", typ: u(undefined, "") },
        { json: "latest_version", js: "latest_version", typ: u(undefined, "") },
        { json: "owner", js: "owner", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "parameter", js: "parameter", typ: u(undefined, "") },
        { json: "platform_types", js: "platform_types", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SsmMaintenanceWindow": o([
        { json: "name", js: "name", typ: "" },
        { json: "schedule", js: "schedule", typ: "" },
        { json: "cutoff", js: "cutoff", typ: "" },
        { json: "duration", js: "duration", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "allow_unassociated_targets", js: "allow_unassociated_targets", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "end_date", js: "end_date", typ: u(undefined, "") },
        { json: "schedule_timezone", js: "schedule_timezone", typ: u(undefined, "") },
        { json: "schedule_offset", js: "schedule_offset", typ: u(undefined, "") },
        { json: "start_date", js: "start_date", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SsmMaintenanceWindowTarget": o([
        { json: "window_id", js: "window_id", typ: "" },
        { json: "resource_type", js: "resource_type", typ: "" },
        { json: "targets", js: "targets", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "owner_information", js: "owner_information", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SsmMaintenanceWindowTask": o([
        { json: "window_id", js: "window_id", typ: "" },
        { json: "task_type", js: "task_type", typ: "" },
        { json: "task_arn", js: "task_arn", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "values", js: "values", typ: "" },
        { json: "max_concurrency", js: "max_concurrency", typ: u(undefined, "") },
        { json: "max_errors", js: "max_errors", typ: u(undefined, "") },
        { json: "cutoff_behavior", js: "cutoff_behavior", typ: u(undefined, "") },
        { json: "service_role_arn", js: "service_role_arn", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "targets", js: "targets", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: u(undefined, "") },
        { json: "task_invocation_parameters", js: "task_invocation_parameters", typ: u(undefined, "") },
        { json: "automation_parameters", js: "automation_parameters", typ: u(undefined, "") },
        { json: "lambda_parameters", js: "lambda_parameters", typ: u(undefined, "") },
        { json: "run_command_parameters", js: "run_command_parameters", typ: u(undefined, "") },
        { json: "step_functions_parameters", js: "step_functions_parameters", typ: u(undefined, "") },
        { json: "document_version", js: "document_version", typ: u(undefined, "") },
        { json: "parameter", js: "parameter", typ: u(undefined, "") },
        { json: "client_context", js: "client_context", typ: u(undefined, "") },
        { json: "payload", js: "payload", typ: u(undefined, "") },
        { json: "qualifier", js: "qualifier", typ: u(undefined, "") },
        { json: "comment", js: "comment", typ: u(undefined, "") },
        { json: "document_hash", js: "document_hash", typ: u(undefined, "") },
        { json: "document_hash_type", js: "document_hash_type", typ: u(undefined, "") },
        { json: "notification_config", js: "notification_config", typ: u(undefined, "") },
        { json: "output_s3_bucket", js: "output_s3_bucket", typ: u(undefined, "") },
        { json: "output_s3_key_prefix", js: "output_s3_key_prefix", typ: u(undefined, "") },
        { json: "timeout_seconds", js: "timeout_seconds", typ: u(undefined, "") },
        { json: "cloudwatch_config", js: "cloudwatch_config", typ: u(undefined, "") },
        { json: "input", js: "input", typ: u(undefined, "") },
        { json: "notification_arn", js: "notification_arn", typ: u(undefined, "") },
        { json: "notification_events", js: "notification_events", typ: u(undefined, "") },
        { json: "notification_type", js: "notification_type", typ: u(undefined, "") },
        { json: "cloudwatch_log_group_name", js: "cloudwatch_log_group_name", typ: u(undefined, "") },
        { json: "cloudwatch_output_enabled", js: "cloudwatch_output_enabled", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "window_task_id", js: "window_task_id", typ: u(undefined, "") },
    ], false),
    "ResourceSsmParameter": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "allowed_pattern", js: "allowed_pattern", typ: u(undefined, "") },
        { json: "data_type", js: "data_type", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "tier", js: "tier", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
    ], false),
    "ResourceSsmPatchBaseline": o([
        { json: "name", js: "name", typ: "" },
        { json: "configuration", js: "configuration", typ: "" },
        { json: "products", js: "products", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "operating_system", js: "operating_system", typ: u(undefined, "") },
        { json: "approved_patches_compliance_level", js: "approved_patches_compliance_level", typ: u(undefined, "") },
        { json: "approved_patches", js: "approved_patches", typ: u(undefined, "") },
        { json: "rejected_patches", js: "rejected_patches", typ: u(undefined, "") },
        { json: "global_filter", js: "global_filter", typ: u(undefined, "") },
        { json: "approval_rule", js: "approval_rule", typ: u(undefined, "") },
        { json: "source", js: "source", typ: u(undefined, "") },
        { json: "rejected_patches_action", js: "rejected_patches_action", typ: u(undefined, "") },
        { json: "approved_patches_enable_non_security", js: "approved_patches_enable_non_security", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "approve_after_days", js: "approve_after_days", typ: u(undefined, "") },
        { json: "approve_until_date", js: "approve_until_date", typ: u(undefined, "") },
        { json: "compliance_level", js: "compliance_level", typ: u(undefined, "") },
        { json: "enable_non_security", js: "enable_non_security", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SsmPatchGroup": o([
        { json: "baseline_id", js: "baseline_id", typ: "" },
        { json: "patch_group", js: "patch_group", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SsmResourceDataSync": o([
        { json: "name", js: "name", typ: "" },
        { json: "s3_destination", js: "s3_destination", typ: "" },
    ], false),
    "SsmServiceSetting": o([
        { json: "setting_id", js: "setting_id", typ: "" },
        { json: "setting_value", js: "setting_value", typ: "" },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
    ], false),
    "ResourceSsmincidentsReplicationSet": o([
        { json: "name", js: "name", typ: "" },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "created_by", js: "created_by", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "deletion_protected", js: "deletion_protected", typ: u(undefined, "") },
        { json: "last_modified_by", js: "last_modified_by", typ: u(undefined, "") },
        { json: "last_modified_time", js: "last_modified_time", typ: u(undefined, "") },
        { json: "status_update_time", js: "status_update_time", typ: u(undefined, "") },
        { json: "status_message", js: "status_message", typ: u(undefined, "") },
    ], false),
    "SsoadminAccountAssignment": o([
        { json: "instance_arn", js: "instance_arn", typ: u(undefined, "") },
        { json: "permission_set_arn", js: "permission_set_arn", typ: u(undefined, "") },
        { json: "principal_id", js: "principal_id", typ: u(undefined, "") },
        { json: "principal_type", js: "principal_type", typ: u(undefined, "") },
        { json: "target_id", js: "target_id", typ: u(undefined, "") },
        { json: "target_type", js: "target_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SsoadminYAttachment": o([
        { json: "instance_arn", js: "instance_arn", typ: u(undefined, "") },
        { json: "permission_set_arn", js: "permission_set_arn", typ: u(undefined, "") },
        { json: "customer_managed_policy_reference", js: "customer_managed_policy_reference", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "permissions_boundary", js: "permissions_boundary", typ: u(undefined, "") },
        { json: "managed_policy_arn", js: "managed_policy_arn", typ: u(undefined, "") },
    ], false),
    "SsoadminInstanceAccessControlAttributes": o([
        { json: "attribute", js: "attribute", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "instance_arn", js: "instance_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "SsoadminManagedPolicyAttachment": o([
        { json: "instance_arn", js: "instance_arn", typ: u(undefined, "") },
        { json: "managed_policy_arn", js: "managed_policy_arn", typ: u(undefined, "") },
        { json: "permission_set_arn", js: "permission_set_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "managed_policy_name", js: "managed_policy_name", typ: u(undefined, "") },
    ], false),
    "SsoadminPermissionSetInlinePolicy": o([
        { json: "inline_policy", js: "inline_policy", typ: "" },
        { json: "instance_arn", js: "instance_arn", typ: u(undefined, "") },
        { json: "permission_set_arn", js: "permission_set_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "StoragegatewayCacheClass": o([
        { json: "disk_id", js: "disk_id", typ: "" },
        { json: "gateway_arn", js: "gateway_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "StoragegatewayEdIscsiVolume": o([
        { json: "gateway_arn", js: "gateway_arn", typ: "" },
        { json: "network_interface_id", js: "network_interface_id", typ: "" },
        { json: "target_name", js: "target_name", typ: "" },
        { json: "volume_size_in_bytes", js: "volume_size_in_bytes", typ: u(undefined, "") },
        { json: "snapshot_id", js: "snapshot_id", typ: u(undefined, "") },
        { json: "source_volume_arn", js: "source_volume_arn", typ: u(undefined, "") },
        { json: "kms_encrypted", js: "kms_encrypted", typ: u(undefined, "") },
        { json: "kms_key", js: "kms_key", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "chap_enabled", js: "chap_enabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "lun_number", js: "lun_number", typ: u(undefined, "") },
        { json: "network_interface_port", js: "network_interface_port", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "target_arn", js: "target_arn", typ: u(undefined, "") },
        { json: "volume_arn", js: "volume_arn", typ: u(undefined, "") },
        { json: "volume_id", js: "volume_id", typ: u(undefined, "") },
        { json: "disk_id", js: "disk_id", typ: u(undefined, "") },
        { json: "preserve_existing_data", js: "preserve_existing_data", typ: u(undefined, "") },
        { json: "volume_status", js: "volume_status", typ: u(undefined, "") },
        { json: "volume_type", js: "volume_type", typ: u(undefined, "") },
        { json: "volume_attachment_status", js: "volume_attachment_status", typ: u(undefined, "") },
    ], false),
    "StoragegatewayFileSystemAssociation": o([
        { json: "gateway_arn", js: "gateway_arn", typ: "" },
        { json: "location_arn", js: "location_arn", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "password", js: "password", typ: u(undefined, "") },
        { json: "audit_destination_arn", js: "audit_destination_arn", typ: u(undefined, "") },
        { json: "cache_attributes", js: "cache_attributes", typ: u(undefined, r("CacheAttributes")) },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "CacheAttributes": o([
        { json: "cache_stale_timeout_in_seconds", js: "cache_stale_timeout_in_seconds", typ: "" },
    ], false),
    "StoragegatewayGateway": o([
        { json: "gateway_name", js: "gateway_name", typ: "" },
        { json: "gateway_timezone", js: "gateway_timezone", typ: "" },
        { json: "activation_key", js: "activation_key", typ: u(undefined, "") },
        { json: "average_download_rate_limit_in_bits_per_sec", js: "average_download_rate_limit_in_bits_per_sec", typ: u(undefined, "") },
        { json: "average_upload_rate_limit_in_bits_per_sec", js: "average_upload_rate_limit_in_bits_per_sec", typ: u(undefined, "") },
        { json: "gateway_ip_address", js: "gateway_ip_address", typ: u(undefined, "") },
        { json: "gateway_type", js: "gateway_type", typ: u(undefined, "") },
        { json: "gateway_vpc_endpoint", js: "gateway_vpc_endpoint", typ: u(undefined, "") },
        { json: "cloudwatch_log_group_arn", js: "cloudwatch_log_group_arn", typ: u(undefined, "") },
        { json: "maintenance_start_time", js: "maintenance_start_time", typ: u(undefined, r("MaintenanceStartTime")) },
        { json: "medium_changer_type", js: "medium_changer_type", typ: u(undefined, "") },
        { json: "smb_active_directory_settings", js: "smb_active_directory_settings", typ: u(undefined, r("SMBActiveDirectorySettings")) },
        { json: "smb_guest_password", js: "smb_guest_password", typ: u(undefined, "") },
        { json: "smb_security_strategy", js: "smb_security_strategy", typ: u(undefined, "") },
        { json: "smb_file_share_visibility", js: "smb_file_share_visibility", typ: u(undefined, "") },
        { json: "tape_drive_type", js: "tape_drive_type", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "gateway_id", js: "gateway_id", typ: u(undefined, "") },
        { json: "ec2_instance_id", js: "ec2_instance_id", typ: u(undefined, "") },
        { json: "endpoint_type", js: "endpoint_type", typ: u(undefined, "") },
        { json: "host_environment", js: "host_environment", typ: u(undefined, "") },
        { json: "gateway_network_interface", js: "gateway_network_interface", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "ipv4_address", js: "ipv4_address", typ: u(undefined, "") },
    ], false),
    "MaintenanceStartTime": o([
        { json: "day_of_month", js: "day_of_month", typ: "" },
        { json: "day_of_week", js: "day_of_week", typ: "" },
        { json: "hour_of_day", js: "hour_of_day", typ: "" },
        { json: "minute_of_hour", js: "minute_of_hour", typ: "" },
    ], false),
    "SMBActiveDirectorySettings": o([
        { json: "domain_name", js: "domain_name", typ: "" },
        { json: "password", js: "password", typ: "" },
        { json: "username", js: "username", typ: "" },
        { json: "timeout_in_seconds", js: "timeout_in_seconds", typ: "" },
        { json: "organizational_unit", js: "organizational_unit", typ: "" },
        { json: "domain_controllers", js: "domain_controllers", typ: "" },
    ], false),
    "StoragegatewayNFSFileShare": o([
        { json: "client_list", js: "client_list", typ: "" },
        { json: "gateway_arn", js: "gateway_arn", typ: "" },
        { json: "location_arn", js: "location_arn", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "vpc_endpoint_dns_name", js: "vpc_endpoint_dns_name", typ: u(undefined, "") },
        { json: "bucket_region", js: "bucket_region", typ: u(undefined, "") },
        { json: "audit_destination_arn", js: "audit_destination_arn", typ: u(undefined, "") },
        { json: "default_storage_class", js: "default_storage_class", typ: u(undefined, "") },
        { json: "guess_mime_type_enabled", js: "guess_mime_type_enabled", typ: u(undefined, "") },
        { json: "kms_encrypted", js: "kms_encrypted", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "nfs_file_share_defaults", js: "nfs_file_share_defaults", typ: u(undefined, r("NFSFileShareDefaults")) },
        { json: "cache_attributes", js: "cache_attributes", typ: u(undefined, r("CacheAttributes")) },
        { json: "object_acl", js: "object_acl", typ: u(undefined, "") },
        { json: "read_only", js: "read_only", typ: u(undefined, "") },
        { json: "requester_pays", js: "requester_pays", typ: u(undefined, "") },
        { json: "squash", js: "squash", typ: u(undefined, "") },
        { json: "file_share_name", js: "file_share_name", typ: u(undefined, "") },
        { json: "notification_policy", js: "notification_policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "fileshare_id", js: "fileshare_id", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "NFSFileShareDefaults": o([
        { json: "directory_mode", js: "directory_mode", typ: "" },
        { json: "file_mode", js: "file_mode", typ: "" },
        { json: "group_id", js: "group_id", typ: "" },
        { json: "owner_id", js: "owner_id", typ: "" },
    ], false),
    "StoragegatewaySMBFileShare": o([
        { json: "gateway_arn", js: "gateway_arn", typ: "" },
        { json: "location_arn", js: "location_arn", typ: "" },
        { json: "role_arn", js: "role_arn", typ: "" },
        { json: "vpc_endpoint_dns_name", js: "vpc_endpoint_dns_name", typ: u(undefined, "") },
        { json: "bucket_region", js: "bucket_region", typ: u(undefined, "") },
        { json: "admin_user_list", js: "admin_user_list", typ: u(undefined, "") },
        { json: "authentication", js: "authentication", typ: u(undefined, "") },
        { json: "audit_destination_arn", js: "audit_destination_arn", typ: u(undefined, "") },
        { json: "default_storage_class", js: "default_storage_class", typ: u(undefined, "") },
        { json: "file_share_name", js: "file_share_name", typ: u(undefined, "") },
        { json: "guess_mime_type_enabled", js: "guess_mime_type_enabled", typ: u(undefined, "") },
        { json: "invalid_user_list", js: "invalid_user_list", typ: u(undefined, "") },
        { json: "kms_encrypted", js: "kms_encrypted", typ: u(undefined, "") },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "object_acl", js: "object_acl", typ: u(undefined, "") },
        { json: "oplocks_enabled", js: "oplocks_enabled", typ: u(undefined, "") },
        { json: "cache_attributes", js: "cache_attributes", typ: u(undefined, r("CacheAttributes")) },
        { json: "read_only", js: "read_only", typ: u(undefined, "") },
        { json: "requester_pays", js: "requester_pays", typ: u(undefined, "") },
        { json: "smb_acl_enabled", js: "smb_acl_enabled", typ: u(undefined, "") },
        { json: "case_sensitivity", js: "case_sensitivity", typ: u(undefined, "") },
        { json: "valid_user_list", js: "valid_user_list", typ: u(undefined, "") },
        { json: "access_based_enumeration", js: "access_based_enumeration", typ: u(undefined, "") },
        { json: "notification_policy", js: "notification_policy", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "fileshare_id", js: "fileshare_id", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "StoragegatewayTapePool": o([
        { json: "pool_name", js: "pool_name", typ: "" },
        { json: "storage_class", js: "storage_class", typ: "" },
        { json: "retention_lock_type", js: "retention_lock_type", typ: "" },
        { json: "retention_lock_time_in_days", js: "retention_lock_time_in_days", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "SyntheticsCanary": o([
        { json: "artifact_s3_location", js: "artifact_s3_location", typ: "" },
        { json: "execution_role_arn", js: "execution_role_arn", typ: "" },
        { json: "handler", js: "handler", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "runtime_version", js: "runtime_version", typ: "" },
        { json: "schedule", js: "schedule", typ: r("SyntheticsCanarySchedule") },
        { json: "delete_lambda", js: "delete_lambda", typ: u(undefined, "") },
        { json: "vpc_config", js: "vpc_config", typ: u(undefined, r("Vpc")) },
        { json: "failure_retention_period", js: "failure_retention_period", typ: u(undefined, "") },
        { json: "run_config", js: "run_config", typ: u(undefined, r("RunConfig")) },
        { json: "start_canary", js: "start_canary", typ: u(undefined, "") },
        { json: "success_retention_period", js: "success_retention_period", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "artifact_config", js: "artifact_config", typ: u(undefined, r("ArtifactConfig")) },
        { json: "s3_encryption", js: "s3_encryption", typ: u(undefined, r("S3Encryption")) },
        { json: "kms_key_arn", js: "kms_key_arn", typ: u(undefined, "") },
        { json: "duration_in_seconds", js: "duration_in_seconds", typ: u(undefined, "") },
        { json: "environment_variables", js: "environment_variables", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "engine_arn", js: "engine_arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "source_location_arn", js: "source_location_arn", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "timeline", js: "timeline", typ: u(undefined, r("Timeline")) },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
    ], false),
    "ArtifactConfig": o([
        { json: "s3_encryption", js: "s3_encryption", typ: "" },
    ], false),
    "RunConfig": o([
        { json: "timeout_in_seconds", js: "timeout_in_seconds", typ: "" },
        { json: "memory_in_mb", js: "memory_in_mb", typ: "" },
        { json: "active_tracing", js: "active_tracing", typ: "" },
        { json: "environment_variables", js: "environment_variables", typ: "" },
    ], false),
    "S3Encryption": o([
        { json: "encryption_mode", js: "encryption_mode", typ: "" },
        { json: "kms_key_arn", js: "kms_key_arn", typ: "" },
    ], false),
    "SyntheticsCanarySchedule": o([
        { json: "expression", js: "expression", typ: "" },
        { json: "duration_in_seconds", js: "duration_in_seconds", typ: u(undefined, "") },
    ], false),
    "Timeline": o([
        { json: "created", js: "created", typ: "" },
        { json: "last_modified", js: "last_modified", typ: "" },
        { json: "last_started", js: "last_started", typ: "" },
        { json: "last_stopped", js: "last_stopped", typ: "" },
    ], false),
    "SyntheticsGroupAssociation": o([
        { json: "group_name", js: "group_name", typ: "" },
        { json: "canary_arn", js: "canary_arn", typ: "" },
        { json: "group_id", js: "group_id", typ: u(undefined, "") },
    ], false),
    "TimestreamwriteDatabase": o([
        { json: "database_name", js: "database_name", typ: "" },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "table_count", js: "table_count", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "TimestreamwriteTable": o([
        { json: "database_name", js: "database_name", typ: "" },
        { json: "table_name", js: "table_name", typ: "" },
        { json: "enable_magnetic_store_writes", js: "enable_magnetic_store_writes", typ: "" },
        { json: "magnetic_store_retention_period_in_days", js: "magnetic_store_retention_period_in_days", typ: "" },
        { json: "memory_store_retention_period_in_hours", js: "memory_store_retention_period_in_hours", typ: "" },
        { json: "composite_partition_key", js: "composite_partition_key", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "magnetic_store_write_properties", js: "magnetic_store_write_properties", typ: u(undefined, "") },
        { json: "retention_properties", js: "retention_properties", typ: u(undefined, "") },
        { json: "schema", js: "schema", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "magnetic_store_rejected_data_location", js: "magnetic_store_rejected_data_location", typ: u(undefined, "") },
        { json: "s3_configuration", js: "s3_configuration", typ: u(undefined, "") },
        { json: "bucket_name", js: "bucket_name", typ: u(undefined, "") },
        { json: "encryption_option", js: "encryption_option", typ: u(undefined, "") },
        { json: "kms_key_id", js: "kms_key_id", typ: u(undefined, "") },
        { json: "object_key_prefix", js: "object_key_prefix", typ: u(undefined, "") },
        { json: "enforcement_in_record", js: "enforcement_in_record", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "TranscribeLanguageModel": o([
        { json: "base_model_name", js: "base_model_name", typ: "" },
        { json: "input_data_config", js: "input_data_config", typ: "" },
        { json: "language_code", js: "language_code", typ: "" },
        { json: "model_name", js: "model_name", typ: "" },
        { json: "data_access_role_arn", js: "data_access_role_arn", typ: "" },
        { json: "s3_uri", js: "s3_uri", typ: "" },
        { json: "tuning_data_s3_uri", js: "tuning_data_s3_uri", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "TranscribeVocabulary": o([
        { json: "language_code", js: "language_code", typ: "" },
        { json: "vocabulary_file_uri", js: "vocabulary_file_uri", typ: "" },
        { json: "vocabulary_name", js: "vocabulary_name", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "download_uri", js: "download_uri", typ: u(undefined, "") },
        { json: "phrases", js: "phrases", typ: u(undefined, "") },
    ], false),
    "TranscribeVocabularyFilter": o([
        { json: "language_code", js: "language_code", typ: "" },
        { json: "vocabulary_filter_name", js: "vocabulary_filter_name", typ: "" },
        { json: "vocabulary_filter_file_uri", js: "vocabulary_filter_file_uri", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "words", js: "words", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "download_uri", js: "download_uri", typ: u(undefined, "") },
    ], false),
    "Transfer": o([
        { json: "external_id", js: "external_id", typ: u(undefined, "") },
        { json: "server_id", js: "server_id", typ: "" },
        { json: "role", js: "role", typ: "" },
        { json: "entry", js: "entry", typ: "" },
        { json: "target", js: "target", typ: "" },
        { json: "gid", js: "gid", typ: "" },
        { json: "uid", js: "uid", typ: "" },
        { json: "home_directory", js: "home_directory", typ: u(undefined, "") },
        { json: "home_directory_mappings", js: "home_directory_mappings", typ: u(undefined, "") },
        { json: "home_directory_type", js: "home_directory_type", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "posix_profile", js: "posix_profile", typ: u(undefined, "") },
        { json: "secondary_gids", js: "secondary_gids", typ: u(undefined, "") },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "TransferAgreement": o([
        { json: "access_role", js: "access_role", typ: "" },
        { json: "base_directory", js: "base_directory", typ: "" },
        { json: "local_profile_id", js: "local_profile_id", typ: "" },
        { json: "partner_profile_id", js: "partner_profile_id", typ: "" },
        { json: "server_id", js: "server_id", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "TransferCertificate": o([
        { json: "certificate", js: "certificate", typ: "" },
        { json: "usage", js: "usage", typ: "" },
        { json: "certificate_chain", js: "certificate_chain", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "private_key", js: "private_key", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "certificate_id", js: "certificate_id", typ: u(undefined, "") },
        { json: "active_date", js: "active_date", typ: u(undefined, "") },
        { json: "inactive_date", js: "inactive_date", typ: u(undefined, "") },
    ], false),
    "TransferConnector": o([
        { json: "access_role", js: "access_role", typ: "" },
        { json: "url", js: "url", typ: "" },
        { json: "compression", js: "compression", typ: "" },
        { json: "encryption_algorithm", js: "encryption_algorithm", typ: "" },
        { json: "local_profile_id", js: "local_profile_id", typ: "" },
        { json: "mdn_response", js: "mdn_response", typ: "" },
        { json: "partner_profile_id", js: "partner_profile_id", typ: "" },
        { json: "signing_algorithm", js: "signing_algorithm", typ: "" },
        { json: "trusted_host_keys", js: "trusted_host_keys", typ: "" },
        { json: "user_secret_id", js: "user_secret_id", typ: "" },
        { json: "as2_config", js: "as2_config", typ: u(undefined, "") },
        { json: "logging_role", js: "logging_role", typ: u(undefined, "") },
        { json: "sftp_config", js: "sftp_config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "mdn_signing_algorithm", js: "mdn_signing_algorithm", typ: u(undefined, "") },
        { json: "message_subject", js: "message_subject", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "TransferProfile": o([
        { json: "as2_id", js: "as2_id", typ: "" },
        { json: "profile_type", js: "profile_type", typ: "" },
        { json: "certificate_ids", js: "certificate_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
    ], false),
    "ResourceTransferServer": o([
        { json: "execution_role", js: "execution_role", typ: "" },
        { json: "workflow_id", js: "workflow_id", typ: "" },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
        { json: "domain", js: "domain", typ: u(undefined, "") },
        { json: "endpoint_details", js: "endpoint_details", typ: u(undefined, "") },
        { json: "endpoint_type", js: "endpoint_type", typ: u(undefined, "") },
        { json: "invocation_role", js: "invocation_role", typ: u(undefined, "") },
        { json: "host_key", js: "host_key", typ: u(undefined, "") },
        { json: "url", js: "url", typ: u(undefined, "") },
        { json: "identity_provider_type", js: "identity_provider_type", typ: u(undefined, "") },
        { json: "directory_id", js: "directory_id", typ: u(undefined, "") },
        { json: "function", js: "function", typ: u(undefined, "") },
        { json: "logging_role", js: "logging_role", typ: u(undefined, "") },
        { json: "force_destroy", js: "force_destroy", typ: u(undefined, "") },
        { json: "security_policy_name", js: "security_policy_name", typ: u(undefined, "") },
        { json: "structured_log_destinations", js: "structured_log_destinations", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "workflow_details", js: "workflow_details", typ: u(undefined, "") },
        { json: "address_allocation_ids", js: "address_allocation_ids", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "as2_transports", js: "as2_transports", typ: u(undefined, "") },
        { json: "passive_ip", js: "passive_ip", typ: u(undefined, "") },
        { json: "set_stat_option", js: "set_stat_option", typ: u(undefined, "") },
        { json: "tls_session_resumption_mode", js: "tls_session_resumption_mode", typ: u(undefined, "") },
        { json: "on_upload", js: "on_upload", typ: u(undefined, "") },
        { json: "on_partial_upload", js: "on_partial_upload", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "endpoint", js: "endpoint", typ: u(undefined, "") },
        { json: "host_key_fingerprint", js: "host_key_fingerprint", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "TransferSSHKey": o([
        { json: "server_id", js: "server_id", typ: u(undefined, "") },
        { json: "user_name", js: "user_name", typ: u(undefined, "") },
        { json: "body", js: "body", typ: u(undefined, "") },
    ], false),
    "TransferWorkflow": o([
        { json: "steps", js: "steps", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "value", js: "value", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "on_exception_steps", js: "on_exception_steps", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "copy_step_details", js: "copy_step_details", typ: u(undefined, "") },
        { json: "custom_step_details", js: "custom_step_details", typ: u(undefined, "") },
        { json: "decrypt_step_details", js: "decrypt_step_details", typ: u(undefined, "") },
        { json: "delete_step_details", js: "delete_step_details", typ: u(undefined, "") },
        { json: "tag_step_details", js: "tag_step_details", typ: u(undefined, "") },
        { json: "destination_file_location", js: "destination_file_location", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "overwrite_existing", js: "overwrite_existing", typ: u(undefined, "") },
        { json: "source_file_location", js: "source_file_location", typ: u(undefined, "") },
        { json: "target", js: "target", typ: u(undefined, "") },
        { json: "timeout_seconds", js: "timeout_seconds", typ: u(undefined, "") },
        { json: "efs_file_location", js: "efs_file_location", typ: u(undefined, "") },
        { json: "s3_file_location", js: "s3_file_location", typ: u(undefined, "") },
        { json: "file_system_id", js: "file_system_id", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "bucket", js: "bucket", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VerifiedaccessInstance": o([
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "creation_time", js: "creation_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
        { json: "verified_access_trust_providers", js: "verified_access_trust_providers", typ: u(undefined, r("VerifiedAccessTrustProviders")) },
    ], false),
    "VerifiedAccessTrustProviders": o([
        { json: "description", js: "description", typ: "" },
        { json: "device_trust_provider_type", js: "device_trust_provider_type", typ: "" },
        { json: "trust_provider_type", js: "trust_provider_type", typ: "" },
        { json: "user_trust_provider_type", js: "user_trust_provider_type", typ: "" },
        { json: "verified_access_trust_provider_id", js: "verified_access_trust_provider_id", typ: "" },
    ], false),
    "VerifiedaccessTrustProvider": o([
        { json: "policy_reference_name", js: "policy_reference_name", typ: "" },
        { json: "trust_provider_type", js: "trust_provider_type", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "device_options", js: "device_options", typ: u(undefined, "") },
        { json: "oidc_options", js: "oidc_options", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "user_trust_provider_type", js: "user_trust_provider_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "VolumeAttachment": o([
        { json: "device_name", js: "device_name", typ: "" },
        { json: "instance_id", js: "instance_id", typ: "" },
        { json: "volume_id", js: "volume_id", typ: "" },
        { json: "skip_destroy", js: "skip_destroy", typ: u(undefined, "") },
        { json: "stop_instance_before_detaching", js: "stop_instance_before_detaching", typ: u(undefined, "") },
    ], false),
    "ResourceVpc": o([
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "instance_tenancy", js: "instance_tenancy", typ: u(undefined, "") },
        { json: "ipv4_ipam_pool_id", js: "ipv4_ipam_pool_id", typ: u(undefined, "") },
        { json: "ipv4_netmask_length", js: "ipv4_netmask_length", typ: u(undefined, "") },
        { json: "ipv6_cidr_block", js: "ipv6_cidr_block", typ: u(undefined, "") },
        { json: "ipv6_ipam_pool_id", js: "ipv6_ipam_pool_id", typ: u(undefined, "") },
        { json: "ipv6_netmask_length", js: "ipv6_netmask_length", typ: u(undefined, "") },
        { json: "ipv6_cidr_block_network_border_group", js: "ipv6_cidr_block_network_border_group", typ: u(undefined, "") },
        { json: "enable_dns_support", js: "enable_dns_support", typ: u(undefined, "") },
        { json: "enable_network_address_usage_metrics", js: "enable_network_address_usage_metrics", typ: u(undefined, "") },
        { json: "enable_dns_hostnames", js: "enable_dns_hostnames", typ: u(undefined, "") },
        { json: "assign_generated_ipv6_cidr_block", js: "assign_generated_ipv6_cidr_block", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "main_route_table_id", js: "main_route_table_id", typ: u(undefined, "") },
        { json: "default_network_acl_id", js: "default_network_acl_id", typ: u(undefined, "") },
        { json: "default_security_group_id", js: "default_security_group_id", typ: u(undefined, "") },
        { json: "default_route_table_id", js: "default_route_table_id", typ: u(undefined, "") },
        { json: "ipv6_association_id", js: "ipv6_association_id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VpcDHCPOptionsAssociation": o([
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "dhcp_options_id", js: "dhcp_options_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceVpcEndpoint": o([
        { json: "service_name", js: "service_name", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "auto_accept", js: "auto_accept", typ: u(undefined, "") },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "private_dns_enabled", js: "private_dns_enabled", typ: u(undefined, "") },
        { json: "dns_options", js: "dns_options", typ: u(undefined, r("DNSOptions")) },
        { json: "ip_address_type", js: "ip_address_type", typ: u(undefined, "") },
        { json: "route_table_ids", js: "route_table_ids", typ: u(undefined, "") },
        { json: "subnet_ids", js: "subnet_ids", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "vpc_endpoint_type", js: "vpc_endpoint_type", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "cidr_blocks", js: "cidr_blocks", typ: u(undefined, "") },
        { json: "dns_entry", js: "dns_entry", typ: u(undefined, "") },
        { json: "network_interface_ids", js: "network_interface_ids", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "prefix_list_id", js: "prefix_list_id", typ: u(undefined, "") },
        { json: "requester_managed", js: "requester_managed", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "dns_name", js: "dns_name", typ: u(undefined, "") },
        { json: "hosted_zone_id", js: "hosted_zone_id", typ: u(undefined, "") },
    ], false),
    "DNSOptions": o([
        { json: "dns_record_ip_type", js: "dns_record_ip_type", typ: "" },
        { json: "private_dns_only_for_inbound_resolver_endpoint", js: "private_dns_only_for_inbound_resolver_endpoint", typ: "" },
    ], false),
    "VpcEndpointConnectionAccepter": o([
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: "" },
        { json: "vpc_endpoint_service_id", js: "vpc_endpoint_service_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "vpc_endpoint_state", js: "vpc_endpoint_state", typ: u(undefined, "") },
    ], false),
    "VpcEndpointConnectionNotification": o([
        { json: "connection_notification_arn", js: "connection_notification_arn", typ: "" },
        { json: "vpc_endpoint_service_id", js: "vpc_endpoint_service_id", typ: u(undefined, "") },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "notification_type", js: "notification_type", typ: u(undefined, "") },
    ], false),
    "VpcEndpointPolicy": o([
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: "" },
        { json: "policy", js: "policy", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "VpcEndpointRouteTableAssociation": o([
        { json: "route_table_id", js: "route_table_id", typ: "" },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "VpcEndpointSecurityGroupAssociation": o([
        { json: "security_group_id", js: "security_group_id", typ: "" },
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: "" },
        { json: "replace_default_association", js: "replace_default_association", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceVpcEndpointService": o([
        { json: "acceptance_required", js: "acceptance_required", typ: "" },
        { json: "allowed_principals", js: "allowed_principals", typ: u(undefined, "") },
        { json: "gateway_load_balancer_arns", js: "gateway_load_balancer_arns", typ: u(undefined, "") },
        { json: "network_load_balancer_arns", js: "network_load_balancer_arns", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "private_dns_name", js: "private_dns_name", typ: u(undefined, "") },
        { json: "supported_ip_address_types", js: "supported_ip_address_types", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "availability_zones", js: "availability_zones", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "base_endpoint_dns_names", js: "base_endpoint_dns_names", typ: u(undefined, "") },
        { json: "manages_vpc_endpoints", js: "manages_vpc_endpoints", typ: u(undefined, "") },
        { json: "service_name", js: "service_name", typ: u(undefined, "") },
        { json: "service_type", js: "service_type", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VpcEndpointServiceAllowedPrincipal": o([
        { json: "vpc_endpoint_service_id", js: "vpc_endpoint_service_id", typ: "" },
        { json: "principal_arn", js: "principal_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "VpcEndpointSubnetAssociation": o([
        { json: "vpc_endpoint_id", js: "vpc_endpoint_id", typ: "" },
        { json: "subnet_id", js: "subnet_id", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "VpcIPAM": o([
        { json: "region_name", js: "region_name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "cascade", js: "cascade", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "default_resource_discovery_id", js: "default_resource_discovery_id", typ: u(undefined, "") },
        { json: "default_resource_discovery_association_id", js: "default_resource_discovery_association_id", typ: u(undefined, "") },
        { json: "private_default_scope_id", js: "private_default_scope_id", typ: u(undefined, "") },
        { json: "public_default_scope_id", js: "public_default_scope_id", typ: u(undefined, "") },
        { json: "scope_count", js: "scope_count", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VpcIPAMOrganizationAdminAccount": o([
        { json: "delegated_admin_account_id", js: "delegated_admin_account_id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "email", js: "email", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "service_principal", js: "service_principal", typ: u(undefined, "") },
    ], false),
    "VpcIPAMPoolCIDR": o([
        { json: "ipam_pool_id", js: "ipam_pool_id", typ: "" },
        { json: "cidr", js: "cidr", typ: u(undefined, "") },
        { json: "cidr_authorization_context", js: "cidr_authorization_context", typ: u(undefined, r("CIDRAuthorizationContext")) },
        { json: "netmask_length", js: "netmask_length", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ipam_pool_cidr_id", js: "ipam_pool_cidr_id", typ: u(undefined, "") },
    ], false),
    "CIDRAuthorizationContext": o([
        { json: "message", js: "message", typ: "" },
        { json: "signature", js: "signature", typ: "" },
    ], false),
    "VpcIPAMPoolCIDRAllocation": o([
        { json: "ipam_pool_id", js: "ipam_pool_id", typ: "" },
        { json: "cidr", js: "cidr", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "disallowed_cidrs", js: "disallowed_cidrs", typ: u(undefined, "") },
        { json: "netmask_length", js: "netmask_length", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "resource_id", js: "resource_id", typ: u(undefined, "") },
        { json: "resource_owner", js: "resource_owner", typ: u(undefined, "") },
        { json: "resource_type", js: "resource_type", typ: u(undefined, "") },
    ], false),
    "VpcIPAMResourceDiscovery": o([
        { json: "region_name", js: "region_name", typ: "" },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "is_default", js: "is_default", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "ipam_resource_discovery_region", js: "ipam_resource_discovery_region", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VpcIPAMResourceDiscoveryAssociation": o([
        { json: "ipam_id", js: "ipam_id", typ: "" },
        { json: "ipam_resource_discovery_id", js: "ipam_resource_discovery_id", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_id", js: "owner_id", typ: u(undefined, "") },
        { json: "ipam_arn", js: "ipam_arn", typ: u(undefined, "") },
        { json: "ipam_region", js: "ipam_region", typ: u(undefined, "") },
        { json: "is_default", js: "is_default", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VpcIPAMScope": o([
        { json: "ipam_id", js: "ipam_id", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "ipam_arn", js: "ipam_arn", typ: u(undefined, "") },
        { json: "is_default", js: "is_default", typ: u(undefined, "") },
        { json: "pool_count", js: "pool_count", typ: u(undefined, "") },
        { json: "type", js: "type", typ: u(undefined, "") },
    ], false),
    "VpcIpv4CIDRBlockAssociation": o([
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "cidr_block", js: "cidr_block", typ: u(undefined, "") },
        { json: "ipv4_ipam_pool_id", js: "ipv4_ipam_pool_id", typ: u(undefined, "") },
        { json: "ipv4_netmask_length", js: "ipv4_netmask_length", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "VpcIpv6CIDRBlockAssociation": o([
        { json: "ipv6_ipam_pool_id", js: "ipv6_ipam_pool_id", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "ipv6_cidr_block", js: "ipv6_cidr_block", typ: u(undefined, "") },
        { json: "ipv6_netmask_length", js: "ipv6_netmask_length", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "VpcNetworkPerformanceMetricSubscription": o([
        { json: "destination", js: "destination", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "metric", js: "metric", typ: u(undefined, "") },
        { json: "statistic", js: "statistic", typ: u(undefined, "") },
        { json: "period", js: "period", typ: u(undefined, "") },
    ], false),
    "VpcPeeringConnectionAccepterClass": o([
        { json: "peer_vpc_id", js: "peer_vpc_id", typ: u(undefined, "") },
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "peer_owner_id", js: "peer_owner_id", typ: u(undefined, "") },
        { json: "auto_accept", js: "auto_accept", typ: u(undefined, "") },
        { json: "peer_region", js: "peer_region", typ: u(undefined, "") },
        { json: "accepter", js: "accepter", typ: u(undefined, "") },
        { json: "requester", js: "requester", typ: u(undefined, "") },
        { json: "allow_remote_vpc_dns_resolution", js: "allow_remote_vpc_dns_resolution", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "accept_status", js: "accept_status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_peering_connection_id", js: "vpc_peering_connection_id", typ: u(undefined, "") },
    ], false),
    "VpcPeeringConnectionOptions": o([
        { json: "vpc_peering_connection_id", js: "vpc_peering_connection_id", typ: "" },
        { json: "accepter", js: "accepter", typ: u(undefined, "") },
        { json: "allow_remote_vpc_dns_resolution", js: "allow_remote_vpc_dns_resolution", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "VpclatticeAccessLogSubscription": o([
        { json: "destination_arn", js: "destination_arn", typ: "" },
        { json: "resource_identifier", js: "resource_identifier", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "resource_arn", js: "resource_arn", typ: u(undefined, "") },
    ], false),
    "ResourceVpclatticeListener": o([
        { json: "default_action", js: "default_action", typ: "" },
        { json: "status_code", js: "status_code", typ: "" },
        { json: "target_groups", js: "target_groups", typ: "" },
        { json: "target_group_identifier", js: "target_group_identifier", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "port", js: "port", typ: u(undefined, "") },
        { json: "protocol", js: "protocol", typ: u(undefined, "") },
        { json: "service_arn", js: "service_arn", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "fixed-response", js: "fixed-response", typ: u(undefined, "") },
        { json: "weight", js: "weight", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_at", js: "created_at", typ: u(undefined, "") },
        { json: "listener_id", js: "listener_id", typ: u(undefined, "") },
        { json: "updated_at", js: "updated_at", typ: u(undefined, "") },
    ], false),
    "VpclatticeListenerRule": o([
        { json: "service_identifier", js: "service_identifier", typ: "" },
        { json: "listener_identifier", js: "listener_identifier", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "match", js: "match", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "fixed_response", js: "fixed_response", typ: u(undefined, "") },
        { json: "forward", js: "forward", typ: u(undefined, "") },
        { json: "status_code", js: "status_code", typ: u(undefined, "") },
        { json: "target_groups", js: "target_groups", typ: u(undefined, "") },
        { json: "http_match", js: "http_match", typ: u(undefined, "") },
        { json: "header_matches", js: "header_matches", typ: u(undefined, "") },
        { json: "method", js: "method", typ: u(undefined, "") },
        { json: "path_match", js: "path_match", typ: u(undefined, "") },
        { json: "case_sensitive", js: "case_sensitive", typ: u(undefined, "") },
        { json: "contains", js: "contains", typ: u(undefined, "") },
        { json: "exact", js: "exact", typ: u(undefined, "") },
        { json: "prefix", js: "prefix", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "rule_id", js: "rule_id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VpclatticeServiceNetworkAssociation": o([
        { json: "service_identifier", js: "service_identifier", typ: u(undefined, "") },
        { json: "service_network_identifier", js: "service_network_identifier", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "created_by", js: "created_by", typ: u(undefined, "") },
        { json: "custom_domain_name", js: "custom_domain_name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "vpc_identifier", js: "vpc_identifier", typ: u(undefined, "") },
        { json: "security_group_ids", js: "security_group_ids", typ: u(undefined, "") },
    ], false),
    "VpclatticeTargetGroup": o([
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "port", js: "port", typ: "" },
        { json: "protocol", js: "protocol", typ: "" },
        { json: "vpc_identifier", js: "vpc_identifier", typ: "" },
        { json: "config", js: "config", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "health_check", js: "health_check", typ: u(undefined, "") },
        { json: "ip_address_type", js: "ip_address_type", typ: u(undefined, "") },
        { json: "protocol_version", js: "protocol_version", typ: u(undefined, "") },
        { json: "enabled", js: "enabled", typ: u(undefined, "") },
        { json: "health_check_interval_seconds", js: "health_check_interval_seconds", typ: u(undefined, "") },
        { json: "health_check_timeout_seconds", js: "health_check_timeout_seconds", typ: u(undefined, "") },
        { json: "healthy_threshold_count ", js: "healthy_threshold_count ", typ: u(undefined, "") },
        { json: "path", js: "path", typ: u(undefined, "") },
        { json: "unhealthy_threshold_count", js: "unhealthy_threshold_count", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "status", js: "status", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VPNConnection": o([
        { json: "customer_gateway_id", js: "customer_gateway_id", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "transit_gateway_id", js: "transit_gateway_id", typ: u(undefined, "") },
        { json: "vpn_gateway_id", js: "vpn_gateway_id", typ: u(undefined, "") },
        { json: "static_routes_only", js: "static_routes_only", typ: u(undefined, "") },
        { json: "enable_acceleration", js: "enable_acceleration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "local_ipv4_network_cidr", js: "local_ipv4_network_cidr", typ: u(undefined, "") },
        { json: "local_ipv6_network_cidr", js: "local_ipv6_network_cidr", typ: u(undefined, "") },
        { json: "outside_ip_address_type", js: "outside_ip_address_type", typ: u(undefined, "") },
        { json: "remote_ipv4_network_cidr", js: "remote_ipv4_network_cidr", typ: u(undefined, "") },
        { json: "remote_ipv6_network_cidr", js: "remote_ipv6_network_cidr", typ: u(undefined, "") },
        { json: "transport_transit_gateway_attachment_id", js: "transport_transit_gateway_attachment_id", typ: u(undefined, "") },
        { json: "tunnel_inside_ip_version", js: "tunnel_inside_ip_version", typ: u(undefined, "") },
        { json: "tunnel1_inside_cidr", js: "tunnel1_inside_cidr", typ: u(undefined, "") },
        { json: "tunnel2_inside_cidr", js: "tunnel2_inside_cidr", typ: u(undefined, "") },
        { json: "tunnel1_inside_ipv6_cidr", js: "tunnel1_inside_ipv6_cidr", typ: u(undefined, "") },
        { json: "tunnel2_inside_ipv6_cidr", js: "tunnel2_inside_ipv6_cidr", typ: u(undefined, "") },
        { json: "tunnel1_preshared_key", js: "tunnel1_preshared_key", typ: u(undefined, "") },
        { json: "tunnel2_preshared_key", js: "tunnel2_preshared_key", typ: u(undefined, "") },
        { json: "tunnel1_dpd_timeout_action", js: "tunnel1_dpd_timeout_action", typ: u(undefined, "") },
        { json: "tunnel2_dpd_timeout_action", js: "tunnel2_dpd_timeout_action", typ: u(undefined, "") },
        { json: "tunnel1_dpd_timeout_seconds", js: "tunnel1_dpd_timeout_seconds", typ: u(undefined, "") },
        { json: "tunnel2_dpd_timeout_seconds", js: "tunnel2_dpd_timeout_seconds", typ: u(undefined, "") },
        { json: "tunnel1_enable_tunnel_lifecycle_control", js: "tunnel1_enable_tunnel_lifecycle_control", typ: u(undefined, "") },
        { json: "tunnel2_enable_tunnel_lifecycle_control", js: "tunnel2_enable_tunnel_lifecycle_control", typ: u(undefined, "") },
        { json: "tunnel1_ike_versions", js: "tunnel1_ike_versions", typ: u(undefined, "") },
        { json: "tunnel2_ike_versions", js: "tunnel2_ike_versions", typ: u(undefined, "") },
        { json: "tunnel1_log_options", js: "tunnel1_log_options", typ: u(undefined, "") },
        { json: "tunnel2_log_options", js: "tunnel2_log_options", typ: u(undefined, "") },
        { json: "tunnel1_phase1_dh_group_numbers", js: "tunnel1_phase1_dh_group_numbers", typ: u(undefined, "") },
        { json: "tunnel2_phase1_dh_group_numbers", js: "tunnel2_phase1_dh_group_numbers", typ: u(undefined, "") },
        { json: "tunnel1_phase1_encryption_algorithms", js: "tunnel1_phase1_encryption_algorithms", typ: u(undefined, "") },
        { json: "tunnel2_phase1_encryption_algorithms", js: "tunnel2_phase1_encryption_algorithms", typ: u(undefined, "") },
        { json: "tunnel1_phase1_integrity_algorithms", js: "tunnel1_phase1_integrity_algorithms", typ: u(undefined, "") },
        { json: "tunnel2_phase1_integrity_algorithms", js: "tunnel2_phase1_integrity_algorithms", typ: u(undefined, "") },
        { json: "tunnel1_phase1_lifetime_seconds", js: "tunnel1_phase1_lifetime_seconds", typ: u(undefined, "") },
        { json: "tunnel2_phase1_lifetime_seconds", js: "tunnel2_phase1_lifetime_seconds", typ: u(undefined, "") },
        { json: "tunnel1_phase2_dh_group_numbers", js: "tunnel1_phase2_dh_group_numbers", typ: u(undefined, "") },
        { json: "tunnel2_phase2_dh_group_numbers", js: "tunnel2_phase2_dh_group_numbers", typ: u(undefined, "") },
        { json: "tunnel1_phase2_encryption_algorithms", js: "tunnel1_phase2_encryption_algorithms", typ: u(undefined, "") },
        { json: "tunnel2_phase2_encryption_algorithms", js: "tunnel2_phase2_encryption_algorithms", typ: u(undefined, "") },
        { json: "tunnel1_phase2_integrity_algorithms", js: "tunnel1_phase2_integrity_algorithms", typ: u(undefined, "") },
        { json: "tunnel2_phase2_integrity_algorithms", js: "tunnel2_phase2_integrity_algorithms", typ: u(undefined, "") },
        { json: "tunnel1_phase2_lifetime_seconds", js: "tunnel1_phase2_lifetime_seconds", typ: u(undefined, "") },
        { json: "tunnel2_phase2_lifetime_seconds", js: "tunnel2_phase2_lifetime_seconds", typ: u(undefined, "") },
        { json: "tunnel1_rekey_fuzz_percentage", js: "tunnel1_rekey_fuzz_percentage", typ: u(undefined, "") },
        { json: "tunnel2_rekey_fuzz_percentage", js: "tunnel2_rekey_fuzz_percentage", typ: u(undefined, "") },
        { json: "tunnel1_rekey_margin_time_seconds", js: "tunnel1_rekey_margin_time_seconds", typ: u(undefined, "") },
        { json: "tunnel2_rekey_margin_time_seconds", js: "tunnel2_rekey_margin_time_seconds", typ: u(undefined, "") },
        { json: "tunnel1_replay_window_size", js: "tunnel1_replay_window_size", typ: u(undefined, "") },
        { json: "tunnel2_replay_window_size", js: "tunnel2_replay_window_size", typ: u(undefined, "") },
        { json: "tunnel1_startup_action", js: "tunnel1_startup_action", typ: u(undefined, "") },
        { json: "tunnel2_startup_action", js: "tunnel2_startup_action", typ: u(undefined, "") },
        { json: "cloudwatch_log_options", js: "cloudwatch_log_options", typ: u(undefined, "") },
        { json: "log_enabled", js: "log_enabled", typ: u(undefined, "") },
        { json: "log_group_arn", js: "log_group_arn", typ: u(undefined, "") },
        { json: "log_output_format", js: "log_output_format", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "core_network_arn", js: "core_network_arn", typ: u(undefined, "") },
        { json: "core_network_attachment_arn", js: "core_network_attachment_arn", typ: u(undefined, "") },
        { json: "customer_gateway_configuration", js: "customer_gateway_configuration", typ: u(undefined, "") },
        { json: "routes", js: "routes", typ: u(undefined, r("Routes")) },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "transit_gateway_attachment_id", js: "transit_gateway_attachment_id", typ: u(undefined, "") },
        { json: "tunnel1_address", js: "tunnel1_address", typ: u(undefined, "") },
        { json: "tunnel1_cgw_inside_address", js: "tunnel1_cgw_inside_address", typ: u(undefined, "") },
        { json: "tunnel1_vgw_inside_address", js: "tunnel1_vgw_inside_address", typ: u(undefined, "") },
        { json: "tunnel1_bgp_asn", js: "tunnel1_bgp_asn", typ: u(undefined, "") },
        { json: "tunnel1_bgp_holdtime", js: "tunnel1_bgp_holdtime", typ: u(undefined, "") },
        { json: "tunnel2_address", js: "tunnel2_address", typ: u(undefined, "") },
        { json: "tunnel2_cgw_inside_address", js: "tunnel2_cgw_inside_address", typ: u(undefined, "") },
        { json: "tunnel2_vgw_inside_address", js: "tunnel2_vgw_inside_address", typ: u(undefined, "") },
        { json: "tunnel2_bgp_asn", js: "tunnel2_bgp_asn", typ: u(undefined, "") },
        { json: "tunnel2_bgp_holdtime", js: "tunnel2_bgp_holdtime", typ: u(undefined, "") },
        { json: "vgw_telemetry", js: "vgw_telemetry", typ: u(undefined, r("VgwTelemetry")) },
        { json: "state", js: "state", typ: u(undefined, "") },
    ], false),
    "Routes": o([
        { json: "destination_cidr_block", js: "destination_cidr_block", typ: "" },
        { json: "source", js: "source", typ: "" },
        { json: "state", js: "state", typ: "" },
    ], false),
    "VgwTelemetry": o([
        { json: "accepted_route_count", js: "accepted_route_count", typ: "" },
        { json: "certificate_arn", js: "certificate_arn", typ: "" },
        { json: "last_status_change", js: "last_status_change", typ: "" },
        { json: "outside_ip_address", js: "outside_ip_address", typ: "" },
        { json: "status", js: "status", typ: "" },
        { json: "status_message", js: "status_message", typ: "" },
    ], false),
    "VPNConnectionRoute": o([
        { json: "destination_cidr_block", js: "destination_cidr_block", typ: "" },
        { json: "vpn_connection_id", js: "vpn_connection_id", typ: "" },
    ], false),
    "ResourceVPNGateway": o([
        { json: "vpc_id", js: "vpc_id", typ: u(undefined, "") },
        { json: "availability_zone", js: "availability_zone", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "amazon_side_asn", js: "amazon_side_asn", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "VPNGatewayAttachment": o([
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "vpn_gateway_id", js: "vpn_gateway_id", typ: "" },
    ], false),
    "VPNGatewayRoutePropagation": o([
        { json: "vpn_gateway_id", js: "vpn_gateway_id", typ: u(undefined, "") },
        { json: "route_table_id", js: "route_table_id", typ: u(undefined, "") },
    ], false),
    "WafByteMatchSet": o([
        { json: "name", js: "name", typ: "" },
        { json: "byte_match_tuples", js: "byte_match_tuples", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "Waf": o([
        { json: "metric_name", js: "metric_name", typ: "" },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "rate_key", js: "rate_key", typ: u(undefined, "") },
        { json: "rate_limit", js: "rate_limit", typ: u(undefined, "") },
        { json: "predicates", js: "predicates", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "name_prefix", js: "name_prefix", typ: u(undefined, "") },
        { json: "activated_rule", js: "activated_rule", typ: u(undefined, "") },
        { json: "predicate", js: "predicate", typ: u(undefined, "") },
    ], false),
    "WafMatchSet": o([
        { json: "name", js: "name", typ: "" },
        { json: "regex_match_tuple", js: "regex_match_tuple", typ: u(undefined, "") },
        { json: "field_to_match", js: "field_to_match", typ: "" },
        { json: "regex_pattern_set_id", js: "regex_pattern_set_id", typ: u(undefined, "") },
        { json: "text_transformation", js: "text_transformation", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "data", js: "data", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "sql_injection_match_tuple", js: "sql_injection_match_tuple", typ: u(undefined, "") },
        { json: "xss_match_tuple", js: "xss_match_tuple", typ: u(undefined, "") },
    ], false),
    "WafSQLInjectionMatchSet": o([
        { json: "name", js: "name", typ: "" },
        { json: "sql_injection_match_tuples", js: "sql_injection_match_tuples", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "WafWebACL": o([
        { json: "default_action", js: "default_action", typ: "" },
        { json: "metric_name", js: "metric_name", typ: "" },
        { json: "name", js: "name", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "log_destination", js: "log_destination", typ: "" },
        { json: "field_to_match", js: "field_to_match", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "rule_id", js: "rule_id", typ: "" },
        { json: "rules", js: "rules", typ: u(undefined, "") },
        { json: "logging_configuration", js: "logging_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "redacted_fields", js: "redacted_fields", typ: u(undefined, "") },
        { json: "data", js: "data", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "rule", js: "rule", typ: u(undefined, "") },
        { json: "action", js: "action", typ: u(undefined, "") },
        { json: "override_action", js: "override_action", typ: u(undefined, "") },
    ], false),
    "WafregionalByteMatchSet": o([
        { json: "name", js: "name", typ: "" },
        { json: "field_to_match", js: "field_to_match", typ: "" },
        { json: "positional_constraint", js: "positional_constraint", typ: "" },
        { json: "target_string", js: "target_string", typ: "" },
        { json: "text_transformation", js: "text_transformation", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "byte_match_tuples", js: "byte_match_tuples", typ: u(undefined, "") },
        { json: "data", js: "data", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "WafregionalWebACLAssociation": o([
        { json: "web_acl_id", js: "web_acl_id", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "ResourceWafv2RuleGroup": o([
        { json: "visibility_config", js: "visibility_config", typ: "" },
        { json: "key", js: "key", typ: "" },
        { json: "content", js: "content", typ: "" },
        { json: "content_type", js: "content_type", typ: u(undefined, "") },
        { json: "action", js: "action", typ: u(undefined, "") },
        { json: "priority", js: "priority", typ: "" },
        { json: "statement", js: "statement", typ: "" },
        { json: "insert_header", js: "insert_header", typ: "" },
        { json: "response_code", js: "response_code", typ: "" },
        { json: "field_to_match", js: "field_to_match", typ: "" },
        { json: "positional_constraint", js: "positional_constraint", typ: "" },
        { json: "search_string", js: "search_string", typ: "" },
        { json: "text_transformation", js: "text_transformation", typ: "" },
        { json: "country_codes", js: "country_codes", typ: "" },
        { json: "scope", js: "scope", typ: "" },
        { json: "arn", js: "arn", typ: "" },
        { json: "limit", js: "limit", typ: "" },
        { json: "regex_string", js: "regex_string", typ: "" },
        { json: "comparison_operator", js: "comparison_operator", typ: "" },
        { json: "size", js: "size", typ: "" },
        { json: "fallback_behavior", js: "fallback_behavior", typ: "" },
        { json: "header_name", js: "header_name", typ: "" },
        { json: "position", js: "position", typ: "" },
        { json: "match_scope", js: "match_scope", typ: "" },
        { json: "oversize_handling", js: "oversize_handling", typ: "" },
        { json: "match_pattern", js: "match_pattern", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "cloudwatch_metrics_enabled", js: "cloudwatch_metrics_enabled", typ: "" },
        { json: "sampled_requests_enabled", js: "sampled_requests_enabled", typ: "" },
        { json: "capacity", js: "capacity", typ: u(undefined, "") },
        { json: "custom_response_body", js: "custom_response_body", typ: u(undefined, "") },
        { json: "description", js: "description", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "rule", js: "rule", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "captcha_config", js: "captcha_config", typ: u(undefined, "") },
        { json: "rule_label", js: "rule_label", typ: u(undefined, "") },
        { json: "allow", js: "allow", typ: u(undefined, "") },
        { json: "block", js: "block", typ: u(undefined, "") },
        { json: "captcha", js: "captcha", typ: u(undefined, "") },
        { json: "challenge", js: "challenge", typ: u(undefined, "") },
        { json: "count", js: "count", typ: u(undefined, "") },
        { json: "custom_request_handling", js: "custom_request_handling", typ: u(undefined, "") },
        { json: "custom_response", js: "custom_response", typ: u(undefined, "") },
        { json: "custom_response_body_key", js: "custom_response_body_key", typ: u(undefined, "") },
        { json: "response_header", js: "response_header", typ: u(undefined, "") },
        { json: "value", js: "value", typ: u(undefined, "") },
        { json: "and_statement", js: "and_statement", typ: u(undefined, "") },
        { json: "byte_match_statement", js: "byte_match_statement", typ: u(undefined, "") },
        { json: "geo_match_statement", js: "geo_match_statement", typ: u(undefined, "") },
        { json: "label_match_statement", js: "label_match_statement", typ: u(undefined, "") },
        { json: "ip_set_reference_statement", js: "ip_set_reference_statement", typ: u(undefined, "") },
        { json: "not_statement", js: "not_statement", typ: u(undefined, "") },
        { json: "or_statement", js: "or_statement", typ: u(undefined, "") },
        { json: "rate_based_statement", js: "rate_based_statement", typ: u(undefined, "") },
        { json: "regex_match_statement", js: "regex_match_statement", typ: u(undefined, "") },
        { json: "regex_pattern_set_reference_statement", js: "regex_pattern_set_reference_statement", typ: u(undefined, "") },
        { json: "size_constraint_statement", js: "size_constraint_statement", typ: u(undefined, "") },
        { json: "sqli_match_statement", js: "sqli_match_statement", typ: u(undefined, "") },
        { json: "xss_match_statement", js: "xss_match_statement", typ: u(undefined, "") },
        { json: "forwarded_ip_config", js: "forwarded_ip_config", typ: u(undefined, "") },
        { json: "ip_set_forwarded_ip_config", js: "ip_set_forwarded_ip_config", typ: u(undefined, "") },
        { json: "aggregate_key_type", js: "aggregate_key_type", typ: u(undefined, "") },
        { json: "custom_key", js: "custom_key", typ: u(undefined, "") },
        { json: "scope_down_statement", js: "scope_down_statement", typ: u(undefined, "") },
        { json: "all_query_arguments", js: "all_query_arguments", typ: u(undefined, "") },
        { json: "body", js: "body", typ: u(undefined, "") },
        { json: "cookies", js: "cookies", typ: u(undefined, "") },
        { json: "headers", js: "headers", typ: u(undefined, "") },
        { json: "json_body", js: "json_body", typ: u(undefined, "") },
        { json: "method", js: "method", typ: u(undefined, "") },
        { json: "query_string", js: "query_string", typ: u(undefined, "") },
        { json: "single_header", js: "single_header", typ: u(undefined, "") },
        { json: "single_query_argument", js: "single_query_argument", typ: u(undefined, "") },
        { json: "uri_path", js: "uri_path", typ: u(undefined, "") },
        { json: "invalid_fallback_behavior", js: "invalid_fallback_behavior", typ: u(undefined, "") },
        { json: "metric_name", js: "metric_name", typ: u(undefined, "") },
        { json: "immunity_time_property", js: "immunity_time_property", typ: u(undefined, "") },
        { json: "immunity_time", js: "immunity_time", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
        { json: "cookie", js: "cookie", typ: u(undefined, "") },
        { json: "forwarded_ip", js: "forwarded_ip", typ: u(undefined, "") },
        { json: "http_method", js: "http_method", typ: u(undefined, "") },
        { json: "header", js: "header", typ: u(undefined, "") },
        { json: "ip", js: "ip", typ: u(undefined, "") },
        { json: "label_namespace", js: "label_namespace", typ: u(undefined, "") },
        { json: "query_argument", js: "query_argument", typ: u(undefined, "") },
        { json: "default_action", js: "default_action", typ: u(undefined, "") },
        { json: "vendor_name", js: "vendor_name", typ: u(undefined, "") },
        { json: "action_to_use", js: "action_to_use", typ: u(undefined, "") },
        { json: "login_path", js: "login_path", typ: u(undefined, "") },
        { json: "default_size_inspection_limit", js: "default_size_inspection_limit", typ: u(undefined, "") },
        { json: "association_config", js: "association_config", typ: u(undefined, "") },
        { json: "token_domains", js: "token_domains", typ: u(undefined, "") },
        { json: "request_body", js: "request_body", typ: u(undefined, "") },
        { json: "none", js: "none", typ: u(undefined, "") },
        { json: "managed_rule_group_statement", js: "managed_rule_group_statement", typ: u(undefined, "") },
        { json: "rule_group_reference_statement", js: "rule_group_reference_statement", typ: u(undefined, "") },
        { json: "rule_action_override", js: "rule_action_override", typ: u(undefined, "") },
        { json: "version", js: "version", typ: u(undefined, "") },
        { json: "aws_managed_rules_bot_control_rule_set", js: "aws_managed_rules_bot_control_rule_set", typ: u(undefined, "") },
        { json: "aws_managed_rules_atp_rule_set", js: "aws_managed_rules_atp_rule_set", typ: u(undefined, "") },
        { json: "inspection_level", js: "inspection_level", typ: u(undefined, "") },
        { json: "enable_regex_in_path", js: "enable_regex_in_path", typ: u(undefined, "") },
        { json: "request_inspection", js: "request_inspection", typ: u(undefined, "") },
        { json: "response_inspection", js: "response_inspection", typ: u(undefined, "") },
        { json: "identifier", js: "identifier", typ: u(undefined, "") },
        { json: "cloudfront", js: "cloudfront", typ: u(undefined, "") },
    ], false),
    "Wafv2WebACLAssociation": o([
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "web_acl_arn", js: "web_acl_arn", typ: "" },
    ], false),
    "Wafv2WebACLLoggingConfiguration": o([
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "default_behavior", js: "default_behavior", typ: "" },
        { json: "filter", js: "filter", typ: "" },
        { json: "behavior", js: "behavior", typ: "" },
        { json: "condition", js: "condition", typ: "" },
        { json: "action", js: "action", typ: "" },
        { json: "logging_filter", js: "logging_filter", typ: u(undefined, "") },
        { json: "redacted_fields", js: "redacted_fields", typ: u(undefined, "") },
        { json: "action_condition", js: "action_condition", typ: u(undefined, "") },
        { json: "label_name_condition", js: "label_name_condition", typ: u(undefined, "") },
        { json: "method", js: "method", typ: u(undefined, "") },
        { json: "query_string", js: "query_string", typ: u(undefined, "") },
        { json: "single_header", js: "single_header", typ: u(undefined, "") },
        { json: "uri_path", js: "uri_path", typ: u(undefined, "") },
        { json: "name", js: "name", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "WorklinkFleet": o([
        { json: "name", js: "name", typ: "" },
        { json: "vpc_id", js: "vpc_id", typ: "" },
        { json: "subnet_ids", js: "subnet_ids", typ: "" },
        { json: "security_group_ids", js: "security_group_ids", typ: "" },
        { json: "type", js: "type", typ: "" },
        { json: "saml_metadata", js: "saml_metadata", typ: "" },
        { json: "audit_stream_arn", js: "audit_stream_arn", typ: u(undefined, "") },
        { json: "device_ca_certificate", js: "device_ca_certificate", typ: u(undefined, "") },
        { json: "identity_provider", js: "identity_provider", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "network", js: "network", typ: u(undefined, "") },
        { json: "optimize_for_end_user_location", js: "optimize_for_end_user_location", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "company_code", js: "company_code", typ: u(undefined, "") },
        { json: "created_time", js: "created_time", typ: u(undefined, "") },
        { json: "last_updated_time", js: "last_updated_time", typ: u(undefined, "") },
    ], false),
    "WorklinkWebsiteCertificateAuthorityAssociation": o([
        { json: "fleet_arn", js: "fleet_arn", typ: u(undefined, "") },
        { json: "certificate", js: "certificate", typ: u(undefined, "") },
        { json: "display_name", js: "display_name", typ: u(undefined, "") },
        { json: "website_ca_id", js: "website_ca_id", typ: u(undefined, "") },
    ], false),
    "WorkspacesConnectionAlias": o([
        { json: "connection_string", js: "connection_string", typ: "" },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "owner_account_id", js: "owner_account_id", typ: u(undefined, "") },
        { json: "state", js: "state", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "XrayEncryptionConfig": o([
        { json: "type", js: "type", typ: "" },
        { json: "key_id", js: "key_id", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
    ], false),
    "XrayGroup": o([
        { json: "group_name", js: "group_name", typ: "" },
        { json: "filter_expression", js: "filter_expression", typ: "" },
        { json: "insights_enabled", js: "insights_enabled", typ: "" },
        { json: "insights_configuration", js: "insights_configuration", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "notifications_enabled", js: "notifications_enabled", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
    "XraySamplingRule": o([
        { json: "rule_name", js: "rule_name", typ: "" },
        { json: "resource_arn", js: "resource_arn", typ: "" },
        { json: "priority", js: "priority", typ: "" },
        { json: "fixed_rate", js: "fixed_rate", typ: "" },
        { json: "reservoir_size", js: "reservoir_size", typ: "" },
        { json: "service_name", js: "service_name", typ: "" },
        { json: "service_type", js: "service_type", typ: "" },
        { json: "host", js: "host", typ: "" },
        { json: "http_method", js: "http_method", typ: "" },
        { json: "url_path", js: "url_path", typ: "" },
        { json: "version", js: "version", typ: "" },
        { json: "attributes", js: "attributes", typ: u(undefined, "") },
        { json: "tags", js: "tags", typ: u(undefined, "") },
        { json: "id", js: "id", typ: u(undefined, "") },
        { json: "arn", js: "arn", typ: u(undefined, "") },
        { json: "tags_all", js: "tags_all", typ: u(undefined, "") },
    ], false),
};
