{
  "0": {
    "aws": {
      "region": "us-east-2",
      "profile": "chopshop"
    }
  },
  "1": "=",
  "2": " ",
  "3": "2",
  "4": ".",
  "5": "0",
  "6": "o",
  "7": "r",
  "8": "p",
  "9": "/",
  "10": "n",
  "11": "u",
  "12": "l",
  "13": "l",
  "14": "c",
  "15": "k",
  "16": "e",
  "17": "r",
  "data": {
    "aws_iam_policy_document": {
      "micro_Lambda_ms1_lambda_creds": {
        "statement": {
          "effect": "Allow",
          "actions": [
            "sts:AssumeRole"
          ],
          "principals": {
            "identifiers": [
              "lambda.amazonaws.com",
              "apigateway.amazonaws.com"
            ],
            "type": "Service"
          }
        }
      },
      "micro_Lambda_ms1_bucket_access_creds": {
        "statement": [
          {
            "principals": {
              "identifiers": [
                "${resource.aws_iam_role.micro_Lambda_ms1_lambda_role.arn}"
              ],
              "type": "AWS"
            },
            "effect": "Allow",
            "actions": [
              "s3:AbortMultipartUpload",
              "s3:ListMultipartUploadParts",
              "s3:ListBucketMultipartUploads",
              "s3:PutObject",
              "s3:GetObject",
              "s3:DeleteObject"
            ],
            "resources": [
              "arn:aws:s3:::${resource.aws_s3_bucket.micro_Lambda_ms1_bucket.bucket}",
              "arn:aws:s3:::${resource.aws_s3_bucket.micro_Lambda_ms1_bucket.bucket}/*"
            ]
          }
        ]
      },
      "micro_Lambda_ms1_lambda_access_creds": {
        "statement": [
          {
            "effect": "Allow",
            "actions": [
              "s3:AbortMultipartUpload",
              "s3:ListMultipartUploadParts",
              "s3:ListBucketMultipartUploads",
              "s3:PutObject",
              "s3:GetObject",
              "s3:DeleteObject"
            ],
            "resources": [
              "arn:aws:s3:::${resource.aws_s3_bucket.micro_Lambda_ms1_bucket.bucket}",
              "arn:aws:s3:::${resource.aws_s3_bucket.micro_Lambda_ms1_bucket.bucket}/*"
            ]
          },
          {
            "effect": "Allow",
            "actions": [
              "sns:Publish",
              "sns:Subscribe"
            ],
            "resources": [
              "${resource.aws_sns_topic.micro_Lambda_topic_sns.arn}"
            ]
          },
          {
            "effect": "Allow",
            "actions": [
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:PutLogEvents"
            ],
            "resources": [
              "${resource.aws_cloudwatch_log_group.micro_Lambda_ms1_cloudwatch.arn}:*",
              "${resource.aws_cloudwatch_log_group.micro_Lambda_ms1_cloudwatch.arn}:*:*"
            ]
          }
        ]
      }
    }
  },
  "resource": {
    "aws_acm_certificate": {
      "micro_Api_api_cert_test1": {
        "domain_name": "test1.chopshop-test.net",
        "validation_method": "DNS",
        "lifecycle": {
          "create_before_destroy": true
        },
        "domain_validation_options": {
          "resource_record_name": null,
          "resource_record_type": null,
          "resource_record_value": null
        },
        "tags": {
          "BroughtToYouBy": "@-0/micro",
          "Moms": "Spaghetti"
        }
      }
    },
    "aws_apigatewayv2_domain_name": {
      "micro_Api_api_domain_test1": {
        "domain_name": "test1.chopshop-test.net",
        "domain_name_configuration": [
          {
            "certificate_arn": "${resource.aws_acm_certificate_validation.micro_Api_api_validation_test1.certificate_arn}",
            "endpoint_type": "REGIONAL",
            "security_policy": "TLS_1_2"
          }
        ],
        "tags": {
          "BroughtToYouBy": "@-0/micro",
          "Moms": "Spaghetti"
        }
      }
    },
    "aws_route53_record": {
      "micro_Api_api_record_test1": {
        "name": "test1.chopshop-test.net",
        "type": "A",
        "zone_id": "${data.aws_route53_zone.micro_Api_domain_zone.zone_id}",
        "allow_overwrite": true,
        "alias": {
          "name": "${resource.aws_apigatewayv2_domain_name.micro_Api_api_domain_test1.domain_name_configuration[0].target_domain_name}",
          "zone_id": "${resource.aws_apigatewayv2_domain_name.micro_Api_api_domain_test1.domain_name_configuration[0].hosted_zone_id}",
          "evaluate_target_health": false
        }
      },
      "micro_Api_api_record_valid_test1": {
        "type": "A",
        "zone_id": "${data.aws_route53_zone.micro_Api_domain_zone.zone_id}",
        "allow_overwrite": true,
        "records": [
          null
        ],
        "ttl": 60
      }
    },
    "aws_acm_certificate_validation": {
      "micro_Api_api_validation_test1": {
        "certificate_arn": "${resource.aws_acm_certificate.micro_Api_api_cert_test1.arn}",
        "validation_record_fqdns": [
          "${resource.aws_route53_record.micro_Api_api_record_valid_test1.fqdn}"
        ]
      }
    },
    "aws_apigatewayv2_api": {
      "micro_Api_api_apigw_test1": {
        "name": "test1.chopshop-test.net",
        "description": "api for test1.chopshop-test.net",
        "disable_execute_api_endpoint": false,
        "protocol_type": "HTTP",
        "cors_configuration": {
          "allow_headers": [
            "content-type",
            "x-amz-date",
            "authorization",
            "x-api-key",
            "x-amz-security-token",
            "x-amz-user-agent"
          ],
          "allow_methods": [
            "*"
          ],
          "allow_origins": [
            "*"
          ],
          "max_age": 300
        },
        "tags": {
          "BroughtToYouBy": "@-0/micro",
          "Moms": "Spaghetti"
        }
      }
    },
    "aws_apigatewayv2_stage": {
      "micro_Api_api_stage_test1": {
        "api_id": "${resource.aws_apigatewayv2_api.micro_Api_api_apigw_test1.id}",
        "name": "$default",
        "auto_deploy": true,
        "description": "stage $default API",
        "tags": {
          "BroughtToYouBy": "@-0/micro",
          "Moms": "Spaghetti"
        }
      }
    },
    "aws_lambda_permission": {
      "micro_Api_api_invoker_test1_ANY": {
        "statement_id": "AllowExecutionFromAPIGateway",
        "action": "lambda:InvokeFunction",
        "function_name": "${resource.aws_lambda_function.micro_Api_ms1_lambda.function_name}",
        "principal": "apigateway.amazonaws.com",
        "source_arn": "${resource.aws_apigatewayv2_api.micro_Api_api_apigw_test1.execution_arn}"
      }
    },
    "aws_apigatewayv2_integration": {
      "micro_Api_api_integration_test1_ANY": {
        "api_id": "${resource.aws_apigatewayv2_api.micro_Api_api_apigw_test1.id}",
        "integration_uri": "${resource.aws_lambda_function.micro_Api_ms1_lambda.invoke_arn}",
        "integration_type": "AWS_PROXY",
        "integration_method": "POST",
        "connection_type": "INTERNET",
        "payload_format_version": "2.0",
        "timeout_milliseconds": 29000
      }
    },
    "aws_apigatewayv2_route": {
      "micro_Api_api_route_test1_ANY": {
        "api_id": "${resource.aws_apigatewayv2_api.micro_Api_api_apigw_test1.id}",
        "route_key": "ANY /",
        "target": "integrations/${resource.aws_apigatewayv2_integration.micro_Api_api_integration_test1_ANY.id}"
      }
    }
  }
}